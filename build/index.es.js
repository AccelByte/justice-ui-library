import { jsx as jsx$1, jsxs, Fragment as Fragment$2 } from 'react/jsx-runtime';
import * as React$7 from 'react';
import React__default, { Children, Component as Component$1, createContext as createContext$1, useState, useRef, useEffect, useContext, useCallback as useCallback$1, forwardRef, createElement, Fragment as Fragment$1, useLayoutEffect as useLayoutEffect$1, useMemo as useMemo$1, useReducer, isValidElement, cloneElement, PureComponent, memo } from 'react';
import styled$1, { css as css$3, keyframes as keyframes$1, ThemeProvider } from 'styled-components';
import require$$0$1 from 'crypto';
import require$$2$1 from 'stream';

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics$d = function(d, b) {
    extendStatics$d = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
    return extendStatics$d(d, b);
};

function __extends$d(d, b) {
    if (typeof b !== "function" && b !== null)
        throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics$d(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign$a = function() {
    __assign$a = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign$a.apply(this, arguments);
};

function __rest$8(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
}

/*
 * Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
 * This is licensed software from AccelByte Inc, for limitations
 * and restrictions contact your company contract manager.
 */
var Enum = function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return Object.freeze(args.reduce(function (acc, next) {
        var _a;
        return __assign$a(__assign$a({}, acc), (_a = {}, _a[next] = next, _a));
    }, Object.create(null)));
};
var isKeyOfEnum = function (key, enumType) {
    return !!Object.values(enumType).find(function (value) { return value === key; });
};

/*
 * Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
 * This is licensed software from AccelByte Inc, for limitations
 * and restrictions contact your company contract manager.
 */
var CONTAINER_SIZE = Enum("SMALL", "LARGE", "FULLWIDTH");

/*
 * Copyright (c) 2021 AccelByte Inc. All Rights Reserved
 * This is licensed software from AccelByte Inc, for limitations
 * and restrictions contact your company contract manager.
 */
/*
 * regex that generates at least one uppercase, one lowercase, one alphabet, one numeric, and one symbol
 * */
var DEFAULT_PASSWORD_AND_SECRET_REGEX = 
// tslint:disable-next-line:max-line-length
'^(?:(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))(?!.*(.)\\1{2,})[A-Za-z0-9!~<>,;:_=?*+#."&§%°()\\|\\[\\]\\-\\$\\^\\@\\/]{8,32}$';
var DEFAULT_MIN_VALUE = 0;
var WILDCARD_SIGN = "*";

/*
 *
 *  * Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
 *  * This is licensed software from AccelByte Inc, for limitations
 *  * and restrictions contact your company contract manager.
 *
 */
var strengthLevelOrder = Enum("poor", "weak", "average", "good", "excellent");
var translatedStrengthLevelOrder = {
    poor: "Poor!",
    weak: "Weak",
    average: "Average!",
    good: "Good!",
    excellent: "Excellent!",
};

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics$c = function(d, b) {
    extendStatics$c = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics$c(d, b);
};

function __extends$c(d, b) {
    extendStatics$c(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign$9 = function() {
    __assign$9 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign$9.apply(this, arguments);
};

function __rest$7(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __makeTemplateObject$9(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
}

function _defineProperty$3(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _objectSpread$q(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? Object(arguments[i]) : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty$3(target, key, source[key]);
    });
  }

  return target;
}

function _typeof$3(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof$3 = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof$3 = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof$3(obj);
}

function _classCallCheck$8(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties$2(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass$8(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties$2(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties$2(Constructor, staticProps);
  return Constructor;
}

var AnalyticsEvent$7 =
/*#__PURE__*/
function () {
  function AnalyticsEvent(props) {
    var _this = this;

    _classCallCheck$8(this, AnalyticsEvent);

    _defineProperty$3(this, "payload", void 0);

    _defineProperty$3(this, "clone", function () {
      // We stringify and parse here to get a hacky "deep clone" of the object.
      // This has some limitations in that it wont support functions, regexs, Maps, Sets, etc,
      // but none of those need to be represented in our payload, so we consider this fine
      var payload = JSON.parse(JSON.stringify(_this.payload));
      return new AnalyticsEvent({
        payload: payload
      });
    });

    this.payload = props.payload;
  }

  _createClass$8(AnalyticsEvent, [{
    key: "update",
    value: function update(updater) {
      if (typeof updater === 'function') {
        this.payload = updater(this.payload);
      } else if (_typeof$3(updater) === 'object') {
        this.payload = _objectSpread$q({}, this.payload, updater);
      }

      return this;
    }
  }]);

  return AnalyticsEvent;
}();

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _toConsumableArray$2(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}

function _assertThisInitialized$4(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _possibleConstructorReturn$8(self, call) {
  if (call && (_typeof$3(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }

  return _assertThisInitialized$4(self);
}

function _getPrototypeOf$2(o) {
  _getPrototypeOf$2 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf$2(o);
}

function _superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = _getPrototypeOf$2(object);
    if (object === null) break;
  }

  return object;
}

function _get(target, property, receiver) {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    _get = Reflect.get;
  } else {
    _get = function _get(target, property, receiver) {
      var base = _superPropBase(target, property);
      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);

      if (desc.get) {
        return desc.get.call(receiver);
      }

      return desc.value;
    };
  }

  return _get(target, property, receiver || target);
}

function _setPrototypeOf$6(o, p) {
  _setPrototypeOf$6 = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf$6(o, p);
}

function _inherits$8(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf$6(subClass, superClass);
}

var _console = console,
    warn = _console.warn;

var UIAnalyticsEvent$7 =
/*#__PURE__*/
function (_AnalyticsEvent) {
  _inherits$8(UIAnalyticsEvent, _AnalyticsEvent);

  function UIAnalyticsEvent(props) {
    var _this;

    _classCallCheck$8(this, UIAnalyticsEvent);

    _this = _possibleConstructorReturn$8(this, _getPrototypeOf$2(UIAnalyticsEvent).call(this, props));

    _defineProperty$3(_assertThisInitialized$4(_this), "context", void 0);

    _defineProperty$3(_assertThisInitialized$4(_this), "handlers", void 0);

    _defineProperty$3(_assertThisInitialized$4(_this), "hasFired", void 0);

    _defineProperty$3(_assertThisInitialized$4(_this), "clone", function () {
      if (_this.hasFired) {
        warn("Cannot clone an event after it's been fired.");
        return null;
      }

      var context = _toConsumableArray$2(_this.context);

      var handlers = _toConsumableArray$2(_this.handlers); // We stringify and parse here to get a hacky "deep clone" of the object.
      // This has some limitations in that it wont support functions, regexs, Maps, Sets, etc,
      // but none of those need to be represented in our payload, so we consider this fine


      var payload = JSON.parse(JSON.stringify(_this.payload));
      return new UIAnalyticsEvent({
        context: context,
        handlers: handlers,
        payload: payload
      });
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "fire", function (channel) {
      if (_this.hasFired) {
        warn('Cannot fire an event twice.');
        return;
      }

      _this.handlers.forEach(function (handler) {
        handler(_assertThisInitialized$4(_this), channel);
      });

      _this.hasFired = true;
    });

    _this.context = props.context || [];
    _this.handlers = props.handlers || [];
    _this.hasFired = false;
    return _this;
  }

  _createClass$8(UIAnalyticsEvent, [{
    key: "update",
    value: function update(updater) {
      if (this.hasFired) {
        warn("Cannot update an event after it's been fired.");
        return this;
      }

      return _get(_getPrototypeOf$2(UIAnalyticsEvent.prototype), "update", this).call(this, updater);
    }
  }]);

  return UIAnalyticsEvent;
}(AnalyticsEvent$7);

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function getDefaultExportFromCjs (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

function getAugmentedNamespace(n) {
	if (n.__esModule) return n;
	var a = Object.defineProperty({}, '__esModule', {value: true});
	Object.keys(n).forEach(function (k) {
		var d = Object.getOwnPropertyDescriptor(n, k);
		Object.defineProperty(a, k, d.get ? d : {
			enumerable: true,
			get: function () {
				return n[k];
			}
		});
	});
	return a;
}

function commonjsRequire (path) {
	throw new Error('Could not dynamically require "' + path + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}

var propTypes$1 = {exports: {}};

var reactIs$1 = {exports: {}};

var reactIs_production_min = {};

/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b$1="function"===typeof Symbol&&Symbol.for,c=b$1?Symbol.for("react.element"):60103,d=b$1?Symbol.for("react.portal"):60106,e=b$1?Symbol.for("react.fragment"):60107,f=b$1?Symbol.for("react.strict_mode"):60108,g=b$1?Symbol.for("react.profiler"):60114,h=b$1?Symbol.for("react.provider"):60109,k=b$1?Symbol.for("react.context"):60110,l$1=b$1?Symbol.for("react.async_mode"):60111,m$1=b$1?Symbol.for("react.concurrent_mode"):60111,n$1=b$1?Symbol.for("react.forward_ref"):60112,p$1=b$1?Symbol.for("react.suspense"):60113,q$1=b$1?
Symbol.for("react.suspense_list"):60120,r$2=b$1?Symbol.for("react.memo"):60115,t=b$1?Symbol.for("react.lazy"):60116,v=b$1?Symbol.for("react.block"):60121,w=b$1?Symbol.for("react.fundamental"):60117,x=b$1?Symbol.for("react.responder"):60118,y$1=b$1?Symbol.for("react.scope"):60119;
function z$1(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l$1:case m$1:case e:case g:case f:case p$1:return a;default:switch(a=a&&a.$$typeof,a){case k:case n$1:case t:case r$2:case h:return a;default:return u}}case d:return u}}}function A(a){return z$1(a)===m$1}reactIs_production_min.AsyncMode=l$1;reactIs_production_min.ConcurrentMode=m$1;reactIs_production_min.ContextConsumer=k;reactIs_production_min.ContextProvider=h;reactIs_production_min.Element=c;reactIs_production_min.ForwardRef=n$1;reactIs_production_min.Fragment=e;reactIs_production_min.Lazy=t;reactIs_production_min.Memo=r$2;reactIs_production_min.Portal=d;
reactIs_production_min.Profiler=g;reactIs_production_min.StrictMode=f;reactIs_production_min.Suspense=p$1;reactIs_production_min.isAsyncMode=function(a){return A(a)||z$1(a)===l$1};reactIs_production_min.isConcurrentMode=A;reactIs_production_min.isContextConsumer=function(a){return z$1(a)===k};reactIs_production_min.isContextProvider=function(a){return z$1(a)===h};reactIs_production_min.isElement=function(a){return "object"===typeof a&&null!==a&&a.$$typeof===c};reactIs_production_min.isForwardRef=function(a){return z$1(a)===n$1};reactIs_production_min.isFragment=function(a){return z$1(a)===e};reactIs_production_min.isLazy=function(a){return z$1(a)===t};
reactIs_production_min.isMemo=function(a){return z$1(a)===r$2};reactIs_production_min.isPortal=function(a){return z$1(a)===d};reactIs_production_min.isProfiler=function(a){return z$1(a)===g};reactIs_production_min.isStrictMode=function(a){return z$1(a)===f};reactIs_production_min.isSuspense=function(a){return z$1(a)===p$1};
reactIs_production_min.isValidElementType=function(a){return "string"===typeof a||"function"===typeof a||a===e||a===m$1||a===g||a===f||a===p$1||a===q$1||"object"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r$2||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n$1||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y$1||a.$$typeof===v)};reactIs_production_min.typeOf=z$1;

var reactIs_development = {};

/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (process.env.NODE_ENV !== "production") {
  (function() {

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
}

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

reactIs_development.AsyncMode = AsyncMode;
reactIs_development.ConcurrentMode = ConcurrentMode;
reactIs_development.ContextConsumer = ContextConsumer;
reactIs_development.ContextProvider = ContextProvider;
reactIs_development.Element = Element;
reactIs_development.ForwardRef = ForwardRef;
reactIs_development.Fragment = Fragment;
reactIs_development.Lazy = Lazy;
reactIs_development.Memo = Memo;
reactIs_development.Portal = Portal;
reactIs_development.Profiler = Profiler;
reactIs_development.StrictMode = StrictMode;
reactIs_development.Suspense = Suspense;
reactIs_development.isAsyncMode = isAsyncMode;
reactIs_development.isConcurrentMode = isConcurrentMode;
reactIs_development.isContextConsumer = isContextConsumer;
reactIs_development.isContextProvider = isContextProvider;
reactIs_development.isElement = isElement;
reactIs_development.isForwardRef = isForwardRef;
reactIs_development.isFragment = isFragment;
reactIs_development.isLazy = isLazy;
reactIs_development.isMemo = isMemo;
reactIs_development.isPortal = isPortal;
reactIs_development.isProfiler = isProfiler;
reactIs_development.isStrictMode = isStrictMode;
reactIs_development.isSuspense = isSuspense;
reactIs_development.isValidElementType = isValidElementType;
reactIs_development.typeOf = typeOf;
  })();
}

if (process.env.NODE_ENV === 'production') {
  reactIs$1.exports = reactIs_production_min;
} else {
  reactIs$1.exports = reactIs_development;
}

/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/* eslint-disable no-unused-vars */
var getOwnPropertySymbols$2 = Object.getOwnPropertySymbols;
var hasOwnProperty$4 = Object.prototype.hasOwnProperty;
var propIsEnumerable$2 = Object.prototype.propertyIsEnumerable;

function toObject$3(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative$1() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

var objectAssign$2 = shouldUseNative$1() ? Object.assign : function (target, source) {
	var from;
	var to = toObject$3(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty$4.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols$2) {
			symbols = getOwnPropertySymbols$2(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable$2.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactPropTypesSecret$5 = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

var ReactPropTypesSecret_1$1 = ReactPropTypesSecret$5;

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var printWarning$4 = function() {};

if (process.env.NODE_ENV !== 'production') {
  var ReactPropTypesSecret$4 = ReactPropTypesSecret_1$1;
  var loggedTypeFailures$1 = {};
  var has$4 = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning$4 = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes$2(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (has$4(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$4);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning$4(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures$1)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures$1[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning$4(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes$2.resetWarningCache = function() {
  if (process.env.NODE_ENV !== 'production') {
    loggedTypeFailures$1 = {};
  }
};

var checkPropTypes_1$1 = checkPropTypes$2;

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactIs$1 = reactIs$1.exports;
var assign$4 = objectAssign$2;

var ReactPropTypesSecret$3 = ReactPropTypesSecret_1$1;
var checkPropTypes$1 = checkPropTypes_1$1;

var has$3 = Function.call.bind(Object.prototype.hasOwnProperty);
var printWarning$3 = function() {};

if (process.env.NODE_ENV !== 'production') {
  printWarning$3 = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

var factoryWithTypeCheckers$1 = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret$3) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning$3(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret$3);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!ReactIs$1.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (process.env.NODE_ENV !== 'production') {
        if (arguments.length > 1) {
          printWarning$3(
            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
          );
        } else {
          printWarning$3('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has$3(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret$3);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? printWarning$3('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning$3(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret$3) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret$3);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = assign$4({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret$3);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes$1;
  ReactPropTypes.resetWarningCache = checkPropTypes$1.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactPropTypesSecret$2 = ReactPropTypesSecret_1$1;

function emptyFunction$1() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction$1;

var factoryWithThrowingShims$1 = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret$2) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  }  shim.isRequired = shim;
  function getShim() {
    return shim;
  }  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction$1
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (process.env.NODE_ENV !== 'production') {
  var ReactIs = reactIs$1.exports;

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  propTypes$1.exports = factoryWithTypeCheckers$1(ReactIs.isElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  propTypes$1.exports = factoryWithThrowingShims$1();
}

var PropTypes$3 = propTypes$1.exports;

var ContextTypes$5 = {
  getAtlaskitAnalyticsContext: PropTypes$3.func
};

var AnalyticsContext$i =
/*#__PURE__*/
function (_Component) {
  _inherits$8(AnalyticsContext, _Component);

  function AnalyticsContext() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck$8(this, AnalyticsContext);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn$8(this, (_getPrototypeOf2 = _getPrototypeOf$2(AnalyticsContext)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty$3(_assertThisInitialized$4(_this), "getChildContext", function () {
      return {
        getAtlaskitAnalyticsContext: _this.getAnalyticsContext
      };
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "getAnalyticsContext", function () {
      var data = _this.props.data;
      var getAtlaskitAnalyticsContext = _this.context.getAtlaskitAnalyticsContext;
      var ancestorData = typeof getAtlaskitAnalyticsContext === 'function' && getAtlaskitAnalyticsContext() || [];
      return [].concat(_toConsumableArray$2(ancestorData), [data]);
    });

    return _this;
  }

  _createClass$8(AnalyticsContext, [{
    key: "render",
    value: function render() {
      return Children.only(this.props.children);
    }
  }]);

  return AnalyticsContext;
}(Component$1);

_defineProperty$3(AnalyticsContext$i, "contextTypes", ContextTypes$5);

_defineProperty$3(AnalyticsContext$i, "childContextTypes", ContextTypes$5);

function _extends$d() {
  _extends$d = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$d.apply(this, arguments);
}

function _objectWithoutPropertiesLoose$4(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties$3(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose$4(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function withAnalyticsContext$a() {
  var defaultData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return function (WrappedComponent) {
    // $FlowFixMe - flow 0.67 doesn't know about forwardRef
    var WithAnalyticsContext = React__default.forwardRef(function (props, ref) {
      // eslint-disable-next-line react/prop-types
      var _props$analyticsConte = props.analyticsContext,
          analyticsContext = _props$analyticsConte === void 0 ? {} : _props$analyticsConte,
          others = _objectWithoutProperties$3(props, ["analyticsContext"]);

      var data = _objectSpread$q({}, defaultData, analyticsContext);

      return React__default.createElement(AnalyticsContext$i, {
        data: data
      }, React__default.createElement(WrappedComponent, _extends$d({}, others, {
        ref: ref
      })));
    });
    WithAnalyticsContext.displayName = "WithAnalyticsContext(".concat(WrappedComponent.displayName || WrappedComponent.name, ")");
    return WithAnalyticsContext;
  };
}

// This component is used to grab the analytics functions off context.
// It uses legacy context, but provides an API similar to 16.3 context.
// This makes it easier to use with the forward ref API.
var AnalyticsContextConsumer$2 =
/*#__PURE__*/
function (_Component) {
  _inherits$8(AnalyticsContextConsumer, _Component);

  function AnalyticsContextConsumer() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck$8(this, AnalyticsContextConsumer);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn$8(this, (_getPrototypeOf2 = _getPrototypeOf$2(AnalyticsContextConsumer)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty$3(_assertThisInitialized$4(_this), "createAnalyticsEvent", function (payload) {
      var _this$context = _this.context,
          getAtlaskitAnalyticsEventHandlers = _this$context.getAtlaskitAnalyticsEventHandlers,
          getAtlaskitAnalyticsContext = _this$context.getAtlaskitAnalyticsContext;
      var context = typeof getAtlaskitAnalyticsContext === 'function' && getAtlaskitAnalyticsContext() || [];
      var handlers = typeof getAtlaskitAnalyticsEventHandlers === 'function' && getAtlaskitAnalyticsEventHandlers() || [];
      return new UIAnalyticsEvent$7({
        context: context,
        handlers: handlers,
        payload: payload
      });
    });

    return _this;
  }

  _createClass$8(AnalyticsContextConsumer, [{
    key: "render",
    value: function render() {
      return this.props.children(this.createAnalyticsEvent);
    }
  }]);

  return AnalyticsContextConsumer;
}(Component$1); // patch the callback so it provides analytics information.


_defineProperty$3(AnalyticsContextConsumer$2, "contextTypes", {
  getAtlaskitAnalyticsEventHandlers: PropTypes$3.func,
  getAtlaskitAnalyticsContext: PropTypes$3.func
});

var modifyCallbackProp = function modifyCallbackProp(propName, eventMapEntry, props, createAnalyticsEvent) {
  return function () {
    var event = typeof eventMapEntry === 'function' ? eventMapEntry(createAnalyticsEvent, props) : createAnalyticsEvent(eventMapEntry);
    var providedCallback = props[propName];

    if (providedCallback) {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      providedCallback.apply(void 0, args.concat([event]));
    }
  };
};

// helper that provides an easy way to map an object's values
// ({ string: A }, (string, A) => B) => { string: B }
var vmap = function vmap(obj, fn) {
  return Object.keys(obj).reduce(function (curr, k) {
    return _objectSpread$q({}, curr, _defineProperty$3({}, k, fn(k, obj[k])));
  }, {});
};
/* This must use $Supertype to work with multiple HOCs - https://github.com/facebook/flow/issues/6057#issuecomment-414157781
 * We also cannot alias this as a generic of withAnalyticsEvents itself as
 * that causes issues with multiple HOCs - https://github.com/facebook/flow/issues/6587
 */


function withAnalyticsEvents$a() {
  var createEventMap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return function (WrappedComponent) {
    // $FlowFixMe - flow 0.67 doesn't know about forwardRef
    var WithAnalyticsEvents = React__default.forwardRef(function (props, ref) {
      return React__default.createElement(AnalyticsContextConsumer$2, null, function (createAnalyticsEvent) {
        var modifiedProps = vmap(createEventMap, function (propName, entry) {
          return modifyCallbackProp(propName, entry, props, createAnalyticsEvent);
        });
        return React__default.createElement(WrappedComponent, _extends$d({}, props, modifiedProps, {
          createAnalyticsEvent: createAnalyticsEvent,
          ref: ref
        }));
      });
    });
    WithAnalyticsEvents.displayName = "WithAnalyticsEvents(".concat(WrappedComponent.displayName || WrappedComponent.name, ")");
    return WithAnalyticsEvents;
  };
}

var createAndFireEvent$5 = (function (channel) {
  return function (payload) {
    return function (createAnalyticsEvent) {
      var consumerEvent = createAnalyticsEvent(payload);
      consumerEvent.clone().fire(channel);
      return consumerEvent;
    };
  };
});

/*
cleanProps removes props added by the withAnalyticsEvents HOC from an object
*/
function cleanProps(props) {
  /* eslint-disable no-unused-vars */
  props.createAnalyticsEvent;
      var cleanedProps = _objectWithoutProperties$3(props, ["createAnalyticsEvent"]);
  /* eslint-enable no-unused-vars */


  return cleanedProps;
}

var getComponentName = function (target) {
    if (target.displayName && typeof target.displayName === 'string') {
        return target.displayName;
    }
    return target.name || 'Component';
};
var warnIfDeprecatedAppearance = function (appearance) {
    var deprecatedAppearances = ['help'];
    if (appearance && deprecatedAppearances.indexOf(appearance) !== -1) {
        // tslint:disable-next-line:no-console
        console.warn("Atlaskit: The Button appearance \"" + appearance + "\" is deprecated. Please use styled-components' ThemeProvider to provide a custom theme for Button instead.");
    }
};
var withDeprecationWarnings = function (Component) {
    var _a;
    return _a = /** @class */ (function (_super) {
            __extends$c(WithDeprecationWarnings, _super);
            function WithDeprecationWarnings() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            WithDeprecationWarnings.prototype.componentWillMount = function () {
                warnIfDeprecatedAppearance(this.props.appearance);
            };
            WithDeprecationWarnings.prototype.componentWillReceiveProps = function (newProps) {
                if (newProps.appearance !== this.props.appearance) {
                    warnIfDeprecatedAppearance(newProps.appearance);
                }
            };
            WithDeprecationWarnings.prototype.render = function () {
                return React$7.createElement(Component, this.props);
            };
            return WithDeprecationWarnings;
        }(React$7.Component)),
        _a.displayName = "WithDeprecationWarnings(" + getComponentName(Component) + ")",
        _a;
};
var withDeprecationWarnings$1 = withDeprecationWarnings;

var getAppearanceProps = function (props, state) {
    var appearance = props.appearance, className = props.className, isDisabled = props.isDisabled, isLoading = props.isLoading, isSelected = props.isSelected, spacing = props.spacing, shouldFitContainer = props.shouldFitContainer;
    var isActive = state.isActive, isFocus = state.isFocus, isHover = state.isHover;
    return {
        appearance: appearance,
        className: className,
        disabled: isDisabled,
        isActive: isActive,
        isFocus: isFocus,
        isHover: isHover,
        isLoading: isLoading,
        isSelected: isSelected,
        spacing: spacing,
        fit: shouldFitContainer,
    };
};
var getInteractionProps = function (component) {
    var onBlur = component.onBlur, onFocus = component.onFocus, onMouseDown = component.onMouseDown, onMouseEnter = component.onMouseEnter, onMouseLeave = component.onMouseLeave, onMouseUp = component.onMouseUp;
    var tabIndex = component.props.tabIndex;
    // Block onClick/Keyboard submit while isLoading
    var onClick = component.props.isLoading
        ? function (e) { return e.preventDefault(); }
        : component.props.onClick;
    return {
        onBlur: onBlur,
        onClick: onClick,
        onFocus: onFocus,
        onMouseDown: onMouseDown,
        onMouseEnter: onMouseEnter,
        onMouseLeave: onMouseLeave,
        onMouseUp: onMouseUp,
        tabIndex: tabIndex,
    };
};
var getLinkElementProps = function (props) {
    var href = props.href, target = props.target;
    return { href: href, target: target };
};
var getButtonElementProps = function (props) {
    var ariaHaspopup = props.ariaHaspopup, ariaExpanded = props.ariaExpanded, ariaControls = props.ariaControls, form = props.form, type = props.type;
    return {
        'aria-haspopup': ariaHaspopup,
        'aria-expanded': ariaExpanded,
        'aria-controls': ariaControls,
        form: form,
        type: type,
    };
};
var getButtonProps = function (component) {
    var props = component.props, state = component.state;
    var defaultProps = __assign$9({ id: props.id }, getAppearanceProps(props, state), getInteractionProps(component), { 'aria-label': props.ariaLabel });
    if (props.component) {
        return __assign$9({}, props, defaultProps);
    }
    if (props.href) {
        if (props.isDisabled) {
            return defaultProps;
        }
        return __assign$9({}, defaultProps, getLinkElementProps(props));
    }
    return __assign$9({}, defaultProps, getButtonElementProps(props));
};
var getButtonProps$1 = getButtonProps;

var CustomComponentProxy = /** @class */ (function (_super) {
    __extends$c(CustomComponentProxy, _super);
    function CustomComponentProxy() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CustomComponentProxy.prototype.render = function () {
        var _a = cleanProps(this.props); _a.appearance; var children = _a.children, component = _a.component; _a.isActive; _a.isDisabled; _a.isFocus; _a.isHover; _a.isSelected; _a.shouldFitContainer; _a.fit; _a.iconBefore; _a.iconAfter; _a.isLoading; var proxiedProps = __rest$7(_a, ["appearance", "children", "component", "isActive", "isDisabled", "isFocus", "isHover", "isSelected", "shouldFitContainer", "fit", "iconBefore", "iconAfter", "isLoading"]);
        if (!component) {
            throw new Error('No custom component provided while trying to use custom button component');
        }
        var ProxiedComponent = component;
        return React$7.createElement(ProxiedComponent, __assign$9({}, proxiedProps), children);
    };
    return CustomComponentProxy;
}(React$7.Component));
var CustomComponentProxy$1 = CustomComponentProxy;

var DEFAULT_THEME_MODE$4 = 'light';
/*
  These theme values are expressed as functions so that if we decide to make
  them dependent on props in the future, it wouldn't require a significant
  refactor everywhere they are being used.
*/

var borderRadius$6 = function borderRadius() {
  return 3;
};
var gridSize$6 = function gridSize() {
  return 8;
};
var fontSize$6 = function fontSize() {
  return 14;
};

function getTheme$4(props) {
  if (props && props.theme && props.theme.__ATLASKIT_THEME__) {
    // $FlowFixMe - cannot narrow type between input types
    return props.theme.__ATLASKIT_THEME__;
  }

  if (props && props.theme && props.theme.mode) {
    // $FlowFixMe - cannot narrow type between input types
    return props.theme;
  }

  return {
    mode: DEFAULT_THEME_MODE$4
  };
}

/* eslint-disable prefer-rest-params */

function themedVariants$4(variantProp, variants) {
  return function (props) {
    var theme = getTheme$4(props);

    if (props && props[variantProp] && variants) {
      var modes = variants[props[variantProp]];

      if (modes) {
        return modes[theme.mode];
      }
    }

    return '';
  };
}

function themed$4(modesOrVariant, variantModes) {
  if (typeof modesOrVariant === 'string') {
    return themedVariants$4(modesOrVariant, variantModes);
  }

  var modes = modesOrVariant;
  return function (props) {
    var theme = getTheme$4(props);
    return modes[theme.mode];
  };
}

var R100$2 = '#FF8F73';
var R300$3 = '#FF5630';
var R400$3 = '#DE350B';
var R500$2 = '#BF2600'; // Yellows
var Y75$2 = '#FFF0B3';
var Y200$2 = '#FFC400';
var Y300$2 = '#FFAB00';
var Y400$1 = '#FF991F';
var Y500$1 = '#FF8B00'; // Greens

var G50$1 = '#E3FCEF';
var G100$2 = '#79F2C0';
var G400$2 = '#00875A';
var G500$2 = '#006644'; // Blues

var B50$2 = '#DEEBFF';
var B75$3 = '#B3D4FF';
var B100$4 = '#4C9AFF';
var B200$2 = '#2684FF';
var B300$2 = '#0065FF';
var B400$1 = '#0052CC';
var B500$2 = '#0747A6'; // Purples

var P50$2 = '#EAE6FF';
var P75$2 = '#C0B6F2';
var P100$2 = '#998DD9';
var P200$1 = '#8777D9';
var P400$1 = '#5243AA';
var P500$2 = '#403294'; // Teals
var T75$2 = '#B3F5FF';
var T100$2 = '#79E2F2';
var T300$1 = '#00B8D9';

var N0$8 = '#FFFFFF';
var N20$4 = '#F4F5F7';
var N40$3 = '#DFE1E6';
var N50$2 = '#C1C7D0';
var N70$4 = '#A5ADBA';
var N90$1 = '#8993A4';
var N100$4 = '#7A869A';
var N200$3 = '#6B778C';
var N400$1 = '#505F79';
var N500$5 = '#42526E';
var N700$2 = '#253858';
var N800$3 = '#172B4D'; // ATTENTION: update the tints if you update this
var N20A$1 = 'rgba(9, 30, 66, 0.04)';
var N30A$1 = 'rgba(9, 30, 66, 0.08)';
var DN400$1 = '#9FB0CC';
var DN300$2 = '#8C9CB8';
var DN100$1 = '#67758F';
var DN70$1 = '#3B475C';
var DN60$2 = '#313D52';
var DN30$6 = '#1B2638';

var DN0$1 = '#0D1424'; // Each dark tint is made of DN0 and an alpha channel

var colorPalette8 = [{
  background: N800$3,
  text: N0$8
}, {
  background: R400$3,
  text: N0$8
}, {
  background: P400$1,
  text: P50$2
}, {
  background: B400$1,
  text: B75$3
}, {
  background: T300$1,
  text: N800$3
}, {
  background: G400$2,
  text: N0$8
}, {
  background: Y400$1,
  text: N800$3
}, {
  background: N70$4,
  text: N800$3
}];
var colorPalette16 = [].concat(colorPalette8, [{
  background: N500$5,
  text: N0$8
}, {
  background: R100$2,
  text: N800$3
}, {
  background: P75$2,
  text: N800$3
}, {
  background: B100$4,
  text: N800$3
}, {
  background: T100$2,
  text: N800$3
}, {
  background: G100$2,
  text: G500$2
}, {
  background: Y200$2,
  text: N800$3
}, {
  background: N0$8,
  text: N800$3
}]);
[].concat(_toConsumableArray$2(colorPalette16), [{
  background: N100$4,
  text: N0$8
}, {
  background: N40$3,
  text: N800$3
}, {
  background: N50$2,
  text: R500$2
}, {
  background: P50$2,
  text: P500$2
}, {
  background: B50$2,
  text: B500$2
}, {
  background: T75$2,
  text: N800$3
}, {
  background: G50$1,
  text: G500$2
}, {
  background: Y75$2,
  text: N800$3
}]);

function multiply$1(fn, factor) {
  return function (props) {
    return fn(props) * factor;
  };
}
function divide$1(fn, divisor) {
  return function (props) {
    return fn(props) / divisor;
  };
}

var exenv = {exports: {}};

/*!
  Copyright (c) 2015 Jed Watson.
  Based on code that is Copyright 2013-2015, Facebook, Inc.
  All rights reserved.
*/

(function (module) {
/* global define */

(function () {

	var canUseDOM = !!(
		typeof window !== 'undefined' &&
		window.document &&
		window.document.createElement
	);

	var ExecutionEnvironment = {

		canUseDOM: canUseDOM,

		canUseWorkers: typeof Worker !== 'undefined',

		canUseEventListeners:
			canUseDOM && !!(window.addEventListener || window.attachEvent),

		canUseViewport: canUseDOM && !!window.screen

	};

	if (module.exports) {
		module.exports = ExecutionEnvironment;
	} else {
		window.ExecutionEnvironment = ExecutionEnvironment;
	}

}());
}(exenv));

/**
 * Convert a hex colour code to RGBA.
 * @param {String} hex Hex colour code.
 * @param {Number} alpha Optional alpha value (defaults to 1).
 *
 */
var hex2rgba$3 = function (hex, alpha) {
    if (alpha === void 0) { alpha = 1; }
    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {
        var colorArr = hex.substring(1).split('');
        if (colorArr.length === 3) {
            colorArr = [
                colorArr[0],
                colorArr[0],
                colorArr[1],
                colorArr[1],
                colorArr[2],
                colorArr[2],
            ];
        }
        var color = "0x" + colorArr.join('');
        // FIXME: `>>` operand can validly take a string value
        var r = (color >> 16) & 255;
        var g = (color >> 8) & 255;
        var b = color & 255;
        return "rgba(" + [r, g, b].join(',') + ", " + alpha + ")";
    }
    throw new Error('Bad Hex');
};
/* eslint-enable no-bitwise */
var themeDefinitions = {
    // Fallbacks
    fallbacks: {
        background: themed$4({ light: N20A$1, dark: DN70$1 }),
        color: themed$4({ light: N400$1, dark: DN400$1 }),
        textDecoration: 'none',
    },
    // Themes
    theme: {
        // Default appearance
        default: {
            background: {
                default: themed$4({ light: N20A$1, dark: DN70$1 }),
                hover: themed$4({ light: N30A$1, dark: DN60$2 }),
                active: themed$4({ light: hex2rgba$3(B75$3, 0.6), dark: B75$3 }),
                disabled: themed$4({ light: N20A$1, dark: DN70$1 }),
                selected: themed$4({ light: N700$2, dark: DN0$1 }),
                focusSelected: themed$4({ light: N700$2, dark: DN0$1 }),
            },
            boxShadowColor: {
                focus: themed$4({ light: hex2rgba$3(B200$2, 0.6), dark: B75$3 }),
                focusSelected: themed$4({
                    light: hex2rgba$3(B200$2, 0.6),
                    dark: B75$3,
                }),
            },
            color: {
                default: themed$4({ light: N400$1, dark: DN400$1 }),
                active: themed$4({ light: B400$1, dark: B400$1 }),
                disabled: themed$4({ light: N70$4, dark: DN30$6 }),
                selected: themed$4({ light: N20$4, dark: DN400$1 }),
                focusSelected: themed$4({ light: N20$4, dark: DN400$1 }),
            },
        },
        // Primary appearance
        primary: {
            background: {
                default: themed$4({ light: B400$1, dark: B100$4 }),
                hover: themed$4({ light: B300$2, dark: B75$3 }),
                active: themed$4({ light: B500$2, dark: B200$2 }),
                disabled: themed$4({ light: N20A$1, dark: DN70$1 }),
                selected: themed$4({ light: N700$2, dark: DN0$1 }),
                focusSelected: themed$4({ light: N700$2, dark: DN0$1 }),
            },
            boxShadowColor: {
                focus: themed$4({ light: hex2rgba$3(B200$2, 0.6), dark: B75$3 }),
                focusSelected: themed$4({
                    light: hex2rgba$3(B200$2, 0.6),
                    dark: B75$3,
                }),
            },
            color: {
                default: themed$4({ light: N0$8, dark: DN30$6 }),
                disabled: themed$4({ light: N70$4, dark: DN30$6 }),
                selected: themed$4({ light: N20$4, dark: DN400$1 }),
                focusSelected: themed$4({ light: N20$4, dark: DN400$1 }),
            },
        },
        // Warning appearance
        warning: {
            background: {
                default: themed$4({ light: Y300$2, dark: Y300$2 }),
                hover: themed$4({ light: Y200$2, dark: Y200$2 }),
                active: themed$4({ light: Y400$1, dark: Y400$1 }),
                disabled: themed$4({ light: N20A$1, dark: DN70$1 }),
                selected: themed$4({ light: Y400$1, dark: Y400$1 }),
                focusSelected: themed$4({ light: Y400$1, dark: Y400$1 }),
            },
            boxShadowColor: {
                focus: themed$4({ light: Y500$1, dark: Y500$1 }),
                focusSelected: themed$4({ light: Y500$1, dark: Y500$1 }),
            },
            color: {
                default: themed$4({ light: N800$3, dark: N800$3 }),
                disabled: themed$4({ light: N70$4, dark: DN30$6 }),
                selected: themed$4({ light: N800$3, dark: N800$3 }),
                focusSelected: themed$4({ light: N800$3, dark: N800$3 }),
            },
        },
        // Danger appearance
        danger: {
            background: {
                default: themed$4({ light: R400$3, dark: R400$3 }),
                hover: themed$4({ light: R300$3, dark: R300$3 }),
                active: themed$4({ light: R500$2, dark: R500$2 }),
                disabled: themed$4({ light: N20A$1, dark: DN70$1 }),
                selected: themed$4({ light: R500$2, dark: R500$2 }),
                focusSelected: themed$4({ light: R500$2, dark: R500$2 }),
            },
            boxShadowColor: {
                focus: themed$4({ light: R100$2, dark: R100$2 }),
                focusSelected: themed$4({ light: R100$2, dark: R100$2 }),
            },
            color: {
                default: themed$4({ light: N0$8, dark: N0$8 }),
                disabled: themed$4({ light: N70$4, dark: DN30$6 }),
                selected: themed$4({ light: N0$8, dark: N0$8 }),
                focusSelected: themed$4({ light: N0$8, dark: N0$8 }),
            },
        },
        // Help appearance
        help: {
            background: {
                default: themed$4({ light: P400$1, dark: P400$1 }),
                hover: themed$4({ light: P200$1, dark: P200$1 }),
                active: themed$4({ light: P500$2, dark: P500$2 }),
                disabled: themed$4({ light: N20A$1, dark: DN70$1 }),
                selected: themed$4({ light: N700$2, dark: DN0$1 }),
                focusSelected: themed$4({ light: R500$2, dark: R500$2 }),
            },
            boxShadowColor: {
                focus: themed$4({ light: P100$2, dark: P100$2 }),
                focusSelected: themed$4({ light: P100$2, dark: P100$2 }),
            },
            color: {
                default: themed$4({ light: N0$8, dark: N0$8 }),
                disabled: themed$4({ light: N70$4, dark: DN30$6 }),
                selected: themed$4({ light: N20$4, dark: DN400$1 }),
                focusSelected: themed$4({ light: N0$8, dark: N0$8 }),
            },
        },
        // Link appearance
        link: {
            background: {
                default: themed$4({ light: 'none', dark: 'none' }),
                selected: themed$4({ light: N700$2, dark: N20$4 }),
                focusSelected: themed$4({ light: N700$2, dark: N20$4 }),
            },
            boxShadowColor: {
                focus: themed$4({ light: hex2rgba$3(B200$2, 0.6), dark: B75$3 }),
                focusSelected: themed$4({
                    light: hex2rgba$3(B200$2, 0.6),
                    dark: B75$3,
                }),
            },
            color: {
                default: themed$4({ light: B400$1, dark: B100$4 }),
                hover: themed$4({ light: B300$2, dark: B75$3 }),
                active: themed$4({ light: B500$2, dark: B200$2 }),
                disabled: themed$4({ light: N70$4, dark: DN100$1 }),
                selected: themed$4({ light: N20$4, dark: N700$2 }),
                focusSelected: themed$4({ light: N20$4, dark: N700$2 }),
            },
            textDecoration: {
                hover: 'underline',
            },
        },
        // Subtle appearance
        subtle: {
            background: {
                default: themed$4({ light: 'none', dark: 'none' }),
                hover: themed$4({ light: N30A$1, dark: DN60$2 }),
                active: themed$4({ light: hex2rgba$3(B75$3, 0.6), dark: B75$3 }),
                disabled: themed$4({ light: 'none', dark: 'none' }),
                selected: themed$4({ light: N700$2, dark: DN0$1 }),
                focusSelected: themed$4({ light: N700$2, dark: DN0$1 }),
            },
            boxShadowColor: {
                focus: themed$4({ light: hex2rgba$3(B200$2, 0.6), dark: B75$3 }),
                focusSelected: themed$4({
                    light: hex2rgba$3(B200$2, 0.6),
                    dark: B75$3,
                }),
            },
            color: {
                default: themed$4({ light: N400$1, dark: DN400$1 }),
                active: themed$4({ light: B400$1, dark: B400$1 }),
                disabled: themed$4({ light: N70$4, dark: DN100$1 }),
                selected: themed$4({ light: N20$4, dark: DN400$1 }),
                focusSelected: themed$4({ light: N20$4, dark: DN400$1 }),
            },
        },
        // Subtle Link appearance
        'subtle-link': {
            background: {
                default: themed$4({ light: 'none', dark: 'none' }),
                selected: themed$4({ light: N700$2, dark: N20$4 }),
                focusSelected: themed$4({ light: N700$2, dark: N20$4 }),
            },
            boxShadowColor: {
                focus: themed$4({ light: hex2rgba$3(B200$2, 0.6), dark: B75$3 }),
                focusSelected: themed$4({
                    light: hex2rgba$3(B200$2, 0.6),
                    dark: B75$3,
                }),
            },
            color: {
                default: themed$4({ light: N200$3, dark: DN400$1 }),
                hover: themed$4({ light: N90$1, dark: B50$2 }),
                active: themed$4({ light: N400$1, dark: DN300$2 }),
                disabled: themed$4({ light: N70$4, dark: DN100$1 }),
                selected: themed$4({ light: N20$4, dark: DN400$1 }),
                focusSelected: themed$4({ light: N20$4, dark: DN400$1 }),
            },
            textDecoration: {
                hover: 'underline',
            },
        },
    },
};

var themeNamespace$1 = '@atlaskit-shared-theme/button';

// TODO: Type correctly when @atlaskit/theme is typescript
var getProvidedTheme = function (_a) {
    var theme = _a.theme;
    return (theme && theme[themeNamespace$1]) || {};
};
var getAppearanceProperty = function (property, appearance, providedTheme, inBuiltTheme) {
    var defaultAppearanceStyles = inBuiltTheme.default;
    if (!appearance) {
        return defaultAppearanceStyles[property];
    }
    var providedAppearanceStyles = providedTheme[appearance];
    var inBuiltAppearanceStyles = inBuiltTheme[appearance];
    return ((providedAppearanceStyles && providedAppearanceStyles[property]) ||
        (inBuiltAppearanceStyles && inBuiltAppearanceStyles[property]) ||
        defaultAppearanceStyles[property]);
};
var getState = function (_a) {
    var disabled = _a.disabled, isActive = _a.isActive, isFocus = _a.isFocus, isHover = _a.isHover, isSelected = _a.isSelected;
    if (disabled) {
        return 'disabled';
    }
    if (isSelected && isFocus) {
        return 'focusSelected';
    }
    if (isSelected) {
        return 'selected';
    }
    if (isActive) {
        return 'active';
    }
    if (isHover) {
        return 'hover';
    }
    if (isFocus) {
        return 'focus';
    }
    return 'default';
};
var getPropertyAppearance = function (property, props, definitions) {
    if (props === void 0) { props = {}; }
    if (definitions === void 0) { definitions = themeDefinitions; }
    var appearance = props.appearance;
    var fallbacks = definitions.fallbacks, inBuiltTheme = definitions.theme;
    var providedTheme = getProvidedTheme(props);
    var propertyStyles = getAppearanceProperty(property, appearance, providedTheme, inBuiltTheme);
    if (!propertyStyles) {
        return fallbacks[property] || 'initial';
    }
    var state = getState(props);
    return propertyStyles[state] || propertyStyles.default || fallbacks[property];
};
function getButtonStyles$3(props) {
    // $FlowFixMe - should be fixed when theme work is done
    var baseSize = fontSize$6(props);
    var buttonHeight = divide$1(multiply$1(gridSize$6, 4), baseSize)(props) + "em";
    var compactButtonHeight = divide$1(multiply$1(gridSize$6, 3), baseSize)(props) + "em";
    /**
     * Variable styles
     */
    var cursor = 'default';
    var height = buttonHeight;
    var lineHeight = buttonHeight;
    var outline = 'none';
    // $FlowFixMe - should be fixed when theme work is done
    var padding = "0 " + gridSize$6(props) + "px";
    var transitionDuration = '0.1s, 0.15s';
    var transition = 'background 0.1s ease-out, box-shadow 0.15s cubic-bezier(0.47, 0.03, 0.49, 1.38)';
    var verticalAlign = 'middle';
    var width = 'auto';
    /**
     * Appearance + Theme styles
     */
    var background = getPropertyAppearance('background', props);
    var color = getPropertyAppearance('color', props);
    var boxShadowColor = getPropertyAppearance('boxShadowColor', props);
    var boxShadow = boxShadowColor
        ? css$3(templateObject_1$l || (templateObject_1$l = __makeTemplateObject$9(["\n        box-shadow: 0 0 0 2px ", ";\n      "], ["\n        box-shadow: 0 0 0 2px ", ";\n      "])), boxShadowColor) : null;
    var textDecoration = getPropertyAppearance('textDecoration', props);
    // Spacing: Compact
    if (props.spacing === 'compact') {
        height = compactButtonHeight;
        lineHeight = compactButtonHeight;
    }
    // Spacing: None
    if (props.spacing === 'none') {
        height = 'auto';
        lineHeight = 'inherit';
        padding = '0';
        verticalAlign = 'baseline';
    }
    // Interaction: Hover
    if (props.isHover) {
        cursor = 'pointer';
        transition =
            'background 0s ease-out, box-shadow 0.15s cubic-bezier(0.47, 0.03, 0.49, 1.38)';
    }
    // Interaction: Active
    if (props.isActive) {
        transitionDuration = '0s';
    }
    // Interaction: Focus
    if (props.isFocus) {
        outline = 'none';
        transitionDuration = '0s, 0.2s';
    }
    // Disabled
    if (props.disabled) {
        cursor = 'not-allowed';
    }
    // Loading
    var isLoadingStyles = function (p) {
        return p.isLoading ? 'pointer-events: none;' : null;
    };
    // Fit to parent width
    if (props.fit) {
        width = '100%';
    }
    /* Note use of !important to override the ThemeReset on anchor tag styles */
    return css$3(templateObject_2$e || (templateObject_2$e = __makeTemplateObject$9(["\n    align-items: baseline;\n    background: ", ";\n    border-radius: ", "px;\n    border-width: 0;\n    box-sizing: border-box;\n    color: ", " !important;\n    cursor: ", ";\n    display: inline-flex;\n    font-size: inherit;\n    font-style: normal;\n    height: ", ";\n    line-height: ", ";\n    margin: 0;\n    max-width: 100%;\n    outline: ", " !important;\n    padding: ", ";\n    text-align: center;\n    text-decoration: ", ";\n    transition: ", ";\n    transition-duration: ", ";\n    vertical-align: ", ";\n    white-space: nowrap;\n    width: ", ";\n    ", " &::-moz-focus-inner {\n      border: 0;\n      margin: 0;\n      padding: 0;\n    }\n    ", ";\n  "], ["\n    align-items: baseline;\n    background: ", ";\n    border-radius: ", "px;\n    border-width: 0;\n    box-sizing: border-box;\n    color: ", " !important;\n    cursor: ", ";\n    display: inline-flex;\n    font-size: inherit;\n    font-style: normal;\n    height: ", ";\n    line-height: ", ";\n    margin: 0;\n    max-width: 100%;\n    outline: ", " !important;\n    padding: ", ";\n    text-align: center;\n    text-decoration: ", ";\n    transition: ", ";\n    transition-duration: ", ";\n    vertical-align: ", ";\n    white-space: nowrap;\n    width: ", ";\n    ", " &::-moz-focus-inner {\n      border: 0;\n      margin: 0;\n      padding: 0;\n    }\n    ", ";\n  "])), background, borderRadius$6, color, cursor, height, lineHeight, outline, padding, textDecoration, transition, transitionDuration, verticalAlign, width, boxShadow, isLoadingStyles);
}
var templateObject_1$l, templateObject_2$e;

css$3(templateObject_1$k || (templateObject_1$k = __makeTemplateObject$9(["\n  transition: opacity 0.3s;\n  opacity: ", ";\n"], ["\n  transition: opacity 0.3s;\n  opacity: ", ";\n"])), function (_a) {
    var isLoading = _a.isLoading;
    return (isLoading ? 0 : 1);
});
var getLoadingStyle$3 = function (_a) {
    var isLoading = _a.isLoading;
    return ({
        transition: 'opacity 0.3s',
        opacity: isLoading ? 0 : 1,
    });
};
var templateObject_1$k;

var getAlignment = function (p) { return (p.followsIcon ? 'baseline' : 'center'); };
var gridSizeDiv2 = divide$1(gridSize$6, 2);
var getMargin$1 = function (p) {
    return p.spacing === 'none' ? 0 : "0 " + gridSizeDiv2(p) + "px";
};
var ButtonContent = function (props) {
    var style = __assign$9({ alignItems: getAlignment(props), alignSelf: getAlignment(props), flex: '1 1 auto', margin: getMargin$1(props), maxWidth: '100%', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap' }, getLoadingStyle$3(props));
    return React$7.createElement("span", { style: style }, props.children);
};
var ButtonContent$1 = ButtonContent;

var ButtonWrapper = function (props) {
    var style = {
        alignSelf: 'center',
        display: 'inline-flex',
        flexWrap: 'nowrap',
        maxWidth: '100%',
        position: 'relative',
    };
    if (props.fit) {
        style.width = '100%';
        style.justifyContent = 'center';
    }
    var optionalProps = {};
    if (props.onClick) {
        optionalProps.onClick = props.onClick;
    }
    return (React$7.createElement("span", __assign$9({ style: style }, optionalProps), props.children));
};
var ButtonWrapper$1 = ButtonWrapper;

var getMargin = function (props) {
    if (props.spacing === 'none') {
        return 0;
    }
    if (props.isOnlyChild) {
        return "0 -" + divide$1(gridSize$6, 4)(props) + "px";
    }
    return "0 " + divide$1(gridSize$6, 2)(props) + "px";
};
var IconWrapper$3 = function (props) {
    var style = __assign$9({ alignSelf: 'center', display: 'flex', flexShrink: 0, lineHeight: 0, fontSize: 0, margin: getMargin(props), userSelect: 'none' }, getLoadingStyle$3(props));
    return React$7.createElement("span", { style: style }, props.children);
};
var IconWrapper$4 = IconWrapper$3;

var CSSTransition = {exports: {}};

var addClass = {exports: {}};

var interopRequireDefault = {exports: {}};

(function (module) {
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

module.exports = _interopRequireDefault;
module.exports["default"] = module.exports, module.exports.__esModule = true;
}(interopRequireDefault));

var hasClass = {exports: {}};

(function (module, exports) {

exports.__esModule = true;
exports.default = hasClass;

function hasClass(element, className) {
  if (element.classList) return !!className && element.classList.contains(className);else return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
}

module.exports = exports["default"];
}(hasClass, hasClass.exports));

(function (module, exports) {

var _interopRequireDefault = interopRequireDefault.exports;

exports.__esModule = true;
exports.default = addClass;

var _hasClass = _interopRequireDefault(hasClass.exports);

function addClass(element, className) {
  if (element.classList) element.classList.add(className);else if (!(0, _hasClass.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + ' ' + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + ' ' + className);
}

module.exports = exports["default"];
}(addClass, addClass.exports));

function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp('(^|\\s)' + classToRemove + '(?:\\s|$)', 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');
}

var removeClass = function removeClass(element, className) {
  if (element.classList) element.classList.remove(className);else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));
};

var Transition$3 = {};

var reactDom = {exports: {}};

var reactDom_production_min = {};

var scheduler = {exports: {}};

var scheduler_production_min = {};

/** @license React v0.20.2
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

(function (exports) {
var f,g,h,k;if("object"===typeof performance&&"function"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()};}else {var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q};}
if("undefined"===typeof window||"function"!==typeof MessageChannel){var t=null,u=null,w=function(){if(null!==t)try{var a=exports.unstable_now();t(!0,a);t=null;}catch(b){throw setTimeout(w,0),b;}};f=function(a){null!==t?setTimeout(f,0,a):(t=a,setTimeout(w,0));};g=function(a,b){u=setTimeout(a,b);};h=function(){clearTimeout(u);};exports.unstable_shouldYield=function(){return !1};k=exports.unstable_forceFrameRate=function(){};}else {var x=window.setTimeout,y=window.clearTimeout;if("undefined"!==typeof console){var z=
window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");"function"!==typeof z&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");}var A=!1,B=null,C=-1,D=5,E=0;exports.unstable_shouldYield=function(){return exports.unstable_now()>=
E};k=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):D=0<a?Math.floor(1E3/a):5;};var F=new MessageChannel,G=F.port2;F.port1.onmessage=function(){if(null!==B){var a=exports.unstable_now();E=a+D;try{B(!0,a)?G.postMessage(null):(A=!1,B=null);}catch(b){throw G.postMessage(null),b;}}else A=!1;};f=function(a){B=a;A||(A=!0,G.postMessage(null));};g=function(a,b){C=
x(function(){a(exports.unstable_now());},b);};h=function(){y(C);C=-1;};}function H(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<I(e,b))a[d]=b,a[c]=e,c=d;else break a}}function J(a){a=a[0];return void 0===a?null:a}
function K(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>I(n,c))void 0!==r&&0>I(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>I(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function I(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var L=[],M=[],N=1,O=null,P=3,Q=!1,R=!1,S=!1;
function T(a){for(var b=J(M);null!==b;){if(null===b.callback)K(M);else if(b.startTime<=a)K(M),b.sortIndex=b.expirationTime,H(L,b);else break;b=J(M);}}function U(a){S=!1;T(a);if(!R)if(null!==J(L))R=!0,f(V);else {var b=J(M);null!==b&&g(U,b.startTime-a);}}
function V(a,b){R=!1;S&&(S=!1,h());Q=!0;var c=P;try{T(b);for(O=J(L);null!==O&&(!(O.expirationTime>b)||a&&!exports.unstable_shouldYield());){var d=O.callback;if("function"===typeof d){O.callback=null;P=O.priorityLevel;var e=d(O.expirationTime<=b);b=exports.unstable_now();"function"===typeof e?O.callback=e:O===J(L)&&K(L);T(b);}else K(L);O=J(L);}if(null!==O)var m=!0;else {var n=J(M);null!==n&&g(U,n.startTime-b);m=!1;}return m}finally{O=null,P=c,Q=!1;}}var W=k;exports.unstable_IdlePriority=5;
exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null;};exports.unstable_continueExecution=function(){R||Q||(R=!0,f(V));};exports.unstable_getCurrentPriorityLevel=function(){return P};exports.unstable_getFirstCallbackNode=function(){return J(L)};
exports.unstable_next=function(a){switch(P){case 1:case 2:case 3:var b=3;break;default:b=P;}var c=P;P=b;try{return a()}finally{P=c;}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=W;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3;}var c=P;P=a;try{return b()}finally{P=c;}};
exports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();"object"===typeof c&&null!==c?(c=c.delay,c="number"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3;}e=c+e;a={id:N++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,H(M,a),null===J(L)&&a===J(M)&&(S?h():S=!0,g(U,c-d))):(a.sortIndex=e,H(L,a),R||Q||(R=!0,f(V)));return a};
exports.unstable_wrapCallback=function(a){var b=P;return function(){var c=P;P=b;try{return a.apply(this,arguments)}finally{P=c;}}};
}(scheduler_production_min));

var scheduler_development = {};

/** @license React v0.20.2
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

(function (exports) {

if (process.env.NODE_ENV !== "production") {
  (function() {

var enableSchedulerDebugging = false;
var enableProfiling = false;

var requestHostCallback;
var requestHostTimeout;
var cancelHostTimeout;
var requestPaint;
var hasPerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';

if (hasPerformanceNow) {
  var localPerformance = performance;

  exports.unstable_now = function () {
    return localPerformance.now();
  };
} else {
  var localDate = Date;
  var initialTime = localDate.now();

  exports.unstable_now = function () {
    return localDate.now() - initialTime;
  };
}

if ( // If Scheduler runs in a non-DOM environment, it falls back to a naive
// implementation using setTimeout.
typeof window === 'undefined' || // Check if MessageChannel is supported, too.
typeof MessageChannel !== 'function') {
  // If this accidentally gets imported in a non-browser environment, e.g. JavaScriptCore,
  // fallback to a naive implementation.
  var _callback = null;
  var _timeoutID = null;

  var _flushCallback = function () {
    if (_callback !== null) {
      try {
        var currentTime = exports.unstable_now();
        var hasRemainingTime = true;

        _callback(hasRemainingTime, currentTime);

        _callback = null;
      } catch (e) {
        setTimeout(_flushCallback, 0);
        throw e;
      }
    }
  };

  requestHostCallback = function (cb) {
    if (_callback !== null) {
      // Protect against re-entrancy.
      setTimeout(requestHostCallback, 0, cb);
    } else {
      _callback = cb;
      setTimeout(_flushCallback, 0);
    }
  };

  requestHostTimeout = function (cb, ms) {
    _timeoutID = setTimeout(cb, ms);
  };

  cancelHostTimeout = function () {
    clearTimeout(_timeoutID);
  };

  exports.unstable_shouldYield = function () {
    return false;
  };

  requestPaint = exports.unstable_forceFrameRate = function () {};
} else {
  // Capture local references to native APIs, in case a polyfill overrides them.
  var _setTimeout = window.setTimeout;
  var _clearTimeout = window.clearTimeout;

  if (typeof console !== 'undefined') {
    // TODO: Scheduler no longer requires these methods to be polyfilled. But
    // maybe we want to continue warning if they don't exist, to preserve the
    // option to rely on it in the future?
    var requestAnimationFrame = window.requestAnimationFrame;
    var cancelAnimationFrame = window.cancelAnimationFrame;

    if (typeof requestAnimationFrame !== 'function') {
      // Using console['error'] to evade Babel and ESLint
      console['error']("This browser doesn't support requestAnimationFrame. " + 'Make sure that you load a ' + 'polyfill in older browsers. https://reactjs.org/link/react-polyfills');
    }

    if (typeof cancelAnimationFrame !== 'function') {
      // Using console['error'] to evade Babel and ESLint
      console['error']("This browser doesn't support cancelAnimationFrame. " + 'Make sure that you load a ' + 'polyfill in older browsers. https://reactjs.org/link/react-polyfills');
    }
  }

  var isMessageLoopRunning = false;
  var scheduledHostCallback = null;
  var taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main
  // thread, like user events. By default, it yields multiple times per frame.
  // It does not attempt to align with frame boundaries, since most tasks don't
  // need to be frame aligned; for those that do, use requestAnimationFrame.

  var yieldInterval = 5;
  var deadline = 0; // TODO: Make this configurable

  {
    // `isInputPending` is not available. Since we have no way of knowing if
    // there's pending input, always yield at the end of the frame.
    exports.unstable_shouldYield = function () {
      return exports.unstable_now() >= deadline;
    }; // Since we yield every frame regardless, `requestPaint` has no effect.


    requestPaint = function () {};
  }

  exports.unstable_forceFrameRate = function (fps) {
    if (fps < 0 || fps > 125) {
      // Using console['error'] to evade Babel and ESLint
      console['error']('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing frame rates higher than 125 fps is not supported');
      return;
    }

    if (fps > 0) {
      yieldInterval = Math.floor(1000 / fps);
    } else {
      // reset the framerate
      yieldInterval = 5;
    }
  };

  var performWorkUntilDeadline = function () {
    if (scheduledHostCallback !== null) {
      var currentTime = exports.unstable_now(); // Yield after `yieldInterval` ms, regardless of where we are in the vsync
      // cycle. This means there's always time remaining at the beginning of
      // the message event.

      deadline = currentTime + yieldInterval;
      var hasTimeRemaining = true;

      try {
        var hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);

        if (!hasMoreWork) {
          isMessageLoopRunning = false;
          scheduledHostCallback = null;
        } else {
          // If there's more work, schedule the next message event at the end
          // of the preceding one.
          port.postMessage(null);
        }
      } catch (error) {
        // If a scheduler task throws, exit the current browser task so the
        // error can be observed.
        port.postMessage(null);
        throw error;
      }
    } else {
      isMessageLoopRunning = false;
    } // Yielding to the browser will give it a chance to paint, so we can
  };

  var channel = new MessageChannel();
  var port = channel.port2;
  channel.port1.onmessage = performWorkUntilDeadline;

  requestHostCallback = function (callback) {
    scheduledHostCallback = callback;

    if (!isMessageLoopRunning) {
      isMessageLoopRunning = true;
      port.postMessage(null);
    }
  };

  requestHostTimeout = function (callback, ms) {
    taskTimeoutID = _setTimeout(function () {
      callback(exports.unstable_now());
    }, ms);
  };

  cancelHostTimeout = function () {
    _clearTimeout(taskTimeoutID);

    taskTimeoutID = -1;
  };
}

function push(heap, node) {
  var index = heap.length;
  heap.push(node);
  siftUp(heap, node, index);
}
function peek(heap) {
  var first = heap[0];
  return first === undefined ? null : first;
}
function pop(heap) {
  var first = heap[0];

  if (first !== undefined) {
    var last = heap.pop();

    if (last !== first) {
      heap[0] = last;
      siftDown(heap, last, 0);
    }

    return first;
  } else {
    return null;
  }
}

function siftUp(heap, node, i) {
  var index = i;

  while (true) {
    var parentIndex = index - 1 >>> 1;
    var parent = heap[parentIndex];

    if (parent !== undefined && compare(parent, node) > 0) {
      // The parent is larger. Swap positions.
      heap[parentIndex] = node;
      heap[index] = parent;
      index = parentIndex;
    } else {
      // The parent is smaller. Exit.
      return;
    }
  }
}

function siftDown(heap, node, i) {
  var index = i;
  var length = heap.length;

  while (index < length) {
    var leftIndex = (index + 1) * 2 - 1;
    var left = heap[leftIndex];
    var rightIndex = leftIndex + 1;
    var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.

    if (left !== undefined && compare(left, node) < 0) {
      if (right !== undefined && compare(right, left) < 0) {
        heap[index] = right;
        heap[rightIndex] = node;
        index = rightIndex;
      } else {
        heap[index] = left;
        heap[leftIndex] = node;
        index = leftIndex;
      }
    } else if (right !== undefined && compare(right, node) < 0) {
      heap[index] = right;
      heap[rightIndex] = node;
      index = rightIndex;
    } else {
      // Neither child is smaller. Exit.
      return;
    }
  }
}

function compare(a, b) {
  // Compare sort index first, then task id.
  var diff = a.sortIndex - b.sortIndex;
  return diff !== 0 ? diff : a.id - b.id;
}

// TODO: Use symbols?
var ImmediatePriority = 1;
var UserBlockingPriority = 2;
var NormalPriority = 3;
var LowPriority = 4;
var IdlePriority = 5;

function markTaskErrored(task, ms) {
}

/* eslint-disable no-var */
// Math.pow(2, 30) - 1
// 0b111111111111111111111111111111

var maxSigned31BitInt = 1073741823; // Times out immediately

var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out

var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
var NORMAL_PRIORITY_TIMEOUT = 5000;
var LOW_PRIORITY_TIMEOUT = 10000; // Never times out

var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap

var taskQueue = [];
var timerQueue = []; // Incrementing id counter. Used to maintain insertion order.

var taskIdCounter = 1; // Pausing the scheduler is useful for debugging.
var currentTask = null;
var currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrancy.

var isPerformingWork = false;
var isHostCallbackScheduled = false;
var isHostTimeoutScheduled = false;

function advanceTimers(currentTime) {
  // Check for tasks that are no longer delayed and add them to the queue.
  var timer = peek(timerQueue);

  while (timer !== null) {
    if (timer.callback === null) {
      // Timer was cancelled.
      pop(timerQueue);
    } else if (timer.startTime <= currentTime) {
      // Timer fired. Transfer to the task queue.
      pop(timerQueue);
      timer.sortIndex = timer.expirationTime;
      push(taskQueue, timer);
    } else {
      // Remaining timers are pending.
      return;
    }

    timer = peek(timerQueue);
  }
}

function handleTimeout(currentTime) {
  isHostTimeoutScheduled = false;
  advanceTimers(currentTime);

  if (!isHostCallbackScheduled) {
    if (peek(taskQueue) !== null) {
      isHostCallbackScheduled = true;
      requestHostCallback(flushWork);
    } else {
      var firstTimer = peek(timerQueue);

      if (firstTimer !== null) {
        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
      }
    }
  }
}

function flushWork(hasTimeRemaining, initialTime) {


  isHostCallbackScheduled = false;

  if (isHostTimeoutScheduled) {
    // We scheduled a timeout but it's no longer needed. Cancel it.
    isHostTimeoutScheduled = false;
    cancelHostTimeout();
  }

  isPerformingWork = true;
  var previousPriorityLevel = currentPriorityLevel;

  try {
    var currentTime; if (enableProfiling) ; else {
      // No catch in prod code path.
      return workLoop(hasTimeRemaining, initialTime);
    }
  } finally {
    currentTask = null;
    currentPriorityLevel = previousPriorityLevel;
    isPerformingWork = false;
  }
}

function workLoop(hasTimeRemaining, initialTime) {
  var currentTime = initialTime;
  advanceTimers(currentTime);
  currentTask = peek(taskQueue);

  while (currentTask !== null && !(enableSchedulerDebugging )) {
    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || exports.unstable_shouldYield())) {
      // This currentTask hasn't expired, and we've reached the deadline.
      break;
    }

    var callback = currentTask.callback;

    if (typeof callback === 'function') {
      currentTask.callback = null;
      currentPriorityLevel = currentTask.priorityLevel;
      var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;

      var continuationCallback = callback(didUserCallbackTimeout);
      currentTime = exports.unstable_now();

      if (typeof continuationCallback === 'function') {
        currentTask.callback = continuationCallback;
      } else {

        if (currentTask === peek(taskQueue)) {
          pop(taskQueue);
        }
      }

      advanceTimers(currentTime);
    } else {
      pop(taskQueue);
    }

    currentTask = peek(taskQueue);
  } // Return whether there's additional work


  if (currentTask !== null) {
    return true;
  } else {
    var firstTimer = peek(timerQueue);

    if (firstTimer !== null) {
      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
    }

    return false;
  }
}

function unstable_runWithPriority(priorityLevel, eventHandler) {
  switch (priorityLevel) {
    case ImmediatePriority:
    case UserBlockingPriority:
    case NormalPriority:
    case LowPriority:
    case IdlePriority:
      break;

    default:
      priorityLevel = NormalPriority;
  }

  var previousPriorityLevel = currentPriorityLevel;
  currentPriorityLevel = priorityLevel;

  try {
    return eventHandler();
  } finally {
    currentPriorityLevel = previousPriorityLevel;
  }
}

function unstable_next(eventHandler) {
  var priorityLevel;

  switch (currentPriorityLevel) {
    case ImmediatePriority:
    case UserBlockingPriority:
    case NormalPriority:
      // Shift down to normal priority
      priorityLevel = NormalPriority;
      break;

    default:
      // Anything lower than normal priority should remain at the current level.
      priorityLevel = currentPriorityLevel;
      break;
  }

  var previousPriorityLevel = currentPriorityLevel;
  currentPriorityLevel = priorityLevel;

  try {
    return eventHandler();
  } finally {
    currentPriorityLevel = previousPriorityLevel;
  }
}

function unstable_wrapCallback(callback) {
  var parentPriorityLevel = currentPriorityLevel;
  return function () {
    // This is a fork of runWithPriority, inlined for performance.
    var previousPriorityLevel = currentPriorityLevel;
    currentPriorityLevel = parentPriorityLevel;

    try {
      return callback.apply(this, arguments);
    } finally {
      currentPriorityLevel = previousPriorityLevel;
    }
  };
}

function unstable_scheduleCallback(priorityLevel, callback, options) {
  var currentTime = exports.unstable_now();
  var startTime;

  if (typeof options === 'object' && options !== null) {
    var delay = options.delay;

    if (typeof delay === 'number' && delay > 0) {
      startTime = currentTime + delay;
    } else {
      startTime = currentTime;
    }
  } else {
    startTime = currentTime;
  }

  var timeout;

  switch (priorityLevel) {
    case ImmediatePriority:
      timeout = IMMEDIATE_PRIORITY_TIMEOUT;
      break;

    case UserBlockingPriority:
      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
      break;

    case IdlePriority:
      timeout = IDLE_PRIORITY_TIMEOUT;
      break;

    case LowPriority:
      timeout = LOW_PRIORITY_TIMEOUT;
      break;

    case NormalPriority:
    default:
      timeout = NORMAL_PRIORITY_TIMEOUT;
      break;
  }

  var expirationTime = startTime + timeout;
  var newTask = {
    id: taskIdCounter++,
    callback: callback,
    priorityLevel: priorityLevel,
    startTime: startTime,
    expirationTime: expirationTime,
    sortIndex: -1
  };

  if (startTime > currentTime) {
    // This is a delayed task.
    newTask.sortIndex = startTime;
    push(timerQueue, newTask);

    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
      // All tasks are delayed, and this is the task with the earliest delay.
      if (isHostTimeoutScheduled) {
        // Cancel an existing timeout.
        cancelHostTimeout();
      } else {
        isHostTimeoutScheduled = true;
      } // Schedule a timeout.


      requestHostTimeout(handleTimeout, startTime - currentTime);
    }
  } else {
    newTask.sortIndex = expirationTime;
    push(taskQueue, newTask);
    // wait until the next time we yield.


    if (!isHostCallbackScheduled && !isPerformingWork) {
      isHostCallbackScheduled = true;
      requestHostCallback(flushWork);
    }
  }

  return newTask;
}

function unstable_pauseExecution() {
}

function unstable_continueExecution() {

  if (!isHostCallbackScheduled && !isPerformingWork) {
    isHostCallbackScheduled = true;
    requestHostCallback(flushWork);
  }
}

function unstable_getFirstCallbackNode() {
  return peek(taskQueue);
}

function unstable_cancelCallback(task) {
  // remove from the queue because you can't remove arbitrary nodes from an
  // array based heap, only the first one.)


  task.callback = null;
}

function unstable_getCurrentPriorityLevel() {
  return currentPriorityLevel;
}

var unstable_requestPaint = requestPaint;
var unstable_Profiling =  null;

exports.unstable_IdlePriority = IdlePriority;
exports.unstable_ImmediatePriority = ImmediatePriority;
exports.unstable_LowPriority = LowPriority;
exports.unstable_NormalPriority = NormalPriority;
exports.unstable_Profiling = unstable_Profiling;
exports.unstable_UserBlockingPriority = UserBlockingPriority;
exports.unstable_cancelCallback = unstable_cancelCallback;
exports.unstable_continueExecution = unstable_continueExecution;
exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
exports.unstable_next = unstable_next;
exports.unstable_pauseExecution = unstable_pauseExecution;
exports.unstable_requestPaint = unstable_requestPaint;
exports.unstable_runWithPriority = unstable_runWithPriority;
exports.unstable_scheduleCallback = unstable_scheduleCallback;
exports.unstable_wrapCallback = unstable_wrapCallback;
  })();
}
}(scheduler_development));

if (process.env.NODE_ENV === 'production') {
  scheduler.exports = scheduler_production_min;
} else {
  scheduler.exports = scheduler_development;
}

/** @license React v17.0.2
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var aa$1=React__default,m=objectAssign$2,r$1=scheduler.exports;function y(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return "Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!aa$1)throw Error(y(227));var ba$1=new Set,ca$1={};function da$1(a,b){ea$1(a,b);ea$1(a+"Capture",b);}
function ea$1(a,b){ca$1[a]=b;for(a=0;a<b.length;a++)ba$1.add(b[a]);}
var fa$1=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),ha$1=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,ia$1=Object.prototype.hasOwnProperty,
ja$1={},ka$1={};function la$1(a){if(ia$1.call(ka$1,a))return !0;if(ia$1.call(ja$1,a))return !1;if(ha$1.test(a))return ka$1[a]=!0;ja$1[a]=!0;return !1}function ma$1(a,b,c,d){if(null!==c&&0===c.type)return !1;switch(typeof b){case "function":case "symbol":return !0;case "boolean":if(d)return !1;if(null!==c)return !c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return "data-"!==a&&"aria-"!==a;default:return !1}}
function na$1(a,b,c,d){if(null===b||"undefined"===typeof b||ma$1(a,b,c,d))return !0;if(d)return !1;if(null!==c)switch(c.type){case 3:return !b;case 4:return !1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return !1}function B$1(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g;}var D$1={};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){D$1[a]=new B$1(a,0,!1,a,null,!1,!1);});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];D$1[b]=new B$1(b,1,!1,a[1],null,!1,!1);});["contentEditable","draggable","spellCheck","value"].forEach(function(a){D$1[a]=new B$1(a,2,!1,a.toLowerCase(),null,!1,!1);});
["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){D$1[a]=new B$1(a,2,!1,a,null,!1,!1);});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){D$1[a]=new B$1(a,3,!1,a.toLowerCase(),null,!1,!1);});
["checked","multiple","muted","selected"].forEach(function(a){D$1[a]=new B$1(a,3,!0,a,null,!1,!1);});["capture","download"].forEach(function(a){D$1[a]=new B$1(a,4,!1,a,null,!1,!1);});["cols","rows","size","span"].forEach(function(a){D$1[a]=new B$1(a,6,!1,a,null,!1,!1);});["rowSpan","start"].forEach(function(a){D$1[a]=new B$1(a,5,!1,a.toLowerCase(),null,!1,!1);});var oa$1=/[\-:]([a-z])/g;function pa$1(a){return a[1].toUpperCase()}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(oa$1,
pa$1);D$1[b]=new B$1(b,1,!1,a,null,!1,!1);});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(oa$1,pa$1);D$1[b]=new B$1(b,1,!1,a,"http://www.w3.org/1999/xlink",!1,!1);});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(oa$1,pa$1);D$1[b]=new B$1(b,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1,!1);});["tabIndex","crossOrigin"].forEach(function(a){D$1[a]=new B$1(a,1,!1,a.toLowerCase(),null,!1,!1);});
D$1.xlinkHref=new B$1("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(a){D$1[a]=new B$1(a,1,!1,a.toLowerCase(),null,!0,!0);});
function qa$1(a,b,c,d){var e=D$1.hasOwnProperty(b)?D$1[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1]?!1:!0;f||(na$1(b,c,e,d)&&(c=null),d||null===e?la$1(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))));}
var ra$1=aa$1.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,sa$1=60103,ta$1=60106,ua$1=60107,wa$1=60108,xa$1=60114,ya$1=60109,za$1=60110,Aa$1=60112,Ba$1=60113,Ca$1=60120,Da$1=60115,Ea$1=60116,Fa$1=60121,Ga$1=60128,Ha$1=60129,Ia$1=60130,Ja$1=60131;
if("function"===typeof Symbol&&Symbol.for){var E$1=Symbol.for;sa$1=E$1("react.element");ta$1=E$1("react.portal");ua$1=E$1("react.fragment");wa$1=E$1("react.strict_mode");xa$1=E$1("react.profiler");ya$1=E$1("react.provider");za$1=E$1("react.context");Aa$1=E$1("react.forward_ref");Ba$1=E$1("react.suspense");Ca$1=E$1("react.suspense_list");Da$1=E$1("react.memo");Ea$1=E$1("react.lazy");Fa$1=E$1("react.block");E$1("react.scope");Ga$1=E$1("react.opaque.id");Ha$1=E$1("react.debug_trace_mode");Ia$1=E$1("react.offscreen");Ja$1=E$1("react.legacy_hidden");}
var Ka$1="function"===typeof Symbol&&Symbol.iterator;function La$1(a){if(null===a||"object"!==typeof a)return null;a=Ka$1&&a[Ka$1]||a["@@iterator"];return "function"===typeof a?a:null}var Ma$1;function Na$1(a){if(void 0===Ma$1)try{throw Error();}catch(c){var b=c.stack.trim().match(/\n( *(at )?)/);Ma$1=b&&b[1]||"";}return "\n"+Ma$1+a}var Oa$1=!1;
function Pa$1(a,b){if(!a||Oa$1)return "";Oa$1=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,"props",{set:function(){throw Error();}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[]);}catch(k){var d=k;}Reflect.construct(a,[],b);}else {try{b.call();}catch(k){d=k;}a.call(b.prototype);}else {try{throw Error();}catch(k){d=k;}a();}}catch(k){if(k&&d&&"string"===typeof k.stack){for(var e=k.stack.split("\n"),
f=d.stack.split("\n"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h])return "\n"+e[g].replace(" at new "," at ");while(1<=g&&0<=h)}break}}}finally{Oa$1=!1,Error.prepareStackTrace=c;}return (a=a?a.displayName||a.name:"")?Na$1(a):""}
function Qa$1(a){switch(a.tag){case 5:return Na$1(a.type);case 16:return Na$1("Lazy");case 13:return Na$1("Suspense");case 19:return Na$1("SuspenseList");case 0:case 2:case 15:return a=Pa$1(a.type,!1),a;case 11:return a=Pa$1(a.type.render,!1),a;case 22:return a=Pa$1(a.type._render,!1),a;case 1:return a=Pa$1(a.type,!0),a;default:return ""}}
function Ra$1(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case ua$1:return "Fragment";case ta$1:return "Portal";case xa$1:return "Profiler";case wa$1:return "StrictMode";case Ba$1:return "Suspense";case Ca$1:return "SuspenseList"}if("object"===typeof a)switch(a.$$typeof){case za$1:return (a.displayName||"Context")+".Consumer";case ya$1:return (a._context.displayName||"Context")+".Provider";case Aa$1:var b=a.render;b=b.displayName||b.name||"";
return a.displayName||(""!==b?"ForwardRef("+b+")":"ForwardRef");case Da$1:return Ra$1(a.type);case Fa$1:return Ra$1(a._render);case Ea$1:b=a._payload;a=a._init;try{return Ra$1(a(b))}catch(c){}}return null}function Sa$1(a){switch(typeof a){case "boolean":case "number":case "object":case "string":case "undefined":return a;default:return ""}}function Ta$1(a){var b=a.type;return (a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}
function Ua$1(a){var b=Ta$1(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a);}});Object.defineProperty(a,b,{enumerable:c.enumerable});return {getValue:function(){return d},setValue:function(a){d=""+a;},stopTracking:function(){a._valueTracker=
null;delete a[b];}}}}function Va$1(a){a._valueTracker||(a._valueTracker=Ua$1(a));}function Wa$1(a){if(!a)return !1;var b=a._valueTracker;if(!b)return !0;var c=b.getValue();var d="";a&&(d=Ta$1(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa$1(a){a=a||("undefined"!==typeof document?document:void 0);if("undefined"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}
function Ya$1(a,b){var c=b.checked;return m({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za$1(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa$1(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value};}function $a$1(a,b){b=b.checked;null!=b&&qa$1(a,"checked",b,!1);}
function ab$1(a,b){$a$1(a,b);var c=Sa$1(b.value),d=b.type;if(null!=c)if("number"===d){if(0===c&&""===a.value||a.value!=c)a.value=""+c;}else a.value!==""+c&&(a.value=""+c);else if("submit"===d||"reset"===d){a.removeAttribute("value");return}b.hasOwnProperty("value")?bb$1(a,b.type,c):b.hasOwnProperty("defaultValue")&&bb$1(a,b.type,Sa$1(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked);}
function cb$1(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){var d=b.type;if(!("submit"!==d&&"reset"!==d||void 0!==b.value&&null!==b.value))return;b=""+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b;}c=a.name;""!==c&&(a.name="");a.defaultChecked=!!a._wrapperState.initialChecked;""!==c&&(a.name=c);}
function bb$1(a,b,c){if("number"!==b||Xa$1(a.ownerDocument)!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c);}function db$1(a){var b="";aa$1.Children.forEach(a,function(a){null!=a&&(b+=a);});return b}function eb(a,b){a=m({children:void 0},b);if(b=db$1(b.children))a.children=b;return a}
function fb$1(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0);}else {c=""+Sa$1(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e]);}null!==b&&(b.selected=!0);}}
function gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(y(91));return m({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(y(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(y(93));c=c[0];}b=c;}null==b&&(b="");c=b;}a._wrapperState={initialValue:Sa$1(c)};}
function ib(a,b){var c=Sa$1(b.value),d=Sa$1(b.defaultValue);null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=""+d);}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&""!==b&&null!==b&&(a.value=b);}var kb={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};
function lb(a){switch(a){case "svg":return "http://www.w3.org/2000/svg";case "math":return "http://www.w3.org/1998/Math/MathML";default:return "http://www.w3.org/1999/xhtml"}}function mb(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?lb(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}
var nb,ob=function(a){return "undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)});}:a}(function(a,b){if(a.namespaceURI!==kb.svg||"innerHTML"in a)a.innerHTML=b;else {nb=nb||document.createElement("div");nb.innerHTML="<svg>"+b.valueOf().toString()+"</svg>";for(b=nb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild);}});
function pb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b;}
var qb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,
floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},rb=["Webkit","ms","Moz","O"];Object.keys(qb).forEach(function(a){rb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qb[b]=qb[a];});});function sb(a,b,c){return null==b||"boolean"===typeof b||""===b?"":c||"number"!==typeof b||0===b||qb.hasOwnProperty(a)&&qb[a]?(""+b).trim():b+"px"}
function tb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--"),e=sb(c,b[c],d);"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e;}}var ub=m({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});
function vb(a,b){if(b){if(ub[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(y(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(y(60));if(!("object"===typeof b.dangerouslySetInnerHTML&&"__html"in b.dangerouslySetInnerHTML))throw Error(y(61));}if(null!=b.style&&"object"!==typeof b.style)throw Error(y(62));}}
function wb(a,b){if(-1===a.indexOf("-"))return "string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return !1;default:return !0}}function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;
function Bb(a){if(a=Cb(a)){if("function"!==typeof yb)throw Error(y(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b));}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a;}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a]);}}function Gb(a,b){return a(b)}function Hb(a,b,c,d,e){return a(b,c,d,e)}function Ib(){}var Jb=Gb,Kb=!1,Lb=!1;function Mb(){if(null!==zb||null!==Ab)Ib(),Fb();}
function Nb(a,b,c){if(Lb)return a(b,c);Lb=!0;try{return Jb(a,b,c)}finally{Lb=!1,Mb();}}
function Ob(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":case "onMouseEnter":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1;}if(a)return null;if(c&&"function"!==
typeof c)throw Error(y(231,b,typeof c));return c}var Pb=!1;if(fa$1)try{var Qb={};Object.defineProperty(Qb,"passive",{get:function(){Pb=!0;}});window.addEventListener("test",Qb,Qb);window.removeEventListener("test",Qb,Qb);}catch(a){Pb=!1;}function Rb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l);}catch(n){this.onError(n);}}var Sb=!1,Tb=null,Ub=!1,Vb=null,Wb={onError:function(a){Sb=!0;Tb=a;}};function Xb(a,b,c,d,e,f,g,h,k){Sb=!1;Tb=null;Rb.apply(Wb,arguments);}
function Yb(a,b,c,d,e,f,g,h,k){Xb.apply(this,arguments);if(Sb){if(Sb){var l=Tb;Sb=!1;Tb=null;}else throw Error(y(198));Ub||(Ub=!0,Vb=l);}}function Zb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else {a=b;do b=a,0!==(b.flags&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function $b(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function ac(a){if(Zb(a)!==a)throw Error(y(188));}
function bc(a){var b=a.alternate;if(!b){b=Zb(a);if(null===b)throw Error(y(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return ac(e),a;if(f===d)return ac(e),b;f=f.sibling;}throw Error(y(188));}if(c.return!==d.return)c=e,d=f;else {for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling;}if(!g){for(h=f.child;h;){if(h===
c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling;}if(!g)throw Error(y(189));}}if(c.alternate!==d)throw Error(y(190));}if(3!==c.tag)throw Error(y(188));return c.stateNode.current===c?a:b}function cc(a){a=bc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else {if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return;}b.sibling.return=b.return;b=b.sibling;}}return null}
function dc(a,b){for(var c=a.alternate;null!==b;){if(b===a||b===c)return !0;b=b.return;}return !1}var ec,fc,gc,hc,ic=!1,jc=[],kc=null,lc=null,mc=null,nc=new Map,oc=new Map,pc=[],qc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function rc(a,b,c,d,e){return {blockedOn:a,domEventName:b,eventSystemFlags:c|16,nativeEvent:e,targetContainers:[d]}}function sc(a,b){switch(a){case "focusin":case "focusout":kc=null;break;case "dragenter":case "dragleave":lc=null;break;case "mouseover":case "mouseout":mc=null;break;case "pointerover":case "pointerout":nc.delete(b.pointerId);break;case "gotpointercapture":case "lostpointercapture":oc.delete(b.pointerId);}}
function tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=rc(b,c,d,e,f),null!==b&&(b=Cb(b),null!==b&&fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}
function uc(a,b,c,d,e){switch(b){case "focusin":return kc=tc(kc,a,b,c,d,e),!0;case "dragenter":return lc=tc(lc,a,b,c,d,e),!0;case "mouseover":return mc=tc(mc,a,b,c,d,e),!0;case "pointerover":var f=e.pointerId;nc.set(f,tc(nc.get(f)||null,a,b,c,d,e));return !0;case "gotpointercapture":return f=e.pointerId,oc.set(f,tc(oc.get(f)||null,a,b,c,d,e)),!0}return !1}
function vc(a){var b=wc(a.target);if(null!==b){var c=Zb(b);if(null!==c)if(b=c.tag,13===b){if(b=$b(c),null!==b){a.blockedOn=b;hc(a.lanePriority,function(){r$1.unstable_runWithPriority(a.priority,function(){gc(c);});});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null;}
function xc(a){if(null!==a.blockedOn)return !1;for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c)return b=Cb(c),null!==b&&fc(b),a.blockedOn=c,!1;b.shift();}return !0}function zc(a,b,c){xc(a)&&c.delete(b);}
function Ac(){for(ic=!1;0<jc.length;){var a=jc[0];if(null!==a.blockedOn){a=Cb(a.blockedOn);null!==a&&ec(a);break}for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c){a.blockedOn=c;break}b.shift();}null===a.blockedOn&&jc.shift();}null!==kc&&xc(kc)&&(kc=null);null!==lc&&xc(lc)&&(lc=null);null!==mc&&xc(mc)&&(mc=null);nc.forEach(zc);oc.forEach(zc);}
function Bc(a,b){a.blockedOn===b&&(a.blockedOn=null,ic||(ic=!0,r$1.unstable_scheduleCallback(r$1.unstable_NormalPriority,Ac)));}
function Cc(a){function b(b){return Bc(b,a)}if(0<jc.length){Bc(jc[0],a);for(var c=1;c<jc.length;c++){var d=jc[c];d.blockedOn===a&&(d.blockedOn=null);}}null!==kc&&Bc(kc,a);null!==lc&&Bc(lc,a);null!==mc&&Bc(mc,a);nc.forEach(b);oc.forEach(b);for(c=0;c<pc.length;c++)d=pc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<pc.length&&(c=pc[0],null===c.blockedOn);)vc(c),null===c.blockedOn&&pc.shift();}
function Dc(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;return c}var Ec={animationend:Dc("Animation","AnimationEnd"),animationiteration:Dc("Animation","AnimationIteration"),animationstart:Dc("Animation","AnimationStart"),transitionend:Dc("Transition","TransitionEnd")},Fc={},Gc={};
fa$1&&(Gc=document.createElement("div").style,"AnimationEvent"in window||(delete Ec.animationend.animation,delete Ec.animationiteration.animation,delete Ec.animationstart.animation),"TransitionEvent"in window||delete Ec.transitionend.transition);function Hc(a){if(Fc[a])return Fc[a];if(!Ec[a])return a;var b=Ec[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Gc)return Fc[a]=b[c];return a}
var Ic=Hc("animationend"),Jc=Hc("animationiteration"),Kc=Hc("animationstart"),Lc=Hc("transitionend"),Mc=new Map,Nc=new Map,Oc=["abort","abort",Ic,"animationEnd",Jc,"animationIteration",Kc,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart",
"lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Lc,"transitionEnd","waiting","waiting"];function Pc(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1];e="on"+(e[0].toUpperCase()+e.slice(1));Nc.set(d,b);Mc.set(d,e);da$1(e,[d]);}}var Qc=r$1.unstable_now;Qc();var F$1=8;
function Rc(a){if(0!==(1&a))return F$1=15,1;if(0!==(2&a))return F$1=14,2;if(0!==(4&a))return F$1=13,4;var b=24&a;if(0!==b)return F$1=12,b;if(0!==(a&32))return F$1=11,32;b=192&a;if(0!==b)return F$1=10,b;if(0!==(a&256))return F$1=9,256;b=3584&a;if(0!==b)return F$1=8,b;if(0!==(a&4096))return F$1=7,4096;b=4186112&a;if(0!==b)return F$1=6,b;b=62914560&a;if(0!==b)return F$1=5,b;if(a&67108864)return F$1=4,67108864;if(0!==(a&134217728))return F$1=3,134217728;b=805306368&a;if(0!==b)return F$1=2,b;if(0!==(1073741824&a))return F$1=1,1073741824;
F$1=8;return a}function Sc(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function Tc(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(y(358,a));}}
function Uc(a,b){var c=a.pendingLanes;if(0===c)return F$1=0;var d=0,e=0,f=a.expiredLanes,g=a.suspendedLanes,h=a.pingedLanes;if(0!==f)d=f,e=F$1=15;else if(f=c&134217727,0!==f){var k=f&~g;0!==k?(d=Rc(k),e=F$1):(h&=f,0!==h&&(d=Rc(h),e=F$1));}else f=c&~g,0!==f?(d=Rc(f),e=F$1):0!==h&&(d=Rc(h),e=F$1);if(0===d)return 0;d=31-Vc(d);d=c&((0>d?0:1<<d)<<1)-1;if(0!==b&&b!==d&&0===(b&g)){Rc(b);if(e<=F$1)return b;F$1=e;}b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-Vc(b),e=1<<c,d|=a[c],b&=~e;return d}
function Wc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function Xc(a,b){switch(a){case 15:return 1;case 14:return 2;case 12:return a=Yc(24&~b),0===a?Xc(10,b):a;case 10:return a=Yc(192&~b),0===a?Xc(8,b):a;case 8:return a=Yc(3584&~b),0===a&&(a=Yc(4186112&~b),0===a&&(a=512)),a;case 2:return b=Yc(805306368&~b),0===b&&(b=268435456),b}throw Error(y(358,a));}function Yc(a){return a&-a}function Zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}
function $c(a,b,c){a.pendingLanes|=b;var d=b-1;a.suspendedLanes&=d;a.pingedLanes&=d;a=a.eventTimes;b=31-Vc(b);a[b]=c;}var Vc=Math.clz32?Math.clz32:ad,bd=Math.log,cd=Math.LN2;function ad(a){return 0===a?32:31-(bd(a)/cd|0)|0}var dd=r$1.unstable_UserBlockingPriority,ed=r$1.unstable_runWithPriority,fd=!0;function gd(a,b,c,d){Kb||Ib();var e=hd,f=Kb;Kb=!0;try{Hb(e,a,b,c,d);}finally{(Kb=f)||Mb();}}function id$1(a,b,c,d){ed(dd,hd.bind(null,a,b,c,d));}
function hd(a,b,c,d){if(fd){var e;if((e=0===(b&4))&&0<jc.length&&-1<qc.indexOf(a))a=rc(null,a,b,c,d),jc.push(a);else {var f=yc(a,b,c,d);if(null===f)e&&sc(a,d);else {if(e){if(-1<qc.indexOf(a)){a=rc(f,a,b,c,d);jc.push(a);return}if(uc(f,a,b,c,d))return;sc(a,d);}jd(a,b,d,null,c);}}}}
function yc(a,b,c,d){var e=xb(d);e=wc(e);if(null!==e){var f=Zb(e);if(null===f)e=null;else {var g=f.tag;if(13===g){e=$b(f);if(null!==e)return e;e=null;}else if(3===g){if(f.stateNode.hydrate)return 3===f.tag?f.stateNode.containerInfo:null;e=null;}else f!==e&&(e=null);}}jd(a,b,d,e,c);return null}var kd=null,ld=null,md=null;
function nd(){if(md)return md;var a,b=ld,c=b.length,d,e="value"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}function od(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return !0}function qd(){return !1}
function rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}m(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&
(a.returnValue=!1),this.isDefaultPrevented=pd);},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd);},persist:function(){},isPersistent:pd});return b}
var sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=m({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=m({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if("movementX"in
a)return a.movementX;a!==yd&&(yd&&"mousemove"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return "movementY"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=m({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=m({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=m({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=m({},sd,{clipboardData:function(a){return "clipboardData"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=m({},sd,{data:0}),Ld=rd(Kd),Md={Esc:"Escape",
Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Nd={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",
119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Od={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}
var Qd=m({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if("Unidentified"!==b)return b}return "keypress"===a.type?(a=od(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?Nd[a.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return "keypress"===a.type?od(a):0},keyCode:function(a){return "keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return "keypress"===
a.type?od(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=m({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=m({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=m({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=m({},Ad,{deltaX:function(a){return "deltaX"in a?a.deltaX:"wheelDeltaX"in a?-a.wheelDeltaX:0},
deltaY:function(a){return "deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=fa$1&&"CompositionEvent"in window,be=null;fa$1&&"documentMode"in document&&(be=document.documentMode);var ce=fa$1&&"TextEvent"in window&&!be,de=fa$1&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;
function ge(a,b){switch(a){case "keyup":return -1!==$d.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "focusout":return !0;default:return !1}}function he(a){a=a.detail;return "object"===typeof a&&"data"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case "compositionend":return he(b);case "keypress":if(32!==b.which)return null;fe=!0;return ee;case "textInput":return a=b.data,a===ee&&fe?null:a;default:return null}}
function ke(a,b){if(ie)return "compositionend"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return de&&"ko"!==b.locale?null:b.data;default:return null}}
var le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return "input"===b?!!le[a.type]:"textarea"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,"onChange");0<b.length&&(c=new td("onChange","change",null,c,d),a.push({event:c,listeners:b}));}var pe=null,qe=null;function re(a){se(a,0);}function te(a){var b=ue(a);if(Wa$1(b))return a}
function ve(a,b){if("change"===a)return b}var we=!1;if(fa$1){var xe;if(fa$1){var ye="oninput"in document;if(!ye){var ze=document.createElement("div");ze.setAttribute("oninput","return;");ye="function"===typeof ze.oninput;}xe=ye;}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode);}function Ae(){pe&&(pe.detachEvent("onpropertychange",Be),qe=pe=null);}function Be(a){if("value"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));a=re;if(Kb)a(b);else {Kb=!0;try{Gb(a,b);}finally{Kb=!1,Mb();}}}}
function Ce(a,b,c){"focusin"===a?(Ae(),pe=b,qe=c,pe.attachEvent("onpropertychange",Be)):"focusout"===a&&Ae();}function De(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return te(qe)}function Ee(a,b){if("click"===a)return te(b)}function Fe(a,b){if("input"===a||"change"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He="function"===typeof Object.is?Object.is:Ge,Ie=Object.prototype.hasOwnProperty;
function Je(a,b){if(He(a,b))return !0;if("object"!==typeof a||null===a||"object"!==typeof b||null===b)return !1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return !1;for(d=0;d<c.length;d++)if(!Ie.call(b,c[d])||!He(a[c[d]],b[c[d]]))return !1;return !0}function Ke(a){for(;a&&a.firstChild;)a=a.firstChild;return a}
function Le(a,b){var c=Ke(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return {node:c,offset:b-a};a=d;}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode;}c=void 0;}c=Ke(c);}}function Me(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Me(a,b.parentNode):"contains"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}
function Ne(){for(var a=window,b=Xa$1();b instanceof a.HTMLIFrameElement;){try{var c="string"===typeof b.contentWindow.location.href;}catch(d){c=!1;}if(c)a=b.contentWindow;else break;b=Xa$1(a.document);}return b}function Oe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}
var Pe=fa$1&&"documentMode"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;
function Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa$1(d)||(d=Qe,"selectionStart"in d&&Oe(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Je(Se,d)||(Se=d,d=oe(Re,"onSelect"),0<d.length&&(b=new td("onSelect","select",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)));}
Pc("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),
0);Pc("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1);Pc(Oc,2);for(var Ve="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),We=0;We<Ve.length;We++)Nc.set(Ve[We],0);ea$1("onMouseEnter",["mouseout","mouseover"]);
ea$1("onMouseLeave",["mouseout","mouseover"]);ea$1("onPointerEnter",["pointerout","pointerover"]);ea$1("onPointerLeave",["pointerout","pointerover"]);da$1("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));da$1("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));da$1("onBeforeInput",["compositionend","keypress","textInput","paste"]);da$1("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));
da$1("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));da$1("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Xe="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ye=new Set("cancel close invalid load scroll toggle".split(" ").concat(Xe));
function Ze(a,b,c){var d=a.type||"unknown-event";a.currentTarget=c;Yb(d,b,void 0,a);a.currentTarget=null;}
function se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k;}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k;}}}if(Ub)throw a=Vb,Ub=!1,Vb=null,a;}
function G(a,b){var c=$e(b),d=a+"__bubble";c.has(d)||(af(b,a,2,!1),c.add(d));}var bf="_reactListening"+Math.random().toString(36).slice(2);function cf(a){a[bf]||(a[bf]=!0,ba$1.forEach(function(b){Ye.has(b)||df(b,!1,a,null);df(b,!0,a,null);}));}
function df(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,f=c;"selectionchange"===a&&9!==c.nodeType&&(f=c.ownerDocument);if(null!==d&&!b&&Ye.has(a)){if("scroll"!==a)return;e|=2;f=d;}var g=$e(f),h=a+"__"+(b?"capture":"bubble");g.has(h)||(b&&(e|=4),af(f,a,e,b),g.add(h));}
function af(a,b,c,d){var e=Nc.get(b);switch(void 0===e?2:e){case 0:e=gd;break;case 1:e=id$1;break;default:e=hd;}c=e.bind(null,b,c,a);e=void 0;!Pb||"touchstart"!==b&&"touchmove"!==b&&"wheel"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1);}
function jd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return;}for(;null!==h;){g=wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode;}}d=d.return;}Nb(function(){var d=f,e=xb(c),g=[];
a:{var h=Mc.get(a);if(void 0!==h){var k=td,x=a;switch(a){case "keypress":if(0===od(c))break a;case "keydown":case "keyup":k=Rd;break;case "focusin":x="focus";k=Fd;break;case "focusout":x="blur";k=Fd;break;case "beforeblur":case "afterblur":k=Fd;break;case "click":if(2===c.button)break a;case "auxclick":case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":k=Bd;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":k=
Dd;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":k=Vd;break;case Ic:case Jc:case Kc:k=Hd;break;case Lc:k=Xd;break;case "scroll":k=vd;break;case "wheel":k=Zd;break;case "copy":case "cut":case "paste":k=Jd;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":k=Td;}var w=0!==(b&4),z=!w&&"scroll"===a,u=w?null!==h?h+"Capture":null:h;w=[];for(var t=d,q;null!==
t;){q=t;var v=q.stateNode;5===q.tag&&null!==v&&(q=v,null!==u&&(v=Ob(t,u),null!=v&&w.push(ef(t,v,q))));if(z)break;t=t.return;}0<w.length&&(h=new k(h,x,null,c,e),g.push({event:h,listeners:w}));}}if(0===(b&7)){a:{h="mouseover"===a||"pointerover"===a;k="mouseout"===a||"pointerout"===a;if(h&&0===(b&16)&&(x=c.relatedTarget||c.fromElement)&&(wc(x)||x[ff]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(x=c.relatedTarget||c.toElement,k=d,x=x?wc(x):null,null!==
x&&(z=Zb(x),x!==z||5!==x.tag&&6!==x.tag))x=null;}else k=null,x=d;if(k!==x){w=Bd;v="onMouseLeave";u="onMouseEnter";t="mouse";if("pointerout"===a||"pointerover"===a)w=Td,v="onPointerLeave",u="onPointerEnter",t="pointer";z=null==k?h:ue(k);q=null==x?h:ue(x);h=new w(v,t+"leave",k,c,e);h.target=z;h.relatedTarget=q;v=null;wc(e)===d&&(w=new w(u,t+"enter",x,c,e),w.target=q,w.relatedTarget=z,v=w);z=v;if(k&&x)b:{w=k;u=x;t=0;for(q=w;q;q=gf(q))t++;q=0;for(v=u;v;v=gf(v))q++;for(;0<t-q;)w=gf(w),t--;for(;0<q-t;)u=
gf(u),q--;for(;t--;){if(w===u||null!==u&&w===u.alternate)break b;w=gf(w);u=gf(u);}w=null;}else w=null;null!==k&&hf(g,h,k,w,!1);null!==x&&null!==z&&hf(g,z,x,w,!0);}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if("select"===k||"input"===k&&"file"===h.type)var J=ve;else if(me(h))if(we)J=Fe;else {J=De;var K=Ce;}else (k=h.nodeName)&&"input"===k.toLowerCase()&&("checkbox"===h.type||"radio"===h.type)&&(J=Ee);if(J&&(J=J(a,d))){ne(g,J,c,e);break a}K&&K(a,h,d);"focusout"===a&&(K=h._wrapperState)&&
K.controlled&&"number"===h.type&&bb$1(h,"number",h.value);}K=d?ue(d):window;switch(a){case "focusin":if(me(K)||"true"===K.contentEditable)Qe=K,Re=d,Se=null;break;case "focusout":Se=Re=Qe=null;break;case "mousedown":Te=!0;break;case "contextmenu":case "mouseup":case "dragend":Te=!1;Ue(g,c,e);break;case "selectionchange":if(Pe)break;case "keydown":case "keyup":Ue(g,c,e);}var Q;if(ae)b:{switch(a){case "compositionstart":var L="onCompositionStart";break b;case "compositionend":L="onCompositionEnd";break b;
case "compositionupdate":L="onCompositionUpdate";break b}L=void 0;}else ie?ge(a,c)&&(L="onCompositionEnd"):"keydown"===a&&229===c.keyCode&&(L="onCompositionStart");L&&(de&&"ko"!==c.locale&&(ie||"onCompositionStart"!==L?"onCompositionEnd"===L&&ie&&(Q=nd()):(kd=e,ld="value"in kd?kd.value:kd.textContent,ie=!0)),K=oe(d,L),0<K.length&&(L=new Ld(L,a,null,c,e),g.push({event:L,listeners:K}),Q?L.data=Q:(Q=he(c),null!==Q&&(L.data=Q))));if(Q=ce?je(a,c):ke(a,c))d=oe(d,"onBeforeInput"),0<d.length&&(e=new Ld("onBeforeInput",
"beforeinput",null,c,e),g.push({event:e,listeners:d}),e.data=Q);}se(g,b);});}function ef(a,b,c){return {instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+"Capture",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Ob(a,c),null!=f&&d.unshift(ef(a,f,e)),f=Ob(a,b),null!=f&&d.push(ef(a,f,e)));a=a.return;}return d}function gf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}
function hf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Ob(c,f),null!=k&&g.unshift(ef(c,k,h))):e||(k=Ob(c,f),null!=k&&g.push(ef(c,k,h))));c=c.return;}0!==g.length&&a.push({event:b,listeners:g});}function jf(){}var kf=null,lf=null;function mf(a,b){switch(a){case "button":case "input":case "select":case "textarea":return !!b.autoFocus}return !1}
function nf(a,b){return "textarea"===a||"option"===a||"noscript"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var of="function"===typeof setTimeout?setTimeout:void 0,pf="function"===typeof clearTimeout?clearTimeout:void 0;function qf(a){1===a.nodeType?a.textContent="":9===a.nodeType&&(a=a.body,null!=a&&(a.textContent=""));}
function rf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}function sf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if("$"===c||"$!"===c||"$?"===c){if(0===b)return a;b--;}else "/$"===c&&b++;}a=a.previousSibling;}return null}var tf=0;function uf(a){return {$$typeof:Ga$1,toString:a,valueOf:a}}var vf=Math.random().toString(36).slice(2),wf="__reactFiber$"+vf,xf="__reactProps$"+vf,ff="__reactContainer$"+vf,yf="__reactEvents$"+vf;
function wc(a){var b=a[wf];if(b)return b;for(var c=a.parentNode;c;){if(b=c[ff]||c[wf]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=sf(a);null!==a;){if(c=a[wf])return c;a=sf(a);}return b}a=c;c=a.parentNode;}return null}function Cb(a){a=a[wf]||a[ff];return !a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(y(33));}function Db(a){return a[xf]||null}
function $e(a){var b=a[yf];void 0===b&&(b=a[yf]=new Set);return b}var zf=[],Af=-1;function Bf(a){return {current:a}}function H(a){0>Af||(a.current=zf[Af],zf[Af]=null,Af--);}function I$1(a,b){Af++;zf[Af]=a.current;a.current=b;}var Cf={},M$1=Bf(Cf),N$1=Bf(!1),Df=Cf;
function Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function Ff(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Gf(){H(N$1);H(M$1);}function Hf(a,b,c){if(M$1.current!==Cf)throw Error(y(168));I$1(M$1,b);I$1(N$1,c);}
function If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if("function"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(y(108,Ra$1(b)||"Unknown",e));return m({},c,d)}function Jf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Cf;Df=M$1.current;I$1(M$1,a);I$1(N$1,N$1.current);return !0}function Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(y(169));c?(a=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=a,H(N$1),H(M$1),I$1(M$1,a)):H(N$1);I$1(N$1,c);}
var Lf=null,Mf=null,Nf=r$1.unstable_runWithPriority,Of=r$1.unstable_scheduleCallback,Pf=r$1.unstable_cancelCallback,Qf=r$1.unstable_shouldYield,Rf=r$1.unstable_requestPaint,Sf=r$1.unstable_now,Tf=r$1.unstable_getCurrentPriorityLevel,Uf=r$1.unstable_ImmediatePriority,Vf=r$1.unstable_UserBlockingPriority,Wf=r$1.unstable_NormalPriority,Xf=r$1.unstable_LowPriority,Yf=r$1.unstable_IdlePriority,Zf={},$f=void 0!==Rf?Rf:function(){},ag=null,bg=null,cg=!1,dg=Sf(),O$1=1E4>dg?Sf:function(){return Sf()-dg};
function eg(){switch(Tf()){case Uf:return 99;case Vf:return 98;case Wf:return 97;case Xf:return 96;case Yf:return 95;default:throw Error(y(332));}}function fg(a){switch(a){case 99:return Uf;case 98:return Vf;case 97:return Wf;case 96:return Xf;case 95:return Yf;default:throw Error(y(332));}}function gg(a,b){a=fg(a);return Nf(a,b)}function hg(a,b,c){a=fg(a);return Of(a,b,c)}function ig(){if(null!==bg){var a=bg;bg=null;Pf(a);}jg();}
function jg(){if(!cg&&null!==ag){cg=!0;var a=0;try{var b=ag;gg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});ag=null;}catch(c){throw null!==ag&&(ag=ag.slice(a+1)),Of(Uf,ig),c;}finally{cg=!1;}}}var kg=ra$1.ReactCurrentBatchConfig;function lg(a,b){if(a&&a.defaultProps){b=m({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var mg=Bf(null),ng=null,og=null,pg=null;function qg(){pg=og=ng=null;}
function rg(a){var b=mg.current;H(mg);a.type._context._currentValue=b;}function sg(a,b){for(;null!==a;){var c=a.alternate;if((a.childLanes&b)===b)if(null===c||(c.childLanes&b)===b)break;else c.childLanes|=b;else a.childLanes|=b,null!==c&&(c.childLanes|=b);a=a.return;}}function tg(a,b){ng=a;pg=og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(ug=!0),a.firstContext=null);}
function vg(a,b){if(pg!==a&&!1!==b&&0!==b){if("number"!==typeof b||1073741823===b)pg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===og){if(null===ng)throw Error(y(308));og=b;ng.dependencies={lanes:0,firstContext:b,responders:null};}else og=og.next=b;}return a._currentValue}var wg=!1;function xg(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null};}
function yg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects});}function zg(a,b){return {eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}function Ag(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b;}}
function Bg(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next;}while(null!==c);null===f?e=f=b:f=f.next=b;}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=
b;c.lastBaseUpdate=b;}
function Cg(a,b,c,d){var e=a.updateQueue;wg=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;if(null!==n){n=n.updateQueue;var A=n.lastBaseUpdate;A!==g&&(null===A?n.firstBaseUpdate=l:A.next=l,n.lastBaseUpdate=k);}}if(null!==f){A=e.baseState;g=0;n=l=k=null;do{h=f.lane;var p=f.eventTime;if((d&h)===h){null!==n&&(n=n.next={eventTime:p,lane:0,tag:f.tag,payload:f.payload,callback:f.callback,
next:null});a:{var C=a,x=f;h=b;p=c;switch(x.tag){case 1:C=x.payload;if("function"===typeof C){A=C.call(p,A,h);break a}A=C;break a;case 3:C.flags=C.flags&-4097|64;case 0:C=x.payload;h="function"===typeof C?C.call(p,A,h):C;if(null===h||void 0===h)break a;A=m({},A,h);break a;case 2:wg=!0;}}null!==f.callback&&(a.flags|=32,h=e.effects,null===h?e.effects=[f]:h.push(f));}else p={eventTime:p,lane:h,tag:f.tag,payload:f.payload,callback:f.callback,next:null},null===n?(l=n=p,k=A):n=n.next=p,g|=h;f=f.next;if(null===
f)if(h=e.shared.pending,null===h)break;else f=h.next,h.next=null,e.lastBaseUpdate=h,e.shared.pending=null;}while(1);null===n&&(k=A);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;Dg|=g;a.lanes=g;a.memoizedState=A;}}function Eg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if("function"!==typeof e)throw Error(y(191,e));e.call(d);}}}var Fg=(new aa$1.Component).refs;
function Gg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:m({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c);}
var Kg={isMounted:function(a){return (a=a._reactInternals)?Zb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d);},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d);},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=Hg(),d=Ig(a),e=zg(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=
b);Ag(a,e);Jg(a,d,c);}};function Lg(a,b,c,d,e,f,g){a=a.stateNode;return "function"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Je(c,d)||!Je(e,f):!0}
function Mg(a,b,c){var d=!1,e=Cf;var f=b.contextType;"object"===typeof f&&null!==f?f=vg(f):(e=Ff(b)?Df:M$1.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Kg;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}
function Ng(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Kg.enqueueReplaceState(b,b.state,null);}
function Og(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Fg;xg(a);var f=b.contextType;"object"===typeof f&&null!==f?e.context=vg(f):(f=Ff(b)?Df:M$1.current,e.context=Ef(a,f));Cg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;"function"===typeof f&&(Gg(a,b,f,c),e.state=a.memoizedState);"function"===typeof b.getDerivedStateFromProps||"function"===typeof e.getSnapshotBeforeUpdate||"function"!==typeof e.UNSAFE_componentWillMount&&"function"!==typeof e.componentWillMount||
(b=e.state,"function"===typeof e.componentWillMount&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Kg.enqueueReplaceState(e,e.state,null),Cg(a,c,e,d),e.state=a.memoizedState);"function"===typeof e.componentDidMount&&(a.flags|=4);}var Pg=Array.isArray;
function Qg(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(y(309));var d=c.stateNode;}if(!d)throw Error(y(147,a));var e=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Fg&&(b=d.refs={});null===a?delete b[e]:b[e]=a;};b._stringRef=e;return b}if("string"!==typeof a)throw Error(y(284));if(!c._owner)throw Error(y(290,a));}return a}
function Rg(a,b){if("textarea"!==a.type)throw Error(y(31,"[object Object]"===Object.prototype.toString.call(b)?"object with keys {"+Object.keys(b).join(", ")+"}":b));}
function Sg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.flags=8;}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Tg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags=2,
c):d;b.flags=2;return c}function g(b){a&&null===b.alternate&&(b.flags=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Ug(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Qg(a,b,c),d.return=a,d;d=Vg(c.type,c.key,c.props,null,a.mode,d);d.ref=Qg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=
Wg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=Xg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function A(a,b,c){if("string"===typeof b||"number"===typeof b)return b=Ug(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case sa$1:return c=Vg(b.type,b.key,b.props,null,a.mode,c),c.ref=Qg(a,null,b),c.return=a,c;case ta$1:return b=Wg(b,a.mode,c),b.return=a,b}if(Pg(b)||La$1(b))return b=Xg(b,
a.mode,c,null),b.return=a,b;Rg(a,b);}return null}function p(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case sa$1:return c.key===e?c.type===ua$1?n(a,b,c.props.children,d,e):k(a,b,c,d):null;case ta$1:return c.key===e?l(a,b,c,d):null}if(Pg(c)||La$1(c))return null!==e?null:n(a,b,c,d,null);Rg(a,c);}return null}function C(a,b,c,d,e){if("string"===typeof d||"number"===typeof d)return a=a.get(c)||
null,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case sa$1:return a=a.get(null===d.key?c:d.key)||null,d.type===ua$1?n(b,a,d.props.children,e,d.key):k(b,a,d,e);case ta$1:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Pg(d)||La$1(d))return a=a.get(c)||null,n(b,a,d,e,null);Rg(b,d);}return null}function x(e,g,h,k){for(var l=null,t=null,u=g,z=g=0,q=null;null!==u&&z<h.length;z++){u.index>z?(q=u,u=null):q=u.sibling;var n=p(e,u,h[z],k);if(null===n){null===u&&(u=q);break}a&&u&&null===
n.alternate&&b(e,u);g=f(n,g,z);null===t?l=n:t.sibling=n;t=n;u=q;}if(z===h.length)return c(e,u),l;if(null===u){for(;z<h.length;z++)u=A(e,h[z],k),null!==u&&(g=f(u,g,z),null===t?l=u:t.sibling=u,t=u);return l}for(u=d(e,u);z<h.length;z++)q=C(u,e,z,h[z],k),null!==q&&(a&&null!==q.alternate&&u.delete(null===q.key?z:q.key),g=f(q,g,z),null===t?l=q:t.sibling=q,t=q);a&&u.forEach(function(a){return b(e,a)});return l}function w(e,g,h,k){var l=La$1(h);if("function"!==typeof l)throw Error(y(150));h=l.call(h);if(null==
h)throw Error(y(151));for(var t=l=null,u=g,z=g=0,q=null,n=h.next();null!==u&&!n.done;z++,n=h.next()){u.index>z?(q=u,u=null):q=u.sibling;var w=p(e,u,n.value,k);if(null===w){null===u&&(u=q);break}a&&u&&null===w.alternate&&b(e,u);g=f(w,g,z);null===t?l=w:t.sibling=w;t=w;u=q;}if(n.done)return c(e,u),l;if(null===u){for(;!n.done;z++,n=h.next())n=A(e,n.value,k),null!==n&&(g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);return l}for(u=d(e,u);!n.done;z++,n=h.next())n=C(u,e,z,n.value,k),null!==n&&(a&&null!==n.alternate&&
u.delete(null===n.key?z:n.key),g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);a&&u.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k="object"===typeof f&&null!==f&&f.type===ua$1&&null===f.key;k&&(f=f.props.children);var l="object"===typeof f&&null!==f;if(l)switch(f.$$typeof){case sa$1:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ua$1){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,k.sibling);
d=e(k,f.props);d.ref=Qg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling;}f.type===ua$1?(d=Xg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Vg(f.type,f.key,f.props,null,a.mode,h),h.ref=Qg(a,d,f),h.return=a,a=h);}return g(a);case ta$1:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else {c(a,d);break}else b(a,d);d=d.sibling;}d=
Wg(f,a.mode,h);d.return=a;a=d;}return g(a)}if("string"===typeof f||"number"===typeof f)return f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Ug(f,a.mode,h),d.return=a,a=d),g(a);if(Pg(f))return x(a,d,f,h);if(La$1(f))return w(a,d,f,h);l&&Rg(a,f);if("undefined"===typeof f&&!k)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(y(152,Ra$1(a.type)||"Component"));}return c(a,d)}}var Yg=Sg(!0),Zg=Sg(!1),$g={},ah=Bf($g),bh=Bf($g),ch=Bf($g);
function dh(a){if(a===$g)throw Error(y(174));return a}function eh(a,b){I$1(ch,b);I$1(bh,a);I$1(ah,$g);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:mb(null,"");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=mb(b,a);}H(ah);I$1(ah,b);}function fh(){H(ah);H(bh);H(ch);}function gh(a){dh(ch.current);var b=dh(ah.current);var c=mb(b,a.type);b!==c&&(I$1(bh,a),I$1(ah,c));}function hh(a){bh.current===a&&(H(ah),H(bh));}var P$1=Bf(0);
function ih(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||"$?"===c.data||"$!"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return;}b.sibling.return=b.return;b=b.sibling;}return null}var jh=null,kh=null,lh=!1;
function mh(a,b){var c=nh(5,null,null,0);c.elementType="DELETED";c.type="DELETED";c.stateNode=b;c.return=a;c.flags=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c;}function oh(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return !1;default:return !1}}
function ph(a){if(lh){var b=kh;if(b){var c=b;if(!oh(a,b)){b=rf(c.nextSibling);if(!b||!oh(a,b)){a.flags=a.flags&-1025|2;lh=!1;jh=a;return}mh(jh,c);}jh=a;kh=rf(b.firstChild);}else a.flags=a.flags&-1025|2,lh=!1,jh=a;}}function qh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;jh=a;}
function rh(a){if(a!==jh)return !1;if(!lh)return qh(a),lh=!0,!1;var b=a.type;if(5!==a.tag||"head"!==b&&"body"!==b&&!nf(b,a.memoizedProps))for(b=kh;b;)mh(a,b),b=rf(b.nextSibling);qh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(y(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if("/$"===c){if(0===b){kh=rf(a.nextSibling);break a}b--;}else "$"!==c&&"$!"!==c&&"$?"!==c||b++;}a=a.nextSibling;}kh=null;}}else kh=jh?rf(a.stateNode.nextSibling):null;return !0}
function sh(){kh=jh=null;lh=!1;}var th=[];function uh(){for(var a=0;a<th.length;a++)th[a]._workInProgressVersionPrimary=null;th.length=0;}var vh=ra$1.ReactCurrentDispatcher,wh=ra$1.ReactCurrentBatchConfig,xh=0,R$1=null,S$1=null,T$1=null,yh=!1,zh=!1;function Ah(){throw Error(y(321));}function Bh(a,b){if(null===b)return !1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return !1;return !0}
function Ch(a,b,c,d,e,f){xh=f;R$1=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;vh.current=null===a||null===a.memoizedState?Dh:Eh;a=c(d,e);if(zh){f=0;do{zh=!1;if(!(25>f))throw Error(y(301));f+=1;T$1=S$1=null;b.updateQueue=null;vh.current=Fh;a=c(d,e);}while(zh)}vh.current=Gh;b=null!==S$1&&null!==S$1.next;xh=0;T$1=S$1=R$1=null;yh=!1;if(b)throw Error(y(300));return a}function Hh(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===T$1?R$1.memoizedState=T$1=a:T$1=T$1.next=a;return T$1}
function Ih(){if(null===S$1){var a=R$1.alternate;a=null!==a?a.memoizedState:null;}else a=S$1.next;var b=null===T$1?R$1.memoizedState:T$1.next;if(null!==b)T$1=b,S$1=a;else {if(null===a)throw Error(y(310));S$1=a;a={memoizedState:S$1.memoizedState,baseState:S$1.baseState,baseQueue:S$1.baseQueue,queue:S$1.queue,next:null};null===T$1?R$1.memoizedState=T$1=a:T$1=T$1.next=a;}return T$1}function Jh(a,b){return "function"===typeof b?b(a):b}
function Kh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=S$1,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g;}d.baseQueue=e=f;c.pending=null;}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.lane;if((xh&l)===l)null!==h&&(h=h.next={lane:0,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),d=k.eagerReducer===a?k.eagerState:a(d,k.action);else {var n={lane:l,action:k.action,eagerReducer:k.eagerReducer,
eagerState:k.eagerState,next:null};null===h?(g=h=n,f=d):h=h.next=n;R$1.lanes|=l;Dg|=l;}k=k.next;}while(null!==k&&k!==e);null===h?f=d:h.next=g;He(d,b.memoizedState)||(ug=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d;}return [b.memoizedState,c.dispatch]}
function Lh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f;}return [f,d]}
function Mh(a,b,c){var d=b._getVersion;d=d(b._source);var e=b._workInProgressVersionPrimary;if(null!==e)a=e===d;else if(a=a.mutableReadLanes,a=(xh&a)===a)b._workInProgressVersionPrimary=d,th.push(b);if(a)return c(b._source);th.push(b);throw Error(y(350));}
function Nh(a,b,c,d){var e=U$1;if(null===e)throw Error(y(349));var f=b._getVersion,g=f(b._source),h=vh.current,k=h.useState(function(){return Mh(e,b,c)}),l=k[1],n=k[0];k=T$1;var A=a.memoizedState,p=A.refs,C=p.getSnapshot,x=A.source;A=A.subscribe;var w=R$1;a.memoizedState={refs:p,source:b,subscribe:d};h.useEffect(function(){p.getSnapshot=c;p.setSnapshot=l;var a=f(b._source);if(!He(g,a)){a=c(b._source);He(n,a)||(l(a),a=Ig(w),e.mutableReadLanes|=a&e.pendingLanes);a=e.mutableReadLanes;e.entangledLanes|=a;for(var d=
e.entanglements,h=a;0<h;){var k=31-Vc(h),v=1<<k;d[k]|=a;h&=~v;}}},[c,b,d]);h.useEffect(function(){return d(b._source,function(){var a=p.getSnapshot,c=p.setSnapshot;try{c(a(b._source));var d=Ig(w);e.mutableReadLanes|=d&e.pendingLanes;}catch(q){c(function(){throw q;});}})},[b,d]);He(C,c)&&He(x,b)&&He(A,d)||(a={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:n},a.dispatch=l=Oh.bind(null,R$1,a),k.queue=a,k.baseQueue=null,n=Mh(e,b,c),k.memoizedState=k.baseState=n);return n}
function Ph(a,b,c){var d=Ih();return Nh(d,a,b,c)}function Qh(a){var b=Hh();"function"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:a};a=a.dispatch=Oh.bind(null,R$1,a);return [b.memoizedState,a]}
function Rh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=R$1.updateQueue;null===b?(b={lastEffect:null},R$1.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function Sh(a){var b=Hh();a={current:a};return b.memoizedState=a}function Th(){return Ih().memoizedState}function Uh(a,b,c,d){var e=Hh();R$1.flags|=a;e.memoizedState=Rh(1|b,c,void 0,void 0===d?null:d);}
function Vh(a,b,c,d){var e=Ih();d=void 0===d?null:d;var f=void 0;if(null!==S$1){var g=S$1.memoizedState;f=g.destroy;if(null!==d&&Bh(d,g.deps)){Rh(b,c,f,d);return}}R$1.flags|=a;e.memoizedState=Rh(1|b,c,f,d);}function Wh(a,b){return Uh(516,4,a,b)}function Xh(a,b){return Vh(516,4,a,b)}function Yh(a,b){return Vh(4,2,a,b)}function Zh(a,b){if("function"===typeof b)return a=a(),b(a),function(){b(null);};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null;}}
function $h(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,2,Zh.bind(null,b,a),c)}function ai(){}function bi(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}function ci(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}
function di(a,b){var c=eg();gg(98>c?98:c,function(){a(!0);});gg(97<c?97:c,function(){var c=wh.transition;wh.transition=1;try{a(!1),b();}finally{wh.transition=c;}});}
function Oh(a,b,c){var d=Hg(),e=Ig(a),f={lane:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.pending;null===g?f.next=f:(f.next=g.next,g.next=f);b.pending=f;g=a.alternate;if(a===R$1||null!==g&&g===R$1)zh=yh=!0;else {if(0===a.lanes&&(null===g||0===g.lanes)&&(g=b.lastRenderedReducer,null!==g))try{var h=b.lastRenderedState,k=g(h,c);f.eagerReducer=g;f.eagerState=k;if(He(k,h))return}catch(l){}finally{}Jg(a,e,d);}}
var Gh={readContext:vg,useCallback:Ah,useContext:Ah,useEffect:Ah,useImperativeHandle:Ah,useLayoutEffect:Ah,useMemo:Ah,useReducer:Ah,useRef:Ah,useState:Ah,useDebugValue:Ah,useDeferredValue:Ah,useTransition:Ah,useMutableSource:Ah,useOpaqueIdentifier:Ah,unstable_isNewReconciler:!1},Dh={readContext:vg,useCallback:function(a,b){Hh().memoizedState=[a,void 0===b?null:b];return a},useContext:vg,useEffect:Wh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Uh(4,2,Zh.bind(null,
b,a),c)},useLayoutEffect:function(a,b){return Uh(4,2,a,b)},useMemo:function(a,b){var c=Hh();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Hh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Oh.bind(null,R$1,a);return [d.memoizedState,a]},useRef:Sh,useState:Qh,useDebugValue:ai,useDeferredValue:function(a){var b=Qh(a),c=b[0],d=b[1];Wh(function(){var b=wh.transition;
wh.transition=1;try{d(a);}finally{wh.transition=b;}},[a]);return c},useTransition:function(){var a=Qh(!1),b=a[0];a=di.bind(null,a[1]);Sh(a);return [a,b]},useMutableSource:function(a,b,c){var d=Hh();d.memoizedState={refs:{getSnapshot:b,setSnapshot:null},source:a,subscribe:c};return Nh(d,a,b,c)},useOpaqueIdentifier:function(){if(lh){var a=!1,b=uf(function(){a||(a=!0,c("r:"+(tf++).toString(36)));throw Error(y(355));}),c=Qh(b)[1];0===(R$1.mode&2)&&(R$1.flags|=516,Rh(5,function(){c("r:"+(tf++).toString(36));},
void 0,null));return b}b="r:"+(tf++).toString(36);Qh(b);return b},unstable_isNewReconciler:!1},Eh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Kh,useRef:Th,useState:function(){return Kh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Kh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a);}finally{wh.transition=b;}},[a]);return c},useTransition:function(){var a=Kh(Jh)[0];return [Th().current,
a]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Kh(Jh)[0]},unstable_isNewReconciler:!1},Fh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Lh,useRef:Th,useState:function(){return Lh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Lh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a);}finally{wh.transition=b;}},[a]);return c},useTransition:function(){var a=Lh(Jh)[0];return [Th().current,
a]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Lh(Jh)[0]},unstable_isNewReconciler:!1},ei=ra$1.ReactCurrentOwner,ug=!1;function fi(a,b,c,d){b.child=null===a?Zg(b,null,c,d):Yg(b,a.child,c,d);}function gi(a,b,c,d,e){c=c.render;var f=b.ref;tg(b,e);d=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,d,e);return b.child}
function ii(a,b,c,d,e,f){if(null===a){var g=c.type;if("function"===typeof g&&!ji(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ki(a,b,g,d,e,f);a=Vg(c.type,null,d,b,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(0===(e&f)&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:Je,c(e,d)&&a.ref===b.ref))return hi(a,b,f);b.flags|=1;a=Tg(g,d);a.ref=b.ref;a.return=b;return b.child=a}
function ki(a,b,c,d,e,f){if(null!==a&&Je(a.memoizedProps,d)&&a.ref===b.ref)if(ug=!1,0!==(f&e))0!==(a.flags&16384)&&(ug=!0);else return b.lanes=a.lanes,hi(a,b,f);return li(a,b,c,d,f)}
function mi(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if("hidden"===d.mode||"unstable-defer-without-hiding"===d.mode)if(0===(b.mode&4))b.memoizedState={baseLanes:0},ni(b,c);else if(0!==(c&1073741824))b.memoizedState={baseLanes:0},ni(b,null!==f?f.baseLanes:c);else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a},ni(b,a),null;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,ni(b,d);fi(a,b,e,c);return b.child}
function oi(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=128;}function li(a,b,c,d,e){var f=Ff(c)?Df:M$1.current;f=Ef(b,f);tg(b,e);c=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,c,e);return b.child}
function pi(a,b,c,d,e){if(Ff(c)){var f=!0;Jf(b);}else f=!1;tg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),Mg(b,c,d),Og(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;"object"===typeof l&&null!==l?l=vg(l):(l=Ff(c)?Df:M$1.current,l=Ef(b,l));var n=c.getDerivedStateFromProps,A="function"===typeof n||"function"===typeof g.getSnapshotBeforeUpdate;A||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&
"function"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Ng(b,g,d,l);wg=!1;var p=b.memoizedState;g.state=p;Cg(b,d,g,e);k=b.memoizedState;h!==d||p!==k||N$1.current||wg?("function"===typeof n&&(Gg(b,c,n,d),k=b.memoizedState),(h=wg||Lg(b,c,h,d,p,k,l))?(A||"function"!==typeof g.UNSAFE_componentWillMount&&"function"!==typeof g.componentWillMount||("function"===typeof g.componentWillMount&&g.componentWillMount(),"function"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),"function"===
typeof g.componentDidMount&&(b.flags|=4)):("function"===typeof g.componentDidMount&&(b.flags|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):("function"===typeof g.componentDidMount&&(b.flags|=4),d=!1);}else {g=b.stateNode;yg(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:lg(b.type,h);g.props=l;A=b.pendingProps;p=g.context;k=c.contextType;"object"===typeof k&&null!==k?k=vg(k):(k=Ff(c)?Df:M$1.current,k=Ef(b,k));var C=c.getDerivedStateFromProps;(n="function"===typeof C||
"function"===typeof g.getSnapshotBeforeUpdate)||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||(h!==A||p!==k)&&Ng(b,g,d,k);wg=!1;p=b.memoizedState;g.state=p;Cg(b,d,g,e);var x=b.memoizedState;h!==A||p!==x||N$1.current||wg?("function"===typeof C&&(Gg(b,c,C,d),x=b.memoizedState),(l=wg||Lg(b,c,l,d,p,x,k))?(n||"function"!==typeof g.UNSAFE_componentWillUpdate&&"function"!==typeof g.componentWillUpdate||("function"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,
x,k),"function"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,k)),"function"===typeof g.componentDidUpdate&&(b.flags|=4),"function"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=256)):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=k,d=l):("function"!==typeof g.componentDidUpdate||
h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),d=!1);}return qi(a,b,c,d,f,e)}
function qi(a,b,c,d,e,f){oi(a,b);var g=0!==(b.flags&64);if(!d&&!g)return e&&Kf(b,c,!1),hi(a,b,f);d=b.stateNode;ei.current=b;var h=g&&"function"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Yg(b,a.child,null,f),b.child=Yg(b,null,h,f)):fi(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function ri(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);eh(a,b.containerInfo);}
var si={dehydrated:null,retryLane:0};
function ti(a,b,c){var d=b.pendingProps,e=P$1.current,f=!1,g;(g=0!==(b.flags&64))||(g=null!==a&&null===a.memoizedState?!1:0!==(e&2));g?(f=!0,b.flags&=-65):null!==a&&null===a.memoizedState||void 0===d.fallback||!0===d.unstable_avoidThisFallback||(e|=1);I$1(P$1,e&1);if(null===a){void 0!==d.fallback&&ph(b);a=d.children;e=d.fallback;if(f)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=si,a;if("number"===typeof d.unstable_expectedLoadTime)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},
b.memoizedState=si,b.lanes=33554432,a;c=vi({mode:"visible",children:a},b.mode,c,null);c.return=b;return b.child=c}if(null!==a.memoizedState){if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:
{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}function ui(a,b,c,d){var e=a.mode,f=a.child;b={mode:"hidden",children:b};0===(e&2)&&null!==f?(f.childLanes=0,f.pendingProps=b):f=vi(b,e,0,null);c=Xg(c,e,d,null);f.return=a;c.return=a;f.sibling=c;a.child=f;return c}
function xi(a,b,c,d){var e=a.child;a=e.sibling;c=Tg(e,{mode:"visible",children:c});0===(b.mode&2)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(a.nextEffect=null,a.flags=8,b.firstEffect=b.lastEffect=a);return b.child=c}
function wi(a,b,c,d,e){var f=b.mode,g=a.child;a=g.sibling;var h={mode:"hidden",children:c};0===(f&2)&&b.child!==g?(c=b.child,c.childLanes=0,c.pendingProps=h,g=c.lastEffect,null!==g?(b.firstEffect=c.firstEffect,b.lastEffect=g,g.nextEffect=null):b.firstEffect=b.lastEffect=null):c=Tg(g,h);null!==a?d=Tg(a,d):(d=Xg(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function yi(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);sg(a.return,b);}
function zi(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailMode=e,g.lastEffect=f);}
function Ai(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;fi(a,b,d.children,c);d=P$1.current;if(0!==(d&2))d=d&1|2,b.flags|=64;else {if(null!==a&&0!==(a.flags&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&yi(a,c);else if(19===a.tag)yi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return;}a.sibling.return=a.return;a=a.sibling;}d&=1;}I$1(P$1,d);if(0===(b.mode&2))b.memoizedState=
null;else switch(e){case "forwards":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===ih(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);zi(b,!1,e,c,f,b.lastEffect);break;case "backwards":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===ih(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a;}zi(b,!0,c,null,f,b.lastEffect);break;case "together":zi(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null;}return b.child}
function hi(a,b,c){null!==a&&(b.dependencies=a.dependencies);Dg|=b.lanes;if(0!==(c&b.childLanes)){if(null!==a&&b.child!==a.child)throw Error(y(153));if(null!==b.child){a=b.child;c=Tg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Tg(a,a.pendingProps),c.return=b;c.sibling=null;}return b.child}return null}var Bi,Ci,Di,Ei;
Bi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;}c.sibling.return=c.return;c=c.sibling;}};Ci=function(){};
Di=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;dh(ah.current);var f=null;switch(c){case "input":e=Ya$1(a,e);d=Ya$1(a,d);f=[];break;case "option":e=eb(a,e);d=eb(a,d);f=[];break;case "select":e=m({},e,{value:void 0});d=m({},d,{value:void 0});f=[];break;case "textarea":e=gb(a,e);d=gb(a,d);f=[];break;default:"function"!==typeof e.onClick&&"function"===typeof d.onClick&&(a.onclick=jf);}vb(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if("style"===
l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&(c||(c={}),c[g]="");}else "dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(ca$1.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if("style"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]="");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||
(c={}),c[g]=k[g]);}else c||(f||(f=[]),f.push(l,c)),c=k;else "dangerouslySetInnerHTML"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):"children"===l?"string"!==typeof k&&"number"!==typeof k||(f=f||[]).push(l,""+k):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(ca$1.hasOwnProperty(l)?(null!=k&&"onScroll"===l&&G("scroll",a),f||h===k||(f=[])):"object"===typeof k&&null!==k&&k.$$typeof===Ga$1?k.toString():(f=f||[]).push(l,k));}c&&(f=f||[]).push("style",
c);var l=f;if(b.updateQueue=l)b.flags|=4;}};Ei=function(a,b,c,d){c!==d&&(b.flags|=4);};function Fi(a,b){if(!lh)switch(a.tailMode){case "hidden":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case "collapsed":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null;}}
function Gi(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return Ff(b.type)&&Gf(),null;case 3:fh();H(N$1);H(M$1);uh();d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)rh(b)?b.flags|=4:d.hydrate||(b.flags|=256);Ci(b);return null;case 5:hh(b);var e=dh(ch.current);c=b.type;if(null!==a&&null!=b.stateNode)Di(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=128);else {if(!d){if(null===
b.stateNode)throw Error(y(166));return null}a=dh(ah.current);if(rh(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[wf]=b;d[xf]=f;switch(c){case "dialog":G("cancel",d);G("close",d);break;case "iframe":case "object":case "embed":G("load",d);break;case "video":case "audio":for(a=0;a<Xe.length;a++)G(Xe[a],d);break;case "source":G("error",d);break;case "img":case "image":case "link":G("error",d);G("load",d);break;case "details":G("toggle",d);break;case "input":Za$1(d,f);G("invalid",d);break;case "select":d._wrapperState=
{wasMultiple:!!f.multiple};G("invalid",d);break;case "textarea":hb(d,f),G("invalid",d);}vb(c,f);a=null;for(var g in f)f.hasOwnProperty(g)&&(e=f[g],"children"===g?"string"===typeof e?d.textContent!==e&&(a=["children",e]):"number"===typeof e&&d.textContent!==""+e&&(a=["children",""+e]):ca$1.hasOwnProperty(g)&&null!=e&&"onScroll"===g&&G("scroll",d));switch(c){case "input":Va$1(d);cb$1(d,f,!0);break;case "textarea":Va$1(d);jb(d);break;case "select":case "option":break;default:"function"===typeof f.onClick&&(d.onclick=
jf);}d=a;b.updateQueue=d;null!==d&&(b.flags|=4);}else {g=9===e.nodeType?e:e.ownerDocument;a===kb.html&&(a=lb(c));a===kb.html?"script"===c?(a=g.createElement("div"),a.innerHTML="<script>\x3c/script>",a=a.removeChild(a.firstChild)):"string"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),"select"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[wf]=b;a[xf]=d;Bi(a,b,!1,!1);b.stateNode=a;g=wb(c,d);switch(c){case "dialog":G("cancel",a);G("close",a);
e=d;break;case "iframe":case "object":case "embed":G("load",a);e=d;break;case "video":case "audio":for(e=0;e<Xe.length;e++)G(Xe[e],a);e=d;break;case "source":G("error",a);e=d;break;case "img":case "image":case "link":G("error",a);G("load",a);e=d;break;case "details":G("toggle",a);e=d;break;case "input":Za$1(a,d);e=Ya$1(a,d);G("invalid",a);break;case "option":e=eb(a,d);break;case "select":a._wrapperState={wasMultiple:!!d.multiple};e=m({},d,{value:void 0});G("invalid",a);break;case "textarea":hb(a,d);e=
gb(a,d);G("invalid",a);break;default:e=d;}vb(c,e);var h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];"style"===f?tb(a,k):"dangerouslySetInnerHTML"===f?(k=k?k.__html:void 0,null!=k&&ob(a,k)):"children"===f?"string"===typeof k?("textarea"!==c||""!==k)&&pb(a,k):"number"===typeof k&&pb(a,""+k):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(ca$1.hasOwnProperty(f)?null!=k&&"onScroll"===f&&G("scroll",a):null!=k&&qa$1(a,f,k,g));}switch(c){case "input":Va$1(a);cb$1(a,d,!1);
break;case "textarea":Va$1(a);jb(a);break;case "option":null!=d.value&&a.setAttribute("value",""+Sa$1(d.value));break;case "select":a.multiple=!!d.multiple;f=d.value;null!=f?fb$1(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb$1(a,!!d.multiple,d.defaultValue,!0);break;default:"function"===typeof e.onClick&&(a.onclick=jf);}mf(c,d)&&(b.flags|=4);}null!==b.ref&&(b.flags|=128);}return null;case 6:if(a&&null!=b.stateNode)Ei(a,b,a.memoizedProps,d);else {if("string"!==typeof d&&null===b.stateNode)throw Error(y(166));
c=dh(ch.current);dh(ah.current);rh(b)?(d=b.stateNode,c=b.memoizedProps,d[wf]=b,d.nodeValue!==c&&(b.flags|=4)):(d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[wf]=b,b.stateNode=d);}return null;case 13:H(P$1);d=b.memoizedState;if(0!==(b.flags&64))return b.lanes=c,b;d=null!==d;c=!1;null===a?void 0!==b.memoizedProps.fallback&&rh(b):c=null!==a.memoizedState;if(d&&!c&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(P$1.current&1))0===V$1&&(V$1=3);else {if(0===V$1||3===V$1)V$1=
4;null===U$1||0===(Dg&134217727)&&0===(Hi&134217727)||Ii(U$1,W$1);}if(d||c)b.flags|=4;return null;case 4:return fh(),Ci(b),null===a&&cf(b.stateNode.containerInfo),null;case 10:return rg(b),null;case 17:return Ff(b.type)&&Gf(),null;case 19:H(P$1);d=b.memoizedState;if(null===d)return null;f=0!==(b.flags&64);g=d.rendering;if(null===g)if(f)Fi(d,!1);else {if(0!==V$1||null!==a&&0!==(a.flags&64))for(a=b.child;null!==a;){g=ih(a);if(null!==g){b.flags|=64;Fi(d,!1);f=g.updateQueue;null!==f&&(b.updateQueue=f,b.flags|=4);
null===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=2,f.nextEffect=null,f.firstEffect=null,f.lastEffect=null,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,
f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;I$1(P$1,P$1.current&1|2);return b.child}a=a.sibling;}null!==d.tail&&O$1()>Ji&&(b.flags|=64,f=!0,Fi(d,!1),b.lanes=33554432);}else {if(!f)if(a=ih(g),null!==a){if(b.flags|=64,f=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Fi(d,!0),null===d.tail&&"hidden"===d.tailMode&&!g.alternate&&!lh)return b=b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*O$1()-d.renderingStartTime>Ji&&1073741824!==c&&(b.flags|=
64,f=!0,Fi(d,!1),b.lanes=33554432);d.isBackwards?(g.sibling=b.child,b.child=g):(c=d.last,null!==c?c.sibling=g:b.child=g,d.last=g);}return null!==d.tail?(c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=O$1(),c.sibling=null,b=P$1.current,I$1(P$1,f?b&1|2:b&1),c):null;case 23:case 24:return Ki(),null!==a&&null!==a.memoizedState!==(null!==b.memoizedState)&&"unstable-defer-without-hiding"!==d.mode&&(b.flags|=4),null}throw Error(y(156,b.tag));}
function Li(a){switch(a.tag){case 1:Ff(a.type)&&Gf();var b=a.flags;return b&4096?(a.flags=b&-4097|64,a):null;case 3:fh();H(N$1);H(M$1);uh();b=a.flags;if(0!==(b&64))throw Error(y(285));a.flags=b&-4097|64;return a;case 5:return hh(a),null;case 13:return H(P$1),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 19:return H(P$1),null;case 4:return fh(),null;case 10:return rg(a),null;case 23:case 24:return Ki(),null;default:return null}}
function Mi(a,b){try{var c="",d=b;do c+=Qa$1(d),d=d.return;while(d);var e=c;}catch(f){e="\nError generating stack: "+f.message+"\n"+f.stack;}return {value:a,source:b,stack:e}}function Ni(a,b){try{console.error(b.value);}catch(c){setTimeout(function(){throw c;});}}var Oi="function"===typeof WeakMap?WeakMap:Map;function Pi(a,b,c){c=zg(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Qi||(Qi=!0,Ri=d);Ni(a,b);};return c}
function Si(a,b,c){c=zg(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if("function"===typeof d){var e=b.value;c.payload=function(){Ni(a,b);return d(e)};}var f=a.stateNode;null!==f&&"function"===typeof f.componentDidCatch&&(c.callback=function(){"function"!==typeof d&&(null===Ti?Ti=new Set([this]):Ti.add(this),Ni(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:""});});return c}var Ui="function"===typeof WeakSet?WeakSet:Set;
function Vi(a){var b=a.ref;if(null!==b)if("function"===typeof b)try{b(null);}catch(c){Wi(a,c);}else b.current=null;}function Xi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.flags&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:lg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b;}return;case 3:b.flags&256&&qf(b.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(y(163));}
function Yi(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{if(3===(a.tag&3)){var d=a.create;a.destroy=d();}a=a.next;}while(a!==b)}b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{var e=a;d=e.next;e=e.tag;0!==(e&4)&&0!==(e&1)&&(Zi(c,a),$i(c,a));a=d;}while(a!==b)}return;case 1:a=c.stateNode;c.flags&4&&(null===b?a.componentDidMount():(d=c.elementType===c.type?b.memoizedProps:lg(c.type,b.memoizedProps),a.componentDidUpdate(d,
b.memoizedState,a.__reactInternalSnapshotBeforeUpdate)));b=c.updateQueue;null!==b&&Eg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode;}Eg(c,b,a);}return;case 5:a=c.stateNode;null===b&&c.flags&4&&mf(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Cc(c))));
return;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(y(163));}
function aj(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d=d.style,"function"===typeof d.setProperty?d.setProperty("display","none","important"):d.display="none";else {d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty("display")?e.display:null;d.style.display=sb("display",e);}}else if(6===c.tag)c.stateNode.nodeValue=b?"":c.memoizedProps;else if((23!==c.tag&&24!==c.tag||null===c.memoizedState||c===a)&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===
a)break;for(;null===c.sibling;){if(null===c.return||c.return===a)return;c=c.return;}c.sibling.return=c.return;c=c.sibling;}}
function bj(a,b){if(Mf&&"function"===typeof Mf.onCommitFiberUnmount)try{Mf.onCommitFiberUnmount(Lf,b);}catch(f){}switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var c=a=a.next;do{var d=c,e=d.destroy;d=d.tag;if(void 0!==e)if(0!==(d&4))Zi(b,c);else {d=b;try{e();}catch(f){Wi(d,f);}}c=c.next;}while(c!==a)}break;case 1:Vi(b);a=b.stateNode;if("function"===typeof a.componentWillUnmount)try{a.props=b.memoizedProps,a.state=b.memoizedState,a.componentWillUnmount();}catch(f){Wi(b,
f);}break;case 5:Vi(b);break;case 4:cj(a,b);}}function dj(a){a.alternate=null;a.child=null;a.dependencies=null;a.firstEffect=null;a.lastEffect=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.return=null;a.updateQueue=null;}function ej(a){return 5===a.tag||3===a.tag||4===a.tag}
function fj(a){a:{for(var b=a.return;null!==b;){if(ej(b))break a;b=b.return;}throw Error(y(160));}var c=b;b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(y(161));}c.flags&16&&(pb(b,""),c.flags&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ej(c.return)){c=null;break a}c=c.return;}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.flags&2)continue b;if(null===
c.child||4===c.tag)continue b;else c.child.return=c,c=c.child;}if(!(c.flags&2)){c=c.stateNode;break a}}d?gj(a,c,b):hj(a,c,b);}
function gj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=jf));else if(4!==d&&(a=a.child,null!==a))for(gj(a,b,c),a=a.sibling;null!==a;)gj(a,b,c),a=a.sibling;}
function hj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(hj(a,b,c),a=a.sibling;null!==a;)hj(a,b,c),a=a.sibling;}
function cj(a,b){for(var c=b,d=!1,e,f;;){if(!d){d=c.return;a:for(;;){if(null===d)throw Error(y(160));e=d.stateNode;switch(d.tag){case 5:f=!1;break a;case 3:e=e.containerInfo;f=!0;break a;case 4:e=e.containerInfo;f=!0;break a}d=d.return;}d=!0;}if(5===c.tag||6===c.tag){a:for(var g=a,h=c,k=h;;)if(bj(g,k),null!==k.child&&4!==k.tag)k.child.return=k,k=k.child;else {if(k===h)break a;for(;null===k.sibling;){if(null===k.return||k.return===h)break a;k=k.return;}k.sibling.return=k.return;k=k.sibling;}f?(g=e,h=c.stateNode,
8===g.nodeType?g.parentNode.removeChild(h):g.removeChild(h)):e.removeChild(c.stateNode);}else if(4===c.tag){if(null!==c.child){e=c.stateNode.containerInfo;f=!0;c.child.return=c;c=c.child;continue}}else if(bj(a,c),null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;4===c.tag&&(d=!1);}c.sibling.return=c.return;c=c.sibling;}}
function ij(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:var c=b.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do 3===(d.tag&3)&&(a=d.destroy,d.destroy=void 0,void 0!==a&&a()),d=d.next;while(d!==c)}return;case 1:return;case 5:c=b.stateNode;if(null!=c){d=b.memoizedProps;var e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[xf]=d;"input"===a&&"radio"===d.type&&null!=d.name&&$a$1(c,d);wb(a,e);b=wb(a,d);for(e=0;e<f.length;e+=
2){var g=f[e],h=f[e+1];"style"===g?tb(c,h):"dangerouslySetInnerHTML"===g?ob(c,h):"children"===g?pb(c,h):qa$1(c,g,h,b);}switch(a){case "input":ab$1(c,d);break;case "textarea":ib(c,d);break;case "select":a=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?fb$1(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?fb$1(c,!!d.multiple,d.defaultValue,!0):fb$1(c,!!d.multiple,d.multiple?[]:"",!1));}}}return;case 6:if(null===b.stateNode)throw Error(y(162));b.stateNode.nodeValue=
b.memoizedProps;return;case 3:c=b.stateNode;c.hydrate&&(c.hydrate=!1,Cc(c.containerInfo));return;case 12:return;case 13:null!==b.memoizedState&&(jj=O$1(),aj(b.child,!0));kj(b);return;case 19:kj(b);return;case 17:return;case 23:case 24:aj(b,null!==b.memoizedState);return}throw Error(y(163));}function kj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Ui);b.forEach(function(b){var d=lj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d));});}}
function mj(a,b){return null!==a&&(a=a.memoizedState,null===a||null!==a.dehydrated)?(b=b.memoizedState,null!==b&&null===b.dehydrated):!1}var nj=Math.ceil,oj=ra$1.ReactCurrentDispatcher,pj=ra$1.ReactCurrentOwner,X$1=0,U$1=null,Y$1=null,W$1=0,qj=0,rj=Bf(0),V$1=0,sj=null,tj=0,Dg=0,Hi=0,uj=0,vj=null,jj=0,Ji=Infinity;function wj(){Ji=O$1()+500;}var Z$1=null,Qi=!1,Ri=null,Ti=null,xj=!1,yj=null,zj=90,Aj=[],Bj=[],Cj=null,Dj=0,Ej=null,Fj=-1,Gj=0,Hj=0,Ij=null,Jj=!1;function Hg(){return 0!==(X$1&48)?O$1():-1!==Fj?Fj:Fj=O$1()}
function Ig(a){a=a.mode;if(0===(a&2))return 1;if(0===(a&4))return 99===eg()?1:2;0===Gj&&(Gj=tj);if(0!==kg.transition){0!==Hj&&(Hj=null!==vj?vj.pendingLanes:0);a=Gj;var b=4186112&~Hj;b&=-b;0===b&&(a=4186112&~a,b=a&-a,0===b&&(b=8192));return b}a=eg();0!==(X$1&4)&&98===a?a=Xc(12,Gj):(a=Sc(a),a=Xc(a,Gj));return a}
function Jg(a,b,c){if(50<Dj)throw Dj=0,Ej=null,Error(y(185));a=Kj(a,b);if(null===a)return null;$c(a,b,c);a===U$1&&(Hi|=b,4===V$1&&Ii(a,W$1));var d=eg();1===b?0!==(X$1&8)&&0===(X$1&48)?Lj(a):(Mj(a,c),0===X$1&&(wj(),ig())):(0===(X$1&4)||98!==d&&99!==d||(null===Cj?Cj=new Set([a]):Cj.add(a)),Mj(a,c));vj=a;}function Kj(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}
function Mj(a,b){for(var c=a.callbackNode,d=a.suspendedLanes,e=a.pingedLanes,f=a.expirationTimes,g=a.pendingLanes;0<g;){var h=31-Vc(g),k=1<<h,l=f[h];if(-1===l){if(0===(k&d)||0!==(k&e)){l=b;Rc(k);var n=F$1;f[h]=10<=n?l+250:6<=n?l+5E3:-1;}}else l<=b&&(a.expiredLanes|=k);g&=~k;}d=Uc(a,a===U$1?W$1:0);b=F$1;if(0===d)null!==c&&(c!==Zf&&Pf(c),a.callbackNode=null,a.callbackPriority=0);else {if(null!==c){if(a.callbackPriority===b)return;c!==Zf&&Pf(c);}15===b?(c=Lj.bind(null,a),null===ag?(ag=[c],bg=Of(Uf,jg)):ag.push(c),
c=Zf):14===b?c=hg(99,Lj.bind(null,a)):(c=Tc(b),c=hg(c,Nj.bind(null,a)));a.callbackPriority=b;a.callbackNode=c;}}
function Nj(a){Fj=-1;Hj=Gj=0;if(0!==(X$1&48))throw Error(y(327));var b=a.callbackNode;if(Oj()&&a.callbackNode!==b)return null;var c=Uc(a,a===U$1?W$1:0);if(0===c)return null;var d=c;var e=X$1;X$1|=16;var f=Pj();if(U$1!==a||W$1!==d)wj(),Qj(a,d);do try{Rj();break}catch(h){Sj(a,h);}while(1);qg();oj.current=f;X$1=e;null!==Y$1?d=0:(U$1=null,W$1=0,d=V$1);if(0!==(tj&Hi))Qj(a,0);else if(0!==d){2===d&&(X$1|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),c=Wc(a),0!==c&&(d=Tj(a,c)));if(1===d)throw b=sj,Qj(a,0),Ii(a,c),Mj(a,O$1()),b;a.finishedWork=
a.current.alternate;a.finishedLanes=c;switch(d){case 0:case 1:throw Error(y(345));case 2:Uj(a);break;case 3:Ii(a,c);if((c&62914560)===c&&(d=jj+500-O$1(),10<d)){if(0!==Uc(a,0))break;e=a.suspendedLanes;if((e&c)!==c){Hg();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=of(Uj.bind(null,a),d);break}Uj(a);break;case 4:Ii(a,c);if((c&4186112)===c)break;d=a.eventTimes;for(e=-1;0<c;){var g=31-Vc(c);f=1<<g;g=d[g];g>e&&(e=g);c&=~f;}c=e;c=O$1()-c;c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3E3>c?3E3:4320>
c?4320:1960*nj(c/1960))-c;if(10<c){a.timeoutHandle=of(Uj.bind(null,a),c);break}Uj(a);break;case 5:Uj(a);break;default:throw Error(y(329));}}Mj(a,O$1());return a.callbackNode===b?Nj.bind(null,a):null}function Ii(a,b){b&=~uj;b&=~Hi;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-Vc(b),d=1<<c;a[c]=-1;b&=~d;}}
function Lj(a){if(0!==(X$1&48))throw Error(y(327));Oj();if(a===U$1&&0!==(a.expiredLanes&W$1)){var b=W$1;var c=Tj(a,b);0!==(tj&Hi)&&(b=Uc(a,b),c=Tj(a,b));}else b=Uc(a,0),c=Tj(a,b);0!==a.tag&&2===c&&(X$1|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),b=Wc(a),0!==b&&(c=Tj(a,b)));if(1===c)throw c=sj,Qj(a,0),Ii(a,b),Mj(a,O$1()),c;a.finishedWork=a.current.alternate;a.finishedLanes=b;Uj(a);Mj(a,O$1());return null}
function Vj(){if(null!==Cj){var a=Cj;Cj=null;a.forEach(function(a){a.expiredLanes|=24&a.pendingLanes;Mj(a,O$1());});}ig();}function Wj(a,b){var c=X$1;X$1|=1;try{return a(b)}finally{X$1=c,0===X$1&&(wj(),ig());}}function Xj(a,b){var c=X$1;X$1&=-2;X$1|=8;try{return a(b)}finally{X$1=c,0===X$1&&(wj(),ig());}}function ni(a,b){I$1(rj,qj);qj|=b;tj|=b;}function Ki(){qj=rj.current;H(rj);}
function Qj(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,pf(c));if(null!==Y$1)for(c=Y$1.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Gf();break;case 3:fh();H(N$1);H(M$1);uh();break;case 5:hh(d);break;case 4:fh();break;case 13:H(P$1);break;case 19:H(P$1);break;case 10:rg(d);break;case 23:case 24:Ki();}c=c.return;}U$1=a;Y$1=Tg(a.current,null);W$1=qj=tj=b;V$1=0;sj=null;uj=Hi=Dg=0;}
function Sj(a,b){do{var c=Y$1;try{qg();vh.current=Gh;if(yh){for(var d=R$1.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next;}yh=!1;}xh=0;T$1=S$1=R$1=null;zh=!1;pj.current=null;if(null===c||null===c.return){V$1=1;sj=b;Y$1=null;break}a:{var f=a,g=c.return,h=c,k=b;b=W$1;h.flags|=2048;h.firstEffect=h.lastEffect=null;if(null!==k&&"object"===typeof k&&"function"===typeof k.then){var l=k;if(0===(h.mode&2)){var n=h.alternate;n?(h.updateQueue=n.updateQueue,h.memoizedState=n.memoizedState,h.lanes=n.lanes):
(h.updateQueue=null,h.memoizedState=null);}var A=0!==(P$1.current&1),p=g;do{var C;if(C=13===p.tag){var x=p.memoizedState;if(null!==x)C=null!==x.dehydrated?!0:!1;else {var w=p.memoizedProps;C=void 0===w.fallback?!1:!0!==w.unstable_avoidThisFallback?!0:A?!1:!0;}}if(C){var z=p.updateQueue;if(null===z){var u=new Set;u.add(l);p.updateQueue=u;}else z.add(l);if(0===(p.mode&2)){p.flags|=64;h.flags|=16384;h.flags&=-2981;if(1===h.tag)if(null===h.alternate)h.tag=17;else {var t=zg(-1,1);t.tag=2;Ag(h,t);}h.lanes|=1;break a}k=
void 0;h=b;var q=f.pingCache;null===q?(q=f.pingCache=new Oi,k=new Set,q.set(l,k)):(k=q.get(l),void 0===k&&(k=new Set,q.set(l,k)));if(!k.has(h)){k.add(h);var v=Yj.bind(null,f,l,h);l.then(v,v);}p.flags|=4096;p.lanes=b;break a}p=p.return;}while(null!==p);k=Error((Ra$1(h.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.");}5!==V$1&&(V$1=2);k=Mi(k,h);p=
g;do{switch(p.tag){case 3:f=k;p.flags|=4096;b&=-b;p.lanes|=b;var J=Pi(p,f,b);Bg(p,J);break a;case 1:f=k;var K=p.type,Q=p.stateNode;if(0===(p.flags&64)&&("function"===typeof K.getDerivedStateFromError||null!==Q&&"function"===typeof Q.componentDidCatch&&(null===Ti||!Ti.has(Q)))){p.flags|=4096;b&=-b;p.lanes|=b;var L=Si(p,f,b);Bg(p,L);break a}}p=p.return;}while(null!==p)}Zj(c);}catch(va){b=va;Y$1===c&&null!==c&&(Y$1=c=c.return);continue}break}while(1)}
function Pj(){var a=oj.current;oj.current=Gh;return null===a?Gh:a}function Tj(a,b){var c=X$1;X$1|=16;var d=Pj();U$1===a&&W$1===b||Qj(a,b);do try{ak();break}catch(e){Sj(a,e);}while(1);qg();X$1=c;oj.current=d;if(null!==Y$1)throw Error(y(261));U$1=null;W$1=0;return V$1}function ak(){for(;null!==Y$1;)bk(Y$1);}function Rj(){for(;null!==Y$1&&!Qf();)bk(Y$1);}function bk(a){var b=ck(a.alternate,a,qj);a.memoizedProps=a.pendingProps;null===b?Zj(a):Y$1=b;pj.current=null;}
function Zj(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&2048)){c=Gi(c,b,qj);if(null!==c){Y$1=c;return}c=b;if(24!==c.tag&&23!==c.tag||null===c.memoizedState||0!==(qj&1073741824)||0===(c.mode&4)){for(var d=0,e=c.child;null!==e;)d|=e.lanes|e.childLanes,e=e.sibling;c.childLanes=d;}null!==a&&0===(a.flags&2048)&&(null===a.firstEffect&&(a.firstEffect=b.firstEffect),null!==b.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=b.firstEffect),a.lastEffect=b.lastEffect),1<b.flags&&(null!==
a.lastEffect?a.lastEffect.nextEffect=b:a.firstEffect=b,a.lastEffect=b));}else {c=Li(b);if(null!==c){c.flags&=2047;Y$1=c;return}null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048);}b=b.sibling;if(null!==b){Y$1=b;return}Y$1=b=a;}while(null!==b);0===V$1&&(V$1=5);}function Uj(a){var b=eg();gg(99,dk.bind(null,a,b));return null}
function dk(a,b){do Oj();while(null!==yj);if(0!==(X$1&48))throw Error(y(327));var c=a.finishedWork;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(y(177));a.callbackNode=null;var d=c.lanes|c.childLanes,e=d,f=a.pendingLanes&~e;a.pendingLanes=e;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=e;a.mutableReadLanes&=e;a.entangledLanes&=e;e=a.entanglements;for(var g=a.eventTimes,h=a.expirationTimes;0<f;){var k=31-Vc(f),l=1<<k;e[k]=0;g[k]=-1;h[k]=-1;f&=~l;}null!==
Cj&&0===(d&24)&&Cj.has(a)&&Cj.delete(a);a===U$1&&(Y$1=U$1=null,W$1=0);1<c.flags?null!==c.lastEffect?(c.lastEffect.nextEffect=c,d=c.firstEffect):d=c:d=c.firstEffect;if(null!==d){e=X$1;X$1|=32;pj.current=null;kf=fd;g=Ne();if(Oe(g)){if("selectionStart"in g)h={start:g.selectionStart,end:g.selectionEnd};else a:if(h=(h=g.ownerDocument)&&h.defaultView||window,(l=h.getSelection&&h.getSelection())&&0!==l.rangeCount){h=l.anchorNode;f=l.anchorOffset;k=l.focusNode;l=l.focusOffset;try{h.nodeType,k.nodeType;}catch(va){h=null;
break a}var n=0,A=-1,p=-1,C=0,x=0,w=g,z=null;b:for(;;){for(var u;;){w!==h||0!==f&&3!==w.nodeType||(A=n+f);w!==k||0!==l&&3!==w.nodeType||(p=n+l);3===w.nodeType&&(n+=w.nodeValue.length);if(null===(u=w.firstChild))break;z=w;w=u;}for(;;){if(w===g)break b;z===h&&++C===f&&(A=n);z===k&&++x===l&&(p=n);if(null!==(u=w.nextSibling))break;w=z;z=w.parentNode;}w=u;}h=-1===A||-1===p?null:{start:A,end:p};}else h=null;h=h||{start:0,end:0};}else h=null;lf={focusedElem:g,selectionRange:h};fd=!1;Ij=null;Jj=!1;Z$1=d;do try{ek();}catch(va){if(null===
Z$1)throw Error(y(330));Wi(Z$1,va);Z$1=Z$1.nextEffect;}while(null!==Z$1);Ij=null;Z$1=d;do try{for(g=a;null!==Z$1;){var t=Z$1.flags;t&16&&pb(Z$1.stateNode,"");if(t&128){var q=Z$1.alternate;if(null!==q){var v=q.ref;null!==v&&("function"===typeof v?v(null):v.current=null);}}switch(t&1038){case 2:fj(Z$1);Z$1.flags&=-3;break;case 6:fj(Z$1);Z$1.flags&=-3;ij(Z$1.alternate,Z$1);break;case 1024:Z$1.flags&=-1025;break;case 1028:Z$1.flags&=-1025;ij(Z$1.alternate,Z$1);break;case 4:ij(Z$1.alternate,Z$1);break;case 8:h=Z$1;cj(g,h);var J=h.alternate;dj(h);null!==
J&&dj(J);}Z$1=Z$1.nextEffect;}}catch(va){if(null===Z$1)throw Error(y(330));Wi(Z$1,va);Z$1=Z$1.nextEffect;}while(null!==Z$1);v=lf;q=Ne();t=v.focusedElem;g=v.selectionRange;if(q!==t&&t&&t.ownerDocument&&Me(t.ownerDocument.documentElement,t)){null!==g&&Oe(t)&&(q=g.start,v=g.end,void 0===v&&(v=q),"selectionStart"in t?(t.selectionStart=q,t.selectionEnd=Math.min(v,t.value.length)):(v=(q=t.ownerDocument||document)&&q.defaultView||window,v.getSelection&&(v=v.getSelection(),h=t.textContent.length,J=Math.min(g.start,h),g=void 0===
g.end?J:Math.min(g.end,h),!v.extend&&J>g&&(h=g,g=J,J=h),h=Le(t,J),f=Le(t,g),h&&f&&(1!==v.rangeCount||v.anchorNode!==h.node||v.anchorOffset!==h.offset||v.focusNode!==f.node||v.focusOffset!==f.offset)&&(q=q.createRange(),q.setStart(h.node,h.offset),v.removeAllRanges(),J>g?(v.addRange(q),v.extend(f.node,f.offset)):(q.setEnd(f.node,f.offset),v.addRange(q))))));q=[];for(v=t;v=v.parentNode;)1===v.nodeType&&q.push({element:v,left:v.scrollLeft,top:v.scrollTop});"function"===typeof t.focus&&t.focus();for(t=
0;t<q.length;t++)v=q[t],v.element.scrollLeft=v.left,v.element.scrollTop=v.top;}fd=!!kf;lf=kf=null;a.current=c;Z$1=d;do try{for(t=a;null!==Z$1;){var K=Z$1.flags;K&36&&Yi(t,Z$1.alternate,Z$1);if(K&128){q=void 0;var Q=Z$1.ref;if(null!==Q){var L=Z$1.stateNode;switch(Z$1.tag){case 5:q=L;break;default:q=L;}"function"===typeof Q?Q(q):Q.current=q;}}Z$1=Z$1.nextEffect;}}catch(va){if(null===Z$1)throw Error(y(330));Wi(Z$1,va);Z$1=Z$1.nextEffect;}while(null!==Z$1);Z$1=null;$f();X$1=e;}else a.current=c;if(xj)xj=!1,yj=a,zj=b;else for(Z$1=d;null!==Z$1;)b=
Z$1.nextEffect,Z$1.nextEffect=null,Z$1.flags&8&&(K=Z$1,K.sibling=null,K.stateNode=null),Z$1=b;d=a.pendingLanes;0===d&&(Ti=null);1===d?a===Ej?Dj++:(Dj=0,Ej=a):Dj=0;c=c.stateNode;if(Mf&&"function"===typeof Mf.onCommitFiberRoot)try{Mf.onCommitFiberRoot(Lf,c,void 0,64===(c.current.flags&64));}catch(va){}Mj(a,O$1());if(Qi)throw Qi=!1,a=Ri,Ri=null,a;if(0!==(X$1&8))return null;ig();return null}
function ek(){for(;null!==Z$1;){var a=Z$1.alternate;Jj||null===Ij||(0!==(Z$1.flags&8)?dc(Z$1,Ij)&&(Jj=!0):13===Z$1.tag&&mj(a,Z$1)&&dc(Z$1,Ij)&&(Jj=!0));var b=Z$1.flags;0!==(b&256)&&Xi(a,Z$1);0===(b&512)||xj||(xj=!0,hg(97,function(){Oj();return null}));Z$1=Z$1.nextEffect;}}function Oj(){if(90!==zj){var a=97<zj?97:zj;zj=90;return gg(a,fk)}return !1}function $i(a,b){Aj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}));}function Zi(a,b){Bj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}));}
function fk(){if(null===yj)return !1;var a=yj;yj=null;if(0!==(X$1&48))throw Error(y(331));var b=X$1;X$1|=32;var c=Bj;Bj=[];for(var d=0;d<c.length;d+=2){var e=c[d],f=c[d+1],g=e.destroy;e.destroy=void 0;if("function"===typeof g)try{g();}catch(k){if(null===f)throw Error(y(330));Wi(f,k);}}c=Aj;Aj=[];for(d=0;d<c.length;d+=2){e=c[d];f=c[d+1];try{var h=e.create;e.destroy=h();}catch(k){if(null===f)throw Error(y(330));Wi(f,k);}}for(h=a.current.firstEffect;null!==h;)a=h.nextEffect,h.nextEffect=null,h.flags&8&&(h.sibling=
null,h.stateNode=null),h=a;X$1=b;ig();return !0}function gk(a,b,c){b=Mi(c,b);b=Pi(a,b,1);Ag(a,b);b=Hg();a=Kj(a,1);null!==a&&($c(a,1,b),Mj(a,b));}
function Wi(a,b){if(3===a.tag)gk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){gk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if("function"===typeof c.type.getDerivedStateFromError||"function"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d))){a=Mi(b,a);var e=Si(c,a,1);Ag(c,e);e=Hg();c=Kj(c,1);if(null!==c)$c(c,1,e),Mj(c,e);else if("function"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d)))try{d.componentDidCatch(b,a);}catch(f){}break}}c=c.return;}}
function Yj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=Hg();a.pingedLanes|=a.suspendedLanes&c;U$1===a&&(W$1&c)===c&&(4===V$1||3===V$1&&(W$1&62914560)===W$1&&500>O$1()-jj?Qj(a,0):uj|=c);Mj(a,b);}function lj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=a.mode,0===(b&2)?b=1:0===(b&4)?b=99===eg()?1:2:(0===Gj&&(Gj=tj),b=Yc(62914560&~Gj),0===b&&(b=4194304)));c=Hg();a=Kj(a,b);null!==a&&($c(a,b,c),Mj(a,c));}var ck;
ck=function(a,b,c){var d=b.lanes;if(null!==a)if(a.memoizedProps!==b.pendingProps||N$1.current)ug=!0;else if(0!==(c&d))ug=0!==(a.flags&16384)?!0:!1;else {ug=!1;switch(b.tag){case 3:ri(b);sh();break;case 5:gh(b);break;case 1:Ff(b.type)&&Jf(b);break;case 4:eh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;var e=b.type._context;I$1(mg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){if(0!==(c&b.child.childLanes))return ti(a,b,c);I$1(P$1,P$1.current&1);b=hi(a,b,c);return null!==
b?b.sibling:null}I$1(P$1,P$1.current&1);break;case 19:d=0!==(c&b.childLanes);if(0!==(a.flags&64)){if(d)return Ai(a,b,c);b.flags|=64;}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);I$1(P$1,P$1.current);if(d)break;else return null;case 23:case 24:return b.lanes=0,mi(a,b,c)}return hi(a,b,c)}else ug=!1;b.lanes=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=Ef(b,M$1.current);tg(b,c);e=Ch(null,b,d,a,e,c);b.flags|=1;if("object"===
typeof e&&null!==e&&"function"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(Ff(d)){var f=!0;Jf(b);}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;xg(b);var g=d.getDerivedStateFromProps;"function"===typeof g&&Gg(b,d,g,a);e.updater=Kg;b.stateNode=e;e._reactInternals=b;Og(b,d,a,c);b=qi(null,b,d,!0,f,c);}else b.tag=0,fi(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);
a=b.pendingProps;f=e._init;e=f(e._payload);b.type=e;f=b.tag=hk(e);a=lg(e,a);switch(f){case 0:b=li(null,b,e,a,c);break a;case 1:b=pi(null,b,e,a,c);break a;case 11:b=gi(null,b,e,a,c);break a;case 14:b=ii(null,b,e,lg(e.type,a),d,c);break a}throw Error(y(306,e,""));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),li(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),pi(a,b,d,e,c);case 3:ri(b);d=b.updateQueue;if(null===a||null===d)throw Error(y(282));
d=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;yg(a,b);Cg(b,d,null,c);d=b.memoizedState.element;if(d===e)sh(),b=hi(a,b,c);else {e=b.stateNode;if(f=e.hydrate)kh=rf(b.stateNode.containerInfo.firstChild),jh=b,f=lh=!0;if(f){a=e.mutableSourceEagerHydrationData;if(null!=a)for(e=0;e<a.length;e+=2)f=a[e],f._workInProgressVersionPrimary=a[e+1],th.push(f);c=Zg(b,null,d,c);for(b.child=c;c;)c.flags=c.flags&-3|1024,c=c.sibling;}else fi(a,b,d,c),sh();b=b.child;}return b;case 5:return gh(b),null===a&&
ph(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,nf(d,e)?g=null:null!==f&&nf(d,f)&&(b.flags|=16),oi(a,b),fi(a,b,g,c),b.child;case 6:return null===a&&ph(b),null;case 13:return ti(a,b,c);case 4:return eh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Yg(b,null,d,c):fi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),gi(a,b,d,e,c);case 7:return fi(a,b,b.pendingProps,c),b.child;case 8:return fi(a,b,b.pendingProps.children,
c),b.child;case 12:return fi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I$1(mg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=He(h,f)?0:("function"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!N$1.current){b=hi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=
k.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=zg(-1,c&-c),l.tag=2,Ag(h,l));h.lanes|=c;l=h.alternate;null!==l&&(l.lanes|=c);sg(h.return,c);k.lanes|=c;break}l=l.next;}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return;}h=g;}fi(a,b,e.children,c);b=b.child;}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,tg(b,c),e=vg(e,
f.unstable_observedBits),d=d(e),b.flags|=1,fi(a,b,d,c),b.child;case 14:return e=b.type,f=lg(e,b.pendingProps),f=lg(e.type,f),ii(a,b,e,f,d,c);case 15:return ki(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,Ff(d)?(a=!0,Jf(b)):a=!1,tg(b,c),Mg(b,d,e),Og(b,d,e,c),qi(null,b,d,!0,a,c);case 19:return Ai(a,b,c);case 23:return mi(a,b,c);case 24:return mi(a,b,c)}throw Error(y(156,b.tag));
};function ik(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.flags=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childLanes=this.lanes=0;this.alternate=null;}function nh(a,b,c,d){return new ik(a,b,c,d)}function ji(a){a=a.prototype;return !(!a||!a.isReactComponent)}
function hk(a){if("function"===typeof a)return ji(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Aa$1)return 11;if(a===Da$1)return 14}return 2}
function Tg(a,b){var c=a.alternate;null===c?(c=nh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};
c.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}
function Vg(a,b,c,d,e,f){var g=2;d=a;if("function"===typeof a)ji(a)&&(g=1);else if("string"===typeof a)g=5;else a:switch(a){case ua$1:return Xg(c.children,e,f,b);case Ha$1:g=8;e|=16;break;case wa$1:g=8;e|=1;break;case xa$1:return a=nh(12,c,b,e|8),a.elementType=xa$1,a.type=xa$1,a.lanes=f,a;case Ba$1:return a=nh(13,c,b,e),a.type=Ba$1,a.elementType=Ba$1,a.lanes=f,a;case Ca$1:return a=nh(19,c,b,e),a.elementType=Ca$1,a.lanes=f,a;case Ia$1:return vi(c,e,f,b);case Ja$1:return a=nh(24,c,b,e),a.elementType=Ja$1,a.lanes=f,a;default:if("object"===
typeof a&&null!==a)switch(a.$$typeof){case ya$1:g=10;break a;case za$1:g=9;break a;case Aa$1:g=11;break a;case Da$1:g=14;break a;case Ea$1:g=16;d=null;break a;case Fa$1:g=22;break a}throw Error(y(130,null==a?a:typeof a,""));}b=nh(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Xg(a,b,c,d){a=nh(7,a,d,b);a.lanes=c;return a}function vi(a,b,c,d){a=nh(23,a,d,b);a.elementType=Ia$1;a.lanes=c;return a}function Ug(a,b,c){a=nh(6,a,null,b);a.lanes=c;return a}
function Wg(a,b,c){b=nh(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}
function jk(a,b,c){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=0;this.eventTimes=Zc(0);this.expirationTimes=Zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=Zc(0);this.mutableSourceEagerHydrationData=null;}
function kk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return {$$typeof:ta$1,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}
function lk(a,b,c,d){var e=b.current,f=Hg(),g=Ig(e);a:if(c){c=c._reactInternals;b:{if(Zb(c)!==c||1!==c.tag)throw Error(y(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(Ff(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return;}while(null!==h);throw Error(y(171));}if(1===c.tag){var k=c.type;if(Ff(k)){c=If(c,k,h);break a}}c=h;}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=zg(f,g);b.payload={element:a};d=void 0===d?null:d;null!==
d&&(b.callback=d);Ag(e,b);Jg(e,g,f);return g}function mk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function nk(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b;}}function ok(a,b){nk(a,b);(a=a.alternate)&&nk(a,b);}function pk(){return null}
function qk(a,b,c){var d=null!=c&&null!=c.hydrationOptions&&c.hydrationOptions.mutableSources||null;c=new jk(a,b,null!=c&&!0===c.hydrate);b=nh(3,null,null,2===b?7:1===b?3:0);c.current=b;b.stateNode=c;xg(b);a[ff]=c.current;cf(8===a.nodeType?a.parentNode:a);if(d)for(a=0;a<d.length;a++){b=d[a];var e=b._getVersion;e=e(b._source);null==c.mutableSourceEagerHydrationData?c.mutableSourceEagerHydrationData=[b,e]:c.mutableSourceEagerHydrationData.push(b,e);}this._internalRoot=c;}
qk.prototype.render=function(a){lk(a,this._internalRoot,null,null);};qk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;lk(null,a,null,function(){b[ff]=null;});};function rk(a){return !(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}
function sk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute("data-reactroot")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qk(a,0,b?{hydrate:!0}:void 0)}
function tk(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if("function"===typeof e){var h=e;e=function(){var a=mk(g);h.call(a);};}lk(b,g,a,e);}else {f=c._reactRootContainer=sk(c,d);g=f._internalRoot;if("function"===typeof e){var k=e;e=function(){var a=mk(g);k.call(a);};}Xj(function(){lk(b,g,a,e);});}return mk(g)}ec=function(a){if(13===a.tag){var b=Hg();Jg(a,4,b);ok(a,4);}};fc=function(a){if(13===a.tag){var b=Hg();Jg(a,67108864,b);ok(a,67108864);}};
gc=function(a){if(13===a.tag){var b=Hg(),c=Ig(a);Jg(a,c,b);ok(a,c);}};hc=function(a,b){return b()};
yb=function(a,b,c){switch(b){case "input":ab$1(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+'][type="radio"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(y(90));Wa$1(d);ab$1(d,e);}}}break;case "textarea":ib(a,c);break;case "select":b=c.value,null!=b&&fb$1(a,!!c.multiple,b,!1);}};Gb=Wj;
Hb=function(a,b,c,d,e){var f=X$1;X$1|=4;try{return gg(98,a.bind(null,b,c,d,e))}finally{X$1=f,0===X$1&&(wj(),ig());}};Ib=function(){0===(X$1&49)&&(Vj(),Oj());};Jb=function(a,b){var c=X$1;X$1|=2;try{return a(b)}finally{X$1=c,0===X$1&&(wj(),ig());}};function uk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rk(b))throw Error(y(200));return kk(a,b,null,c)}var vk={Events:[Cb,ue,Db,Eb,Fb,Oj,{current:!1}]},wk={findFiberByHostInstance:wc,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"};
var xk={bundleType:wk.bundleType,version:wk.version,rendererPackageName:wk.rendererPackageName,rendererConfig:wk.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ra$1.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=cc(a);return null===a?null:a.stateNode},findFiberByHostInstance:wk.findFiberByHostInstance||
pk,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var yk=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yk.isDisabled&&yk.supportsFiber)try{Lf=yk.inject(xk),Mf=yk;}catch(a){}}reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=vk;reactDom_production_min.createPortal=uk;
reactDom_production_min.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if("function"===typeof a.render)throw Error(y(188));throw Error(y(268,Object.keys(a)));}a=cc(b);a=null===a?null:a.stateNode;return a};reactDom_production_min.flushSync=function(a,b){var c=X$1;if(0!==(c&48))return a(b);X$1|=1;try{if(a)return gg(99,a.bind(null,b))}finally{X$1=c,ig();}};reactDom_production_min.hydrate=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!0,c)};
reactDom_production_min.render=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!1,c)};reactDom_production_min.unmountComponentAtNode=function(a){if(!rk(a))throw Error(y(40));return a._reactRootContainer?(Xj(function(){tk(null,null,a,!1,function(){a._reactRootContainer=null;a[ff]=null;});}),!0):!1};reactDom_production_min.unstable_batchedUpdates=Wj;reactDom_production_min.unstable_createPortal=function(a,b){return uk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};
reactDom_production_min.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!rk(c))throw Error(y(200));if(null==a||void 0===a._reactInternals)throw Error(y(38));return tk(a,b,c,!1,d)};reactDom_production_min.version="17.0.2";

var reactDom_development = {};

var tracing = {exports: {}};

var schedulerTracing_production_min = {};

/** @license React v0.20.2
 * scheduler-tracing.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b=0;schedulerTracing_production_min.__interactionsRef=null;schedulerTracing_production_min.__subscriberRef=null;schedulerTracing_production_min.unstable_clear=function(a){return a()};schedulerTracing_production_min.unstable_getCurrent=function(){return null};schedulerTracing_production_min.unstable_getThreadID=function(){return ++b};schedulerTracing_production_min.unstable_subscribe=function(){};schedulerTracing_production_min.unstable_trace=function(a,d,c){return c()};schedulerTracing_production_min.unstable_unsubscribe=function(){};schedulerTracing_production_min.unstable_wrap=function(a){return a};

var schedulerTracing_development = {};

/** @license React v0.20.2
 * scheduler-tracing.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

(function (exports) {

if (process.env.NODE_ENV !== "production") {
  (function() {

var DEFAULT_THREAD_ID = 0; // Counters used to generate unique IDs.

var interactionIDCounter = 0;
var threadIDCounter = 0; // Set of currently traced interactions.
// Interactions "stack"–
// Meaning that newly traced interactions are appended to the previously active set.
// When an interaction goes out of scope, the previous set (if any) is restored.

exports.__interactionsRef = null; // Listener(s) to notify when interactions begin and end.

exports.__subscriberRef = null;

{
  exports.__interactionsRef = {
    current: new Set()
  };
  exports.__subscriberRef = {
    current: null
  };
}
function unstable_clear(callback) {

  var prevInteractions = exports.__interactionsRef.current;
  exports.__interactionsRef.current = new Set();

  try {
    return callback();
  } finally {
    exports.__interactionsRef.current = prevInteractions;
  }
}
function unstable_getCurrent() {
  {
    return exports.__interactionsRef.current;
  }
}
function unstable_getThreadID() {
  return ++threadIDCounter;
}
function unstable_trace(name, timestamp, callback) {
  var threadID = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_THREAD_ID;

  var interaction = {
    __count: 1,
    id: interactionIDCounter++,
    name: name,
    timestamp: timestamp
  };
  var prevInteractions = exports.__interactionsRef.current; // Traced interactions should stack/accumulate.
  // To do that, clone the current interactions.
  // The previous set will be restored upon completion.

  var interactions = new Set(prevInteractions);
  interactions.add(interaction);
  exports.__interactionsRef.current = interactions;
  var subscriber = exports.__subscriberRef.current;
  var returnValue;

  try {
    if (subscriber !== null) {
      subscriber.onInteractionTraced(interaction);
    }
  } finally {
    try {
      if (subscriber !== null) {
        subscriber.onWorkStarted(interactions, threadID);
      }
    } finally {
      try {
        returnValue = callback();
      } finally {
        exports.__interactionsRef.current = prevInteractions;

        try {
          if (subscriber !== null) {
            subscriber.onWorkStopped(interactions, threadID);
          }
        } finally {
          interaction.__count--; // If no async work was scheduled for this interaction,
          // Notify subscribers that it's completed.

          if (subscriber !== null && interaction.__count === 0) {
            subscriber.onInteractionScheduledWorkCompleted(interaction);
          }
        }
      }
    }
  }

  return returnValue;
}
function unstable_wrap(callback) {
  var threadID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_THREAD_ID;

  var wrappedInteractions = exports.__interactionsRef.current;
  var subscriber = exports.__subscriberRef.current;

  if (subscriber !== null) {
    subscriber.onWorkScheduled(wrappedInteractions, threadID);
  } // Update the pending async work count for the current interactions.
  // Update after calling subscribers in case of error.


  wrappedInteractions.forEach(function (interaction) {
    interaction.__count++;
  });
  var hasRun = false;

  function wrapped() {
    var prevInteractions = exports.__interactionsRef.current;
    exports.__interactionsRef.current = wrappedInteractions;
    subscriber = exports.__subscriberRef.current;

    try {
      var returnValue;

      try {
        if (subscriber !== null) {
          subscriber.onWorkStarted(wrappedInteractions, threadID);
        }
      } finally {
        try {
          returnValue = callback.apply(undefined, arguments);
        } finally {
          exports.__interactionsRef.current = prevInteractions;

          if (subscriber !== null) {
            subscriber.onWorkStopped(wrappedInteractions, threadID);
          }
        }
      }

      return returnValue;
    } finally {
      if (!hasRun) {
        // We only expect a wrapped function to be executed once,
        // But in the event that it's executed more than once–
        // Only decrement the outstanding interaction counts once.
        hasRun = true; // Update pending async counts for all wrapped interactions.
        // If this was the last scheduled async work for any of them,
        // Mark them as completed.

        wrappedInteractions.forEach(function (interaction) {
          interaction.__count--;

          if (subscriber !== null && interaction.__count === 0) {
            subscriber.onInteractionScheduledWorkCompleted(interaction);
          }
        });
      }
    }
  }

  wrapped.cancel = function cancel() {
    subscriber = exports.__subscriberRef.current;

    try {
      if (subscriber !== null) {
        subscriber.onWorkCanceled(wrappedInteractions, threadID);
      }
    } finally {
      // Update pending async counts for all wrapped interactions.
      // If this was the last scheduled async work for any of them,
      // Mark them as completed.
      wrappedInteractions.forEach(function (interaction) {
        interaction.__count--;

        if (subscriber && interaction.__count === 0) {
          subscriber.onInteractionScheduledWorkCompleted(interaction);
        }
      });
    }
  };

  return wrapped;
}

var subscribers = null;

{
  subscribers = new Set();
}

function unstable_subscribe(subscriber) {
  {
    subscribers.add(subscriber);

    if (subscribers.size === 1) {
      exports.__subscriberRef.current = {
        onInteractionScheduledWorkCompleted: onInteractionScheduledWorkCompleted,
        onInteractionTraced: onInteractionTraced,
        onWorkCanceled: onWorkCanceled,
        onWorkScheduled: onWorkScheduled,
        onWorkStarted: onWorkStarted,
        onWorkStopped: onWorkStopped
      };
    }
  }
}
function unstable_unsubscribe(subscriber) {
  {
    subscribers.delete(subscriber);

    if (subscribers.size === 0) {
      exports.__subscriberRef.current = null;
    }
  }
}

function onInteractionTraced(interaction) {
  var didCatchError = false;
  var caughtError = null;
  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onInteractionTraced(interaction);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onInteractionScheduledWorkCompleted(interaction) {
  var didCatchError = false;
  var caughtError = null;
  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onInteractionScheduledWorkCompleted(interaction);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onWorkScheduled(interactions, threadID) {
  var didCatchError = false;
  var caughtError = null;
  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onWorkScheduled(interactions, threadID);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onWorkStarted(interactions, threadID) {
  var didCatchError = false;
  var caughtError = null;
  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onWorkStarted(interactions, threadID);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onWorkStopped(interactions, threadID) {
  var didCatchError = false;
  var caughtError = null;
  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onWorkStopped(interactions, threadID);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onWorkCanceled(interactions, threadID) {
  var didCatchError = false;
  var caughtError = null;
  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onWorkCanceled(interactions, threadID);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

exports.unstable_clear = unstable_clear;
exports.unstable_getCurrent = unstable_getCurrent;
exports.unstable_getThreadID = unstable_getThreadID;
exports.unstable_subscribe = unstable_subscribe;
exports.unstable_trace = unstable_trace;
exports.unstable_unsubscribe = unstable_unsubscribe;
exports.unstable_wrap = unstable_wrap;
  })();
}
}(schedulerTracing_development));

if (process.env.NODE_ENV === 'production') {
  tracing.exports = schedulerTracing_production_min;
} else {
  tracing.exports = schedulerTracing_development;
}

/** @license React v17.0.2
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (process.env.NODE_ENV !== "production") {
  (function() {

var React = React__default;
var _assign = objectAssign$2;
var Scheduler = scheduler.exports;
var tracing$1 = tracing.exports;

var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

// by calls to these methods by a Babel plugin.
//
// In PROD (or in packages without access to React internals),
// they are left as they are instead.

function warn(format) {
  {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    printWarning('warn', format, args);
  }
}
function error(format) {
  {
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }

    printWarning('error', format, args);
  }
}

function printWarning(level, format, args) {
  // When changing this logic, you might want to also
  // update consoleWithStackDev.www.js as well.
  {
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum();

    if (stack !== '') {
      format += '%s';
      args = args.concat([stack]);
    }

    var argsWithFormat = args.map(function (item) {
      return '' + item;
    }); // Careful: RN currently depends on this prefix

    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
    // breaks IE9: https://github.com/facebook/react/issues/13610
    // eslint-disable-next-line react-internal/no-production-logging

    Function.prototype.apply.call(console[level], console, argsWithFormat);
  }
}

if (!React) {
  {
    throw Error( "ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM." );
  }
}

var FunctionComponent = 0;
var ClassComponent = 1;
var IndeterminateComponent = 2; // Before we know whether it is function or class

var HostRoot = 3; // Root of a host tree. Could be nested inside another node.

var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.

var HostComponent = 5;
var HostText = 6;
var Fragment = 7;
var Mode = 8;
var ContextConsumer = 9;
var ContextProvider = 10;
var ForwardRef = 11;
var Profiler = 12;
var SuspenseComponent = 13;
var MemoComponent = 14;
var SimpleMemoComponent = 15;
var LazyComponent = 16;
var IncompleteClassComponent = 17;
var DehydratedFragment = 18;
var SuspenseListComponent = 19;
var FundamentalComponent = 20;
var ScopeComponent = 21;
var Block = 22;
var OffscreenComponent = 23;
var LegacyHiddenComponent = 24;

// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.

var enableProfilerTimer = true; // Record durations for commit and passive effects phases.

var enableFundamentalAPI = false; // Experimental Scope support.
var enableNewReconciler = false; // Errors that are thrown while unmounting (or after in the case of passive effects)
var warnAboutStringRefs = false;

var allNativeEvents = new Set();
/**
 * Mapping from registration name to event name
 */


var registrationNameDependencies = {};
/**
 * Mapping from lowercase registration names to the properly cased version,
 * used to warn in the case of missing event handlers. Available
 * only in true.
 * @type {Object}
 */

var possibleRegistrationNames =  {} ; // Trust the developer to only use possibleRegistrationNames in true

function registerTwoPhaseEvent(registrationName, dependencies) {
  registerDirectEvent(registrationName, dependencies);
  registerDirectEvent(registrationName + 'Capture', dependencies);
}
function registerDirectEvent(registrationName, dependencies) {
  {
    if (registrationNameDependencies[registrationName]) {
      error('EventRegistry: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName);
    }
  }

  registrationNameDependencies[registrationName] = dependencies;

  {
    var lowerCasedName = registrationName.toLowerCase();
    possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      possibleRegistrationNames.ondblclick = registrationName;
    }
  }

  for (var i = 0; i < dependencies.length; i++) {
    allNativeEvents.add(dependencies[i]);
  }
}

var canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');

// A reserved attribute.
// It is handled by React separately and shouldn't be written to the DOM.
var RESERVED = 0; // A simple string attribute.
// Attributes that aren't in the filter are presumed to have this type.

var STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called
// "enumerated" attributes with "true" and "false" as possible values.
// When true, it should be set to a "true" string.
// When false, it should be set to a "false" string.

var BOOLEANISH_STRING = 2; // A real boolean attribute.
// When true, it should be present (set either to an empty string or its name).
// When false, it should be omitted.

var BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.
// When true, it should be present (set either to an empty string or its name).
// When false, it should be omitted.
// For any other value, should be present with that value.

var OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.
// When falsy, it should be removed.

var NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.
// When falsy, it should be removed.

var POSITIVE_NUMERIC = 6;

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
/* eslint-enable max-len */

var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
var ROOT_ATTRIBUTE_NAME = 'data-reactroot';
var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');
var hasOwnProperty = Object.prototype.hasOwnProperty;
var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};
function isAttributeNameSafe(attributeName) {
  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
    return true;
  }

  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
    return false;
  }

  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }

  illegalAttributeNameCache[attributeName] = true;

  {
    error('Invalid attribute name: `%s`', attributeName);
  }

  return false;
}
function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
  if (propertyInfo !== null) {
    return propertyInfo.type === RESERVED;
  }

  if (isCustomComponentTag) {
    return false;
  }

  if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {
    return true;
  }

  return false;
}
function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
  if (propertyInfo !== null && propertyInfo.type === RESERVED) {
    return false;
  }

  switch (typeof value) {
    case 'function': // $FlowIssue symbol is perfectly valid here

    case 'symbol':
      // eslint-disable-line
      return true;

    case 'boolean':
      {
        if (isCustomComponentTag) {
          return false;
        }

        if (propertyInfo !== null) {
          return !propertyInfo.acceptsBooleans;
        } else {
          var prefix = name.toLowerCase().slice(0, 5);
          return prefix !== 'data-' && prefix !== 'aria-';
        }
      }

    default:
      return false;
  }
}
function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
  if (value === null || typeof value === 'undefined') {
    return true;
  }

  if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
    return true;
  }

  if (isCustomComponentTag) {
    return false;
  }

  if (propertyInfo !== null) {

    switch (propertyInfo.type) {
      case BOOLEAN:
        return !value;

      case OVERLOADED_BOOLEAN:
        return value === false;

      case NUMERIC:
        return isNaN(value);

      case POSITIVE_NUMERIC:
        return isNaN(value) || value < 1;
    }
  }

  return false;
}
function getPropertyInfo(name) {
  return properties.hasOwnProperty(name) ? properties[name] : null;
}

function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL, removeEmptyString) {
  this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
  this.attributeName = attributeName;
  this.attributeNamespace = attributeNamespace;
  this.mustUseProperty = mustUseProperty;
  this.propertyName = name;
  this.type = type;
  this.sanitizeURL = sanitizeURL;
  this.removeEmptyString = removeEmptyString;
} // When adding attributes to this list, be sure to also add them to
// the `possibleStandardNames` module to ensure casing and incorrect
// name warnings.


var properties = {}; // These props are reserved by React. They shouldn't be written to the DOM.

var reservedProps = ['children', 'dangerouslySetInnerHTML', // TODO: This prevents the assignment of defaultValue to regular
// elements (not just inputs). Now that ReactDOMInput assigns to the
// defaultValue property -- do we need this?
'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'];
reservedProps.forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // A few React string attributes have a different name.
// This is a mapping from React prop names to the attribute names.

[['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {
  var name = _ref[0],
      attributeName = _ref[1];
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are "enumerated" HTML attributes that accept "true" and "false".
// In React, we let users pass `true` and `false` even though technically
// these aren't boolean attributes (they are coerced to strings).

['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are "enumerated" SVG attributes that accept "true" and "false".
// In React, we let users pass `true` and `false` even though technically
// these aren't boolean attributes (they are coerced to strings).
// Since these are SVG attributes, their attribute names are case-sensitive.

['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are HTML boolean attributes.

['allowFullScreen', 'async', // Note: there is a special case that prevents it from being written to the DOM
// on the client side because the browsers are inconsistent. Instead we call focus().
'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'disablePictureInPicture', 'disableRemotePlayback', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless', // Microdata
'itemScope'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are the few React props that we set as DOM properties
// rather than attributes. These are all booleans.

['checked', // Note: `option.selected` is not updated if `select.multiple` is
// disabled with `removeAttribute`. We have special logic for handling this.
'multiple', 'muted', 'selected' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are HTML attributes that are "overloaded booleans": they behave like
// booleans, but can also accept a string value.

['capture', 'download' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are HTML attributes that must be positive numbers.

['cols', 'rows', 'size', 'span' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are HTML attributes that must be numbers.

['rowSpan', 'start'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
});
var CAMELIZE = /[\-\:]([a-z])/g;

var capitalize = function (token) {
  return token[1].toUpperCase();
}; // This is a list of all SVG attributes that need special casing, namespacing,
// or boolean value assignment. Regular attributes that just accept strings
// and have the same names are omitted, just like in the HTML attribute filter.
// Some of these attributes can be hard to find. This list was created by
// scraping the MDN documentation.


['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // String SVG attributes with the xlink namespace.

['xlink:actuate', 'xlink:arcrole', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, 'http://www.w3.org/1999/xlink', false, // sanitizeURL
  false);
}); // String SVG attributes with the xml namespace.

['xml:base', 'xml:lang', 'xml:space' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, 'http://www.w3.org/XML/1998/namespace', false, // sanitizeURL
  false);
}); // These attribute exists both in HTML and SVG.
// The attribute name is case-sensitive in SVG so we can't just use
// the React name like we do for attributes that exist only in HTML.

['tabIndex', 'crossOrigin'].forEach(function (attributeName) {
  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
  attributeName.toLowerCase(), // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These attributes accept URLs. These must not allow javascript: URLS.
// These will also need to accept Trusted Types object in the future.

var xlinkHref = 'xlinkHref';
properties[xlinkHref] = new PropertyInfoRecord('xlinkHref', STRING, false, // mustUseProperty
'xlink:href', 'http://www.w3.org/1999/xlink', true, // sanitizeURL
false);
['src', 'href', 'action', 'formAction'].forEach(function (attributeName) {
  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
  attributeName.toLowerCase(), // attributeName
  null, // attributeNamespace
  true, // sanitizeURL
  true);
});

// and any newline or tab are filtered out as if they're not part of the URL.
// https://url.spec.whatwg.org/#url-parsing
// Tab or newline are defined as \r\n\t:
// https://infra.spec.whatwg.org/#ascii-tab-or-newline
// A C0 control is a code point in the range \u0000 NULL to \u001F
// INFORMATION SEPARATOR ONE, inclusive:
// https://infra.spec.whatwg.org/#c0-control-or-space

/* eslint-disable max-len */

var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
var didWarn = false;

function sanitizeURL(url) {
  {
    if (!didWarn && isJavaScriptProtocol.test(url)) {
      didWarn = true;

      error('A future version of React will block javascript: URLs as a security precaution. ' + 'Use event handlers instead if you can. If you need to generate unsafe HTML try ' + 'using dangerouslySetInnerHTML instead. React was passed %s.', JSON.stringify(url));
    }
  }
}

/**
 * Get the value for a property on a node. Only used in DEV for SSR validation.
 * The "expected" argument is used as a hint of what the expected value is.
 * Some properties have multiple equivalent values.
 */
function getValueForProperty(node, name, expected, propertyInfo) {
  {
    if (propertyInfo.mustUseProperty) {
      var propertyName = propertyInfo.propertyName;
      return node[propertyName];
    } else {
      if ( propertyInfo.sanitizeURL) {
        // If we haven't fully disabled javascript: URLs, and if
        // the hydration is successful of a javascript: URL, we
        // still want to warn on the client.
        sanitizeURL('' + expected);
      }

      var attributeName = propertyInfo.attributeName;
      var stringValue = null;

      if (propertyInfo.type === OVERLOADED_BOOLEAN) {
        if (node.hasAttribute(attributeName)) {
          var value = node.getAttribute(attributeName);

          if (value === '') {
            return true;
          }

          if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
            return value;
          }

          if (value === '' + expected) {
            return expected;
          }

          return value;
        }
      } else if (node.hasAttribute(attributeName)) {
        if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
          // We had an attribute but shouldn't have had one, so read it
          // for the error message.
          return node.getAttribute(attributeName);
        }

        if (propertyInfo.type === BOOLEAN) {
          // If this was a boolean, it doesn't matter what the value is
          // the fact that we have it is the same as the expected.
          return expected;
        } // Even if this property uses a namespace we use getAttribute
        // because we assume its namespaced name is the same as our config.
        // To use getAttributeNS we need the local name which we don't have
        // in our config atm.


        stringValue = node.getAttribute(attributeName);
      }

      if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
        return stringValue === null ? expected : stringValue;
      } else if (stringValue === '' + expected) {
        return expected;
      } else {
        return stringValue;
      }
    }
  }
}
/**
 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
 * The third argument is used as a hint of what the expected value is. Some
 * attributes have multiple equivalent values.
 */

function getValueForAttribute(node, name, expected) {
  {
    if (!isAttributeNameSafe(name)) {
      return;
    } // If the object is an opaque reference ID, it's expected that
    // the next prop is different than the server value, so just return
    // expected


    if (isOpaqueHydratingObject(expected)) {
      return expected;
    }

    if (!node.hasAttribute(name)) {
      return expected === undefined ? undefined : null;
    }

    var value = node.getAttribute(name);

    if (value === '' + expected) {
      return expected;
    }

    return value;
  }
}
/**
 * Sets the value for a property on a node.
 *
 * @param {DOMElement} node
 * @param {string} name
 * @param {*} value
 */

function setValueForProperty(node, name, value, isCustomComponentTag) {
  var propertyInfo = getPropertyInfo(name);

  if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
    return;
  }

  if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {
    value = null;
  } // If the prop isn't in the special list, treat it as a simple attribute.


  if (isCustomComponentTag || propertyInfo === null) {
    if (isAttributeNameSafe(name)) {
      var _attributeName = name;

      if (value === null) {
        node.removeAttribute(_attributeName);
      } else {
        node.setAttribute(_attributeName,  '' + value);
      }
    }

    return;
  }

  var mustUseProperty = propertyInfo.mustUseProperty;

  if (mustUseProperty) {
    var propertyName = propertyInfo.propertyName;

    if (value === null) {
      var type = propertyInfo.type;
      node[propertyName] = type === BOOLEAN ? false : '';
    } else {
      // Contrary to `setAttribute`, object properties are properly
      // `toString`ed by IE8/9.
      node[propertyName] = value;
    }

    return;
  } // The rest are treated as attributes with special cases.


  var attributeName = propertyInfo.attributeName,
      attributeNamespace = propertyInfo.attributeNamespace;

  if (value === null) {
    node.removeAttribute(attributeName);
  } else {
    var _type = propertyInfo.type;
    var attributeValue;

    if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {
      // If attribute type is boolean, we know for sure it won't be an execution sink
      // and we won't require Trusted Type here.
      attributeValue = '';
    } else {
      // `setAttribute` with objects becomes only `[object]` in IE8/9,
      // ('' + value) makes it output the correct toString()-value.
      {
        attributeValue = '' + value;
      }

      if (propertyInfo.sanitizeURL) {
        sanitizeURL(attributeValue.toString());
      }
    }

    if (attributeNamespace) {
      node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
    } else {
      node.setAttribute(attributeName, attributeValue);
    }
  }
}

// ATTENTION
// When adding new symbols to this file,
// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var REACT_ELEMENT_TYPE = 0xeac7;
var REACT_PORTAL_TYPE = 0xeaca;
var REACT_FRAGMENT_TYPE = 0xeacb;
var REACT_STRICT_MODE_TYPE = 0xeacc;
var REACT_PROFILER_TYPE = 0xead2;
var REACT_PROVIDER_TYPE = 0xeacd;
var REACT_CONTEXT_TYPE = 0xeace;
var REACT_FORWARD_REF_TYPE = 0xead0;
var REACT_SUSPENSE_TYPE = 0xead1;
var REACT_SUSPENSE_LIST_TYPE = 0xead8;
var REACT_MEMO_TYPE = 0xead3;
var REACT_LAZY_TYPE = 0xead4;
var REACT_BLOCK_TYPE = 0xead9;
var REACT_SCOPE_TYPE = 0xead7;
var REACT_OPAQUE_ID_TYPE = 0xeae0;
var REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;
var REACT_OFFSCREEN_TYPE = 0xeae2;
var REACT_LEGACY_HIDDEN_TYPE = 0xeae3;

if (typeof Symbol === 'function' && Symbol.for) {
  var symbolFor = Symbol.for;
  REACT_ELEMENT_TYPE = symbolFor('react.element');
  REACT_PORTAL_TYPE = symbolFor('react.portal');
  REACT_FRAGMENT_TYPE = symbolFor('react.fragment');
  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');
  REACT_PROFILER_TYPE = symbolFor('react.profiler');
  REACT_PROVIDER_TYPE = symbolFor('react.provider');
  REACT_CONTEXT_TYPE = symbolFor('react.context');
  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');
  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
  REACT_MEMO_TYPE = symbolFor('react.memo');
  REACT_LAZY_TYPE = symbolFor('react.lazy');
  REACT_BLOCK_TYPE = symbolFor('react.block');
  symbolFor('react.server.block');
  symbolFor('react.fundamental');
  REACT_SCOPE_TYPE = symbolFor('react.scope');
  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');
  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');
  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
}

var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }

  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }

  return null;
}

// Helpers to patch console.logs to avoid logging during side-effect free
// replaying on render function. This currently only patches the object
// lazily which won't cover if the log function was extracted eagerly.
// We could also eagerly patch the method.
var disabledDepth = 0;
var prevLog;
var prevInfo;
var prevWarn;
var prevError;
var prevGroup;
var prevGroupCollapsed;
var prevGroupEnd;

function disabledLog() {}

disabledLog.__reactDisabledLog = true;
function disableLogs() {
  {
    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      prevLog = console.log;
      prevInfo = console.info;
      prevWarn = console.warn;
      prevError = console.error;
      prevGroup = console.group;
      prevGroupCollapsed = console.groupCollapsed;
      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

      var props = {
        configurable: true,
        enumerable: true,
        value: disabledLog,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        info: props,
        log: props,
        warn: props,
        error: props,
        group: props,
        groupCollapsed: props,
        groupEnd: props
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    disabledDepth++;
  }
}
function reenableLogs() {
  {
    disabledDepth--;

    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      var props = {
        configurable: true,
        enumerable: true,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        log: _assign({}, props, {
          value: prevLog
        }),
        info: _assign({}, props, {
          value: prevInfo
        }),
        warn: _assign({}, props, {
          value: prevWarn
        }),
        error: _assign({}, props, {
          value: prevError
        }),
        group: _assign({}, props, {
          value: prevGroup
        }),
        groupCollapsed: _assign({}, props, {
          value: prevGroupCollapsed
        }),
        groupEnd: _assign({}, props, {
          value: prevGroupEnd
        })
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    if (disabledDepth < 0) {
      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
    }
  }
}

var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
var prefix;
function describeBuiltInComponentFrame(name, source, ownerFn) {
  {
    if (prefix === undefined) {
      // Extract the VM specific prefix used by each line.
      try {
        throw Error();
      } catch (x) {
        var match = x.stack.trim().match(/\n( *(at )?)/);
        prefix = match && match[1] || '';
      }
    } // We use the prefix to ensure our stacks line up with native stack frames.


    return '\n' + prefix + name;
  }
}
var reentry = false;
var componentFrameCache;

{
  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
  componentFrameCache = new PossiblyWeakMap();
}

function describeNativeComponentFrame(fn, construct) {
  // If something asked for a stack inside a fake render, it should get ignored.
  if (!fn || reentry) {
    return '';
  }

  {
    var frame = componentFrameCache.get(fn);

    if (frame !== undefined) {
      return frame;
    }
  }

  var control;
  reentry = true;
  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

  Error.prepareStackTrace = undefined;
  var previousDispatcher;

  {
    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
    // for warnings.

    ReactCurrentDispatcher.current = null;
    disableLogs();
  }

  try {
    // This should throw.
    if (construct) {
      // Something should be setting the props in the constructor.
      var Fake = function () {
        throw Error();
      }; // $FlowFixMe


      Object.defineProperty(Fake.prototype, 'props', {
        set: function () {
          // We use a throwing setter instead of frozen or non-writable props
          // because that won't throw in a non-strict mode function.
          throw Error();
        }
      });

      if (typeof Reflect === 'object' && Reflect.construct) {
        // We construct a different control for this case to include any extra
        // frames added by the construct call.
        try {
          Reflect.construct(Fake, []);
        } catch (x) {
          control = x;
        }

        Reflect.construct(fn, [], Fake);
      } else {
        try {
          Fake.call();
        } catch (x) {
          control = x;
        }

        fn.call(Fake.prototype);
      }
    } else {
      try {
        throw Error();
      } catch (x) {
        control = x;
      }

      fn();
    }
  } catch (sample) {
    // This is inlined manually because closure doesn't do it for us.
    if (sample && control && typeof sample.stack === 'string') {
      // This extracts the first frame from the sample that isn't also in the control.
      // Skipping one frame that we assume is the frame that calls the two.
      var sampleLines = sample.stack.split('\n');
      var controlLines = control.stack.split('\n');
      var s = sampleLines.length - 1;
      var c = controlLines.length - 1;

      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
        // We expect at least one stack frame to be shared.
        // Typically this will be the root most one. However, stack frames may be
        // cut off due to maximum stack limits. In this case, one maybe cut off
        // earlier than the other. We assume that the sample is longer or the same
        // and there for cut off earlier. So we should find the root most frame in
        // the sample somewhere in the control.
        c--;
      }

      for (; s >= 1 && c >= 0; s--, c--) {
        // Next we find the first one that isn't the same which should be the
        // frame that called our sample function and the control.
        if (sampleLines[s] !== controlLines[c]) {
          // In V8, the first line is describing the message but other VMs don't.
          // If we're about to return the first line, and the control is also on the same
          // line, that's a pretty good indicator that our sample threw at same line as
          // the control. I.e. before we entered the sample frame. So we ignore this result.
          // This can happen if you passed a class to function component, or non-function.
          if (s !== 1 || c !== 1) {
            do {
              s--;
              c--; // We may still have similar intermediate frames from the construct call.
              // The next one that isn't the same should be our match though.

              if (c < 0 || sampleLines[s] !== controlLines[c]) {
                // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                var _frame = '\n' + sampleLines[s].replace(' at new ', ' at ');

                {
                  if (typeof fn === 'function') {
                    componentFrameCache.set(fn, _frame);
                  }
                } // Return the line we found.


                return _frame;
              }
            } while (s >= 1 && c >= 0);
          }

          break;
        }
      }
    }
  } finally {
    reentry = false;

    {
      ReactCurrentDispatcher.current = previousDispatcher;
      reenableLogs();
    }

    Error.prepareStackTrace = previousPrepareStackTrace;
  } // Fallback to just using the name if we couldn't make it throw.


  var name = fn ? fn.displayName || fn.name : '';
  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';

  {
    if (typeof fn === 'function') {
      componentFrameCache.set(fn, syntheticFrame);
    }
  }

  return syntheticFrame;
}

function describeClassComponentFrame(ctor, source, ownerFn) {
  {
    return describeNativeComponentFrame(ctor, true);
  }
}
function describeFunctionComponentFrame(fn, source, ownerFn) {
  {
    return describeNativeComponentFrame(fn, false);
  }
}

function shouldConstruct(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {

  if (type == null) {
    return '';
  }

  if (typeof type === 'function') {
    {
      return describeNativeComponentFrame(type, shouldConstruct(type));
    }
  }

  if (typeof type === 'string') {
    return describeBuiltInComponentFrame(type);
  }

  switch (type) {
    case REACT_SUSPENSE_TYPE:
      return describeBuiltInComponentFrame('Suspense');

    case REACT_SUSPENSE_LIST_TYPE:
      return describeBuiltInComponentFrame('SuspenseList');
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_FORWARD_REF_TYPE:
        return describeFunctionComponentFrame(type.render);

      case REACT_MEMO_TYPE:
        // Memo may contain any component type so we recursively resolve it.
        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);

      case REACT_BLOCK_TYPE:
        return describeFunctionComponentFrame(type._render);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            // Lazy may contain any component type so we recursively resolve it.
            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
          } catch (x) {}
        }
    }
  }

  return '';
}

function describeFiber(fiber) {
  fiber._debugOwner ? fiber._debugOwner.type : null ;
  fiber._debugSource ;

  switch (fiber.tag) {
    case HostComponent:
      return describeBuiltInComponentFrame(fiber.type);

    case LazyComponent:
      return describeBuiltInComponentFrame('Lazy');

    case SuspenseComponent:
      return describeBuiltInComponentFrame('Suspense');

    case SuspenseListComponent:
      return describeBuiltInComponentFrame('SuspenseList');

    case FunctionComponent:
    case IndeterminateComponent:
    case SimpleMemoComponent:
      return describeFunctionComponentFrame(fiber.type);

    case ForwardRef:
      return describeFunctionComponentFrame(fiber.type.render);

    case Block:
      return describeFunctionComponentFrame(fiber.type._render);

    case ClassComponent:
      return describeClassComponentFrame(fiber.type);

    default:
      return '';
  }
}

function getStackByFiberInDevAndProd(workInProgress) {
  try {
    var info = '';
    var node = workInProgress;

    do {
      info += describeFiber(node);
      node = node.return;
    } while (node);

    return info;
  } catch (x) {
    return '\nError generating stack: ' + x.message + '\n' + x.stack;
  }
}

function getWrappedName(outerType, innerType, wrapperName) {
  var functionName = innerType.displayName || innerType.name || '';
  return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
}

function getContextName(type) {
  return type.displayName || 'Context';
}

function getComponentName(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }

  {
    if (typeof type.tag === 'number') {
      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }

  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }

  if (typeof type === 'string') {
    return type;
  }

  switch (type) {
    case REACT_FRAGMENT_TYPE:
      return 'Fragment';

    case REACT_PORTAL_TYPE:
      return 'Portal';

    case REACT_PROFILER_TYPE:
      return 'Profiler';

    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';

    case REACT_SUSPENSE_TYPE:
      return 'Suspense';

    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        var context = type;
        return getContextName(context) + '.Consumer';

      case REACT_PROVIDER_TYPE:
        var provider = type;
        return getContextName(provider._context) + '.Provider';

      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_BLOCK_TYPE:
        return getComponentName(type._render);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            return getComponentName(init(payload));
          } catch (x) {
            return null;
          }
        }
    }
  }

  return null;
}

var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
var current = null;
var isRendering = false;
function getCurrentFiberOwnerNameInDevOrNull() {
  {
    if (current === null) {
      return null;
    }

    var owner = current._debugOwner;

    if (owner !== null && typeof owner !== 'undefined') {
      return getComponentName(owner.type);
    }
  }

  return null;
}

function getCurrentFiberStackInDev() {
  {
    if (current === null) {
      return '';
    } // Safe because if current fiber exists, we are reconciling,
    // and it is guaranteed to be the work-in-progress version.


    return getStackByFiberInDevAndProd(current);
  }
}

function resetCurrentFiber() {
  {
    ReactDebugCurrentFrame.getCurrentStack = null;
    current = null;
    isRendering = false;
  }
}
function setCurrentFiber(fiber) {
  {
    ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;
    current = fiber;
    isRendering = false;
  }
}
function setIsRendering(rendering) {
  {
    isRendering = rendering;
  }
}
function getIsRendering() {
  {
    return isRendering;
  }
}

// Flow does not allow string concatenation of most non-string types. To work
// around this limitation, we use an opaque type that can only be obtained by
// passing the value through getToStringValue first.
function toString(value) {
  return '' + value;
}
function getToStringValue(value) {
  switch (typeof value) {
    case 'boolean':
    case 'number':
    case 'object':
    case 'string':
    case 'undefined':
      return value;

    default:
      // function, symbol are assigned as empty strings
      return '';
  }
}

var hasReadOnlyValue = {
  button: true,
  checkbox: true,
  image: true,
  hidden: true,
  radio: true,
  reset: true,
  submit: true
};
function checkControlledValueProps(tagName, props) {
  {
    if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) {
      error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    }

    if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) {
      error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    }
  }
}

function isCheckable(elem) {
  var type = elem.type;
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
}

function getTracker(node) {
  return node._valueTracker;
}

function detachTracker(node) {
  node._valueTracker = null;
}

function getValueFromNode(node) {
  var value = '';

  if (!node) {
    return value;
  }

  if (isCheckable(node)) {
    value = node.checked ? 'true' : 'false';
  } else {
    value = node.value;
  }

  return value;
}

function trackValueOnNode(node) {
  var valueField = isCheckable(node) ? 'checked' : 'value';
  var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
  var currentValue = '' + node[valueField]; // if someone has already defined a value or Safari, then bail
  // and don't track value will cause over reporting of changes,
  // but it's better then a hard failure
  // (needed for certain tests that spyOn input values and Safari)

  if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
    return;
  }

  var get = descriptor.get,
      set = descriptor.set;
  Object.defineProperty(node, valueField, {
    configurable: true,
    get: function () {
      return get.call(this);
    },
    set: function (value) {
      currentValue = '' + value;
      set.call(this, value);
    }
  }); // We could've passed this the first time
  // but it triggers a bug in IE11 and Edge 14/15.
  // Calling defineProperty() again should be equivalent.
  // https://github.com/facebook/react/issues/11768

  Object.defineProperty(node, valueField, {
    enumerable: descriptor.enumerable
  });
  var tracker = {
    getValue: function () {
      return currentValue;
    },
    setValue: function (value) {
      currentValue = '' + value;
    },
    stopTracking: function () {
      detachTracker(node);
      delete node[valueField];
    }
  };
  return tracker;
}

function track(node) {
  if (getTracker(node)) {
    return;
  } // TODO: Once it's just Fiber we can move this to node._wrapperState


  node._valueTracker = trackValueOnNode(node);
}
function updateValueIfChanged(node) {
  if (!node) {
    return false;
  }

  var tracker = getTracker(node); // if there is no tracker at this point it's unlikely
  // that trying again will succeed

  if (!tracker) {
    return true;
  }

  var lastValue = tracker.getValue();
  var nextValue = getValueFromNode(node);

  if (nextValue !== lastValue) {
    tracker.setValue(nextValue);
    return true;
  }

  return false;
}

function getActiveElement(doc) {
  doc = doc || (typeof document !== 'undefined' ? document : undefined);

  if (typeof doc === 'undefined') {
    return null;
  }

  try {
    return doc.activeElement || doc.body;
  } catch (e) {
    return doc.body;
  }
}

var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function isControlled(props) {
  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
  return usesChecked ? props.checked != null : props.value != null;
}
/**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */


function getHostProps(element, props) {
  var node = element;
  var checked = props.checked;

  var hostProps = _assign({}, props, {
    defaultChecked: undefined,
    defaultValue: undefined,
    value: undefined,
    checked: checked != null ? checked : node._wrapperState.initialChecked
  });

  return hostProps;
}
function initWrapperState(element, props) {
  {
    checkControlledValueProps('input', props);

    if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
      error('%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);

      didWarnCheckedDefaultChecked = true;
    }

    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
      error('%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);

      didWarnValueDefaultValue = true;
    }
  }

  var node = element;
  var defaultValue = props.defaultValue == null ? '' : props.defaultValue;
  node._wrapperState = {
    initialChecked: props.checked != null ? props.checked : props.defaultChecked,
    initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
    controlled: isControlled(props)
  };
}
function updateChecked(element, props) {
  var node = element;
  var checked = props.checked;

  if (checked != null) {
    setValueForProperty(node, 'checked', checked, false);
  }
}
function updateWrapper(element, props) {
  var node = element;

  {
    var controlled = isControlled(props);

    if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
      error('A component is changing an uncontrolled input to be controlled. ' + 'This is likely caused by the value changing from undefined to ' + 'a defined value, which should not happen. ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components');

      didWarnUncontrolledToControlled = true;
    }

    if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
      error('A component is changing a controlled input to be uncontrolled. ' + 'This is likely caused by the value changing from a defined to ' + 'undefined, which should not happen. ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components');

      didWarnControlledToUncontrolled = true;
    }
  }

  updateChecked(element, props);
  var value = getToStringValue(props.value);
  var type = props.type;

  if (value != null) {
    if (type === 'number') {
      if (value === 0 && node.value === '' || // We explicitly want to coerce to number here if possible.
      // eslint-disable-next-line
      node.value != value) {
        node.value = toString(value);
      }
    } else if (node.value !== toString(value)) {
      node.value = toString(value);
    }
  } else if (type === 'submit' || type === 'reset') {
    // Submit/reset inputs need the attribute removed completely to avoid
    // blank-text buttons.
    node.removeAttribute('value');
    return;
  }

  {
    // When syncing the value attribute, the value comes from a cascade of
    // properties:
    //  1. The value React property
    //  2. The defaultValue React property
    //  3. Otherwise there should be no change
    if (props.hasOwnProperty('value')) {
      setDefaultValue(node, props.type, value);
    } else if (props.hasOwnProperty('defaultValue')) {
      setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
    }
  }

  {
    // When syncing the checked attribute, it only changes when it needs
    // to be removed, such as transitioning from a checkbox into a text input
    if (props.checked == null && props.defaultChecked != null) {
      node.defaultChecked = !!props.defaultChecked;
    }
  }
}
function postMountWrapper(element, props, isHydrating) {
  var node = element; // Do not assign value if it is already set. This prevents user text input
  // from being lost during SSR hydration.

  if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {
    var type = props.type;
    var isButton = type === 'submit' || type === 'reset'; // Avoid setting value attribute on submit/reset inputs as it overrides the
    // default value provided by the browser. See: #12872

    if (isButton && (props.value === undefined || props.value === null)) {
      return;
    }

    var initialValue = toString(node._wrapperState.initialValue); // Do not assign value if it is already set. This prevents user text input
    // from being lost during SSR hydration.

    if (!isHydrating) {
      {
        // When syncing the value attribute, the value property should use
        // the wrapperState._initialValue property. This uses:
        //
        //   1. The value React property when present
        //   2. The defaultValue React property when present
        //   3. An empty string
        if (initialValue !== node.value) {
          node.value = initialValue;
        }
      }
    }

    {
      // Otherwise, the value attribute is synchronized to the property,
      // so we assign defaultValue to the same thing as the value property
      // assignment step above.
      node.defaultValue = initialValue;
    }
  } // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
  // this is needed to work around a chrome bug where setting defaultChecked
  // will sometimes influence the value of checked (even after detachment).
  // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
  // We need to temporarily unset name to avoid disrupting radio button groups.


  var name = node.name;

  if (name !== '') {
    node.name = '';
  }

  {
    // When syncing the checked attribute, both the checked property and
    // attribute are assigned at the same time using defaultChecked. This uses:
    //
    //   1. The checked React property when present
    //   2. The defaultChecked React property when present
    //   3. Otherwise, false
    node.defaultChecked = !node.defaultChecked;
    node.defaultChecked = !!node._wrapperState.initialChecked;
  }

  if (name !== '') {
    node.name = name;
  }
}
function restoreControlledState(element, props) {
  var node = element;
  updateWrapper(node, props);
  updateNamedCousins(node, props);
}

function updateNamedCousins(rootNode, props) {
  var name = props.name;

  if (props.type === 'radio' && name != null) {
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    } // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form. It might not even be in the
    // document. Let's just use the local `querySelectorAll` to ensure we don't
    // miss anything.


    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];

      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      } // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.


      var otherProps = getFiberCurrentPropsFromNode(otherNode);

      if (!otherProps) {
        {
          throw Error( "ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported." );
        }
      } // We need update the tracked value on the named cousin since the value
      // was changed but the input saw no event or value set


      updateValueIfChanged(otherNode); // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.

      updateWrapper(otherNode, otherProps);
    }
  }
} // In Chrome, assigning defaultValue to certain input types triggers input validation.
// For number inputs, the display value loses trailing decimal points. For email inputs,
// Chrome raises "The specified value <x> is not a valid email address".
//
// Here we check to see if the defaultValue has actually changed, avoiding these problems
// when the user is inputting text
//
// https://github.com/facebook/react/issues/7253


function setDefaultValue(node, type, value) {
  if ( // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
  type !== 'number' || getActiveElement(node.ownerDocument) !== node) {
    if (value == null) {
      node.defaultValue = toString(node._wrapperState.initialValue);
    } else if (node.defaultValue !== toString(value)) {
      node.defaultValue = toString(value);
    }
  }
}

var didWarnSelectedSetOnOption = false;
var didWarnInvalidChild = false;

function flattenChildren(children) {
  var content = ''; // Flatten children. We'll warn if they are invalid
  // during validateProps() which runs for hydration too.
  // Note that this would throw on non-element objects.
  // Elements are stringified (which is normally irrelevant
  // but matters for <fbt>).

  React.Children.forEach(children, function (child) {
    if (child == null) {
      return;
    }

    content += child; // Note: we don't warn about invalid children here.
    // Instead, this is done separately below so that
    // it happens during the hydration code path too.
  });
  return content;
}
/**
 * Implements an <option> host component that warns when `selected` is set.
 */


function validateProps(element, props) {
  {
    // This mirrors the code path above, but runs for hydration too.
    // Warn about invalid children here so that client and hydration are consistent.
    // TODO: this seems like it could cause a DEV-only throw for hydration
    // if children contains a non-element object. We should try to avoid that.
    if (typeof props.children === 'object' && props.children !== null) {
      React.Children.forEach(props.children, function (child) {
        if (child == null) {
          return;
        }

        if (typeof child === 'string' || typeof child === 'number') {
          return;
        }

        if (typeof child.type !== 'string') {
          return;
        }

        if (!didWarnInvalidChild) {
          didWarnInvalidChild = true;

          error('Only strings and numbers are supported as <option> children.');
        }
      });
    } // TODO: Remove support for `selected` in <option>.


    if (props.selected != null && !didWarnSelectedSetOnOption) {
      error('Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');

      didWarnSelectedSetOnOption = true;
    }
  }
}
function postMountWrapper$1(element, props) {
  // value="" should make a value attribute (#6219)
  if (props.value != null) {
    element.setAttribute('value', toString(getToStringValue(props.value)));
  }
}
function getHostProps$1(element, props) {
  var hostProps = _assign({
    children: undefined
  }, props);

  var content = flattenChildren(props.children);

  if (content) {
    hostProps.children = content;
  }

  return hostProps;
}

var didWarnValueDefaultValue$1;

{
  didWarnValueDefaultValue$1 = false;
}

function getDeclarationErrorAddendum() {
  var ownerName = getCurrentFiberOwnerNameInDevOrNull();

  if (ownerName) {
    return '\n\nCheck the render method of `' + ownerName + '`.';
  }

  return '';
}

var valuePropNames = ['value', 'defaultValue'];
/**
 * Validation function for `value` and `defaultValue`.
 */

function checkSelectPropTypes(props) {
  {
    checkControlledValueProps('select', props);

    for (var i = 0; i < valuePropNames.length; i++) {
      var propName = valuePropNames[i];

      if (props[propName] == null) {
        continue;
      }

      var isArray = Array.isArray(props[propName]);

      if (props.multiple && !isArray) {
        error('The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());
      } else if (!props.multiple && isArray) {
        error('The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());
      }
    }
  }
}

function updateOptions(node, multiple, propValue, setDefaultSelected) {
  var options = node.options;

  if (multiple) {
    var selectedValues = propValue;
    var selectedValue = {};

    for (var i = 0; i < selectedValues.length; i++) {
      // Prefix to avoid chaos with special keys.
      selectedValue['$' + selectedValues[i]] = true;
    }

    for (var _i = 0; _i < options.length; _i++) {
      var selected = selectedValue.hasOwnProperty('$' + options[_i].value);

      if (options[_i].selected !== selected) {
        options[_i].selected = selected;
      }

      if (selected && setDefaultSelected) {
        options[_i].defaultSelected = true;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    var _selectedValue = toString(getToStringValue(propValue));

    var defaultSelected = null;

    for (var _i2 = 0; _i2 < options.length; _i2++) {
      if (options[_i2].value === _selectedValue) {
        options[_i2].selected = true;

        if (setDefaultSelected) {
          options[_i2].defaultSelected = true;
        }

        return;
      }

      if (defaultSelected === null && !options[_i2].disabled) {
        defaultSelected = options[_i2];
      }
    }

    if (defaultSelected !== null) {
      defaultSelected.selected = true;
    }
  }
}
/**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */


function getHostProps$2(element, props) {
  return _assign({}, props, {
    value: undefined
  });
}
function initWrapperState$1(element, props) {
  var node = element;

  {
    checkSelectPropTypes(props);
  }

  node._wrapperState = {
    wasMultiple: !!props.multiple
  };

  {
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
      error('Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components');

      didWarnValueDefaultValue$1 = true;
    }
  }
}
function postMountWrapper$2(element, props) {
  var node = element;
  node.multiple = !!props.multiple;
  var value = props.value;

  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  } else if (props.defaultValue != null) {
    updateOptions(node, !!props.multiple, props.defaultValue, true);
  }
}
function postUpdateWrapper(element, props) {
  var node = element;
  var wasMultiple = node._wrapperState.wasMultiple;
  node._wrapperState.wasMultiple = !!props.multiple;
  var value = props.value;

  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  } else if (wasMultiple !== !!props.multiple) {
    // For simplicity, reapply `defaultValue` if `multiple` is toggled.
    if (props.defaultValue != null) {
      updateOptions(node, !!props.multiple, props.defaultValue, true);
    } else {
      // Revert the select back to its default unselected state.
      updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
    }
  }
}
function restoreControlledState$1(element, props) {
  var node = element;
  var value = props.value;

  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  }
}

var didWarnValDefaultVal = false;

/**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */
function getHostProps$3(element, props) {
  var node = element;

  if (!(props.dangerouslySetInnerHTML == null)) {
    {
      throw Error( "`dangerouslySetInnerHTML` does not make sense on <textarea>." );
    }
  } // Always set children to the same thing. In IE9, the selection range will
  // get reset if `textContent` is mutated.  We could add a check in setTextContent
  // to only set the value if/when the value differs from the node value (which would
  // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
  // solution. The value can be a boolean or object so that's why it's forced
  // to be a string.


  var hostProps = _assign({}, props, {
    value: undefined,
    defaultValue: undefined,
    children: toString(node._wrapperState.initialValue)
  });

  return hostProps;
}
function initWrapperState$2(element, props) {
  var node = element;

  {
    checkControlledValueProps('textarea', props);

    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
      error('%s contains a textarea with both value and defaultValue props. ' + 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component');

      didWarnValDefaultVal = true;
    }
  }

  var initialValue = props.value; // Only bother fetching default value if we're going to use it

  if (initialValue == null) {
    var children = props.children,
        defaultValue = props.defaultValue;

    if (children != null) {
      {
        error('Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');
      }

      {
        if (!(defaultValue == null)) {
          {
            throw Error( "If you supply `defaultValue` on a <textarea>, do not pass children." );
          }
        }

        if (Array.isArray(children)) {
          if (!(children.length <= 1)) {
            {
              throw Error( "<textarea> can only have at most one child." );
            }
          }

          children = children[0];
        }

        defaultValue = children;
      }
    }

    if (defaultValue == null) {
      defaultValue = '';
    }

    initialValue = defaultValue;
  }

  node._wrapperState = {
    initialValue: getToStringValue(initialValue)
  };
}
function updateWrapper$1(element, props) {
  var node = element;
  var value = getToStringValue(props.value);
  var defaultValue = getToStringValue(props.defaultValue);

  if (value != null) {
    // Cast `value` to a string to ensure the value is set correctly. While
    // browsers typically do this as necessary, jsdom doesn't.
    var newValue = toString(value); // To avoid side effects (such as losing text selection), only set value if changed

    if (newValue !== node.value) {
      node.value = newValue;
    }

    if (props.defaultValue == null && node.defaultValue !== newValue) {
      node.defaultValue = newValue;
    }
  }

  if (defaultValue != null) {
    node.defaultValue = toString(defaultValue);
  }
}
function postMountWrapper$3(element, props) {
  var node = element; // This is in postMount because we need access to the DOM node, which is not
  // available until after the component has mounted.

  var textContent = node.textContent; // Only set node.value if textContent is equal to the expected
  // initial value. In IE10/IE11 there is a bug where the placeholder attribute
  // will populate textContent as well.
  // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/

  if (textContent === node._wrapperState.initialValue) {
    if (textContent !== '' && textContent !== null) {
      node.value = textContent;
    }
  }
}
function restoreControlledState$2(element, props) {
  // DOM component is still mounted; update
  updateWrapper$1(element, props);
}

var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';
var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';
var Namespaces = {
  html: HTML_NAMESPACE,
  mathml: MATH_NAMESPACE,
  svg: SVG_NAMESPACE
}; // Assumes there is no parent namespace.

function getIntrinsicNamespace(type) {
  switch (type) {
    case 'svg':
      return SVG_NAMESPACE;

    case 'math':
      return MATH_NAMESPACE;

    default:
      return HTML_NAMESPACE;
  }
}
function getChildNamespace(parentNamespace, type) {
  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) {
    // No (or default) parent namespace: potential entry point.
    return getIntrinsicNamespace(type);
  }

  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {
    // We're leaving SVG.
    return HTML_NAMESPACE;
  } // By default, pass namespace below.


  return parentNamespace;
}

/* globals MSApp */

/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */
var createMicrosoftUnsafeLocalFunction = function (func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

var reusableSVGContainer;
/**
 * Set the innerHTML property of a node
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */

var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  if (node.namespaceURI === Namespaces.svg) {

    if (!('innerHTML' in node)) {
      // IE does not have innerHTML for SVG nodes, so instead we inject the
      // new markup in a temp node and then move the child nodes across into
      // the target node
      reusableSVGContainer = reusableSVGContainer || document.createElement('div');
      reusableSVGContainer.innerHTML = '<svg>' + html.valueOf().toString() + '</svg>';
      var svgNode = reusableSVGContainer.firstChild;

      while (node.firstChild) {
        node.removeChild(node.firstChild);
      }

      while (svgNode.firstChild) {
        node.appendChild(svgNode.firstChild);
      }

      return;
    }
  }

  node.innerHTML = html;
});

/**
 * HTML nodeType values that represent the type of the node
 */
var ELEMENT_NODE = 1;
var TEXT_NODE = 3;
var COMMENT_NODE = 8;
var DOCUMENT_NODE = 9;
var DOCUMENT_FRAGMENT_NODE = 11;

/**
 * Set the textContent property of a node. For text updates, it's faster
 * to set the `nodeValue` of the Text node directly instead of using
 * `.textContent` which will remove the existing node and create a new one.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */

var setTextContent = function (node, text) {
  if (text) {
    var firstChild = node.firstChild;

    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
      firstChild.nodeValue = text;
      return;
    }
  }

  node.textContent = text;
};

// List derived from Gecko source code:
// https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js
var shorthandToLonghand = {
  animation: ['animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction'],
  background: ['backgroundAttachment', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPositionX', 'backgroundPositionY', 'backgroundRepeat', 'backgroundSize'],
  backgroundPosition: ['backgroundPositionX', 'backgroundPositionY'],
  border: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderTopColor', 'borderTopStyle', 'borderTopWidth'],
  borderBlockEnd: ['borderBlockEndColor', 'borderBlockEndStyle', 'borderBlockEndWidth'],
  borderBlockStart: ['borderBlockStartColor', 'borderBlockStartStyle', 'borderBlockStartWidth'],
  borderBottom: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth'],
  borderColor: ['borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor'],
  borderImage: ['borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth'],
  borderInlineEnd: ['borderInlineEndColor', 'borderInlineEndStyle', 'borderInlineEndWidth'],
  borderInlineStart: ['borderInlineStartColor', 'borderInlineStartStyle', 'borderInlineStartWidth'],
  borderLeft: ['borderLeftColor', 'borderLeftStyle', 'borderLeftWidth'],
  borderRadius: ['borderBottomLeftRadius', 'borderBottomRightRadius', 'borderTopLeftRadius', 'borderTopRightRadius'],
  borderRight: ['borderRightColor', 'borderRightStyle', 'borderRightWidth'],
  borderStyle: ['borderBottomStyle', 'borderLeftStyle', 'borderRightStyle', 'borderTopStyle'],
  borderTop: ['borderTopColor', 'borderTopStyle', 'borderTopWidth'],
  borderWidth: ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth'],
  columnRule: ['columnRuleColor', 'columnRuleStyle', 'columnRuleWidth'],
  columns: ['columnCount', 'columnWidth'],
  flex: ['flexBasis', 'flexGrow', 'flexShrink'],
  flexFlow: ['flexDirection', 'flexWrap'],
  font: ['fontFamily', 'fontFeatureSettings', 'fontKerning', 'fontLanguageOverride', 'fontSize', 'fontSizeAdjust', 'fontStretch', 'fontStyle', 'fontVariant', 'fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition', 'fontWeight', 'lineHeight'],
  fontVariant: ['fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition'],
  gap: ['columnGap', 'rowGap'],
  grid: ['gridAutoColumns', 'gridAutoFlow', 'gridAutoRows', 'gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
  gridArea: ['gridColumnEnd', 'gridColumnStart', 'gridRowEnd', 'gridRowStart'],
  gridColumn: ['gridColumnEnd', 'gridColumnStart'],
  gridColumnGap: ['columnGap'],
  gridGap: ['columnGap', 'rowGap'],
  gridRow: ['gridRowEnd', 'gridRowStart'],
  gridRowGap: ['rowGap'],
  gridTemplate: ['gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
  listStyle: ['listStyleImage', 'listStylePosition', 'listStyleType'],
  margin: ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],
  marker: ['markerEnd', 'markerMid', 'markerStart'],
  mask: ['maskClip', 'maskComposite', 'maskImage', 'maskMode', 'maskOrigin', 'maskPositionX', 'maskPositionY', 'maskRepeat', 'maskSize'],
  maskPosition: ['maskPositionX', 'maskPositionY'],
  outline: ['outlineColor', 'outlineStyle', 'outlineWidth'],
  overflow: ['overflowX', 'overflowY'],
  padding: ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],
  placeContent: ['alignContent', 'justifyContent'],
  placeItems: ['alignItems', 'justifyItems'],
  placeSelf: ['alignSelf', 'justifySelf'],
  textDecoration: ['textDecorationColor', 'textDecorationLine', 'textDecorationStyle'],
  textEmphasis: ['textEmphasisColor', 'textEmphasisStyle'],
  transition: ['transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction'],
  wordWrap: ['overflowWrap']
};

/**
 * CSS properties which accept numbers but are not in units of "px".
 */
var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridArea: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};
/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */

function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}
/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */


var prefixes = ['Webkit', 'ms', 'Moz', 'O']; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.

Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */

function dangerousStyleValue(name, value, isCustomProperty) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901
  var isEmpty = value == null || typeof value === 'boolean' || value === '';

  if (isEmpty) {
    return '';
  }

  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
  }

  return ('' + value).trim();
}

var uppercasePattern = /([A-Z])/g;
var msPattern = /^ms-/;
/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 */

function hyphenateStyleName(name) {
  return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');
}

var warnValidStyle = function () {};

{
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
  var msPattern$1 = /^-ms-/;
  var hyphenPattern = /-(.)/g; // style values shouldn't contain a semicolon

  var badStyleValueWithSemicolonPattern = /;\s*$/;
  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;
  var warnedForInfinityValue = false;

  var camelize = function (string) {
    return string.replace(hyphenPattern, function (_, character) {
      return character.toUpperCase();
    });
  };

  var warnHyphenatedStyleName = function (name) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;

    error('Unsupported style property %s. Did you mean %s?', name, // As Andi Smith suggests
    // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
    // is converted to lowercase `ms`.
    camelize(name.replace(msPattern$1, 'ms-')));
  };

  var warnBadVendoredStyleName = function (name) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;

    error('Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));
  };

  var warnStyleValueWithSemicolon = function (name, value) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;

    error("Style property values shouldn't contain a semicolon. " + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ''));
  };

  var warnStyleValueIsNaN = function (name, value) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;

    error('`NaN` is an invalid value for the `%s` css style property.', name);
  };

  var warnStyleValueIsInfinity = function (name, value) {
    if (warnedForInfinityValue) {
      return;
    }

    warnedForInfinityValue = true;

    error('`Infinity` is an invalid value for the `%s` css style property.', name);
  };

  warnValidStyle = function (name, value) {
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value);
    }

    if (typeof value === 'number') {
      if (isNaN(value)) {
        warnStyleValueIsNaN(name, value);
      } else if (!isFinite(value)) {
        warnStyleValueIsInfinity(name, value);
      }
    }
  };
}

var warnValidStyle$1 = warnValidStyle;

/**
 * Operations for dealing with CSS properties.
 */

/**
 * This creates a string that is expected to be equivalent to the style
 * attribute generated by server-side rendering. It by-passes warnings and
 * security checks so it's not safe to use this value for anything other than
 * comparison. It is only used in DEV for SSR validation.
 */

function createDangerousStringForStyles(styles) {
  {
    var serialized = '';
    var delimiter = '';

    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }

      var styleValue = styles[styleName];

      if (styleValue != null) {
        var isCustomProperty = styleName.indexOf('--') === 0;
        serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
        delimiter = ';';
      }
    }

    return serialized || null;
  }
}
/**
 * Sets the value for multiple styles on a node.  If a value is specified as
 * '' (empty string), the corresponding style property will be unset.
 *
 * @param {DOMElement} node
 * @param {object} styles
 */

function setValueForStyles(node, styles) {
  var style = node.style;

  for (var styleName in styles) {
    if (!styles.hasOwnProperty(styleName)) {
      continue;
    }

    var isCustomProperty = styleName.indexOf('--') === 0;

    {
      if (!isCustomProperty) {
        warnValidStyle$1(styleName, styles[styleName]);
      }
    }

    var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);

    if (styleName === 'float') {
      styleName = 'cssFloat';
    }

    if (isCustomProperty) {
      style.setProperty(styleName, styleValue);
    } else {
      style[styleName] = styleValue;
    }
  }
}

function isValueEmpty(value) {
  return value == null || typeof value === 'boolean' || value === '';
}
/**
 * Given {color: 'red', overflow: 'hidden'} returns {
 *   color: 'color',
 *   overflowX: 'overflow',
 *   overflowY: 'overflow',
 * }. This can be read as "the overflowY property was set by the overflow
 * shorthand". That is, the values are the property that each was derived from.
 */


function expandShorthandMap(styles) {
  var expanded = {};

  for (var key in styles) {
    var longhands = shorthandToLonghand[key] || [key];

    for (var i = 0; i < longhands.length; i++) {
      expanded[longhands[i]] = key;
    }
  }

  return expanded;
}
/**
 * When mixing shorthand and longhand property names, we warn during updates if
 * we expect an incorrect result to occur. In particular, we warn for:
 *
 * Updating a shorthand property (longhand gets overwritten):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}
 *   becomes .style.font = 'baz'
 * Removing a shorthand property (longhand gets lost too):
 *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}
 *   becomes .style.font = ''
 * Removing a longhand property (should revert to shorthand; doesn't):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}
 *   becomes .style.fontVariant = ''
 */


function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
  {
    if (!nextStyles) {
      return;
    }

    var expandedUpdates = expandShorthandMap(styleUpdates);
    var expandedStyles = expandShorthandMap(nextStyles);
    var warnedAbout = {};

    for (var key in expandedUpdates) {
      var originalKey = expandedUpdates[key];
      var correctOriginalKey = expandedStyles[key];

      if (correctOriginalKey && originalKey !== correctOriginalKey) {
        var warningKey = originalKey + ',' + correctOriginalKey;

        if (warnedAbout[warningKey]) {
          continue;
        }

        warnedAbout[warningKey] = true;

        error('%s a style property during rerender (%s) when a ' + 'conflicting property is set (%s) can lead to styling bugs. To ' + "avoid this, don't mix shorthand and non-shorthand properties " + 'for the same value; instead, replace the shorthand with ' + 'separate values.', isValueEmpty(styleUpdates[originalKey]) ? 'Removing' : 'Updating', originalKey, correctOriginalKey);
      }
    }
  }
}

// For HTML, certain tags should omit their close tag. We keep a list for
// those special-case tags.
var omittedCloseTags = {
  area: true,
  base: true,
  br: true,
  col: true,
  embed: true,
  hr: true,
  img: true,
  input: true,
  keygen: true,
  link: true,
  meta: true,
  param: true,
  source: true,
  track: true,
  wbr: true // NOTE: menuitem's close tag should be omitted, but that causes problems.

};

// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = _assign({
  menuitem: true
}, omittedCloseTags);

var HTML = '__html';

function assertValidProps(tag, props) {
  if (!props) {
    return;
  } // Note the use of `==` which checks for null or undefined.


  if (voidElementTags[tag]) {
    if (!(props.children == null && props.dangerouslySetInnerHTML == null)) {
      {
        throw Error( tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`." );
      }
    }
  }

  if (props.dangerouslySetInnerHTML != null) {
    if (!(props.children == null)) {
      {
        throw Error( "Can only set one of `children` or `props.dangerouslySetInnerHTML`." );
      }
    }

    if (!(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML)) {
      {
        throw Error( "`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information." );
      }
    }
  }

  {
    if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) {
      error('A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.');
    }
  }

  if (!(props.style == null || typeof props.style === 'object')) {
    {
      throw Error( "The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX." );
    }
  }
}

function isCustomComponent(tagName, props) {
  if (tagName.indexOf('-') === -1) {
    return typeof props.is === 'string';
  }

  switch (tagName) {
    // These are reserved SVG and MathML elements.
    // We don't mind this list too much because we expect it to never grow.
    // The alternative is to track the namespace in a few places which is convoluted.
    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
    case 'annotation-xml':
    case 'color-profile':
    case 'font-face':
    case 'font-face-src':
    case 'font-face-uri':
    case 'font-face-format':
    case 'font-face-name':
    case 'missing-glyph':
      return false;

    default:
      return true;
  }
}

// When adding attributes to the HTML or SVG allowed attribute list, be sure to
// also add them to this module to ensure casing and incorrect name
// warnings.
var possibleStandardNames = {
  // HTML
  accept: 'accept',
  acceptcharset: 'acceptCharset',
  'accept-charset': 'acceptCharset',
  accesskey: 'accessKey',
  action: 'action',
  allowfullscreen: 'allowFullScreen',
  alt: 'alt',
  as: 'as',
  async: 'async',
  autocapitalize: 'autoCapitalize',
  autocomplete: 'autoComplete',
  autocorrect: 'autoCorrect',
  autofocus: 'autoFocus',
  autoplay: 'autoPlay',
  autosave: 'autoSave',
  capture: 'capture',
  cellpadding: 'cellPadding',
  cellspacing: 'cellSpacing',
  challenge: 'challenge',
  charset: 'charSet',
  checked: 'checked',
  children: 'children',
  cite: 'cite',
  class: 'className',
  classid: 'classID',
  classname: 'className',
  cols: 'cols',
  colspan: 'colSpan',
  content: 'content',
  contenteditable: 'contentEditable',
  contextmenu: 'contextMenu',
  controls: 'controls',
  controlslist: 'controlsList',
  coords: 'coords',
  crossorigin: 'crossOrigin',
  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
  data: 'data',
  datetime: 'dateTime',
  default: 'default',
  defaultchecked: 'defaultChecked',
  defaultvalue: 'defaultValue',
  defer: 'defer',
  dir: 'dir',
  disabled: 'disabled',
  disablepictureinpicture: 'disablePictureInPicture',
  disableremoteplayback: 'disableRemotePlayback',
  download: 'download',
  draggable: 'draggable',
  enctype: 'encType',
  enterkeyhint: 'enterKeyHint',
  for: 'htmlFor',
  form: 'form',
  formmethod: 'formMethod',
  formaction: 'formAction',
  formenctype: 'formEncType',
  formnovalidate: 'formNoValidate',
  formtarget: 'formTarget',
  frameborder: 'frameBorder',
  headers: 'headers',
  height: 'height',
  hidden: 'hidden',
  high: 'high',
  href: 'href',
  hreflang: 'hrefLang',
  htmlfor: 'htmlFor',
  httpequiv: 'httpEquiv',
  'http-equiv': 'httpEquiv',
  icon: 'icon',
  id: 'id',
  innerhtml: 'innerHTML',
  inputmode: 'inputMode',
  integrity: 'integrity',
  is: 'is',
  itemid: 'itemID',
  itemprop: 'itemProp',
  itemref: 'itemRef',
  itemscope: 'itemScope',
  itemtype: 'itemType',
  keyparams: 'keyParams',
  keytype: 'keyType',
  kind: 'kind',
  label: 'label',
  lang: 'lang',
  list: 'list',
  loop: 'loop',
  low: 'low',
  manifest: 'manifest',
  marginwidth: 'marginWidth',
  marginheight: 'marginHeight',
  max: 'max',
  maxlength: 'maxLength',
  media: 'media',
  mediagroup: 'mediaGroup',
  method: 'method',
  min: 'min',
  minlength: 'minLength',
  multiple: 'multiple',
  muted: 'muted',
  name: 'name',
  nomodule: 'noModule',
  nonce: 'nonce',
  novalidate: 'noValidate',
  open: 'open',
  optimum: 'optimum',
  pattern: 'pattern',
  placeholder: 'placeholder',
  playsinline: 'playsInline',
  poster: 'poster',
  preload: 'preload',
  profile: 'profile',
  radiogroup: 'radioGroup',
  readonly: 'readOnly',
  referrerpolicy: 'referrerPolicy',
  rel: 'rel',
  required: 'required',
  reversed: 'reversed',
  role: 'role',
  rows: 'rows',
  rowspan: 'rowSpan',
  sandbox: 'sandbox',
  scope: 'scope',
  scoped: 'scoped',
  scrolling: 'scrolling',
  seamless: 'seamless',
  selected: 'selected',
  shape: 'shape',
  size: 'size',
  sizes: 'sizes',
  span: 'span',
  spellcheck: 'spellCheck',
  src: 'src',
  srcdoc: 'srcDoc',
  srclang: 'srcLang',
  srcset: 'srcSet',
  start: 'start',
  step: 'step',
  style: 'style',
  summary: 'summary',
  tabindex: 'tabIndex',
  target: 'target',
  title: 'title',
  type: 'type',
  usemap: 'useMap',
  value: 'value',
  width: 'width',
  wmode: 'wmode',
  wrap: 'wrap',
  // SVG
  about: 'about',
  accentheight: 'accentHeight',
  'accent-height': 'accentHeight',
  accumulate: 'accumulate',
  additive: 'additive',
  alignmentbaseline: 'alignmentBaseline',
  'alignment-baseline': 'alignmentBaseline',
  allowreorder: 'allowReorder',
  alphabetic: 'alphabetic',
  amplitude: 'amplitude',
  arabicform: 'arabicForm',
  'arabic-form': 'arabicForm',
  ascent: 'ascent',
  attributename: 'attributeName',
  attributetype: 'attributeType',
  autoreverse: 'autoReverse',
  azimuth: 'azimuth',
  basefrequency: 'baseFrequency',
  baselineshift: 'baselineShift',
  'baseline-shift': 'baselineShift',
  baseprofile: 'baseProfile',
  bbox: 'bbox',
  begin: 'begin',
  bias: 'bias',
  by: 'by',
  calcmode: 'calcMode',
  capheight: 'capHeight',
  'cap-height': 'capHeight',
  clip: 'clip',
  clippath: 'clipPath',
  'clip-path': 'clipPath',
  clippathunits: 'clipPathUnits',
  cliprule: 'clipRule',
  'clip-rule': 'clipRule',
  color: 'color',
  colorinterpolation: 'colorInterpolation',
  'color-interpolation': 'colorInterpolation',
  colorinterpolationfilters: 'colorInterpolationFilters',
  'color-interpolation-filters': 'colorInterpolationFilters',
  colorprofile: 'colorProfile',
  'color-profile': 'colorProfile',
  colorrendering: 'colorRendering',
  'color-rendering': 'colorRendering',
  contentscripttype: 'contentScriptType',
  contentstyletype: 'contentStyleType',
  cursor: 'cursor',
  cx: 'cx',
  cy: 'cy',
  d: 'd',
  datatype: 'datatype',
  decelerate: 'decelerate',
  descent: 'descent',
  diffuseconstant: 'diffuseConstant',
  direction: 'direction',
  display: 'display',
  divisor: 'divisor',
  dominantbaseline: 'dominantBaseline',
  'dominant-baseline': 'dominantBaseline',
  dur: 'dur',
  dx: 'dx',
  dy: 'dy',
  edgemode: 'edgeMode',
  elevation: 'elevation',
  enablebackground: 'enableBackground',
  'enable-background': 'enableBackground',
  end: 'end',
  exponent: 'exponent',
  externalresourcesrequired: 'externalResourcesRequired',
  fill: 'fill',
  fillopacity: 'fillOpacity',
  'fill-opacity': 'fillOpacity',
  fillrule: 'fillRule',
  'fill-rule': 'fillRule',
  filter: 'filter',
  filterres: 'filterRes',
  filterunits: 'filterUnits',
  floodopacity: 'floodOpacity',
  'flood-opacity': 'floodOpacity',
  floodcolor: 'floodColor',
  'flood-color': 'floodColor',
  focusable: 'focusable',
  fontfamily: 'fontFamily',
  'font-family': 'fontFamily',
  fontsize: 'fontSize',
  'font-size': 'fontSize',
  fontsizeadjust: 'fontSizeAdjust',
  'font-size-adjust': 'fontSizeAdjust',
  fontstretch: 'fontStretch',
  'font-stretch': 'fontStretch',
  fontstyle: 'fontStyle',
  'font-style': 'fontStyle',
  fontvariant: 'fontVariant',
  'font-variant': 'fontVariant',
  fontweight: 'fontWeight',
  'font-weight': 'fontWeight',
  format: 'format',
  from: 'from',
  fx: 'fx',
  fy: 'fy',
  g1: 'g1',
  g2: 'g2',
  glyphname: 'glyphName',
  'glyph-name': 'glyphName',
  glyphorientationhorizontal: 'glyphOrientationHorizontal',
  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
  glyphorientationvertical: 'glyphOrientationVertical',
  'glyph-orientation-vertical': 'glyphOrientationVertical',
  glyphref: 'glyphRef',
  gradienttransform: 'gradientTransform',
  gradientunits: 'gradientUnits',
  hanging: 'hanging',
  horizadvx: 'horizAdvX',
  'horiz-adv-x': 'horizAdvX',
  horizoriginx: 'horizOriginX',
  'horiz-origin-x': 'horizOriginX',
  ideographic: 'ideographic',
  imagerendering: 'imageRendering',
  'image-rendering': 'imageRendering',
  in2: 'in2',
  in: 'in',
  inlist: 'inlist',
  intercept: 'intercept',
  k1: 'k1',
  k2: 'k2',
  k3: 'k3',
  k4: 'k4',
  k: 'k',
  kernelmatrix: 'kernelMatrix',
  kernelunitlength: 'kernelUnitLength',
  kerning: 'kerning',
  keypoints: 'keyPoints',
  keysplines: 'keySplines',
  keytimes: 'keyTimes',
  lengthadjust: 'lengthAdjust',
  letterspacing: 'letterSpacing',
  'letter-spacing': 'letterSpacing',
  lightingcolor: 'lightingColor',
  'lighting-color': 'lightingColor',
  limitingconeangle: 'limitingConeAngle',
  local: 'local',
  markerend: 'markerEnd',
  'marker-end': 'markerEnd',
  markerheight: 'markerHeight',
  markermid: 'markerMid',
  'marker-mid': 'markerMid',
  markerstart: 'markerStart',
  'marker-start': 'markerStart',
  markerunits: 'markerUnits',
  markerwidth: 'markerWidth',
  mask: 'mask',
  maskcontentunits: 'maskContentUnits',
  maskunits: 'maskUnits',
  mathematical: 'mathematical',
  mode: 'mode',
  numoctaves: 'numOctaves',
  offset: 'offset',
  opacity: 'opacity',
  operator: 'operator',
  order: 'order',
  orient: 'orient',
  orientation: 'orientation',
  origin: 'origin',
  overflow: 'overflow',
  overlineposition: 'overlinePosition',
  'overline-position': 'overlinePosition',
  overlinethickness: 'overlineThickness',
  'overline-thickness': 'overlineThickness',
  paintorder: 'paintOrder',
  'paint-order': 'paintOrder',
  panose1: 'panose1',
  'panose-1': 'panose1',
  pathlength: 'pathLength',
  patterncontentunits: 'patternContentUnits',
  patterntransform: 'patternTransform',
  patternunits: 'patternUnits',
  pointerevents: 'pointerEvents',
  'pointer-events': 'pointerEvents',
  points: 'points',
  pointsatx: 'pointsAtX',
  pointsaty: 'pointsAtY',
  pointsatz: 'pointsAtZ',
  prefix: 'prefix',
  preservealpha: 'preserveAlpha',
  preserveaspectratio: 'preserveAspectRatio',
  primitiveunits: 'primitiveUnits',
  property: 'property',
  r: 'r',
  radius: 'radius',
  refx: 'refX',
  refy: 'refY',
  renderingintent: 'renderingIntent',
  'rendering-intent': 'renderingIntent',
  repeatcount: 'repeatCount',
  repeatdur: 'repeatDur',
  requiredextensions: 'requiredExtensions',
  requiredfeatures: 'requiredFeatures',
  resource: 'resource',
  restart: 'restart',
  result: 'result',
  results: 'results',
  rotate: 'rotate',
  rx: 'rx',
  ry: 'ry',
  scale: 'scale',
  security: 'security',
  seed: 'seed',
  shaperendering: 'shapeRendering',
  'shape-rendering': 'shapeRendering',
  slope: 'slope',
  spacing: 'spacing',
  specularconstant: 'specularConstant',
  specularexponent: 'specularExponent',
  speed: 'speed',
  spreadmethod: 'spreadMethod',
  startoffset: 'startOffset',
  stddeviation: 'stdDeviation',
  stemh: 'stemh',
  stemv: 'stemv',
  stitchtiles: 'stitchTiles',
  stopcolor: 'stopColor',
  'stop-color': 'stopColor',
  stopopacity: 'stopOpacity',
  'stop-opacity': 'stopOpacity',
  strikethroughposition: 'strikethroughPosition',
  'strikethrough-position': 'strikethroughPosition',
  strikethroughthickness: 'strikethroughThickness',
  'strikethrough-thickness': 'strikethroughThickness',
  string: 'string',
  stroke: 'stroke',
  strokedasharray: 'strokeDasharray',
  'stroke-dasharray': 'strokeDasharray',
  strokedashoffset: 'strokeDashoffset',
  'stroke-dashoffset': 'strokeDashoffset',
  strokelinecap: 'strokeLinecap',
  'stroke-linecap': 'strokeLinecap',
  strokelinejoin: 'strokeLinejoin',
  'stroke-linejoin': 'strokeLinejoin',
  strokemiterlimit: 'strokeMiterlimit',
  'stroke-miterlimit': 'strokeMiterlimit',
  strokewidth: 'strokeWidth',
  'stroke-width': 'strokeWidth',
  strokeopacity: 'strokeOpacity',
  'stroke-opacity': 'strokeOpacity',
  suppresscontenteditablewarning: 'suppressContentEditableWarning',
  suppresshydrationwarning: 'suppressHydrationWarning',
  surfacescale: 'surfaceScale',
  systemlanguage: 'systemLanguage',
  tablevalues: 'tableValues',
  targetx: 'targetX',
  targety: 'targetY',
  textanchor: 'textAnchor',
  'text-anchor': 'textAnchor',
  textdecoration: 'textDecoration',
  'text-decoration': 'textDecoration',
  textlength: 'textLength',
  textrendering: 'textRendering',
  'text-rendering': 'textRendering',
  to: 'to',
  transform: 'transform',
  typeof: 'typeof',
  u1: 'u1',
  u2: 'u2',
  underlineposition: 'underlinePosition',
  'underline-position': 'underlinePosition',
  underlinethickness: 'underlineThickness',
  'underline-thickness': 'underlineThickness',
  unicode: 'unicode',
  unicodebidi: 'unicodeBidi',
  'unicode-bidi': 'unicodeBidi',
  unicoderange: 'unicodeRange',
  'unicode-range': 'unicodeRange',
  unitsperem: 'unitsPerEm',
  'units-per-em': 'unitsPerEm',
  unselectable: 'unselectable',
  valphabetic: 'vAlphabetic',
  'v-alphabetic': 'vAlphabetic',
  values: 'values',
  vectoreffect: 'vectorEffect',
  'vector-effect': 'vectorEffect',
  version: 'version',
  vertadvy: 'vertAdvY',
  'vert-adv-y': 'vertAdvY',
  vertoriginx: 'vertOriginX',
  'vert-origin-x': 'vertOriginX',
  vertoriginy: 'vertOriginY',
  'vert-origin-y': 'vertOriginY',
  vhanging: 'vHanging',
  'v-hanging': 'vHanging',
  videographic: 'vIdeographic',
  'v-ideographic': 'vIdeographic',
  viewbox: 'viewBox',
  viewtarget: 'viewTarget',
  visibility: 'visibility',
  vmathematical: 'vMathematical',
  'v-mathematical': 'vMathematical',
  vocab: 'vocab',
  widths: 'widths',
  wordspacing: 'wordSpacing',
  'word-spacing': 'wordSpacing',
  writingmode: 'writingMode',
  'writing-mode': 'writingMode',
  x1: 'x1',
  x2: 'x2',
  x: 'x',
  xchannelselector: 'xChannelSelector',
  xheight: 'xHeight',
  'x-height': 'xHeight',
  xlinkactuate: 'xlinkActuate',
  'xlink:actuate': 'xlinkActuate',
  xlinkarcrole: 'xlinkArcrole',
  'xlink:arcrole': 'xlinkArcrole',
  xlinkhref: 'xlinkHref',
  'xlink:href': 'xlinkHref',
  xlinkrole: 'xlinkRole',
  'xlink:role': 'xlinkRole',
  xlinkshow: 'xlinkShow',
  'xlink:show': 'xlinkShow',
  xlinktitle: 'xlinkTitle',
  'xlink:title': 'xlinkTitle',
  xlinktype: 'xlinkType',
  'xlink:type': 'xlinkType',
  xmlbase: 'xmlBase',
  'xml:base': 'xmlBase',
  xmllang: 'xmlLang',
  'xml:lang': 'xmlLang',
  xmlns: 'xmlns',
  'xml:space': 'xmlSpace',
  xmlnsxlink: 'xmlnsXlink',
  'xmlns:xlink': 'xmlnsXlink',
  xmlspace: 'xmlSpace',
  y1: 'y1',
  y2: 'y2',
  y: 'y',
  ychannelselector: 'yChannelSelector',
  z: 'z',
  zoomandpan: 'zoomAndPan'
};

var ariaProperties = {
  'aria-current': 0,
  // state
  'aria-details': 0,
  'aria-disabled': 0,
  // state
  'aria-hidden': 0,
  // state
  'aria-invalid': 0,
  // state
  'aria-keyshortcuts': 0,
  'aria-label': 0,
  'aria-roledescription': 0,
  // Widget Attributes
  'aria-autocomplete': 0,
  'aria-checked': 0,
  'aria-expanded': 0,
  'aria-haspopup': 0,
  'aria-level': 0,
  'aria-modal': 0,
  'aria-multiline': 0,
  'aria-multiselectable': 0,
  'aria-orientation': 0,
  'aria-placeholder': 0,
  'aria-pressed': 0,
  'aria-readonly': 0,
  'aria-required': 0,
  'aria-selected': 0,
  'aria-sort': 0,
  'aria-valuemax': 0,
  'aria-valuemin': 0,
  'aria-valuenow': 0,
  'aria-valuetext': 0,
  // Live Region Attributes
  'aria-atomic': 0,
  'aria-busy': 0,
  'aria-live': 0,
  'aria-relevant': 0,
  // Drag-and-Drop Attributes
  'aria-dropeffect': 0,
  'aria-grabbed': 0,
  // Relationship Attributes
  'aria-activedescendant': 0,
  'aria-colcount': 0,
  'aria-colindex': 0,
  'aria-colspan': 0,
  'aria-controls': 0,
  'aria-describedby': 0,
  'aria-errormessage': 0,
  'aria-flowto': 0,
  'aria-labelledby': 0,
  'aria-owns': 0,
  'aria-posinset': 0,
  'aria-rowcount': 0,
  'aria-rowindex': 0,
  'aria-rowspan': 0,
  'aria-setsize': 0
};

var warnedProperties = {};
var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');
var hasOwnProperty$1 = Object.prototype.hasOwnProperty;

function validateProperty(tagName, name) {
  {
    if (hasOwnProperty$1.call(warnedProperties, name) && warnedProperties[name]) {
      return true;
    }

    if (rARIACamel.test(name)) {
      var ariaName = 'aria-' + name.slice(4).toLowerCase();
      var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null; // If this is an aria-* attribute, but is not listed in the known DOM
      // DOM properties, then it is an invalid aria-* attribute.

      if (correctName == null) {
        error('Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);

        warnedProperties[name] = true;
        return true;
      } // aria-* attributes should be lowercase; suggest the lowercase version.


      if (name !== correctName) {
        error('Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);

        warnedProperties[name] = true;
        return true;
      }
    }

    if (rARIA.test(name)) {
      var lowerCasedName = name.toLowerCase();
      var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null; // If this is an aria-* attribute, but is not listed in the known DOM
      // DOM properties, then it is an invalid aria-* attribute.

      if (standardName == null) {
        warnedProperties[name] = true;
        return false;
      } // aria-* attributes should be lowercase; suggest the lowercase version.


      if (name !== standardName) {
        error('Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);

        warnedProperties[name] = true;
        return true;
      }
    }
  }

  return true;
}

function warnInvalidARIAProps(type, props) {
  {
    var invalidProps = [];

    for (var key in props) {
      var isValid = validateProperty(type, key);

      if (!isValid) {
        invalidProps.push(key);
      }
    }

    var unknownPropString = invalidProps.map(function (prop) {
      return '`' + prop + '`';
    }).join(', ');

    if (invalidProps.length === 1) {
      error('Invalid aria prop %s on <%s> tag. ' + 'For details, see https://reactjs.org/link/invalid-aria-props', unknownPropString, type);
    } else if (invalidProps.length > 1) {
      error('Invalid aria props %s on <%s> tag. ' + 'For details, see https://reactjs.org/link/invalid-aria-props', unknownPropString, type);
    }
  }
}

function validateProperties(type, props) {
  if (isCustomComponent(type, props)) {
    return;
  }

  warnInvalidARIAProps(type, props);
}

var didWarnValueNull = false;
function validateProperties$1(type, props) {
  {
    if (type !== 'input' && type !== 'textarea' && type !== 'select') {
      return;
    }

    if (props != null && props.value === null && !didWarnValueNull) {
      didWarnValueNull = true;

      if (type === 'select' && props.multiple) {
        error('`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.', type);
      } else {
        error('`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.', type);
      }
    }
  }
}

var validateProperty$1 = function () {};

{
  var warnedProperties$1 = {};
  var _hasOwnProperty = Object.prototype.hasOwnProperty;
  var EVENT_NAME_REGEX = /^on./;
  var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
  var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
  var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

  validateProperty$1 = function (tagName, name, value, eventRegistry) {
    if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
      return true;
    }

    var lowerCasedName = name.toLowerCase();

    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
      error('React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');

      warnedProperties$1[name] = true;
      return true;
    } // We can't rely on the event system being injected on the server.


    if (eventRegistry != null) {
      var registrationNameDependencies = eventRegistry.registrationNameDependencies,
          possibleRegistrationNames = eventRegistry.possibleRegistrationNames;

      if (registrationNameDependencies.hasOwnProperty(name)) {
        return true;
      }

      var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;

      if (registrationName != null) {
        error('Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);

        warnedProperties$1[name] = true;
        return true;
      }

      if (EVENT_NAME_REGEX.test(name)) {
        error('Unknown event handler property `%s`. It will be ignored.', name);

        warnedProperties$1[name] = true;
        return true;
      }
    } else if (EVENT_NAME_REGEX.test(name)) {
      // If no event plugins have been injected, we are in a server environment.
      // So we can't tell if the event name is correct for sure, but we can filter
      // out known bad ones like `onclick`. We can't suggest a specific replacement though.
      if (INVALID_EVENT_NAME_REGEX.test(name)) {
        error('Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.', name);
      }

      warnedProperties$1[name] = true;
      return true;
    } // Let the ARIA attribute hook validate ARIA attributes


    if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
      return true;
    }

    if (lowerCasedName === 'innerhtml') {
      error('Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');

      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'aria') {
      error('The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');

      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
      error('Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.', typeof value);

      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'number' && isNaN(value)) {
      error('Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.', name);

      warnedProperties$1[name] = true;
      return true;
    }

    var propertyInfo = getPropertyInfo(name);
    var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED; // Known attributes should match the casing specified in the property config.

    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
      var standardName = possibleStandardNames[lowerCasedName];

      if (standardName !== name) {
        error('Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);

        warnedProperties$1[name] = true;
        return true;
      }
    } else if (!isReserved && name !== lowerCasedName) {
      // Unknown attributes should have lowercase casing since that's how they
      // will be cased anyway with server rendering.
      error('React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.', name, lowerCasedName);

      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
      if (value) {
        error('Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.', value, name, name, value, name);
      } else {
        error('Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
      }

      warnedProperties$1[name] = true;
      return true;
    } // Now that we've validated casing, do not validate
    // data types for reserved props


    if (isReserved) {
      return true;
    } // Warn when a known attribute is a bad type


    if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
      warnedProperties$1[name] = true;
      return false;
    } // Warn when passing the strings 'false' or 'true' into a boolean prop


    if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
      error('Received the string `%s` for the boolean attribute `%s`. ' + '%s ' + 'Did you mean %s={%s}?', value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string "false".', name, value);

      warnedProperties$1[name] = true;
      return true;
    }

    return true;
  };
}

var warnUnknownProperties = function (type, props, eventRegistry) {
  {
    var unknownProps = [];

    for (var key in props) {
      var isValid = validateProperty$1(type, key, props[key], eventRegistry);

      if (!isValid) {
        unknownProps.push(key);
      }
    }

    var unknownPropString = unknownProps.map(function (prop) {
      return '`' + prop + '`';
    }).join(', ');

    if (unknownProps.length === 1) {
      error('Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://reactjs.org/link/attribute-behavior ', unknownPropString, type);
    } else if (unknownProps.length > 1) {
      error('Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://reactjs.org/link/attribute-behavior ', unknownPropString, type);
    }
  }
};

function validateProperties$2(type, props, eventRegistry) {
  if (isCustomComponent(type, props)) {
    return;
  }

  warnUnknownProperties(type, props, eventRegistry);
}

var IS_EVENT_HANDLE_NON_MANAGED_NODE = 1;
var IS_NON_DELEGATED = 1 << 1;
var IS_CAPTURE_PHASE = 1 << 2;
var IS_REPLAYED = 1 << 4;
// set to LEGACY_FB_SUPPORT. LEGACY_FB_SUPPORT only gets set when
// we call willDeferLaterForLegacyFBSupport, thus not bailing out
// will result in endless cycles like an infinite loop.
// We also don't want to defer during event replaying.

var SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS = IS_EVENT_HANDLE_NON_MANAGED_NODE | IS_NON_DELEGATED | IS_CAPTURE_PHASE;

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */

function getEventTarget(nativeEvent) {
  // Fallback to nativeEvent.srcElement for IE9
  // https://github.com/facebook/react/issues/12506
  var target = nativeEvent.target || nativeEvent.srcElement || window; // Normalize SVG <use> element events #4963

  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  } // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html


  return target.nodeType === TEXT_NODE ? target.parentNode : target;
}

var restoreImpl = null;
var restoreTarget = null;
var restoreQueue = null;

function restoreStateOfTarget(target) {
  // We perform this translation at the end of the event loop so that we
  // always receive the correct fiber here
  var internalInstance = getInstanceFromNode(target);

  if (!internalInstance) {
    // Unmounted
    return;
  }

  if (!(typeof restoreImpl === 'function')) {
    {
      throw Error( "setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue." );
    }
  }

  var stateNode = internalInstance.stateNode; // Guard against Fiber being unmounted.

  if (stateNode) {
    var _props = getFiberCurrentPropsFromNode(stateNode);

    restoreImpl(internalInstance.stateNode, internalInstance.type, _props);
  }
}

function setRestoreImplementation(impl) {
  restoreImpl = impl;
}
function enqueueStateRestore(target) {
  if (restoreTarget) {
    if (restoreQueue) {
      restoreQueue.push(target);
    } else {
      restoreQueue = [target];
    }
  } else {
    restoreTarget = target;
  }
}
function needsStateRestore() {
  return restoreTarget !== null || restoreQueue !== null;
}
function restoreStateIfNeeded() {
  if (!restoreTarget) {
    return;
  }

  var target = restoreTarget;
  var queuedTargets = restoreQueue;
  restoreTarget = null;
  restoreQueue = null;
  restoreStateOfTarget(target);

  if (queuedTargets) {
    for (var i = 0; i < queuedTargets.length; i++) {
      restoreStateOfTarget(queuedTargets[i]);
    }
  }
}

// the renderer. Such as when we're dispatching events or if third party
// libraries need to call batchedUpdates. Eventually, this API will go away when
// everything is batched by default. We'll then have a similar API to opt-out of
// scheduled work and instead do synchronous work.
// Defaults

var batchedUpdatesImpl = function (fn, bookkeeping) {
  return fn(bookkeeping);
};

var discreteUpdatesImpl = function (fn, a, b, c, d) {
  return fn(a, b, c, d);
};

var flushDiscreteUpdatesImpl = function () {};

var batchedEventUpdatesImpl = batchedUpdatesImpl;
var isInsideEventHandler = false;
var isBatchingEventUpdates = false;

function finishEventHandler() {
  // Here we wait until all updates have propagated, which is important
  // when using controlled components within layers:
  // https://github.com/facebook/react/issues/1698
  // Then we restore state of any controlled component.
  var controlledComponentsHavePendingUpdates = needsStateRestore();

  if (controlledComponentsHavePendingUpdates) {
    // If a controlled event was fired, we may need to restore the state of
    // the DOM node back to the controlled value. This is necessary when React
    // bails out of the update without touching the DOM.
    flushDiscreteUpdatesImpl();
    restoreStateIfNeeded();
  }
}

function batchedUpdates(fn, bookkeeping) {
  if (isInsideEventHandler) {
    // If we are currently inside another batch, we need to wait until it
    // fully completes before restoring state.
    return fn(bookkeeping);
  }

  isInsideEventHandler = true;

  try {
    return batchedUpdatesImpl(fn, bookkeeping);
  } finally {
    isInsideEventHandler = false;
    finishEventHandler();
  }
}
function batchedEventUpdates(fn, a, b) {
  if (isBatchingEventUpdates) {
    // If we are currently inside another batch, we need to wait until it
    // fully completes before restoring state.
    return fn(a, b);
  }

  isBatchingEventUpdates = true;

  try {
    return batchedEventUpdatesImpl(fn, a, b);
  } finally {
    isBatchingEventUpdates = false;
    finishEventHandler();
  }
}
function discreteUpdates(fn, a, b, c, d) {
  var prevIsInsideEventHandler = isInsideEventHandler;
  isInsideEventHandler = true;

  try {
    return discreteUpdatesImpl(fn, a, b, c, d);
  } finally {
    isInsideEventHandler = prevIsInsideEventHandler;

    if (!isInsideEventHandler) {
      finishEventHandler();
    }
  }
}
function flushDiscreteUpdatesIfNeeded(timeStamp) {
  {
    if (!isInsideEventHandler) {
      flushDiscreteUpdatesImpl();
    }
  }
}
function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushDiscreteUpdatesImpl, _batchedEventUpdatesImpl) {
  batchedUpdatesImpl = _batchedUpdatesImpl;
  discreteUpdatesImpl = _discreteUpdatesImpl;
  flushDiscreteUpdatesImpl = _flushDiscreteUpdatesImpl;
  batchedEventUpdatesImpl = _batchedEventUpdatesImpl;
}

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

function shouldPreventMouseEvent(name, type, props) {
  switch (name) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
    case 'onMouseEnter':
      return !!(props.disabled && isInteractive(type));

    default:
      return false;
  }
}
/**
 * @param {object} inst The instance, which is the source of events.
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @return {?function} The stored callback.
 */


function getListener(inst, registrationName) {
  var stateNode = inst.stateNode;

  if (stateNode === null) {
    // Work in progress (ex: onload events in incremental mode).
    return null;
  }

  var props = getFiberCurrentPropsFromNode(stateNode);

  if (props === null) {
    // Work in progress.
    return null;
  }

  var listener = props[registrationName];

  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
    return null;
  }

  if (!(!listener || typeof listener === 'function')) {
    {
      throw Error( "Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type." );
    }
  }

  return listener;
}

var passiveBrowserEventsSupported = false; // Check if browser support events with passive listeners
// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support

if (canUseDOM) {
  try {
    var options = {}; // $FlowFixMe: Ignore Flow complaining about needing a value

    Object.defineProperty(options, 'passive', {
      get: function () {
        passiveBrowserEventsSupported = true;
      }
    });
    window.addEventListener('test', options, options);
    window.removeEventListener('test', options, options);
  } catch (e) {
    passiveBrowserEventsSupported = false;
  }
}

function invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {
  var funcArgs = Array.prototype.slice.call(arguments, 3);

  try {
    func.apply(context, funcArgs);
  } catch (error) {
    this.onError(error);
  }
}

var invokeGuardedCallbackImpl = invokeGuardedCallbackProd;

{
  // In DEV mode, we swap out invokeGuardedCallback for a special version
  // that plays more nicely with the browser's DevTools. The idea is to preserve
  // "Pause on exceptions" behavior. Because React wraps all user-provided
  // functions in invokeGuardedCallback, and the production version of
  // invokeGuardedCallback uses a try-catch, all user exceptions are treated
  // like caught exceptions, and the DevTools won't pause unless the developer
  // takes the extra step of enabling pause on caught exceptions. This is
  // unintuitive, though, because even though React has caught the error, from
  // the developer's perspective, the error is uncaught.
  //
  // To preserve the expected "Pause on exceptions" behavior, we don't use a
  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
  // DOM node, and call the user-provided callback from inside an event handler
  // for that fake event. If the callback throws, the error is "captured" using
  // a global event handler. But because the error happens in a different
  // event loop context, it does not interrupt the normal program flow.
  // Effectively, this gives us try-catch behavior without actually using
  // try-catch. Neat!
  // Check that the browser supports the APIs we need to implement our special
  // DEV version of invokeGuardedCallback
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');

    invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {
      // If document doesn't exist we know for sure we will crash in this method
      // when we call document.createEvent(). However this can cause confusing
      // errors: https://github.com/facebookincubator/create-react-app/issues/3482
      // So we preemptively throw with a better message instead.
      if (!(typeof document !== 'undefined')) {
        {
          throw Error( "The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous." );
        }
      }

      var evt = document.createEvent('Event');
      var didCall = false; // Keeps track of whether the user-provided callback threw an error. We
      // set this to true at the beginning, then set it to false right after
      // calling the function. If the function errors, `didError` will never be
      // set to false. This strategy works even if the browser is flaky and
      // fails to call our global error handler, because it doesn't rely on
      // the error event at all.

      var didError = true; // Keeps track of the value of window.event so that we can reset it
      // during the callback to let user code access window.event in the
      // browsers that support it.

      var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event
      // dispatching: https://github.com/facebook/react/issues/13688

      var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event');

      function restoreAfterDispatch() {
        // We immediately remove the callback from event listeners so that
        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
        // nested call would trigger the fake event handlers of any call higher
        // in the stack.
        fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the
        // window.event assignment in both IE <= 10 as they throw an error
        // "Member not found" in strict mode, and in Firefox which does not
        // support window.event.

        if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) {
          window.event = windowEvent;
        }
      } // Create an event handler for our fake event. We will synchronously
      // dispatch our fake event using `dispatchEvent`. Inside the handler, we
      // call the user-provided callback.


      var funcArgs = Array.prototype.slice.call(arguments, 3);

      function callCallback() {
        didCall = true;
        restoreAfterDispatch();
        func.apply(context, funcArgs);
        didError = false;
      } // Create a global error event handler. We use this to capture the value
      // that was thrown. It's possible that this error handler will fire more
      // than once; for example, if non-React code also calls `dispatchEvent`
      // and a handler for that event throws. We should be resilient to most of
      // those cases. Even if our error event handler fires more than once, the
      // last error event is always used. If the callback actually does error,
      // we know that the last error event is the correct one, because it's not
      // possible for anything else to have happened in between our callback
      // erroring and the code that follows the `dispatchEvent` call below. If
      // the callback doesn't error, but the error event was fired, we know to
      // ignore it because `didError` will be false, as described above.


      var error; // Use this to track whether the error event is ever called.

      var didSetError = false;
      var isCrossOriginError = false;

      function handleWindowError(event) {
        error = event.error;
        didSetError = true;

        if (error === null && event.colno === 0 && event.lineno === 0) {
          isCrossOriginError = true;
        }

        if (event.defaultPrevented) {
          // Some other error handler has prevented default.
          // Browsers silence the error report if this happens.
          // We'll remember this to later decide whether to log it or not.
          if (error != null && typeof error === 'object') {
            try {
              error._suppressLogging = true;
            } catch (inner) {// Ignore.
            }
          }
        }
      } // Create a fake event type.


      var evtType = "react-" + (name ? name : 'invokeguardedcallback'); // Attach our event handlers

      window.addEventListener('error', handleWindowError);
      fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function
      // errors, it will trigger our global error handler.

      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);

      if (windowEventDescriptor) {
        Object.defineProperty(window, 'event', windowEventDescriptor);
      }

      if (didCall && didError) {
        if (!didSetError) {
          // The callback errored, but the error event never fired.
          error = new Error('An error was thrown inside one of your components, but React ' + "doesn't know what it was. This is likely due to browser " + 'flakiness. React does its best to preserve the "Pause on ' + 'exceptions" behavior of the DevTools, which requires some ' + "DEV-mode only tricks. It's possible that these don't work in " + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');
        } else if (isCrossOriginError) {
          error = new Error("A cross-origin error was thrown. React doesn't have access to " + 'the actual error object in development. ' + 'See https://reactjs.org/link/crossorigin-error for more information.');
        }

        this.onError(error);
      } // Remove our event listeners


      window.removeEventListener('error', handleWindowError);

      if (!didCall) {
        // Something went really wrong, and our event was not dispatched.
        // https://github.com/facebook/react/issues/16734
        // https://github.com/facebook/react/issues/16585
        // Fall back to the production implementation.
        restoreAfterDispatch();
        return invokeGuardedCallbackProd.apply(this, arguments);
      }
    };
  }
}

var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;

var hasError = false;
var caughtError = null; // Used by event system to capture/rethrow the first error.

var hasRethrowError = false;
var rethrowError = null;
var reporter = {
  onError: function (error) {
    hasError = true;
    caughtError = error;
  }
};
/**
 * Call a function while guarding against errors that happens within it.
 * Returns an error if it throws, otherwise null.
 *
 * In production, this is implemented using a try-catch. The reason we don't
 * use a try-catch directly is so that we can swap out a different
 * implementation in DEV mode.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */

function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
  hasError = false;
  caughtError = null;
  invokeGuardedCallbackImpl$1.apply(reporter, arguments);
}
/**
 * Same as invokeGuardedCallback, but instead of returning an error, it stores
 * it in a global so it can be rethrown by `rethrowCaughtError` later.
 * TODO: See if caughtError and rethrowError can be unified.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */

function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
  invokeGuardedCallback.apply(this, arguments);

  if (hasError) {
    var error = clearCaughtError();

    if (!hasRethrowError) {
      hasRethrowError = true;
      rethrowError = error;
    }
  }
}
/**
 * During execution of guarded functions we will capture the first error which
 * we will rethrow to be handled by the top level error handler.
 */

function rethrowCaughtError() {
  if (hasRethrowError) {
    var error = rethrowError;
    hasRethrowError = false;
    rethrowError = null;
    throw error;
  }
}
function hasCaughtError() {
  return hasError;
}
function clearCaughtError() {
  if (hasError) {
    var error = caughtError;
    hasError = false;
    caughtError = null;
    return error;
  } else {
    {
      {
        throw Error( "clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue." );
      }
    }
  }
}

/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 *
 * Note that this module is currently shared and assumed to be stateless.
 * If this becomes an actual Map, that will break.
 */
function get(key) {
  return key._reactInternals;
}
function has(key) {
  return key._reactInternals !== undefined;
}
function set(key, value) {
  key._reactInternals = value;
}

// Don't change these two values. They're used by React Dev Tools.
var NoFlags =
/*                      */
0;
var PerformedWork =
/*                */
1; // You can change the rest (and add more).

var Placement =
/*                    */
2;
var Update =
/*                       */
4;
var PlacementAndUpdate =
/*           */
6;
var Deletion =
/*                     */
8;
var ContentReset =
/*                 */
16;
var Callback =
/*                     */
32;
var DidCapture =
/*                   */
64;
var Ref =
/*                          */
128;
var Snapshot =
/*                     */
256;
var Passive =
/*                      */
512; // TODO (effects) Remove this bit once the new reconciler is synced to the old.

var PassiveUnmountPendingDev =
/*     */
8192;
var Hydrating =
/*                    */
1024;
var HydratingAndUpdate =
/*           */
1028; // Passive & Update & Callback & Ref & Snapshot

var LifecycleEffectMask =
/*          */
932; // Union of all host effects

var HostEffectMask =
/*               */
2047; // These are not really side effects, but we still reuse this field.

var Incomplete =
/*                   */
2048;
var ShouldCapture =
/*                */
4096;
var ForceUpdateForLegacySuspense =
/* */
16384; // Static tags describe aspects of a fiber that are not specific to a render,

var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
function getNearestMountedFiber(fiber) {
  var node = fiber;
  var nearestMounted = fiber;

  if (!fiber.alternate) {
    // If there is no alternate, this might be a new tree that isn't inserted
    // yet. If it is, then it will have a pending insertion effect on it.
    var nextNode = node;

    do {
      node = nextNode;

      if ((node.flags & (Placement | Hydrating)) !== NoFlags) {
        // This is an insertion or in-progress hydration. The nearest possible
        // mounted fiber is the parent but we need to continue to figure out
        // if that one is still mounted.
        nearestMounted = node.return;
      }

      nextNode = node.return;
    } while (nextNode);
  } else {
    while (node.return) {
      node = node.return;
    }
  }

  if (node.tag === HostRoot) {
    // TODO: Check if this was a nested HostRoot when used with
    // renderContainerIntoSubtree.
    return nearestMounted;
  } // If we didn't hit the root, that means that we're in an disconnected tree
  // that has been unmounted.


  return null;
}
function getSuspenseInstanceFromFiber(fiber) {
  if (fiber.tag === SuspenseComponent) {
    var suspenseState = fiber.memoizedState;

    if (suspenseState === null) {
      var current = fiber.alternate;

      if (current !== null) {
        suspenseState = current.memoizedState;
      }
    }

    if (suspenseState !== null) {
      return suspenseState.dehydrated;
    }
  }

  return null;
}
function getContainerFromFiber(fiber) {
  return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;
}
function isFiberMounted(fiber) {
  return getNearestMountedFiber(fiber) === fiber;
}
function isMounted(component) {
  {
    var owner = ReactCurrentOwner.current;

    if (owner !== null && owner.tag === ClassComponent) {
      var ownerFiber = owner;
      var instance = ownerFiber.stateNode;

      if (!instance._warnedAboutRefsInRender) {
        error('%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(ownerFiber.type) || 'A component');
      }

      instance._warnedAboutRefsInRender = true;
    }
  }

  var fiber = get(component);

  if (!fiber) {
    return false;
  }

  return getNearestMountedFiber(fiber) === fiber;
}

function assertIsMounted(fiber) {
  if (!(getNearestMountedFiber(fiber) === fiber)) {
    {
      throw Error( "Unable to find node on an unmounted component." );
    }
  }
}

function findCurrentFiberUsingSlowPath(fiber) {
  var alternate = fiber.alternate;

  if (!alternate) {
    // If there is no alternate, then we only need to check if it is mounted.
    var nearestMounted = getNearestMountedFiber(fiber);

    if (!(nearestMounted !== null)) {
      {
        throw Error( "Unable to find node on an unmounted component." );
      }
    }

    if (nearestMounted !== fiber) {
      return null;
    }

    return fiber;
  } // If we have two possible branches, we'll walk backwards up to the root
  // to see what path the root points to. On the way we may hit one of the
  // special cases and we'll deal with them.


  var a = fiber;
  var b = alternate;

  while (true) {
    var parentA = a.return;

    if (parentA === null) {
      // We're at the root.
      break;
    }

    var parentB = parentA.alternate;

    if (parentB === null) {
      // There is no alternate. This is an unusual case. Currently, it only
      // happens when a Suspense component is hidden. An extra fragment fiber
      // is inserted in between the Suspense fiber and its children. Skip
      // over this extra fragment fiber and proceed to the next parent.
      var nextParent = parentA.return;

      if (nextParent !== null) {
        a = b = nextParent;
        continue;
      } // If there's no parent, we're at the root.


      break;
    } // If both copies of the parent fiber point to the same child, we can
    // assume that the child is current. This happens when we bailout on low
    // priority: the bailed out fiber's child reuses the current child.


    if (parentA.child === parentB.child) {
      var child = parentA.child;

      while (child) {
        if (child === a) {
          // We've determined that A is the current branch.
          assertIsMounted(parentA);
          return fiber;
        }

        if (child === b) {
          // We've determined that B is the current branch.
          assertIsMounted(parentA);
          return alternate;
        }

        child = child.sibling;
      } // We should never have an alternate for any mounting node. So the only
      // way this could possibly happen is if this was unmounted, if at all.


      {
        {
          throw Error( "Unable to find node on an unmounted component." );
        }
      }
    }

    if (a.return !== b.return) {
      // The return pointer of A and the return pointer of B point to different
      // fibers. We assume that return pointers never criss-cross, so A must
      // belong to the child set of A.return, and B must belong to the child
      // set of B.return.
      a = parentA;
      b = parentB;
    } else {
      // The return pointers point to the same fiber. We'll have to use the
      // default, slow path: scan the child sets of each parent alternate to see
      // which child belongs to which set.
      //
      // Search parent A's child set
      var didFindChild = false;
      var _child = parentA.child;

      while (_child) {
        if (_child === a) {
          didFindChild = true;
          a = parentA;
          b = parentB;
          break;
        }

        if (_child === b) {
          didFindChild = true;
          b = parentA;
          a = parentB;
          break;
        }

        _child = _child.sibling;
      }

      if (!didFindChild) {
        // Search parent B's child set
        _child = parentB.child;

        while (_child) {
          if (_child === a) {
            didFindChild = true;
            a = parentB;
            b = parentA;
            break;
          }

          if (_child === b) {
            didFindChild = true;
            b = parentB;
            a = parentA;
            break;
          }

          _child = _child.sibling;
        }

        if (!didFindChild) {
          {
            throw Error( "Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue." );
          }
        }
      }
    }

    if (!(a.alternate === b)) {
      {
        throw Error( "Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue." );
      }
    }
  } // If the root is not a host container, we're in a disconnected tree. I.e.
  // unmounted.


  if (!(a.tag === HostRoot)) {
    {
      throw Error( "Unable to find node on an unmounted component." );
    }
  }

  if (a.stateNode.current === a) {
    // We've determined that A is the current branch.
    return fiber;
  } // Otherwise B has to be current branch.


  return alternate;
}
function findCurrentHostFiber(parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);

  if (!currentParent) {
    return null;
  } // Next we'll drill down this component to find the first HostComponent/Text.


  var node = currentParent;

  while (true) {
    if (node.tag === HostComponent || node.tag === HostText) {
      return node;
    } else if (node.child) {
      node.child.return = node;
      node = node.child;
      continue;
    }

    if (node === currentParent) {
      return null;
    }

    while (!node.sibling) {
      if (!node.return || node.return === currentParent) {
        return null;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  } // Flow needs the return null here, but ESLint complains about it.
  // eslint-disable-next-line no-unreachable


  return null;
}
function findCurrentHostFiberWithNoPortals(parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);

  if (!currentParent) {
    return null;
  } // Next we'll drill down this component to find the first HostComponent/Text.


  var node = currentParent;

  while (true) {
    if (node.tag === HostComponent || node.tag === HostText || enableFundamentalAPI ) {
      return node;
    } else if (node.child && node.tag !== HostPortal) {
      node.child.return = node;
      node = node.child;
      continue;
    }

    if (node === currentParent) {
      return null;
    }

    while (!node.sibling) {
      if (!node.return || node.return === currentParent) {
        return null;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  } // Flow needs the return null here, but ESLint complains about it.
  // eslint-disable-next-line no-unreachable


  return null;
}
function doesFiberContain(parentFiber, childFiber) {
  var node = childFiber;
  var parentFiberAlternate = parentFiber.alternate;

  while (node !== null) {
    if (node === parentFiber || node === parentFiberAlternate) {
      return true;
    }

    node = node.return;
  }

  return false;
}

var attemptUserBlockingHydration;
function setAttemptUserBlockingHydration(fn) {
  attemptUserBlockingHydration = fn;
}
var attemptContinuousHydration;
function setAttemptContinuousHydration(fn) {
  attemptContinuousHydration = fn;
}
var attemptHydrationAtCurrentPriority;
function setAttemptHydrationAtCurrentPriority(fn) {
  attemptHydrationAtCurrentPriority = fn;
}
var attemptHydrationAtPriority;
function setAttemptHydrationAtPriority(fn) {
  attemptHydrationAtPriority = fn;
} // TODO: Upgrade this definition once we're on a newer version of Flow that
var hasScheduledReplayAttempt = false; // The queue of discrete events to be replayed.

var queuedDiscreteEvents = []; // Indicates if any continuous event targets are non-null for early bailout.
// if the last target was dehydrated.

var queuedFocus = null;
var queuedDrag = null;
var queuedMouse = null; // For pointer events there can be one latest event per pointerId.

var queuedPointers = new Map();
var queuedPointerCaptures = new Map(); // We could consider replaying selectionchange and touchmoves too.

var queuedExplicitHydrationTargets = [];
function hasQueuedDiscreteEvents() {
  return queuedDiscreteEvents.length > 0;
}
var discreteReplayableEvents = ['mousedown', 'mouseup', 'touchcancel', 'touchend', 'touchstart', 'auxclick', 'dblclick', 'pointercancel', 'pointerdown', 'pointerup', 'dragend', 'dragstart', 'drop', 'compositionend', 'compositionstart', 'keydown', 'keypress', 'keyup', 'input', 'textInput', // Intentionally camelCase
'copy', 'cut', 'paste', 'click', 'change', 'contextmenu', 'reset', 'submit'];
function isReplayableDiscreteEvent(eventType) {
  return discreteReplayableEvents.indexOf(eventType) > -1;
}

function createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
  return {
    blockedOn: blockedOn,
    domEventName: domEventName,
    eventSystemFlags: eventSystemFlags | IS_REPLAYED,
    nativeEvent: nativeEvent,
    targetContainers: [targetContainer]
  };
}

function queueDiscreteEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
  var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
  queuedDiscreteEvents.push(queuedEvent);
} // Resets the replaying for this type of continuous event to no event.

function clearIfContinuousEvent(domEventName, nativeEvent) {
  switch (domEventName) {
    case 'focusin':
    case 'focusout':
      queuedFocus = null;
      break;

    case 'dragenter':
    case 'dragleave':
      queuedDrag = null;
      break;

    case 'mouseover':
    case 'mouseout':
      queuedMouse = null;
      break;

    case 'pointerover':
    case 'pointerout':
      {
        var pointerId = nativeEvent.pointerId;
        queuedPointers.delete(pointerId);
        break;
      }

    case 'gotpointercapture':
    case 'lostpointercapture':
      {
        var _pointerId = nativeEvent.pointerId;
        queuedPointerCaptures.delete(_pointerId);
        break;
      }
  }
}

function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
  if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {
    var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);

    if (blockedOn !== null) {
      var _fiber2 = getInstanceFromNode(blockedOn);

      if (_fiber2 !== null) {
        // Attempt to increase the priority of this target.
        attemptContinuousHydration(_fiber2);
      }
    }

    return queuedEvent;
  } // If we have already queued this exact event, then it's because
  // the different event systems have different DOM event listeners.
  // We can accumulate the flags, and the targetContainers, and
  // store a single event to be replayed.


  existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
  var targetContainers = existingQueuedEvent.targetContainers;

  if (targetContainer !== null && targetContainers.indexOf(targetContainer) === -1) {
    targetContainers.push(targetContainer);
  }

  return existingQueuedEvent;
}

function queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
  // These set relatedTarget to null because the replayed event will be treated as if we
  // moved from outside the window (no target) onto the target once it hydrates.
  // Instead of mutating we could clone the event.
  switch (domEventName) {
    case 'focusin':
      {
        var focusEvent = nativeEvent;
        queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, focusEvent);
        return true;
      }

    case 'dragenter':
      {
        var dragEvent = nativeEvent;
        queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, dragEvent);
        return true;
      }

    case 'mouseover':
      {
        var mouseEvent = nativeEvent;
        queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, mouseEvent);
        return true;
      }

    case 'pointerover':
      {
        var pointerEvent = nativeEvent;
        var pointerId = pointerEvent.pointerId;
        queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, pointerEvent));
        return true;
      }

    case 'gotpointercapture':
      {
        var _pointerEvent = nativeEvent;
        var _pointerId2 = _pointerEvent.pointerId;
        queuedPointerCaptures.set(_pointerId2, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, _pointerEvent));
        return true;
      }
  }

  return false;
} // Check if this target is unblocked. Returns true if it's unblocked.

function attemptExplicitHydrationTarget(queuedTarget) {
  // TODO: This function shares a lot of logic with attemptToDispatchEvent.
  // Try to unify them. It's a bit tricky since it would require two return
  // values.
  var targetInst = getClosestInstanceFromNode(queuedTarget.target);

  if (targetInst !== null) {
    var nearestMounted = getNearestMountedFiber(targetInst);

    if (nearestMounted !== null) {
      var tag = nearestMounted.tag;

      if (tag === SuspenseComponent) {
        var instance = getSuspenseInstanceFromFiber(nearestMounted);

        if (instance !== null) {
          // We're blocked on hydrating this boundary.
          // Increase its priority.
          queuedTarget.blockedOn = instance;
          attemptHydrationAtPriority(queuedTarget.lanePriority, function () {
            Scheduler.unstable_runWithPriority(queuedTarget.priority, function () {
              attemptHydrationAtCurrentPriority(nearestMounted);
            });
          });
          return;
        }
      } else if (tag === HostRoot) {
        var root = nearestMounted.stateNode;

        if (root.hydrate) {
          queuedTarget.blockedOn = getContainerFromFiber(nearestMounted); // We don't currently have a way to increase the priority of
          // a root other than sync.

          return;
        }
      }
    }
  }

  queuedTarget.blockedOn = null;
}

function attemptReplayContinuousQueuedEvent(queuedEvent) {
  if (queuedEvent.blockedOn !== null) {
    return false;
  }

  var targetContainers = queuedEvent.targetContainers;

  while (targetContainers.length > 0) {
    var targetContainer = targetContainers[0];
    var nextBlockedOn = attemptToDispatchEvent(queuedEvent.domEventName, queuedEvent.eventSystemFlags, targetContainer, queuedEvent.nativeEvent);

    if (nextBlockedOn !== null) {
      // We're still blocked. Try again later.
      var _fiber3 = getInstanceFromNode(nextBlockedOn);

      if (_fiber3 !== null) {
        attemptContinuousHydration(_fiber3);
      }

      queuedEvent.blockedOn = nextBlockedOn;
      return false;
    } // This target container was successfully dispatched. Try the next.


    targetContainers.shift();
  }

  return true;
}

function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
  if (attemptReplayContinuousQueuedEvent(queuedEvent)) {
    map.delete(key);
  }
}

function replayUnblockedEvents() {
  hasScheduledReplayAttempt = false; // First replay discrete events.

  while (queuedDiscreteEvents.length > 0) {
    var nextDiscreteEvent = queuedDiscreteEvents[0];

    if (nextDiscreteEvent.blockedOn !== null) {
      // We're still blocked.
      // Increase the priority of this boundary to unblock
      // the next discrete event.
      var _fiber4 = getInstanceFromNode(nextDiscreteEvent.blockedOn);

      if (_fiber4 !== null) {
        attemptUserBlockingHydration(_fiber4);
      }

      break;
    }

    var targetContainers = nextDiscreteEvent.targetContainers;

    while (targetContainers.length > 0) {
      var targetContainer = targetContainers[0];
      var nextBlockedOn = attemptToDispatchEvent(nextDiscreteEvent.domEventName, nextDiscreteEvent.eventSystemFlags, targetContainer, nextDiscreteEvent.nativeEvent);

      if (nextBlockedOn !== null) {
        // We're still blocked. Try again later.
        nextDiscreteEvent.blockedOn = nextBlockedOn;
        break;
      } // This target container was successfully dispatched. Try the next.


      targetContainers.shift();
    }

    if (nextDiscreteEvent.blockedOn === null) {
      // We've successfully replayed the first event. Let's try the next one.
      queuedDiscreteEvents.shift();
    }
  } // Next replay any continuous events.


  if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) {
    queuedFocus = null;
  }

  if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) {
    queuedDrag = null;
  }

  if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) {
    queuedMouse = null;
  }

  queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
  queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
}

function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
  if (queuedEvent.blockedOn === unblocked) {
    queuedEvent.blockedOn = null;

    if (!hasScheduledReplayAttempt) {
      hasScheduledReplayAttempt = true; // Schedule a callback to attempt replaying as many events as are
      // now unblocked. This first might not actually be unblocked yet.
      // We could check it early to avoid scheduling an unnecessary callback.

      Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents);
    }
  }
}

function retryIfBlockedOn(unblocked) {
  // Mark anything that was blocked on this as no longer blocked
  // and eligible for a replay.
  if (queuedDiscreteEvents.length > 0) {
    scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked); // This is a exponential search for each boundary that commits. I think it's
    // worth it because we expect very few discrete events to queue up and once
    // we are actually fully unblocked it will be fast to replay them.

    for (var i = 1; i < queuedDiscreteEvents.length; i++) {
      var queuedEvent = queuedDiscreteEvents[i];

      if (queuedEvent.blockedOn === unblocked) {
        queuedEvent.blockedOn = null;
      }
    }
  }

  if (queuedFocus !== null) {
    scheduleCallbackIfUnblocked(queuedFocus, unblocked);
  }

  if (queuedDrag !== null) {
    scheduleCallbackIfUnblocked(queuedDrag, unblocked);
  }

  if (queuedMouse !== null) {
    scheduleCallbackIfUnblocked(queuedMouse, unblocked);
  }

  var unblock = function (queuedEvent) {
    return scheduleCallbackIfUnblocked(queuedEvent, unblocked);
  };

  queuedPointers.forEach(unblock);
  queuedPointerCaptures.forEach(unblock);

  for (var _i = 0; _i < queuedExplicitHydrationTargets.length; _i++) {
    var queuedTarget = queuedExplicitHydrationTargets[_i];

    if (queuedTarget.blockedOn === unblocked) {
      queuedTarget.blockedOn = null;
    }
  }

  while (queuedExplicitHydrationTargets.length > 0) {
    var nextExplicitTarget = queuedExplicitHydrationTargets[0];

    if (nextExplicitTarget.blockedOn !== null) {
      // We're still blocked.
      break;
    } else {
      attemptExplicitHydrationTarget(nextExplicitTarget);

      if (nextExplicitTarget.blockedOn === null) {
        // We're unblocked.
        queuedExplicitHydrationTargets.shift();
      }
    }
  }
}

var DiscreteEvent = 0;
var UserBlockingEvent = 1;
var ContinuousEvent = 2;

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */

function makePrefixMap(styleProp, eventName) {
  var prefixes = {};
  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;
  return prefixes;
}
/**
 * A list of event names to a configurable list of vendor prefixes.
 */


var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};
/**
 * Event names that have already been detected and prefixed (if applicable).
 */

var prefixedEventNames = {};
/**
 * Element to check for prefixes on.
 */

var style = {};
/**
 * Bootstrap if a DOM exists.
 */

if (canUseDOM) {
  style = document.createElement('div').style; // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.

  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  } // Same as above


  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}
/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */


function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return eventName;
}

var ANIMATION_END = getVendorPrefixedEventName('animationend');
var ANIMATION_ITERATION = getVendorPrefixedEventName('animationiteration');
var ANIMATION_START = getVendorPrefixedEventName('animationstart');
var TRANSITION_END = getVendorPrefixedEventName('transitionend');

var topLevelEventsToReactNames = new Map();
var eventPriorities = new Map(); // We store most of the events in this module in pairs of two strings so we can re-use
// the code required to apply the same logic for event prioritization and that of the
// SimpleEventPlugin. This complicates things slightly, but the aim is to reduce code
// duplication (for which there would be quite a bit). For the events that are not needed
// for the SimpleEventPlugin (otherDiscreteEvents) we process them separately as an
// array of top level events.
// Lastly, we ignore prettier so we can keep the formatting sane.
// prettier-ignore

var discreteEventPairsForSimpleEventPlugin = ['cancel', 'cancel', 'click', 'click', 'close', 'close', 'contextmenu', 'contextMenu', 'copy', 'copy', 'cut', 'cut', 'auxclick', 'auxClick', 'dblclick', 'doubleClick', // Careful!
'dragend', 'dragEnd', 'dragstart', 'dragStart', 'drop', 'drop', 'focusin', 'focus', // Careful!
'focusout', 'blur', // Careful!
'input', 'input', 'invalid', 'invalid', 'keydown', 'keyDown', 'keypress', 'keyPress', 'keyup', 'keyUp', 'mousedown', 'mouseDown', 'mouseup', 'mouseUp', 'paste', 'paste', 'pause', 'pause', 'play', 'play', 'pointercancel', 'pointerCancel', 'pointerdown', 'pointerDown', 'pointerup', 'pointerUp', 'ratechange', 'rateChange', 'reset', 'reset', 'seeked', 'seeked', 'submit', 'submit', 'touchcancel', 'touchCancel', 'touchend', 'touchEnd', 'touchstart', 'touchStart', 'volumechange', 'volumeChange'];
var otherDiscreteEvents = ['change', 'selectionchange', 'textInput', 'compositionstart', 'compositionend', 'compositionupdate'];


var userBlockingPairsForSimpleEventPlugin = ['drag', 'drag', 'dragenter', 'dragEnter', 'dragexit', 'dragExit', 'dragleave', 'dragLeave', 'dragover', 'dragOver', 'mousemove', 'mouseMove', 'mouseout', 'mouseOut', 'mouseover', 'mouseOver', 'pointermove', 'pointerMove', 'pointerout', 'pointerOut', 'pointerover', 'pointerOver', 'scroll', 'scroll', 'toggle', 'toggle', 'touchmove', 'touchMove', 'wheel', 'wheel']; // prettier-ignore

var continuousPairsForSimpleEventPlugin = ['abort', 'abort', ANIMATION_END, 'animationEnd', ANIMATION_ITERATION, 'animationIteration', ANIMATION_START, 'animationStart', 'canplay', 'canPlay', 'canplaythrough', 'canPlayThrough', 'durationchange', 'durationChange', 'emptied', 'emptied', 'encrypted', 'encrypted', 'ended', 'ended', 'error', 'error', 'gotpointercapture', 'gotPointerCapture', 'load', 'load', 'loadeddata', 'loadedData', 'loadedmetadata', 'loadedMetadata', 'loadstart', 'loadStart', 'lostpointercapture', 'lostPointerCapture', 'playing', 'playing', 'progress', 'progress', 'seeking', 'seeking', 'stalled', 'stalled', 'suspend', 'suspend', 'timeupdate', 'timeUpdate', TRANSITION_END, 'transitionEnd', 'waiting', 'waiting'];
/**
 * Turns
 * ['abort', ...]
 *
 * into
 *
 * topLevelEventsToReactNames = new Map([
 *   ['abort', 'onAbort'],
 * ]);
 *
 * and registers them.
 */

function registerSimplePluginEventsAndSetTheirPriorities(eventTypes, priority) {
  // As the event types are in pairs of two, we need to iterate
  // through in twos. The events are in pairs of two to save code
  // and improve init perf of processing this array, as it will
  // result in far fewer object allocations and property accesses
  // if we only use three arrays to process all the categories of
  // instead of tuples.
  for (var i = 0; i < eventTypes.length; i += 2) {
    var topEvent = eventTypes[i];
    var event = eventTypes[i + 1];
    var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
    var reactName = 'on' + capitalizedEvent;
    eventPriorities.set(topEvent, priority);
    topLevelEventsToReactNames.set(topEvent, reactName);
    registerTwoPhaseEvent(reactName, [topEvent]);
  }
}

function setEventPriorities(eventTypes, priority) {
  for (var i = 0; i < eventTypes.length; i++) {
    eventPriorities.set(eventTypes[i], priority);
  }
}

function getEventPriorityForPluginSystem(domEventName) {
  var priority = eventPriorities.get(domEventName); // Default to a ContinuousEvent. Note: we might
  // want to warn if we can't detect the priority
  // for the event.

  return priority === undefined ? ContinuousEvent : priority;
}
function registerSimpleEvents() {
  registerSimplePluginEventsAndSetTheirPriorities(discreteEventPairsForSimpleEventPlugin, DiscreteEvent);
  registerSimplePluginEventsAndSetTheirPriorities(userBlockingPairsForSimpleEventPlugin, UserBlockingEvent);
  registerSimplePluginEventsAndSetTheirPriorities(continuousPairsForSimpleEventPlugin, ContinuousEvent);
  setEventPriorities(otherDiscreteEvents, DiscreteEvent);
}

var Scheduler_now = Scheduler.unstable_now;

{
  // Provide explicit error message when production+profiling bundle of e.g.
  // react-dom is used with production (non-profiling) bundle of
  // scheduler/tracing
  if (!(tracing$1.__interactionsRef != null && tracing$1.__interactionsRef.current != null)) {
    {
      throw Error( "It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at https://reactjs.org/link/profiling" );
    }
  }
}
// ascending numbers so we can compare them like numbers. They start at 90 to
// avoid clashing with Scheduler's priorities.

var ImmediatePriority = 99;
var UserBlockingPriority = 98;
var NormalPriority = 97;
var LowPriority = 96;
var IdlePriority = 95; // NoPriority is the absence of priority. Also React-only.

var NoPriority = 90;
Scheduler_now(); // If the initial timestamp is reasonably small, use Scheduler's `now` directly.

var SyncLanePriority = 15;
var SyncBatchedLanePriority = 14;
var InputDiscreteHydrationLanePriority = 13;
var InputDiscreteLanePriority = 12;
var InputContinuousHydrationLanePriority = 11;
var InputContinuousLanePriority = 10;
var DefaultHydrationLanePriority = 9;
var DefaultLanePriority = 8;
var TransitionHydrationPriority = 7;
var TransitionPriority = 6;
var RetryLanePriority = 5;
var SelectiveHydrationLanePriority = 4;
var IdleHydrationLanePriority = 3;
var IdleLanePriority = 2;
var OffscreenLanePriority = 1;
var NoLanePriority = 0;
var TotalLanes = 31;
var NoLanes =
/*                        */
0;
var NoLane =
/*                          */
0;
var SyncLane =
/*                        */
1;
var SyncBatchedLane =
/*                 */
2;
var InputDiscreteHydrationLane =
/*      */
4;
var InputDiscreteLanes =
/*                    */
24;
var InputContinuousHydrationLane =
/*           */
32;
var InputContinuousLanes =
/*                  */
192;
var DefaultHydrationLane =
/*            */
256;
var DefaultLanes =
/*                   */
3584;
var TransitionHydrationLane =
/*                */
4096;
var TransitionLanes =
/*                       */
4186112;
var RetryLanes =
/*                            */
62914560;
var SomeRetryLane =
/*                  */
33554432;
var SelectiveHydrationLane =
/*          */
67108864;
var NonIdleLanes =
/*                                 */
134217727;
var IdleHydrationLane =
/*               */
134217728;
var IdleLanes =
/*                             */
805306368;
var OffscreenLane =
/*                   */
1073741824;
var NoTimestamp = -1;
function setCurrentUpdateLanePriority(newLanePriority) {
} // "Registers" used to "return" multiple values
// Used by getHighestPriorityLanes and getNextLanes:

var return_highestLanePriority = DefaultLanePriority;

function getHighestPriorityLanes(lanes) {
  if ((SyncLane & lanes) !== NoLanes) {
    return_highestLanePriority = SyncLanePriority;
    return SyncLane;
  }

  if ((SyncBatchedLane & lanes) !== NoLanes) {
    return_highestLanePriority = SyncBatchedLanePriority;
    return SyncBatchedLane;
  }

  if ((InputDiscreteHydrationLane & lanes) !== NoLanes) {
    return_highestLanePriority = InputDiscreteHydrationLanePriority;
    return InputDiscreteHydrationLane;
  }

  var inputDiscreteLanes = InputDiscreteLanes & lanes;

  if (inputDiscreteLanes !== NoLanes) {
    return_highestLanePriority = InputDiscreteLanePriority;
    return inputDiscreteLanes;
  }

  if ((lanes & InputContinuousHydrationLane) !== NoLanes) {
    return_highestLanePriority = InputContinuousHydrationLanePriority;
    return InputContinuousHydrationLane;
  }

  var inputContinuousLanes = InputContinuousLanes & lanes;

  if (inputContinuousLanes !== NoLanes) {
    return_highestLanePriority = InputContinuousLanePriority;
    return inputContinuousLanes;
  }

  if ((lanes & DefaultHydrationLane) !== NoLanes) {
    return_highestLanePriority = DefaultHydrationLanePriority;
    return DefaultHydrationLane;
  }

  var defaultLanes = DefaultLanes & lanes;

  if (defaultLanes !== NoLanes) {
    return_highestLanePriority = DefaultLanePriority;
    return defaultLanes;
  }

  if ((lanes & TransitionHydrationLane) !== NoLanes) {
    return_highestLanePriority = TransitionHydrationPriority;
    return TransitionHydrationLane;
  }

  var transitionLanes = TransitionLanes & lanes;

  if (transitionLanes !== NoLanes) {
    return_highestLanePriority = TransitionPriority;
    return transitionLanes;
  }

  var retryLanes = RetryLanes & lanes;

  if (retryLanes !== NoLanes) {
    return_highestLanePriority = RetryLanePriority;
    return retryLanes;
  }

  if (lanes & SelectiveHydrationLane) {
    return_highestLanePriority = SelectiveHydrationLanePriority;
    return SelectiveHydrationLane;
  }

  if ((lanes & IdleHydrationLane) !== NoLanes) {
    return_highestLanePriority = IdleHydrationLanePriority;
    return IdleHydrationLane;
  }

  var idleLanes = IdleLanes & lanes;

  if (idleLanes !== NoLanes) {
    return_highestLanePriority = IdleLanePriority;
    return idleLanes;
  }

  if ((OffscreenLane & lanes) !== NoLanes) {
    return_highestLanePriority = OffscreenLanePriority;
    return OffscreenLane;
  }

  {
    error('Should have found matching lanes. This is a bug in React.');
  } // This shouldn't be reachable, but as a fallback, return the entire bitmask.


  return_highestLanePriority = DefaultLanePriority;
  return lanes;
}

function schedulerPriorityToLanePriority(schedulerPriorityLevel) {
  switch (schedulerPriorityLevel) {
    case ImmediatePriority:
      return SyncLanePriority;

    case UserBlockingPriority:
      return InputContinuousLanePriority;

    case NormalPriority:
    case LowPriority:
      // TODO: Handle LowSchedulerPriority, somehow. Maybe the same lane as hydration.
      return DefaultLanePriority;

    case IdlePriority:
      return IdleLanePriority;

    default:
      return NoLanePriority;
  }
}
function lanePriorityToSchedulerPriority(lanePriority) {
  switch (lanePriority) {
    case SyncLanePriority:
    case SyncBatchedLanePriority:
      return ImmediatePriority;

    case InputDiscreteHydrationLanePriority:
    case InputDiscreteLanePriority:
    case InputContinuousHydrationLanePriority:
    case InputContinuousLanePriority:
      return UserBlockingPriority;

    case DefaultHydrationLanePriority:
    case DefaultLanePriority:
    case TransitionHydrationPriority:
    case TransitionPriority:
    case SelectiveHydrationLanePriority:
    case RetryLanePriority:
      return NormalPriority;

    case IdleHydrationLanePriority:
    case IdleLanePriority:
    case OffscreenLanePriority:
      return IdlePriority;

    case NoLanePriority:
      return NoPriority;

    default:
      {
        {
          throw Error( "Invalid update priority: " + lanePriority + ". This is a bug in React." );
        }
      }

  }
}
function getNextLanes(root, wipLanes) {
  // Early bailout if there's no pending work left.
  var pendingLanes = root.pendingLanes;

  if (pendingLanes === NoLanes) {
    return_highestLanePriority = NoLanePriority;
    return NoLanes;
  }

  var nextLanes = NoLanes;
  var nextLanePriority = NoLanePriority;
  var expiredLanes = root.expiredLanes;
  var suspendedLanes = root.suspendedLanes;
  var pingedLanes = root.pingedLanes; // Check if any work has expired.

  if (expiredLanes !== NoLanes) {
    nextLanes = expiredLanes;
    nextLanePriority = return_highestLanePriority = SyncLanePriority;
  } else {
    // Do not work on any idle work until all the non-idle work has finished,
    // even if the work is suspended.
    var nonIdlePendingLanes = pendingLanes & NonIdleLanes;

    if (nonIdlePendingLanes !== NoLanes) {
      var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;

      if (nonIdleUnblockedLanes !== NoLanes) {
        nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);
        nextLanePriority = return_highestLanePriority;
      } else {
        var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;

        if (nonIdlePingedLanes !== NoLanes) {
          nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);
          nextLanePriority = return_highestLanePriority;
        }
      }
    } else {
      // The only remaining work is Idle.
      var unblockedLanes = pendingLanes & ~suspendedLanes;

      if (unblockedLanes !== NoLanes) {
        nextLanes = getHighestPriorityLanes(unblockedLanes);
        nextLanePriority = return_highestLanePriority;
      } else {
        if (pingedLanes !== NoLanes) {
          nextLanes = getHighestPriorityLanes(pingedLanes);
          nextLanePriority = return_highestLanePriority;
        }
      }
    }
  }

  if (nextLanes === NoLanes) {
    // This should only be reachable if we're suspended
    // TODO: Consider warning in this path if a fallback timer is not scheduled.
    return NoLanes;
  } // If there are higher priority lanes, we'll include them even if they
  // are suspended.


  nextLanes = pendingLanes & getEqualOrHigherPriorityLanes(nextLanes); // If we're already in the middle of a render, switching lanes will interrupt
  // it and we'll lose our progress. We should only do this if the new lanes are
  // higher priority.

  if (wipLanes !== NoLanes && wipLanes !== nextLanes && // If we already suspended with a delay, then interrupting is fine. Don't
  // bother waiting until the root is complete.
  (wipLanes & suspendedLanes) === NoLanes) {
    getHighestPriorityLanes(wipLanes);
    var wipLanePriority = return_highestLanePriority;

    if (nextLanePriority <= wipLanePriority) {
      return wipLanes;
    } else {
      return_highestLanePriority = nextLanePriority;
    }
  } // Check for entangled lanes and add them to the batch.
  //
  // A lane is said to be entangled with another when it's not allowed to render
  // in a batch that does not also include the other lane. Typically we do this
  // when multiple updates have the same source, and we only want to respond to
  // the most recent event from that source.
  //
  // Note that we apply entanglements *after* checking for partial work above.
  // This means that if a lane is entangled during an interleaved event while
  // it's already rendering, we won't interrupt it. This is intentional, since
  // entanglement is usually "best effort": we'll try our best to render the
  // lanes in the same batch, but it's not worth throwing out partially
  // completed work in order to do it.
  //
  // For those exceptions where entanglement is semantically important, like
  // useMutableSource, we should ensure that there is no partial work at the
  // time we apply the entanglement.


  var entangledLanes = root.entangledLanes;

  if (entangledLanes !== NoLanes) {
    var entanglements = root.entanglements;
    var lanes = nextLanes & entangledLanes;

    while (lanes > 0) {
      var index = pickArbitraryLaneIndex(lanes);
      var lane = 1 << index;
      nextLanes |= entanglements[index];
      lanes &= ~lane;
    }
  }

  return nextLanes;
}
function getMostRecentEventTime(root, lanes) {
  var eventTimes = root.eventTimes;
  var mostRecentEventTime = NoTimestamp;

  while (lanes > 0) {
    var index = pickArbitraryLaneIndex(lanes);
    var lane = 1 << index;
    var eventTime = eventTimes[index];

    if (eventTime > mostRecentEventTime) {
      mostRecentEventTime = eventTime;
    }

    lanes &= ~lane;
  }

  return mostRecentEventTime;
}

function computeExpirationTime(lane, currentTime) {
  // TODO: Expiration heuristic is constant per lane, so could use a map.
  getHighestPriorityLanes(lane);
  var priority = return_highestLanePriority;

  if (priority >= InputContinuousLanePriority) {
    // User interactions should expire slightly more quickly.
    //
    // NOTE: This is set to the corresponding constant as in Scheduler.js. When
    // we made it larger, a product metric in www regressed, suggesting there's
    // a user interaction that's being starved by a series of synchronous
    // updates. If that theory is correct, the proper solution is to fix the
    // starvation. However, this scenario supports the idea that expiration
    // times are an important safeguard when starvation does happen.
    //
    // Also note that, in the case of user input specifically, this will soon no
    // longer be an issue because we plan to make user input synchronous by
    // default (until you enter `startTransition`, of course.)
    //
    // If weren't planning to make these updates synchronous soon anyway, I
    // would probably make this number a configurable parameter.
    return currentTime + 250;
  } else if (priority >= TransitionPriority) {
    return currentTime + 5000;
  } else {
    // Anything idle priority or lower should never expire.
    return NoTimestamp;
  }
}

function markStarvedLanesAsExpired(root, currentTime) {
  // TODO: This gets called every time we yield. We can optimize by storing
  // the earliest expiration time on the root. Then use that to quickly bail out
  // of this function.
  var pendingLanes = root.pendingLanes;
  var suspendedLanes = root.suspendedLanes;
  var pingedLanes = root.pingedLanes;
  var expirationTimes = root.expirationTimes; // Iterate through the pending lanes and check if we've reached their
  // expiration time. If so, we'll assume the update is being starved and mark
  // it as expired to force it to finish.

  var lanes = pendingLanes;

  while (lanes > 0) {
    var index = pickArbitraryLaneIndex(lanes);
    var lane = 1 << index;
    var expirationTime = expirationTimes[index];

    if (expirationTime === NoTimestamp) {
      // Found a pending lane with no expiration time. If it's not suspended, or
      // if it's pinged, assume it's CPU-bound. Compute a new expiration time
      // using the current time.
      if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) {
        // Assumes timestamps are monotonically increasing.
        expirationTimes[index] = computeExpirationTime(lane, currentTime);
      }
    } else if (expirationTime <= currentTime) {
      // This lane expired
      root.expiredLanes |= lane;
    }

    lanes &= ~lane;
  }
} // This returns the highest priority pending lanes regardless of whether they
function getLanesToRetrySynchronouslyOnError(root) {
  var everythingButOffscreen = root.pendingLanes & ~OffscreenLane;

  if (everythingButOffscreen !== NoLanes) {
    return everythingButOffscreen;
  }

  if (everythingButOffscreen & OffscreenLane) {
    return OffscreenLane;
  }

  return NoLanes;
}
function returnNextLanesPriority() {
  return return_highestLanePriority;
}
function includesNonIdleWork(lanes) {
  return (lanes & NonIdleLanes) !== NoLanes;
}
function includesOnlyRetries(lanes) {
  return (lanes & RetryLanes) === lanes;
}
function includesOnlyTransitions(lanes) {
  return (lanes & TransitionLanes) === lanes;
} // To ensure consistency across multiple updates in the same event, this should
// be a pure function, so that it always returns the same lane for given inputs.

function findUpdateLane(lanePriority, wipLanes) {
  switch (lanePriority) {
    case NoLanePriority:
      break;

    case SyncLanePriority:
      return SyncLane;

    case SyncBatchedLanePriority:
      return SyncBatchedLane;

    case InputDiscreteLanePriority:
      {
        var _lane = pickArbitraryLane(InputDiscreteLanes & ~wipLanes);

        if (_lane === NoLane) {
          // Shift to the next priority level
          return findUpdateLane(InputContinuousLanePriority, wipLanes);
        }

        return _lane;
      }

    case InputContinuousLanePriority:
      {
        var _lane2 = pickArbitraryLane(InputContinuousLanes & ~wipLanes);

        if (_lane2 === NoLane) {
          // Shift to the next priority level
          return findUpdateLane(DefaultLanePriority, wipLanes);
        }

        return _lane2;
      }

    case DefaultLanePriority:
      {
        var _lane3 = pickArbitraryLane(DefaultLanes & ~wipLanes);

        if (_lane3 === NoLane) {
          // If all the default lanes are already being worked on, look for a
          // lane in the transition range.
          _lane3 = pickArbitraryLane(TransitionLanes & ~wipLanes);

          if (_lane3 === NoLane) {
            // All the transition lanes are taken, too. This should be very
            // rare, but as a last resort, pick a default lane. This will have
            // the effect of interrupting the current work-in-progress render.
            _lane3 = pickArbitraryLane(DefaultLanes);
          }
        }

        return _lane3;
      }

    case TransitionPriority: // Should be handled by findTransitionLane instead

    case RetryLanePriority:
      // Should be handled by findRetryLane instead
      break;

    case IdleLanePriority:
      var lane = pickArbitraryLane(IdleLanes & ~wipLanes);

      if (lane === NoLane) {
        lane = pickArbitraryLane(IdleLanes);
      }

      return lane;
  }

  {
    {
      throw Error( "Invalid update priority: " + lanePriority + ". This is a bug in React." );
    }
  }
} // To ensure consistency across multiple updates in the same event, this should
// be pure function, so that it always returns the same lane for given inputs.

function findTransitionLane(wipLanes, pendingLanes) {
  // First look for lanes that are completely unclaimed, i.e. have no
  // pending work.
  var lane = pickArbitraryLane(TransitionLanes & ~pendingLanes);

  if (lane === NoLane) {
    // If all lanes have pending work, look for a lane that isn't currently
    // being worked on.
    lane = pickArbitraryLane(TransitionLanes & ~wipLanes);

    if (lane === NoLane) {
      // If everything is being worked on, pick any lane. This has the
      // effect of interrupting the current work-in-progress.
      lane = pickArbitraryLane(TransitionLanes);
    }
  }

  return lane;
} // To ensure consistency across multiple updates in the same event, this should
// be pure function, so that it always returns the same lane for given inputs.

function findRetryLane(wipLanes) {
  // This is a fork of `findUpdateLane` designed specifically for Suspense
  // "retries" — a special update that attempts to flip a Suspense boundary
  // from its placeholder state to its primary/resolved state.
  var lane = pickArbitraryLane(RetryLanes & ~wipLanes);

  if (lane === NoLane) {
    lane = pickArbitraryLane(RetryLanes);
  }

  return lane;
}

function getHighestPriorityLane(lanes) {
  return lanes & -lanes;
}

function getLowestPriorityLane(lanes) {
  // This finds the most significant non-zero bit.
  var index = 31 - clz32(lanes);
  return index < 0 ? NoLanes : 1 << index;
}

function getEqualOrHigherPriorityLanes(lanes) {
  return (getLowestPriorityLane(lanes) << 1) - 1;
}

function pickArbitraryLane(lanes) {
  // This wrapper function gets inlined. Only exists so to communicate that it
  // doesn't matter which bit is selected; you can pick any bit without
  // affecting the algorithms where its used. Here I'm using
  // getHighestPriorityLane because it requires the fewest operations.
  return getHighestPriorityLane(lanes);
}

function pickArbitraryLaneIndex(lanes) {
  return 31 - clz32(lanes);
}

function laneToIndex(lane) {
  return pickArbitraryLaneIndex(lane);
}

function includesSomeLane(a, b) {
  return (a & b) !== NoLanes;
}
function isSubsetOfLanes(set, subset) {
  return (set & subset) === subset;
}
function mergeLanes(a, b) {
  return a | b;
}
function removeLanes(set, subset) {
  return set & ~subset;
} // Seems redundant, but it changes the type from a single lane (used for
// updates) to a group of lanes (used for flushing work).

function laneToLanes(lane) {
  return lane;
}
function higherPriorityLane(a, b) {
  // This works because the bit ranges decrease in priority as you go left.
  return a !== NoLane && a < b ? a : b;
}
function createLaneMap(initial) {
  // Intentionally pushing one by one.
  // https://v8.dev/blog/elements-kinds#avoid-creating-holes
  var laneMap = [];

  for (var i = 0; i < TotalLanes; i++) {
    laneMap.push(initial);
  }

  return laneMap;
}
function markRootUpdated(root, updateLane, eventTime) {
  root.pendingLanes |= updateLane; // TODO: Theoretically, any update to any lane can unblock any other lane. But
  // it's not practical to try every single possible combination. We need a
  // heuristic to decide which lanes to attempt to render, and in which batches.
  // For now, we use the same heuristic as in the old ExpirationTimes model:
  // retry any lane at equal or lower priority, but don't try updates at higher
  // priority without also including the lower priority updates. This works well
  // when considering updates across different priority levels, but isn't
  // sufficient for updates within the same priority, since we want to treat
  // those updates as parallel.
  // Unsuspend any update at equal or lower priority.

  var higherPriorityLanes = updateLane - 1; // Turns 0b1000 into 0b0111

  root.suspendedLanes &= higherPriorityLanes;
  root.pingedLanes &= higherPriorityLanes;
  var eventTimes = root.eventTimes;
  var index = laneToIndex(updateLane); // We can always overwrite an existing timestamp because we prefer the most
  // recent event, and we assume time is monotonically increasing.

  eventTimes[index] = eventTime;
}
function markRootSuspended(root, suspendedLanes) {
  root.suspendedLanes |= suspendedLanes;
  root.pingedLanes &= ~suspendedLanes; // The suspended lanes are no longer CPU-bound. Clear their expiration times.

  var expirationTimes = root.expirationTimes;
  var lanes = suspendedLanes;

  while (lanes > 0) {
    var index = pickArbitraryLaneIndex(lanes);
    var lane = 1 << index;
    expirationTimes[index] = NoTimestamp;
    lanes &= ~lane;
  }
}
function markRootPinged(root, pingedLanes, eventTime) {
  root.pingedLanes |= root.suspendedLanes & pingedLanes;
}
function markDiscreteUpdatesExpired(root) {
  root.expiredLanes |= InputDiscreteLanes & root.pendingLanes;
}
function hasDiscreteLanes(lanes) {
  return (lanes & InputDiscreteLanes) !== NoLanes;
}
function markRootMutableRead(root, updateLane) {
  root.mutableReadLanes |= updateLane & root.pendingLanes;
}
function markRootFinished(root, remainingLanes) {
  var noLongerPendingLanes = root.pendingLanes & ~remainingLanes;
  root.pendingLanes = remainingLanes; // Let's try everything again

  root.suspendedLanes = 0;
  root.pingedLanes = 0;
  root.expiredLanes &= remainingLanes;
  root.mutableReadLanes &= remainingLanes;
  root.entangledLanes &= remainingLanes;
  var entanglements = root.entanglements;
  var eventTimes = root.eventTimes;
  var expirationTimes = root.expirationTimes; // Clear the lanes that no longer have pending work

  var lanes = noLongerPendingLanes;

  while (lanes > 0) {
    var index = pickArbitraryLaneIndex(lanes);
    var lane = 1 << index;
    entanglements[index] = NoLanes;
    eventTimes[index] = NoTimestamp;
    expirationTimes[index] = NoTimestamp;
    lanes &= ~lane;
  }
}
function markRootEntangled(root, entangledLanes) {
  root.entangledLanes |= entangledLanes;
  var entanglements = root.entanglements;
  var lanes = entangledLanes;

  while (lanes > 0) {
    var index = pickArbitraryLaneIndex(lanes);
    var lane = 1 << index;
    entanglements[index] |= entangledLanes;
    lanes &= ~lane;
  }
}
var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback; // Count leading zeros. Only used on lanes, so assume input is an integer.
// Based on:
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32

var log = Math.log;
var LN2 = Math.LN2;

function clz32Fallback(lanes) {
  if (lanes === 0) {
    return 32;
  }

  return 31 - (log(lanes) / LN2 | 0) | 0;
}

// Intentionally not named imports because Rollup would use dynamic dispatch for
var UserBlockingPriority$1 = Scheduler.unstable_UserBlockingPriority,
    runWithPriority = Scheduler.unstable_runWithPriority; // TODO: can we stop exporting these?

var _enabled = true; // This is exported in FB builds for use by legacy FB layer infra.
// We'd like to remove this but it's not clear if this is safe.

function setEnabled(enabled) {
  _enabled = !!enabled;
}
function isEnabled() {
  return _enabled;
}
function createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags) {
  var eventPriority = getEventPriorityForPluginSystem(domEventName);
  var listenerWrapper;

  switch (eventPriority) {
    case DiscreteEvent:
      listenerWrapper = dispatchDiscreteEvent;
      break;

    case UserBlockingEvent:
      listenerWrapper = dispatchUserBlockingUpdate;
      break;

    case ContinuousEvent:
    default:
      listenerWrapper = dispatchEvent;
      break;
  }

  return listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);
}

function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {
  {
    flushDiscreteUpdatesIfNeeded(nativeEvent.timeStamp);
  }

  discreteUpdates(dispatchEvent, domEventName, eventSystemFlags, container, nativeEvent);
}

function dispatchUserBlockingUpdate(domEventName, eventSystemFlags, container, nativeEvent) {
  {
    runWithPriority(UserBlockingPriority$1, dispatchEvent.bind(null, domEventName, eventSystemFlags, container, nativeEvent));
  }
}

function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
  if (!_enabled) {
    return;
  }

  var allowReplay = true;

  {
    // TODO: replaying capture phase events is currently broken
    // because we used to do it during top-level native bubble handlers
    // but now we use different bubble and capture handlers.
    // In eager mode, we attach capture listeners early, so we need
    // to filter them out until we fix the logic to handle them correctly.
    // This could've been outside the flag but I put it inside to reduce risk.
    allowReplay = (eventSystemFlags & IS_CAPTURE_PHASE) === 0;
  }

  if (allowReplay && hasQueuedDiscreteEvents() && isReplayableDiscreteEvent(domEventName)) {
    // If we already have a queue of discrete events, and this is another discrete
    // event, then we can't dispatch it regardless of its target, since they
    // need to dispatch in order.
    queueDiscreteEvent(null, // Flags that we're not actually blocked on anything as far as we know.
    domEventName, eventSystemFlags, targetContainer, nativeEvent);
    return;
  }

  var blockedOn = attemptToDispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);

  if (blockedOn === null) {
    // We successfully dispatched this event.
    if (allowReplay) {
      clearIfContinuousEvent(domEventName, nativeEvent);
    }

    return;
  }

  if (allowReplay) {
    if (isReplayableDiscreteEvent(domEventName)) {
      // This this to be replayed later once the target is available.
      queueDiscreteEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
      return;
    }

    if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) {
      return;
    } // We need to clear only if we didn't queue because
    // queueing is accummulative.


    clearIfContinuousEvent(domEventName, nativeEvent);
  } // This is not replayable so we'll invoke it but without a target,
  // in case the event system needs to trace it.


  dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);
} // Attempt dispatching an event. Returns a SuspenseInstance or Container if it's blocked.

function attemptToDispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
  // TODO: Warn if _enabled is false.
  var nativeEventTarget = getEventTarget(nativeEvent);
  var targetInst = getClosestInstanceFromNode(nativeEventTarget);

  if (targetInst !== null) {
    var nearestMounted = getNearestMountedFiber(targetInst);

    if (nearestMounted === null) {
      // This tree has been unmounted already. Dispatch without a target.
      targetInst = null;
    } else {
      var tag = nearestMounted.tag;

      if (tag === SuspenseComponent) {
        var instance = getSuspenseInstanceFromFiber(nearestMounted);

        if (instance !== null) {
          // Queue the event to be replayed later. Abort dispatching since we
          // don't want this event dispatched twice through the event system.
          // TODO: If this is the first discrete event in the queue. Schedule an increased
          // priority for this boundary.
          return instance;
        } // This shouldn't happen, something went wrong but to avoid blocking
        // the whole system, dispatch the event without a target.
        // TODO: Warn.


        targetInst = null;
      } else if (tag === HostRoot) {
        var root = nearestMounted.stateNode;

        if (root.hydrate) {
          // If this happens during a replay something went wrong and it might block
          // the whole system.
          return getContainerFromFiber(nearestMounted);
        }

        targetInst = null;
      } else if (nearestMounted !== targetInst) {
        // If we get an event (ex: img onload) before committing that
        // component's mount, ignore it for now (that is, treat it as if it was an
        // event on a non-React tree). We might also consider queueing events and
        // dispatching them after the mount.
        targetInst = null;
      }
    }
  }

  dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer); // We're not blocked on anything.

  return null;
}

function addEventBubbleListener(target, eventType, listener) {
  target.addEventListener(eventType, listener, false);
  return listener;
}
function addEventCaptureListener(target, eventType, listener) {
  target.addEventListener(eventType, listener, true);
  return listener;
}
function addEventCaptureListenerWithPassiveFlag(target, eventType, listener, passive) {
  target.addEventListener(eventType, listener, {
    capture: true,
    passive: passive
  });
  return listener;
}
function addEventBubbleListenerWithPassiveFlag(target, eventType, listener, passive) {
  target.addEventListener(eventType, listener, {
    passive: passive
  });
  return listener;
}

/**
 * These variables store information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 *
 */
var root = null;
var startText = null;
var fallbackText = null;
function initialize(nativeEventTarget) {
  root = nativeEventTarget;
  startText = getText();
  return true;
}
function reset() {
  root = null;
  startText = null;
  fallbackText = null;
}
function getData() {
  if (fallbackText) {
    return fallbackText;
  }

  var start;
  var startValue = startText;
  var startLength = startValue.length;
  var end;
  var endValue = getText();
  var endLength = endValue.length;

  for (start = 0; start < startLength; start++) {
    if (startValue[start] !== endValue[start]) {
      break;
    }
  }

  var minEnd = startLength - start;

  for (end = 1; end <= minEnd; end++) {
    if (startValue[startLength - end] !== endValue[endLength - end]) {
      break;
    }
  }

  var sliceTail = end > 1 ? 1 - end : undefined;
  fallbackText = endValue.slice(start, sliceTail);
  return fallbackText;
}
function getText() {
  if ('value' in root) {
    return root.value;
  }

  return root.textContent;
}

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */
function getEventCharCode(nativeEvent) {
  var charCode;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode; // FF does not set `charCode` for the Enter-key, check against `keyCode`.

    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  } // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
  // report Enter as charCode 10 when ctrl is pressed.


  if (charCode === 10) {
    charCode = 13;
  } // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.


  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

function functionThatReturnsTrue() {
  return true;
}

function functionThatReturnsFalse() {
  return false;
} // This is intentionally a factory so that we have different returned constructors.
// If we had a single constructor, it would be megamorphic and engines would deopt.


function createSyntheticEvent(Interface) {
  /**
   * Synthetic events are dispatched by event plugins, typically in response to a
   * top-level event delegation handler.
   *
   * These systems should generally use pooling to reduce the frequency of garbage
   * collection. The system should check `isPersistent` to determine whether the
   * event should be released into the pool after being dispatched. Users that
   * need a persisted event should invoke `persist`.
   *
   * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
   * normalizing browser quirks. Subclasses do not necessarily have to implement a
   * DOM interface; custom application-specific events can also subclass this.
   */
  function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {
    this._reactName = reactName;
    this._targetInst = targetInst;
    this.type = reactEventType;
    this.nativeEvent = nativeEvent;
    this.target = nativeEventTarget;
    this.currentTarget = null;

    for (var _propName in Interface) {
      if (!Interface.hasOwnProperty(_propName)) {
        continue;
      }

      var normalize = Interface[_propName];

      if (normalize) {
        this[_propName] = normalize(nativeEvent);
      } else {
        this[_propName] = nativeEvent[_propName];
      }
    }

    var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;

    if (defaultPrevented) {
      this.isDefaultPrevented = functionThatReturnsTrue;
    } else {
      this.isDefaultPrevented = functionThatReturnsFalse;
    }

    this.isPropagationStopped = functionThatReturnsFalse;
    return this;
  }

  _assign(SyntheticBaseEvent.prototype, {
    preventDefault: function () {
      this.defaultPrevented = true;
      var event = this.nativeEvent;

      if (!event) {
        return;
      }

      if (event.preventDefault) {
        event.preventDefault(); // $FlowFixMe - flow is not aware of `unknown` in IE
      } else if (typeof event.returnValue !== 'unknown') {
        event.returnValue = false;
      }

      this.isDefaultPrevented = functionThatReturnsTrue;
    },
    stopPropagation: function () {
      var event = this.nativeEvent;

      if (!event) {
        return;
      }

      if (event.stopPropagation) {
        event.stopPropagation(); // $FlowFixMe - flow is not aware of `unknown` in IE
      } else if (typeof event.cancelBubble !== 'unknown') {
        // The ChangeEventPlugin registers a "propertychange" event for
        // IE. This event does not support bubbling or cancelling, and
        // any references to cancelBubble throw "Member not found".  A
        // typeof check of "unknown" circumvents this issue (and is also
        // IE specific).
        event.cancelBubble = true;
      }

      this.isPropagationStopped = functionThatReturnsTrue;
    },

    /**
     * We release all dispatched `SyntheticEvent`s after each event loop, adding
     * them back into the pool. This allows a way to hold onto a reference that
     * won't be added back into the pool.
     */
    persist: function () {// Modern event system doesn't use pooling.
    },

    /**
     * Checks if this event should be released back into the pool.
     *
     * @return {boolean} True if this should not be released, false otherwise.
     */
    isPersistent: functionThatReturnsTrue
  });

  return SyntheticBaseEvent;
}
/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */


var EventInterface = {
  eventPhase: 0,
  bubbles: 0,
  cancelable: 0,
  timeStamp: function (event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: 0,
  isTrusted: 0
};
var SyntheticEvent = createSyntheticEvent(EventInterface);

var UIEventInterface = _assign({}, EventInterface, {
  view: 0,
  detail: 0
});

var SyntheticUIEvent = createSyntheticEvent(UIEventInterface);
var lastMovementX;
var lastMovementY;
var lastMouseEvent;

function updateMouseMovementPolyfillState(event) {
  if (event !== lastMouseEvent) {
    if (lastMouseEvent && event.type === 'mousemove') {
      lastMovementX = event.screenX - lastMouseEvent.screenX;
      lastMovementY = event.screenY - lastMouseEvent.screenY;
    } else {
      lastMovementX = 0;
      lastMovementY = 0;
    }

    lastMouseEvent = event;
  }
}
/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */


var MouseEventInterface = _assign({}, UIEventInterface, {
  screenX: 0,
  screenY: 0,
  clientX: 0,
  clientY: 0,
  pageX: 0,
  pageY: 0,
  ctrlKey: 0,
  shiftKey: 0,
  altKey: 0,
  metaKey: 0,
  getModifierState: getEventModifierState,
  button: 0,
  buttons: 0,
  relatedTarget: function (event) {
    if (event.relatedTarget === undefined) return event.fromElement === event.srcElement ? event.toElement : event.fromElement;
    return event.relatedTarget;
  },
  movementX: function (event) {
    if ('movementX' in event) {
      return event.movementX;
    }

    updateMouseMovementPolyfillState(event);
    return lastMovementX;
  },
  movementY: function (event) {
    if ('movementY' in event) {
      return event.movementY;
    } // Don't need to call updateMouseMovementPolyfillState() here
    // because it's guaranteed to have already run when movementX
    // was copied.


    return lastMovementY;
  }
});

var SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);
/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */

var DragEventInterface = _assign({}, MouseEventInterface, {
  dataTransfer: 0
});

var SyntheticDragEvent = createSyntheticEvent(DragEventInterface);
/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */

var FocusEventInterface = _assign({}, UIEventInterface, {
  relatedTarget: 0
});

var SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);
/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */

var AnimationEventInterface = _assign({}, EventInterface, {
  animationName: 0,
  elapsedTime: 0,
  pseudoElement: 0
});

var SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface);
/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */

var ClipboardEventInterface = _assign({}, EventInterface, {
  clipboardData: function (event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
});

var SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface);
/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */

var CompositionEventInterface = _assign({}, EventInterface, {
  data: 0
});

var SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface);
/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
// Happens to share the same list for now.

var SyntheticInputEvent = SyntheticCompositionEvent;
/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */

var normalizeKey = {
  Esc: 'Escape',
  Spacebar: ' ',
  Left: 'ArrowLeft',
  Up: 'ArrowUp',
  Right: 'ArrowRight',
  Down: 'ArrowDown',
  Del: 'Delete',
  Win: 'OS',
  Menu: 'ContextMenu',
  Apps: 'ContextMenu',
  Scroll: 'ScrollLock',
  MozPrintableKey: 'Unidentified'
};
/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */

var translateToKey = {
  '8': 'Backspace',
  '9': 'Tab',
  '12': 'Clear',
  '13': 'Enter',
  '16': 'Shift',
  '17': 'Control',
  '18': 'Alt',
  '19': 'Pause',
  '20': 'CapsLock',
  '27': 'Escape',
  '32': ' ',
  '33': 'PageUp',
  '34': 'PageDown',
  '35': 'End',
  '36': 'Home',
  '37': 'ArrowLeft',
  '38': 'ArrowUp',
  '39': 'ArrowRight',
  '40': 'ArrowDown',
  '45': 'Insert',
  '46': 'Delete',
  '112': 'F1',
  '113': 'F2',
  '114': 'F3',
  '115': 'F4',
  '116': 'F5',
  '117': 'F6',
  '118': 'F7',
  '119': 'F8',
  '120': 'F9',
  '121': 'F10',
  '122': 'F11',
  '123': 'F12',
  '144': 'NumLock',
  '145': 'ScrollLock',
  '224': 'Meta'
};
/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */

function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.
    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;

    if (key !== 'Unidentified') {
      return key;
    }
  } // Browser does not implement `key`, polyfill as much of it as we can.


  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent); // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.

    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }

  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }

  return '';
}
/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */


var modifierKeyToProp = {
  Alt: 'altKey',
  Control: 'ctrlKey',
  Meta: 'metaKey',
  Shift: 'shiftKey'
}; // Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support
// getModifierState. If getModifierState is not supported, we map it to a set of
// modifier keys exposed by the event. In this case, Lock-keys are not supported.

function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;

  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }

  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}
/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */


var KeyboardEventInterface = _assign({}, UIEventInterface, {
  key: getEventKey,
  code: 0,
  location: 0,
  ctrlKey: 0,
  shiftKey: 0,
  altKey: 0,
  metaKey: 0,
  repeat: 0,
  locale: 0,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function (event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.
    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }

    return 0;
  },
  keyCode: function (event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.
    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }

    return 0;
  },
  which: function (event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }

    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }

    return 0;
  }
});

var SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface);
/**
 * @interface PointerEvent
 * @see http://www.w3.org/TR/pointerevents/
 */

var PointerEventInterface = _assign({}, MouseEventInterface, {
  pointerId: 0,
  width: 0,
  height: 0,
  pressure: 0,
  tangentialPressure: 0,
  tiltX: 0,
  tiltY: 0,
  twist: 0,
  pointerType: 0,
  isPrimary: 0
});

var SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface);
/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */

var TouchEventInterface = _assign({}, UIEventInterface, {
  touches: 0,
  targetTouches: 0,
  changedTouches: 0,
  altKey: 0,
  metaKey: 0,
  ctrlKey: 0,
  shiftKey: 0,
  getModifierState: getEventModifierState
});

var SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);
/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */

var TransitionEventInterface = _assign({}, EventInterface, {
  propertyName: 0,
  elapsedTime: 0,
  pseudoElement: 0
});

var SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface);
/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */

var WheelEventInterface = _assign({}, MouseEventInterface, {
  deltaX: function (event) {
    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function (event) {
    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },
  deltaZ: 0,
  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: 0
});

var SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space

var START_KEYCODE = 229;
var canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;
var documentMode = null;

if (canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
} // Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.


var canUseTextInputEvent = canUseDOM && 'TextEvent' in window && !documentMode; // In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.

var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

function registerEvents() {
  registerTwoPhaseEvent('onBeforeInput', ['compositionend', 'keypress', 'textInput', 'paste']);
  registerTwoPhaseEvent('onCompositionEnd', ['compositionend', 'focusout', 'keydown', 'keypress', 'keyup', 'mousedown']);
  registerTwoPhaseEvent('onCompositionStart', ['compositionstart', 'focusout', 'keydown', 'keypress', 'keyup', 'mousedown']);
  registerTwoPhaseEvent('onCompositionUpdate', ['compositionupdate', 'focusout', 'keydown', 'keypress', 'keyup', 'mousedown']);
} // Track whether we've ever handled a keypress on the space key.


var hasSpaceKeypress = false;
/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */

function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}
/**
 * Translate native top level events into event types.
 */


function getCompositionEventType(domEventName) {
  switch (domEventName) {
    case 'compositionstart':
      return 'onCompositionStart';

    case 'compositionend':
      return 'onCompositionEnd';

    case 'compositionupdate':
      return 'onCompositionUpdate';
  }
}
/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 */


function isFallbackCompositionStart(domEventName, nativeEvent) {
  return domEventName === 'keydown' && nativeEvent.keyCode === START_KEYCODE;
}
/**
 * Does our fallback mode think that this event is the end of composition?
 */


function isFallbackCompositionEnd(domEventName, nativeEvent) {
  switch (domEventName) {
    case 'keyup':
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;

    case 'keydown':
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;

    case 'keypress':
    case 'mousedown':
    case 'focusout':
      // Events are not possible without cancelling IME.
      return true;

    default:
      return false;
  }
}
/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */


function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;

  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }

  return null;
}
/**
 * Check if a composition event was triggered by Korean IME.
 * Our fallback mode does not work well with IE's Korean IME,
 * so just use native composition events when Korean IME is used.
 * Although CompositionEvent.locale property is deprecated,
 * it is available in IE, where our fallback mode is enabled.
 *
 * @param {object} nativeEvent
 * @return {boolean}
 */


function isUsingKoreanIME(nativeEvent) {
  return nativeEvent.locale === 'ko';
} // Track the current IME composition status, if any.


var isComposing = false;
/**
 * @return {?object} A SyntheticCompositionEvent.
 */

function extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
  var eventType;
  var fallbackData;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(domEventName);
  } else if (!isComposing) {
    if (isFallbackCompositionStart(domEventName, nativeEvent)) {
      eventType = 'onCompositionStart';
    }
  } else if (isFallbackCompositionEnd(domEventName, nativeEvent)) {
    eventType = 'onCompositionEnd';
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!isComposing && eventType === 'onCompositionStart') {
      isComposing = initialize(nativeEventTarget);
    } else if (eventType === 'onCompositionEnd') {
      if (isComposing) {
        fallbackData = getData();
      }
    }
  }

  var listeners = accumulateTwoPhaseListeners(targetInst, eventType);

  if (listeners.length > 0) {
    var event = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget);
    dispatchQueue.push({
      event: event,
      listeners: listeners
    });

    if (fallbackData) {
      // Inject data generated from fallback path into the synthetic event.
      // This matches the property of native CompositionEventInterface.
      event.data = fallbackData;
    } else {
      var customData = getDataFromCustomEvent(nativeEvent);

      if (customData !== null) {
        event.data = customData;
      }
    }
  }
}

function getNativeBeforeInputChars(domEventName, nativeEvent) {
  switch (domEventName) {
    case 'compositionend':
      return getDataFromCustomEvent(nativeEvent);

    case 'keypress':
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;

      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case 'textInput':
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data; // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to ignore it.

      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}
/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 */


function getFallbackBeforeInputChars(domEventName, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  // If composition event is available, we extract a string only at
  // compositionevent, otherwise extract it at fallback events.
  if (isComposing) {
    if (domEventName === 'compositionend' || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent)) {
      var chars = getData();
      reset();
      isComposing = false;
      return chars;
    }

    return null;
  }

  switch (domEventName) {
    case 'paste':
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;

    case 'keypress':
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (!isKeypressCommand(nativeEvent)) {
        // IE fires the `keypress` event when a user types an emoji via
        // Touch keyboard of Windows.  In such a case, the `char` property
        // holds an emoji character like `\uD83D\uDE0A`.  Because its length
        // is 2, the property `which` does not represent an emoji correctly.
        // In such a case, we directly return the `char` property instead of
        // using `which`.
        if (nativeEvent.char && nativeEvent.char.length > 1) {
          return nativeEvent.char;
        } else if (nativeEvent.which) {
          return String.fromCharCode(nativeEvent.which);
        }
      }

      return null;

    case 'compositionend':
      return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;

    default:
      return null;
  }
}
/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */


function extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
  var chars;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(domEventName, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(domEventName, nativeEvent);
  } // If no characters are being inserted, no BeforeInput event should
  // be fired.


  if (!chars) {
    return null;
  }

  var listeners = accumulateTwoPhaseListeners(targetInst, 'onBeforeInput');

  if (listeners.length > 0) {
    var event = new SyntheticInputEvent('onBeforeInput', 'beforeinput', null, nativeEvent, nativeEventTarget);
    dispatchQueue.push({
      event: event,
      listeners: listeners
    });
    event.data = chars;
  }
}
/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */


function extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
  extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
  extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
}

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */
var supportedInputTypes = {
  color: true,
  date: true,
  datetime: true,
  'datetime-local': true,
  email: true,
  month: true,
  number: true,
  password: true,
  range: true,
  search: true,
  tel: true,
  text: true,
  time: true,
  url: true,
  week: true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

  if (nodeName === 'input') {
    return !!supportedInputTypes[elem.type];
  }

  if (nodeName === 'textarea') {
    return true;
  }

  return false;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */

function isEventSupported(eventNameSuffix) {
  if (!canUseDOM) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = (eventName in document);

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  return isSupported;
}

function registerEvents$1() {
  registerTwoPhaseEvent('onChange', ['change', 'click', 'focusin', 'focusout', 'input', 'keydown', 'keyup', 'selectionchange']);
}

function createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {
  // Flag this event loop as needing state restore.
  enqueueStateRestore(target);
  var listeners = accumulateTwoPhaseListeners(inst, 'onChange');

  if (listeners.length > 0) {
    var event = new SyntheticEvent('onChange', 'change', null, nativeEvent, target);
    dispatchQueue.push({
      event: event,
      listeners: listeners
    });
  }
}
/**
 * For IE shims
 */


var activeElement = null;
var activeElementInst = null;
/**
 * SECTION: handle `change` event
 */

function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

function manualDispatchChangeEvent(nativeEvent) {
  var dispatchQueue = [];
  createAndAccumulateChangeEvent(dispatchQueue, activeElementInst, nativeEvent, getEventTarget(nativeEvent)); // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.

  batchedUpdates(runEventInBatch, dispatchQueue);
}

function runEventInBatch(dispatchQueue) {
  processDispatchQueue(dispatchQueue, 0);
}

function getInstIfValueChanged(targetInst) {
  var targetNode = getNodeFromInstance(targetInst);

  if (updateValueIfChanged(targetNode)) {
    return targetInst;
  }
}

function getTargetInstForChangeEvent(domEventName, targetInst) {
  if (domEventName === 'change') {
    return targetInst;
  }
}
/**
 * SECTION: handle `input` event
 */


var isInputEventSupported = false;

if (canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.
  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
}
/**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */


function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onpropertychange', handlePropertyChange);
}
/**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */


function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }

  activeElement.detachEvent('onpropertychange', handlePropertyChange);
  activeElement = null;
  activeElementInst = null;
}
/**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */


function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }

  if (getInstIfValueChanged(activeElementInst)) {
    manualDispatchChangeEvent(nativeEvent);
  }
}

function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
  if (domEventName === 'focusin') {
    // In IE9, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (domEventName === 'focusout') {
    stopWatchingForValueChange();
  }
} // For IE8 and IE9.


function getTargetInstForInputEventPolyfill(domEventName, targetInst) {
  if (domEventName === 'selectionchange' || domEventName === 'keyup' || domEventName === 'keydown') {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    return getInstIfValueChanged(activeElementInst);
  }
}
/**
 * SECTION: handle `click` event
 */


function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(domEventName, targetInst) {
  if (domEventName === 'click') {
    return getInstIfValueChanged(targetInst);
  }
}

function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
  if (domEventName === 'input' || domEventName === 'change') {
    return getInstIfValueChanged(targetInst);
  }
}

function handleControlledInputBlur(node) {
  var state = node._wrapperState;

  if (!state || !state.controlled || node.type !== 'number') {
    return;
  }

  {
    // If controlled, assign the value attribute to the current value on blur
    setDefaultValue(node, 'number', node.value);
  }
}
/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */


function extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
  var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
  var getTargetInstFunc, handleEventFunc;

  if (shouldUseChangeEvent(targetNode)) {
    getTargetInstFunc = getTargetInstForChangeEvent;
  } else if (isTextInputElement(targetNode)) {
    if (isInputEventSupported) {
      getTargetInstFunc = getTargetInstForInputOrChangeEvent;
    } else {
      getTargetInstFunc = getTargetInstForInputEventPolyfill;
      handleEventFunc = handleEventsForInputEventPolyfill;
    }
  } else if (shouldUseClickEvent(targetNode)) {
    getTargetInstFunc = getTargetInstForClickEvent;
  }

  if (getTargetInstFunc) {
    var inst = getTargetInstFunc(domEventName, targetInst);

    if (inst) {
      createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, nativeEventTarget);
      return;
    }
  }

  if (handleEventFunc) {
    handleEventFunc(domEventName, targetNode, targetInst);
  } // When blurring, set the value attribute for number inputs


  if (domEventName === 'focusout') {
    handleControlledInputBlur(targetNode);
  }
}

function registerEvents$2() {
  registerDirectEvent('onMouseEnter', ['mouseout', 'mouseover']);
  registerDirectEvent('onMouseLeave', ['mouseout', 'mouseover']);
  registerDirectEvent('onPointerEnter', ['pointerout', 'pointerover']);
  registerDirectEvent('onPointerLeave', ['pointerout', 'pointerover']);
}
/**
 * For almost every interaction we care about, there will be both a top-level
 * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
 * we do not extract duplicate events. However, moving the mouse into the
 * browser from outside will not fire a `mouseout` event. In this case, we use
 * the `mouseover` top-level event.
 */


function extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
  var isOverEvent = domEventName === 'mouseover' || domEventName === 'pointerover';
  var isOutEvent = domEventName === 'mouseout' || domEventName === 'pointerout';

  if (isOverEvent && (eventSystemFlags & IS_REPLAYED) === 0) {
    // If this is an over event with a target, we might have already dispatched
    // the event in the out event of the other target. If this is replayed,
    // then it's because we couldn't dispatch against this target previously
    // so we have to do it now instead.
    var related = nativeEvent.relatedTarget || nativeEvent.fromElement;

    if (related) {
      // If the related node is managed by React, we can assume that we have
      // already dispatched the corresponding events during its mouseout.
      if (getClosestInstanceFromNode(related) || isContainerMarkedAsRoot(related)) {
        return;
      }
    }
  }

  if (!isOutEvent && !isOverEvent) {
    // Must not be a mouse or pointer in or out - ignoring.
    return;
  }

  var win; // TODO: why is this nullable in the types but we read from it?

  if (nativeEventTarget.window === nativeEventTarget) {
    // `nativeEventTarget` is probably a window object.
    win = nativeEventTarget;
  } else {
    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
    var doc = nativeEventTarget.ownerDocument;

    if (doc) {
      win = doc.defaultView || doc.parentWindow;
    } else {
      win = window;
    }
  }

  var from;
  var to;

  if (isOutEvent) {
    var _related = nativeEvent.relatedTarget || nativeEvent.toElement;

    from = targetInst;
    to = _related ? getClosestInstanceFromNode(_related) : null;

    if (to !== null) {
      var nearestMounted = getNearestMountedFiber(to);

      if (to !== nearestMounted || to.tag !== HostComponent && to.tag !== HostText) {
        to = null;
      }
    }
  } else {
    // Moving to a node from outside the window.
    from = null;
    to = targetInst;
  }

  if (from === to) {
    // Nothing pertains to our managed components.
    return;
  }

  var SyntheticEventCtor = SyntheticMouseEvent;
  var leaveEventType = 'onMouseLeave';
  var enterEventType = 'onMouseEnter';
  var eventTypePrefix = 'mouse';

  if (domEventName === 'pointerout' || domEventName === 'pointerover') {
    SyntheticEventCtor = SyntheticPointerEvent;
    leaveEventType = 'onPointerLeave';
    enterEventType = 'onPointerEnter';
    eventTypePrefix = 'pointer';
  }

  var fromNode = from == null ? win : getNodeFromInstance(from);
  var toNode = to == null ? win : getNodeFromInstance(to);
  var leave = new SyntheticEventCtor(leaveEventType, eventTypePrefix + 'leave', from, nativeEvent, nativeEventTarget);
  leave.target = fromNode;
  leave.relatedTarget = toNode;
  var enter = null; // We should only process this nativeEvent if we are processing
  // the first ancestor. Next time, we will ignore the event.

  var nativeTargetInst = getClosestInstanceFromNode(nativeEventTarget);

  if (nativeTargetInst === targetInst) {
    var enterEvent = new SyntheticEventCtor(enterEventType, eventTypePrefix + 'enter', to, nativeEvent, nativeEventTarget);
    enterEvent.target = toNode;
    enterEvent.relatedTarget = fromNode;
    enter = enterEvent;
  }

  accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leave, enter, from, to);
}

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare
  ;
}

var objectIs = typeof Object.is === 'function' ? Object.is : is;

var hasOwnProperty$2 = Object.prototype.hasOwnProperty;
/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */

function shallowEqual(objA, objB) {
  if (objectIs(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  } // Test for A's keys different from B.


  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty$2.call(objB, keysA[i]) || !objectIs(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */

function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }

  return node;
}
/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */


function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }

    node = node.parentNode;
  }
}
/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */


function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === TEXT_NODE) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

/**
 * @param {DOMElement} outerNode
 * @return {?object}
 */

function getOffsets(outerNode) {
  var ownerDocument = outerNode.ownerDocument;
  var win = ownerDocument && ownerDocument.defaultView || window;
  var selection = win.getSelection && win.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode,
      anchorOffset = selection.anchorOffset,
      focusNode = selection.focusNode,
      focusOffset = selection.focusOffset; // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
  // up/down buttons on an <input type="number">. Anonymous divs do not seem to
  // expose properties, triggering a "Permission denied error" if any of its
  // properties are accessed. The only seemingly possible way to avoid erroring
  // is to access a property that typically works for non-anonymous divs and
  // catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427

  try {
    /* eslint-disable no-unused-expressions */
    anchorNode.nodeType;
    focusNode.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
}
/**
 * Returns {start, end} where `start` is the character/codepoint index of
 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
 * `end` is the index of (focusNode, focusOffset).
 *
 * Returns null if you pass in garbage input but we should probably just crash.
 *
 * Exported only for testing.
 */

function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
  var length = 0;
  var start = -1;
  var end = -1;
  var indexWithinAnchor = 0;
  var indexWithinFocus = 0;
  var node = outerNode;
  var parentNode = null;

  outer: while (true) {
    var next = null;

    while (true) {
      if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
        start = length + anchorOffset;
      }

      if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
        end = length + focusOffset;
      }

      if (node.nodeType === TEXT_NODE) {
        length += node.nodeValue.length;
      }

      if ((next = node.firstChild) === null) {
        break;
      } // Moving from `node` to its first child `next`.


      parentNode = node;
      node = next;
    }

    while (true) {
      if (node === outerNode) {
        // If `outerNode` has children, this is always the second time visiting
        // it. If it has no children, this is still the first loop, and the only
        // valid selection is anchorNode and focusNode both equal to this node
        // and both offsets 0, in which case we will have handled above.
        break outer;
      }

      if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
        start = length;
      }

      if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
        end = length;
      }

      if ((next = node.nextSibling) !== null) {
        break;
      }

      node = parentNode;
      parentNode = node.parentNode;
    } // Moving from `node` to its next sibling `next`.


    node = next;
  }

  if (start === -1 || end === -1) {
    // This should never happen. (Would happen if the anchor/focus nodes aren't
    // actually inside the passed-in node.)
    return null;
  }

  return {
    start: start,
    end: end
  };
}
/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */

function setOffsets(node, offsets) {
  var doc = node.ownerDocument || document;
  var win = doc && doc.defaultView || window; // Edge fails with "Object expected" in some scenarios.
  // (For instance: TinyMCE editor used in a list component that supports pasting to add more,
  // fails when pasting 100+ items)

  if (!win.getSelection) {
    return;
  }

  var selection = win.getSelection();
  var length = node.textContent.length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length); // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.

  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
      return;
    }

    var range = doc.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

function isTextNode(node) {
  return node && node.nodeType === TEXT_NODE;
}

function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if ('contains' in outerNode) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

function isInDocument(node) {
  return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
}

function isSameOriginFrame(iframe) {
  try {
    // Accessing the contentDocument of a HTMLIframeElement can cause the browser
    // to throw, e.g. if it has a cross-origin src attribute.
    // Safari will show an error in the console when the access results in "Blocked a frame with origin". e.g:
    // iframe.contentDocument.defaultView;
    // A safety way is to access one of the cross origin properties: Window or Location
    // Which might result in "SecurityError" DOM Exception and it is compatible to Safari.
    // https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl
    return typeof iframe.contentWindow.location.href === 'string';
  } catch (err) {
    return false;
  }
}

function getActiveElementDeep() {
  var win = window;
  var element = getActiveElement();

  while (element instanceof win.HTMLIFrameElement) {
    if (isSameOriginFrame(element)) {
      win = element.contentWindow;
    } else {
      return element;
    }

    element = getActiveElement(win.document);
  }

  return element;
}
/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */

/**
 * @hasSelectionCapabilities: we get the element types that support selection
 * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
 * and `selectionEnd` rows.
 */


function hasSelectionCapabilities(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');
}
function getSelectionInformation() {
  var focusedElem = getActiveElementDeep();
  return {
    focusedElem: focusedElem,
    selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null
  };
}
/**
 * @restoreSelection: If any selection information was potentially lost,
 * restore it. This is useful when performing operations that could remove dom
 * nodes and place them back in, resulting in focus being lost.
 */

function restoreSelection(priorSelectionInformation) {
  var curFocusedElem = getActiveElementDeep();
  var priorFocusedElem = priorSelectionInformation.focusedElem;
  var priorSelectionRange = priorSelectionInformation.selectionRange;

  if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
    if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {
      setSelection(priorFocusedElem, priorSelectionRange);
    } // Focusing a node can change the scroll position, which is undesirable


    var ancestors = [];
    var ancestor = priorFocusedElem;

    while (ancestor = ancestor.parentNode) {
      if (ancestor.nodeType === ELEMENT_NODE) {
        ancestors.push({
          element: ancestor,
          left: ancestor.scrollLeft,
          top: ancestor.scrollTop
        });
      }
    }

    if (typeof priorFocusedElem.focus === 'function') {
      priorFocusedElem.focus();
    }

    for (var i = 0; i < ancestors.length; i++) {
      var info = ancestors[i];
      info.element.scrollLeft = info.left;
      info.element.scrollTop = info.top;
    }
  }
}
/**
 * @getSelection: Gets the selection bounds of a focused textarea, input or
 * contentEditable node.
 * -@input: Look up selection bounds of this input
 * -@return {start: selectionStart, end: selectionEnd}
 */

function getSelection(input) {
  var selection;

  if ('selectionStart' in input) {
    // Modern browser with input or textarea.
    selection = {
      start: input.selectionStart,
      end: input.selectionEnd
    };
  } else {
    // Content editable or old IE textarea.
    selection = getOffsets(input);
  }

  return selection || {
    start: 0,
    end: 0
  };
}
/**
 * @setSelection: Sets the selection bounds of a textarea or input and focuses
 * the input.
 * -@input     Set selection bounds of this input or textarea
 * -@offsets   Object of same form that is returned from get*
 */

function setSelection(input, offsets) {
  var start = offsets.start;
  var end = offsets.end;

  if (end === undefined) {
    end = start;
  }

  if ('selectionStart' in input) {
    input.selectionStart = start;
    input.selectionEnd = Math.min(end, input.value.length);
  } else {
    setOffsets(input, offsets);
  }
}

var skipSelectionChangeEvent = canUseDOM && 'documentMode' in document && document.documentMode <= 11;

function registerEvents$3() {
  registerTwoPhaseEvent('onSelect', ['focusout', 'contextmenu', 'dragend', 'focusin', 'keydown', 'keyup', 'mousedown', 'mouseup', 'selectionchange']);
}

var activeElement$1 = null;
var activeElementInst$1 = null;
var lastSelection = null;
var mouseDown = false;
/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 */

function getSelection$1(node) {
  if ('selectionStart' in node && hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else {
    var win = node.ownerDocument && node.ownerDocument.defaultView || window;
    var selection = win.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  }
}
/**
 * Get document associated with the event target.
 */


function getEventTargetDocument(eventTarget) {
  return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
}
/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @param {object} nativeEventTarget
 * @return {?SyntheticEvent}
 */


function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  var doc = getEventTargetDocument(nativeEventTarget);

  if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) {
    return;
  } // Only fire when selection has actually changed.


  var currentSelection = getSelection$1(activeElement$1);

  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;
    var listeners = accumulateTwoPhaseListeners(activeElementInst$1, 'onSelect');

    if (listeners.length > 0) {
      var event = new SyntheticEvent('onSelect', 'select', null, nativeEvent, nativeEventTarget);
      dispatchQueue.push({
        event: event,
        listeners: listeners
      });
      event.target = activeElement$1;
    }
  }
}
/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */


function extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {

  var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;

  switch (domEventName) {
    // Track the input node that has focus.
    case 'focusin':
      if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
        activeElement$1 = targetNode;
        activeElementInst$1 = targetInst;
        lastSelection = null;
      }

      break;

    case 'focusout':
      activeElement$1 = null;
      activeElementInst$1 = null;
      lastSelection = null;
      break;
    // Don't fire the event while the user is dragging. This matches the
    // semantics of the native select event.

    case 'mousedown':
      mouseDown = true;
      break;

    case 'contextmenu':
    case 'mouseup':
    case 'dragend':
      mouseDown = false;
      constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
      break;
    // Chrome and IE fire non-standard event when selection is changed (and
    // sometimes when it hasn't). IE's event fires out of order with respect
    // to key and input events on deletion, so we discard it.
    //
    // Firefox doesn't support selectionchange, so check selection status
    // after each key entry. The selection changes after keydown and before
    // keyup, but we check on keydown as well in the case of holding down a
    // key, when multiple keydown events are fired but only one keyup is.
    // This is also our approach for IE handling, for the reason above.

    case 'selectionchange':
      if (skipSelectionChangeEvent) {
        break;
      }

    // falls through

    case 'keydown':
    case 'keyup':
      constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
  }
}

function extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
  var reactName = topLevelEventsToReactNames.get(domEventName);

  if (reactName === undefined) {
    return;
  }

  var SyntheticEventCtor = SyntheticEvent;
  var reactEventType = domEventName;

  switch (domEventName) {
    case 'keypress':
      // Firefox creates a keypress event for function keys too. This removes
      // the unwanted keypress events. Enter is however both printable and
      // non-printable. One would expect Tab to be as well (but it isn't).
      if (getEventCharCode(nativeEvent) === 0) {
        return;
      }

    /* falls through */

    case 'keydown':
    case 'keyup':
      SyntheticEventCtor = SyntheticKeyboardEvent;
      break;

    case 'focusin':
      reactEventType = 'focus';
      SyntheticEventCtor = SyntheticFocusEvent;
      break;

    case 'focusout':
      reactEventType = 'blur';
      SyntheticEventCtor = SyntheticFocusEvent;
      break;

    case 'beforeblur':
    case 'afterblur':
      SyntheticEventCtor = SyntheticFocusEvent;
      break;

    case 'click':
      // Firefox creates a click event on right mouse clicks. This removes the
      // unwanted click events.
      if (nativeEvent.button === 2) {
        return;
      }

    /* falls through */

    case 'auxclick':
    case 'dblclick':
    case 'mousedown':
    case 'mousemove':
    case 'mouseup': // TODO: Disabled elements should not respond to mouse events

    /* falls through */

    case 'mouseout':
    case 'mouseover':
    case 'contextmenu':
      SyntheticEventCtor = SyntheticMouseEvent;
      break;

    case 'drag':
    case 'dragend':
    case 'dragenter':
    case 'dragexit':
    case 'dragleave':
    case 'dragover':
    case 'dragstart':
    case 'drop':
      SyntheticEventCtor = SyntheticDragEvent;
      break;

    case 'touchcancel':
    case 'touchend':
    case 'touchmove':
    case 'touchstart':
      SyntheticEventCtor = SyntheticTouchEvent;
      break;

    case ANIMATION_END:
    case ANIMATION_ITERATION:
    case ANIMATION_START:
      SyntheticEventCtor = SyntheticAnimationEvent;
      break;

    case TRANSITION_END:
      SyntheticEventCtor = SyntheticTransitionEvent;
      break;

    case 'scroll':
      SyntheticEventCtor = SyntheticUIEvent;
      break;

    case 'wheel':
      SyntheticEventCtor = SyntheticWheelEvent;
      break;

    case 'copy':
    case 'cut':
    case 'paste':
      SyntheticEventCtor = SyntheticClipboardEvent;
      break;

    case 'gotpointercapture':
    case 'lostpointercapture':
    case 'pointercancel':
    case 'pointerdown':
    case 'pointermove':
    case 'pointerout':
    case 'pointerover':
    case 'pointerup':
      SyntheticEventCtor = SyntheticPointerEvent;
      break;
  }

  var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;

  {
    // Some events don't bubble in the browser.
    // In the past, React has always bubbled them, but this can be surprising.
    // We're going to try aligning closer to the browser behavior by not bubbling
    // them in React either. We'll start by not bubbling onScroll, and then expand.
    var accumulateTargetOnly = !inCapturePhase && // TODO: ideally, we'd eventually add all events from
    // nonDelegatedEvents list in DOMPluginEventSystem.
    // Then we can remove this special list.
    // This is a breaking change that can wait until React 18.
    domEventName === 'scroll';

    var _listeners = accumulateSinglePhaseListeners(targetInst, reactName, nativeEvent.type, inCapturePhase, accumulateTargetOnly);

    if (_listeners.length > 0) {
      // Intentionally create event lazily.
      var _event = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget);

      dispatchQueue.push({
        event: _event,
        listeners: _listeners
      });
    }
  }
}

// TODO: remove top-level side effect.
registerSimpleEvents();
registerEvents$2();
registerEvents$1();
registerEvents$3();
registerEvents();

function extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
  // TODO: we should remove the concept of a "SimpleEventPlugin".
  // This is the basic functionality of the event system. All
  // the other plugins are essentially polyfills. So the plugin
  // should probably be inlined somewhere and have its logic
  // be core the to event system. This would potentially allow
  // us to ship builds of React without the polyfilled plugins below.
  extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
  var shouldProcessPolyfillPlugins = (eventSystemFlags & SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS) === 0; // We don't process these events unless we are in the
  // event's native "bubble" phase, which means that we're
  // not in the capture phase. That's because we emulate
  // the capture phase here still. This is a trade-off,
  // because in an ideal world we would not emulate and use
  // the phases properly, like we do with the SimpleEvent
  // plugin. However, the plugins below either expect
  // emulation (EnterLeave) or use state localized to that
  // plugin (BeforeInput, Change, Select). The state in
  // these modules complicates things, as you'll essentially
  // get the case where the capture phase event might change
  // state, only for the following bubble event to come in
  // later and not trigger anything as the state now
  // invalidates the heuristics of the event plugin. We
  // could alter all these plugins to work in such ways, but
  // that might cause other unknown side-effects that we
  // can't forsee right now.

  if (shouldProcessPolyfillPlugins) {
    extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
    extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
    extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
    extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
  }
} // List of events that need to be individually attached to media elements.


var mediaEventTypes = ['abort', 'canplay', 'canplaythrough', 'durationchange', 'emptied', 'encrypted', 'ended', 'error', 'loadeddata', 'loadedmetadata', 'loadstart', 'pause', 'play', 'playing', 'progress', 'ratechange', 'seeked', 'seeking', 'stalled', 'suspend', 'timeupdate', 'volumechange', 'waiting']; // We should not delegate these events to the container, but rather
// set them on the actual target element itself. This is primarily
// because these events do not consistently bubble in the DOM.

var nonDelegatedEvents = new Set(['cancel', 'close', 'invalid', 'load', 'scroll', 'toggle'].concat(mediaEventTypes));

function executeDispatch(event, listener, currentTarget) {
  var type = event.type || 'unknown-event';
  event.currentTarget = currentTarget;
  invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
  event.currentTarget = null;
}

function processDispatchQueueItemsInOrder(event, dispatchListeners, inCapturePhase) {
  var previousInstance;

  if (inCapturePhase) {
    for (var i = dispatchListeners.length - 1; i >= 0; i--) {
      var _dispatchListeners$i = dispatchListeners[i],
          instance = _dispatchListeners$i.instance,
          currentTarget = _dispatchListeners$i.currentTarget,
          listener = _dispatchListeners$i.listener;

      if (instance !== previousInstance && event.isPropagationStopped()) {
        return;
      }

      executeDispatch(event, listener, currentTarget);
      previousInstance = instance;
    }
  } else {
    for (var _i = 0; _i < dispatchListeners.length; _i++) {
      var _dispatchListeners$_i = dispatchListeners[_i],
          _instance = _dispatchListeners$_i.instance,
          _currentTarget = _dispatchListeners$_i.currentTarget,
          _listener = _dispatchListeners$_i.listener;

      if (_instance !== previousInstance && event.isPropagationStopped()) {
        return;
      }

      executeDispatch(event, _listener, _currentTarget);
      previousInstance = _instance;
    }
  }
}

function processDispatchQueue(dispatchQueue, eventSystemFlags) {
  var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;

  for (var i = 0; i < dispatchQueue.length; i++) {
    var _dispatchQueue$i = dispatchQueue[i],
        event = _dispatchQueue$i.event,
        listeners = _dispatchQueue$i.listeners;
    processDispatchQueueItemsInOrder(event, listeners, inCapturePhase); //  event system doesn't use pooling.
  } // This would be a good time to rethrow if any of the event handlers threw.


  rethrowCaughtError();
}

function dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
  var nativeEventTarget = getEventTarget(nativeEvent);
  var dispatchQueue = [];
  extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
  processDispatchQueue(dispatchQueue, eventSystemFlags);
}

function listenToNonDelegatedEvent(domEventName, targetElement) {
  var isCapturePhaseListener = false;
  var listenerSet = getEventListenerSet(targetElement);
  var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);

  if (!listenerSet.has(listenerSetKey)) {
    addTrappedEventListener(targetElement, domEventName, IS_NON_DELEGATED, isCapturePhaseListener);
    listenerSet.add(listenerSetKey);
  }
}
var listeningMarker = '_reactListening' + Math.random().toString(36).slice(2);
function listenToAllSupportedEvents(rootContainerElement) {
  {
    if (rootContainerElement[listeningMarker]) {
      // Performance optimization: don't iterate through events
      // for the same portal container or root node more than once.
      // TODO: once we remove the flag, we may be able to also
      // remove some of the bookkeeping maps used for laziness.
      return;
    }

    rootContainerElement[listeningMarker] = true;
    allNativeEvents.forEach(function (domEventName) {
      if (!nonDelegatedEvents.has(domEventName)) {
        listenToNativeEvent(domEventName, false, rootContainerElement, null);
      }

      listenToNativeEvent(domEventName, true, rootContainerElement, null);
    });
  }
}
function listenToNativeEvent(domEventName, isCapturePhaseListener, rootContainerElement, targetElement) {
  var eventSystemFlags = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
  var target = rootContainerElement; // selectionchange needs to be attached to the document
  // otherwise it won't capture incoming events that are only
  // triggered on the document directly.

  if (domEventName === 'selectionchange' && rootContainerElement.nodeType !== DOCUMENT_NODE) {
    target = rootContainerElement.ownerDocument;
  } // If the event can be delegated (or is capture phase), we can
  // register it to the root container. Otherwise, we should
  // register the event to the target element and mark it as
  // a non-delegated event.


  if (targetElement !== null && !isCapturePhaseListener && nonDelegatedEvents.has(domEventName)) {
    // For all non-delegated events, apart from scroll, we attach
    // their event listeners to the respective elements that their
    // events fire on. That means we can skip this step, as event
    // listener has already been added previously. However, we
    // special case the scroll event because the reality is that any
    // element can scroll.
    // TODO: ideally, we'd eventually apply the same logic to all
    // events from the nonDelegatedEvents list. Then we can remove
    // this special case and use the same logic for all events.
    if (domEventName !== 'scroll') {
      return;
    }

    eventSystemFlags |= IS_NON_DELEGATED;
    target = targetElement;
  }

  var listenerSet = getEventListenerSet(target);
  var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener); // If the listener entry is empty or we should upgrade, then
  // we need to trap an event listener onto the target.

  if (!listenerSet.has(listenerSetKey)) {
    if (isCapturePhaseListener) {
      eventSystemFlags |= IS_CAPTURE_PHASE;
    }

    addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);
    listenerSet.add(listenerSetKey);
  }
}

function addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener, isDeferredListenerForLegacyFBSupport) {
  var listener = createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags); // If passive option is not supported, then the event will be
  // active and not passive.

  var isPassiveListener = undefined;

  if (passiveBrowserEventsSupported) {
    // Browsers introduced an intervention, making these events
    // passive by default on document. React doesn't bind them
    // to document anymore, but changing this now would undo
    // the performance wins from the change. So we emulate
    // the existing behavior manually on the roots now.
    // https://github.com/facebook/react/issues/19651
    if (domEventName === 'touchstart' || domEventName === 'touchmove' || domEventName === 'wheel') {
      isPassiveListener = true;
    }
  }

  targetContainer =  targetContainer;


  if (isCapturePhaseListener) {
    if (isPassiveListener !== undefined) {
      addEventCaptureListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
    } else {
      addEventCaptureListener(targetContainer, domEventName, listener);
    }
  } else {
    if (isPassiveListener !== undefined) {
      addEventBubbleListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
    } else {
      addEventBubbleListener(targetContainer, domEventName, listener);
    }
  }
}

function isMatchingRootContainer(grandContainer, targetContainer) {
  return grandContainer === targetContainer || grandContainer.nodeType === COMMENT_NODE && grandContainer.parentNode === targetContainer;
}

function dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
  var ancestorInst = targetInst;

  if ((eventSystemFlags & IS_EVENT_HANDLE_NON_MANAGED_NODE) === 0 && (eventSystemFlags & IS_NON_DELEGATED) === 0) {
    var targetContainerNode = targetContainer; // If we are using the legacy FB support flag, we

    if (targetInst !== null) {
      // The below logic attempts to work out if we need to change
      // the target fiber to a different ancestor. We had similar logic
      // in the legacy event system, except the big difference between
      // systems is that the modern event system now has an event listener
      // attached to each React Root and React Portal Root. Together,
      // the DOM nodes representing these roots are the "rootContainer".
      // To figure out which ancestor instance we should use, we traverse
      // up the fiber tree from the target instance and attempt to find
      // root boundaries that match that of our current "rootContainer".
      // If we find that "rootContainer", we find the parent fiber
      // sub-tree for that root and make that our ancestor instance.
      var node = targetInst;

      mainLoop: while (true) {
        if (node === null) {
          return;
        }

        var nodeTag = node.tag;

        if (nodeTag === HostRoot || nodeTag === HostPortal) {
          var container = node.stateNode.containerInfo;

          if (isMatchingRootContainer(container, targetContainerNode)) {
            break;
          }

          if (nodeTag === HostPortal) {
            // The target is a portal, but it's not the rootContainer we're looking for.
            // Normally portals handle their own events all the way down to the root.
            // So we should be able to stop now. However, we don't know if this portal
            // was part of *our* root.
            var grandNode = node.return;

            while (grandNode !== null) {
              var grandTag = grandNode.tag;

              if (grandTag === HostRoot || grandTag === HostPortal) {
                var grandContainer = grandNode.stateNode.containerInfo;

                if (isMatchingRootContainer(grandContainer, targetContainerNode)) {
                  // This is the rootContainer we're looking for and we found it as
                  // a parent of the Portal. That means we can ignore it because the
                  // Portal will bubble through to us.
                  return;
                }
              }

              grandNode = grandNode.return;
            }
          } // Now we need to find it's corresponding host fiber in the other
          // tree. To do this we can use getClosestInstanceFromNode, but we
          // need to validate that the fiber is a host instance, otherwise
          // we need to traverse up through the DOM till we find the correct
          // node that is from the other tree.


          while (container !== null) {
            var parentNode = getClosestInstanceFromNode(container);

            if (parentNode === null) {
              return;
            }

            var parentTag = parentNode.tag;

            if (parentTag === HostComponent || parentTag === HostText) {
              node = ancestorInst = parentNode;
              continue mainLoop;
            }

            container = container.parentNode;
          }
        }

        node = node.return;
      }
    }
  }

  batchedEventUpdates(function () {
    return dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, ancestorInst);
  });
}

function createDispatchListener(instance, listener, currentTarget) {
  return {
    instance: instance,
    listener: listener,
    currentTarget: currentTarget
  };
}

function accumulateSinglePhaseListeners(targetFiber, reactName, nativeEventType, inCapturePhase, accumulateTargetOnly) {
  var captureName = reactName !== null ? reactName + 'Capture' : null;
  var reactEventName = inCapturePhase ? captureName : reactName;
  var listeners = [];
  var instance = targetFiber;
  var lastHostComponent = null; // Accumulate all instances and listeners via the target -> root path.

  while (instance !== null) {
    var _instance2 = instance,
        stateNode = _instance2.stateNode,
        tag = _instance2.tag; // Handle listeners that are on HostComponents (i.e. <div>)

    if (tag === HostComponent && stateNode !== null) {
      lastHostComponent = stateNode; // createEventHandle listeners


      if (reactEventName !== null) {
        var listener = getListener(instance, reactEventName);

        if (listener != null) {
          listeners.push(createDispatchListener(instance, listener, lastHostComponent));
        }
      }
    } // If we are only accumulating events for the target, then we don't
    // continue to propagate through the React fiber tree to find other
    // listeners.


    if (accumulateTargetOnly) {
      break;
    }

    instance = instance.return;
  }

  return listeners;
} // We should only use this function for:
// - BeforeInputEventPlugin
// - ChangeEventPlugin
// - SelectEventPlugin
// This is because we only process these plugins
// in the bubble phase, so we need to accumulate two
// phase event listeners (via emulation).

function accumulateTwoPhaseListeners(targetFiber, reactName) {
  var captureName = reactName + 'Capture';
  var listeners = [];
  var instance = targetFiber; // Accumulate all instances and listeners via the target -> root path.

  while (instance !== null) {
    var _instance3 = instance,
        stateNode = _instance3.stateNode,
        tag = _instance3.tag; // Handle listeners that are on HostComponents (i.e. <div>)

    if (tag === HostComponent && stateNode !== null) {
      var currentTarget = stateNode;
      var captureListener = getListener(instance, captureName);

      if (captureListener != null) {
        listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
      }

      var bubbleListener = getListener(instance, reactName);

      if (bubbleListener != null) {
        listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
      }
    }

    instance = instance.return;
  }

  return listeners;
}

function getParent(inst) {
  if (inst === null) {
    return null;
  }

  do {
    inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.
    // That is depending on if we want nested subtrees (layers) to bubble
    // events to their parent. We could also go through parentNode on the
    // host node but that wouldn't work for React Native and doesn't let us
    // do the portal feature.
  } while (inst && inst.tag !== HostComponent);

  if (inst) {
    return inst;
  }

  return null;
}
/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */


function getLowestCommonAncestor(instA, instB) {
  var nodeA = instA;
  var nodeB = instB;
  var depthA = 0;

  for (var tempA = nodeA; tempA; tempA = getParent(tempA)) {
    depthA++;
  }

  var depthB = 0;

  for (var tempB = nodeB; tempB; tempB = getParent(tempB)) {
    depthB++;
  } // If A is deeper, crawl up.


  while (depthA - depthB > 0) {
    nodeA = getParent(nodeA);
    depthA--;
  } // If B is deeper, crawl up.


  while (depthB - depthA > 0) {
    nodeB = getParent(nodeB);
    depthB--;
  } // Walk in lockstep until we find a match.


  var depth = depthA;

  while (depth--) {
    if (nodeA === nodeB || nodeB !== null && nodeA === nodeB.alternate) {
      return nodeA;
    }

    nodeA = getParent(nodeA);
    nodeB = getParent(nodeB);
  }

  return null;
}

function accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target, common, inCapturePhase) {
  var registrationName = event._reactName;
  var listeners = [];
  var instance = target;

  while (instance !== null) {
    if (instance === common) {
      break;
    }

    var _instance4 = instance,
        alternate = _instance4.alternate,
        stateNode = _instance4.stateNode,
        tag = _instance4.tag;

    if (alternate !== null && alternate === common) {
      break;
    }

    if (tag === HostComponent && stateNode !== null) {
      var currentTarget = stateNode;

      if (inCapturePhase) {
        var captureListener = getListener(instance, registrationName);

        if (captureListener != null) {
          listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
        }
      } else if (!inCapturePhase) {
        var bubbleListener = getListener(instance, registrationName);

        if (bubbleListener != null) {
          listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
        }
      }
    }

    instance = instance.return;
  }

  if (listeners.length !== 0) {
    dispatchQueue.push({
      event: event,
      listeners: listeners
    });
  }
} // We should only use this function for:
// - EnterLeaveEventPlugin
// This is because we only process this plugin
// in the bubble phase, so we need to accumulate two
// phase event listeners.


function accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leaveEvent, enterEvent, from, to) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;

  if (from !== null) {
    accumulateEnterLeaveListenersForEvent(dispatchQueue, leaveEvent, from, common, false);
  }

  if (to !== null && enterEvent !== null) {
    accumulateEnterLeaveListenersForEvent(dispatchQueue, enterEvent, to, common, true);
  }
}
function getListenerSetKey(domEventName, capture) {
  return domEventName + "__" + (capture ? 'capture' : 'bubble');
}

var didWarnInvalidHydration = false;
var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
var SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
var AUTOFOCUS = 'autoFocus';
var CHILDREN = 'children';
var STYLE = 'style';
var HTML$1 = '__html';
var HTML_NAMESPACE$1 = Namespaces.html;
var warnedUnknownTags;
var suppressHydrationWarning;
var validatePropertiesInDevelopment;
var warnForTextDifference;
var warnForPropDifference;
var warnForExtraAttributes;
var warnForInvalidEventListener;
var canDiffStyleForHydrationWarning;
var normalizeMarkupForTextOrAttribute;
var normalizeHTML;

{
  warnedUnknownTags = {
    // There are working polyfills for <dialog>. Let people use it.
    dialog: true,
    // Electron ships a custom <webview> tag to display external web content in
    // an isolated frame and process.
    // This tag is not present in non Electron environments such as JSDom which
    // is often used for testing purposes.
    // @see https://electronjs.org/docs/api/webview-tag
    webview: true
  };

  validatePropertiesInDevelopment = function (type, props) {
    validateProperties(type, props);
    validateProperties$1(type, props);
    validateProperties$2(type, props, {
      registrationNameDependencies: registrationNameDependencies,
      possibleRegistrationNames: possibleRegistrationNames
    });
  }; // IE 11 parses & normalizes the style attribute as opposed to other
  // browsers. It adds spaces and sorts the properties in some
  // non-alphabetical order. Handling that would require sorting CSS
  // properties in the client & server versions or applying
  // `expectedStyle` to a temporary DOM node to read its `style` attribute
  // normalized. Since it only affects IE, we're skipping style warnings
  // in that browser completely in favor of doing all that work.
  // See https://github.com/facebook/react/issues/11807


  canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode; // HTML parsing normalizes CR and CRLF to LF.
  // It also can turn \u0000 into \uFFFD inside attributes.
  // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
  // If we have a mismatch, it might be caused by that.
  // We will still patch up in this case but not fire the warning.

  var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
  var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;

  normalizeMarkupForTextOrAttribute = function (markup) {
    var markupString = typeof markup === 'string' ? markup : '' + markup;
    return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
  };

  warnForTextDifference = function (serverText, clientText) {
    if (didWarnInvalidHydration) {
      return;
    }

    var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
    var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);

    if (normalizedServerText === normalizedClientText) {
      return;
    }

    didWarnInvalidHydration = true;

    error('Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
  };

  warnForPropDifference = function (propName, serverValue, clientValue) {
    if (didWarnInvalidHydration) {
      return;
    }

    var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
    var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);

    if (normalizedServerValue === normalizedClientValue) {
      return;
    }

    didWarnInvalidHydration = true;

    error('Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
  };

  warnForExtraAttributes = function (attributeNames) {
    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;
    var names = [];
    attributeNames.forEach(function (name) {
      names.push(name);
    });

    error('Extra attributes from the server: %s', names);
  };

  warnForInvalidEventListener = function (registrationName, listener) {
    if (listener === false) {
      error('Expected `%s` listener to be a function, instead got `false`.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', registrationName, registrationName, registrationName);
    } else {
      error('Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener);
    }
  }; // Parse the HTML and read it back to normalize the HTML string so that it
  // can be used for comparison.


  normalizeHTML = function (parent, html) {
    // We could have created a separate document here to avoid
    // re-initializing custom elements if they exist. But this breaks
    // how <noscript> is being handled. So we use the same document.
    // See the discussion in https://github.com/facebook/react/pull/11157.
    var testElement = parent.namespaceURI === HTML_NAMESPACE$1 ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
    testElement.innerHTML = html;
    return testElement.innerHTML;
  };
}

function getOwnerDocumentFromRootContainer(rootContainerElement) {
  return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
}

function noop() {}

function trapClickOnNonInteractiveElement(node) {
  // Mobile Safari does not fire properly bubble click events on
  // non-interactive elements, which means delegated click listeners do not
  // fire. The workaround for this bug involves attaching an empty click
  // listener on the target node.
  // https://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
  // Just set it using the onclick property so that we don't have to manage any
  // bookkeeping for it. Not sure if we need to clear it when the listener is
  // removed.
  // TODO: Only do this for the relevant Safaris maybe?
  node.onclick = noop;
}

function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
  for (var propKey in nextProps) {
    if (!nextProps.hasOwnProperty(propKey)) {
      continue;
    }

    var nextProp = nextProps[propKey];

    if (propKey === STYLE) {
      {
        if (nextProp) {
          // Freeze the next style object so that we can assume it won't be
          // mutated. We have already warned for this in the past.
          Object.freeze(nextProp);
        }
      } // Relies on `updateStylesByID` not mutating `styleUpdates`.


      setValueForStyles(domElement, nextProp);
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      var nextHtml = nextProp ? nextProp[HTML$1] : undefined;

      if (nextHtml != null) {
        setInnerHTML(domElement, nextHtml);
      }
    } else if (propKey === CHILDREN) {
      if (typeof nextProp === 'string') {
        // Avoid setting initial textContent when the text is empty. In IE11 setting
        // textContent on a <textarea> will cause the placeholder to not
        // show within the <textarea> until it has been focused and blurred again.
        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
        var canSetTextContent = tag !== 'textarea' || nextProp !== '';

        if (canSetTextContent) {
          setTextContent(domElement, nextProp);
        }
      } else if (typeof nextProp === 'number') {
        setTextContent(domElement, '' + nextProp);
      }
    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ; else if (propKey === AUTOFOCUS) ; else if (registrationNameDependencies.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        if ( typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }

        if (propKey === 'onScroll') {
          listenToNonDelegatedEvent('scroll', domElement);
        }
      }
    } else if (nextProp != null) {
      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
    }
  }
}

function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
  // TODO: Handle wasCustomComponentTag
  for (var i = 0; i < updatePayload.length; i += 2) {
    var propKey = updatePayload[i];
    var propValue = updatePayload[i + 1];

    if (propKey === STYLE) {
      setValueForStyles(domElement, propValue);
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      setInnerHTML(domElement, propValue);
    } else if (propKey === CHILDREN) {
      setTextContent(domElement, propValue);
    } else {
      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
    }
  }
}

function createElement(type, props, rootContainerElement, parentNamespace) {
  var isCustomComponentTag; // We create tags in the namespace of their parent container, except HTML
  // tags get no namespace.

  var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
  var domElement;
  var namespaceURI = parentNamespace;

  if (namespaceURI === HTML_NAMESPACE$1) {
    namespaceURI = getIntrinsicNamespace(type);
  }

  if (namespaceURI === HTML_NAMESPACE$1) {
    {
      isCustomComponentTag = isCustomComponent(type, props); // Should this check be gated by parent namespace? Not sure we want to
      // allow <SVG> or <mATH>.

      if (!isCustomComponentTag && type !== type.toLowerCase()) {
        error('<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type);
      }
    }

    if (type === 'script') {
      // Create the script via .innerHTML so its "parser-inserted" flag is
      // set to true and it does not execute
      var div = ownerDocument.createElement('div');

      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line
      // This is guaranteed to yield a script element.

      var firstChild = div.firstChild;
      domElement = div.removeChild(firstChild);
    } else if (typeof props.is === 'string') {
      // $FlowIssue `createElement` should be updated for Web Components
      domElement = ownerDocument.createElement(type, {
        is: props.is
      });
    } else {
      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
      // See discussion in https://github.com/facebook/react/pull/6896
      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
      domElement = ownerDocument.createElement(type); // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`
      // attributes on `select`s needs to be added before `option`s are inserted.
      // This prevents:
      // - a bug where the `select` does not scroll to the correct option because singular
      //  `select` elements automatically pick the first item #13222
      // - a bug where the `select` set the first item as selected despite the `size` attribute #14239
      // See https://github.com/facebook/react/issues/13222
      // and https://github.com/facebook/react/issues/14239

      if (type === 'select') {
        var node = domElement;

        if (props.multiple) {
          node.multiple = true;
        } else if (props.size) {
          // Setting a size greater than 1 causes a select to behave like `multiple=true`, where
          // it is possible that no option is selected.
          //
          // This is only necessary when a select in "single selection mode".
          node.size = props.size;
        }
      }
    }
  } else {
    domElement = ownerDocument.createElementNS(namespaceURI, type);
  }

  {
    if (namespaceURI === HTML_NAMESPACE$1) {
      if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {
        warnedUnknownTags[type] = true;

        error('The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);
      }
    }
  }

  return domElement;
}
function createTextNode(text, rootContainerElement) {
  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
}
function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
  var isCustomComponentTag = isCustomComponent(tag, rawProps);

  {
    validatePropertiesInDevelopment(tag, rawProps);
  } // TODO: Make sure that we check isMounted before firing any of these events.


  var props;

  switch (tag) {
    case 'dialog':
      listenToNonDelegatedEvent('cancel', domElement);
      listenToNonDelegatedEvent('close', domElement);
      props = rawProps;
      break;

    case 'iframe':
    case 'object':
    case 'embed':
      // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the load event.
      listenToNonDelegatedEvent('load', domElement);
      props = rawProps;
      break;

    case 'video':
    case 'audio':
      // We listen to these events in case to ensure emulated bubble
      // listeners still fire for all the media events.
      for (var i = 0; i < mediaEventTypes.length; i++) {
        listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
      }

      props = rawProps;
      break;

    case 'source':
      // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the error event.
      listenToNonDelegatedEvent('error', domElement);
      props = rawProps;
      break;

    case 'img':
    case 'image':
    case 'link':
      // We listen to these events in case to ensure emulated bubble
      // listeners still fire for error and load events.
      listenToNonDelegatedEvent('error', domElement);
      listenToNonDelegatedEvent('load', domElement);
      props = rawProps;
      break;

    case 'details':
      // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the toggle event.
      listenToNonDelegatedEvent('toggle', domElement);
      props = rawProps;
      break;

    case 'input':
      initWrapperState(domElement, rawProps);
      props = getHostProps(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the invalid event.

      listenToNonDelegatedEvent('invalid', domElement);

      break;

    case 'option':
      validateProps(domElement, rawProps);
      props = getHostProps$1(domElement, rawProps);
      break;

    case 'select':
      initWrapperState$1(domElement, rawProps);
      props = getHostProps$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the invalid event.

      listenToNonDelegatedEvent('invalid', domElement);

      break;

    case 'textarea':
      initWrapperState$2(domElement, rawProps);
      props = getHostProps$3(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the invalid event.

      listenToNonDelegatedEvent('invalid', domElement);

      break;

    default:
      props = rawProps;
  }

  assertValidProps(tag, props);
  setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);

  switch (tag) {
    case 'input':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper(domElement, rawProps, false);
      break;

    case 'textarea':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper$3(domElement);
      break;

    case 'option':
      postMountWrapper$1(domElement, rawProps);
      break;

    case 'select':
      postMountWrapper$2(domElement, rawProps);
      break;

    default:
      if (typeof props.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }

      break;
  }
} // Calculate the diff between the two objects.

function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
  {
    validatePropertiesInDevelopment(tag, nextRawProps);
  }

  var updatePayload = null;
  var lastProps;
  var nextProps;

  switch (tag) {
    case 'input':
      lastProps = getHostProps(domElement, lastRawProps);
      nextProps = getHostProps(domElement, nextRawProps);
      updatePayload = [];
      break;

    case 'option':
      lastProps = getHostProps$1(domElement, lastRawProps);
      nextProps = getHostProps$1(domElement, nextRawProps);
      updatePayload = [];
      break;

    case 'select':
      lastProps = getHostProps$2(domElement, lastRawProps);
      nextProps = getHostProps$2(domElement, nextRawProps);
      updatePayload = [];
      break;

    case 'textarea':
      lastProps = getHostProps$3(domElement, lastRawProps);
      nextProps = getHostProps$3(domElement, nextRawProps);
      updatePayload = [];
      break;

    default:
      lastProps = lastRawProps;
      nextProps = nextRawProps;

      if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }

      break;
  }

  assertValidProps(tag, nextProps);
  var propKey;
  var styleName;
  var styleUpdates = null;

  for (propKey in lastProps) {
    if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
      continue;
    }

    if (propKey === STYLE) {
      var lastStyle = lastProps[propKey];

      for (styleName in lastStyle) {
        if (lastStyle.hasOwnProperty(styleName)) {
          if (!styleUpdates) {
            styleUpdates = {};
          }

          styleUpdates[styleName] = '';
        }
      }
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) ; else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ; else if (propKey === AUTOFOCUS) ; else if (registrationNameDependencies.hasOwnProperty(propKey)) {
      // This is a special case. If any listener updates we need to ensure
      // that the "current" fiber pointer gets updated so we need a commit
      // to update this element.
      if (!updatePayload) {
        updatePayload = [];
      }
    } else {
      // For all other deleted properties we add it to the queue. We use
      // the allowed property list in the commit phase instead.
      (updatePayload = updatePayload || []).push(propKey, null);
    }
  }

  for (propKey in nextProps) {
    var nextProp = nextProps[propKey];
    var lastProp = lastProps != null ? lastProps[propKey] : undefined;

    if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
      continue;
    }

    if (propKey === STYLE) {
      {
        if (nextProp) {
          // Freeze the next style object so that we can assume it won't be
          // mutated. We have already warned for this in the past.
          Object.freeze(nextProp);
        }
      }

      if (lastProp) {
        // Unset styles on `lastProp` but not on `nextProp`.
        for (styleName in lastProp) {
          if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
            if (!styleUpdates) {
              styleUpdates = {};
            }

            styleUpdates[styleName] = '';
          }
        } // Update styles that changed since `lastProp`.


        for (styleName in nextProp) {
          if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
            if (!styleUpdates) {
              styleUpdates = {};
            }

            styleUpdates[styleName] = nextProp[styleName];
          }
        }
      } else {
        // Relies on `updateStylesByID` not mutating `styleUpdates`.
        if (!styleUpdates) {
          if (!updatePayload) {
            updatePayload = [];
          }

          updatePayload.push(propKey, styleUpdates);
        }

        styleUpdates = nextProp;
      }
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
      var lastHtml = lastProp ? lastProp[HTML$1] : undefined;

      if (nextHtml != null) {
        if (lastHtml !== nextHtml) {
          (updatePayload = updatePayload || []).push(propKey, nextHtml);
        }
      }
    } else if (propKey === CHILDREN) {
      if (typeof nextProp === 'string' || typeof nextProp === 'number') {
        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
      }
    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ; else if (registrationNameDependencies.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        // We eagerly listen to this even though we haven't committed yet.
        if ( typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }

        if (propKey === 'onScroll') {
          listenToNonDelegatedEvent('scroll', domElement);
        }
      }

      if (!updatePayload && lastProp !== nextProp) {
        // This is a special case. If any listener updates we need to ensure
        // that the "current" props pointer gets updated so we need a commit
        // to update this element.
        updatePayload = [];
      }
    } else if (typeof nextProp === 'object' && nextProp !== null && nextProp.$$typeof === REACT_OPAQUE_ID_TYPE) {
      // If we encounter useOpaqueReference's opaque object, this means we are hydrating.
      // In this case, call the opaque object's toString function which generates a new client
      // ID so client and server IDs match and throws to rerender.
      nextProp.toString();
    } else {
      // For any other property we always add it to the queue and then we
      // filter it out using the allowed property list during the commit.
      (updatePayload = updatePayload || []).push(propKey, nextProp);
    }
  }

  if (styleUpdates) {
    {
      validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);
    }

    (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
  }

  return updatePayload;
} // Apply the diff.

function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
  // Update checked *before* name.
  // In the middle of an update, it is possible to have multiple checked.
  // When a checked radio tries to change name, browser makes another radio's checked false.
  if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {
    updateChecked(domElement, nextRawProps);
  }

  var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
  var isCustomComponentTag = isCustomComponent(tag, nextRawProps); // Apply the diff.

  updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag); // TODO: Ensure that an update gets scheduled if any of the special props
  // changed.

  switch (tag) {
    case 'input':
      // Update the wrapper around inputs *after* updating props. This has to
      // happen after `updateDOMProperties`. Otherwise HTML5 input validations
      // raise warnings and prevent the new value from being assigned.
      updateWrapper(domElement, nextRawProps);
      break;

    case 'textarea':
      updateWrapper$1(domElement, nextRawProps);
      break;

    case 'select':
      // <select> value update needs to occur after <option> children
      // reconciliation
      postUpdateWrapper(domElement, nextRawProps);
      break;
  }
}

function getPossibleStandardName(propName) {
  {
    var lowerCasedName = propName.toLowerCase();

    if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
      return null;
    }

    return possibleStandardNames[lowerCasedName] || null;
  }
}

function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement) {
  var isCustomComponentTag;
  var extraAttributeNames;

  {
    suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING] === true;
    isCustomComponentTag = isCustomComponent(tag, rawProps);
    validatePropertiesInDevelopment(tag, rawProps);
  } // TODO: Make sure that we check isMounted before firing any of these events.


  switch (tag) {
    case 'dialog':
      listenToNonDelegatedEvent('cancel', domElement);
      listenToNonDelegatedEvent('close', domElement);
      break;

    case 'iframe':
    case 'object':
    case 'embed':
      // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the load event.
      listenToNonDelegatedEvent('load', domElement);
      break;

    case 'video':
    case 'audio':
      // We listen to these events in case to ensure emulated bubble
      // listeners still fire for all the media events.
      for (var i = 0; i < mediaEventTypes.length; i++) {
        listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
      }

      break;

    case 'source':
      // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the error event.
      listenToNonDelegatedEvent('error', domElement);
      break;

    case 'img':
    case 'image':
    case 'link':
      // We listen to these events in case to ensure emulated bubble
      // listeners still fire for error and load events.
      listenToNonDelegatedEvent('error', domElement);
      listenToNonDelegatedEvent('load', domElement);
      break;

    case 'details':
      // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the toggle event.
      listenToNonDelegatedEvent('toggle', domElement);
      break;

    case 'input':
      initWrapperState(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the invalid event.

      listenToNonDelegatedEvent('invalid', domElement);

      break;

    case 'option':
      validateProps(domElement, rawProps);
      break;

    case 'select':
      initWrapperState$1(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the invalid event.

      listenToNonDelegatedEvent('invalid', domElement);

      break;

    case 'textarea':
      initWrapperState$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the invalid event.

      listenToNonDelegatedEvent('invalid', domElement);

      break;
  }

  assertValidProps(tag, rawProps);

  {
    extraAttributeNames = new Set();
    var attributes = domElement.attributes;

    for (var _i = 0; _i < attributes.length; _i++) {
      var name = attributes[_i].name.toLowerCase();

      switch (name) {
        // Built-in SSR attribute is allowed
        case 'data-reactroot':
          break;
        // Controlled attributes are not validated
        // TODO: Only ignore them on controlled tags.

        case 'value':
          break;

        case 'checked':
          break;

        case 'selected':
          break;

        default:
          // Intentionally use the original name.
          // See discussion in https://github.com/facebook/react/pull/10676.
          extraAttributeNames.add(attributes[_i].name);
      }
    }
  }

  var updatePayload = null;

  for (var propKey in rawProps) {
    if (!rawProps.hasOwnProperty(propKey)) {
      continue;
    }

    var nextProp = rawProps[propKey];

    if (propKey === CHILDREN) {
      // For text content children we compare against textContent. This
      // might match additional HTML that is hidden when we read it using
      // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
      // satisfies our requirement. Our requirement is not to produce perfect
      // HTML and attributes. Ideally we should preserve structure but it's
      // ok not to if the visible content is still enough to indicate what
      // even listeners these nodes might be wired up to.
      // TODO: Warn if there is more than a single textNode as a child.
      // TODO: Should we use domElement.firstChild.nodeValue to compare?
      if (typeof nextProp === 'string') {
        if (domElement.textContent !== nextProp) {
          if ( !suppressHydrationWarning) {
            warnForTextDifference(domElement.textContent, nextProp);
          }

          updatePayload = [CHILDREN, nextProp];
        }
      } else if (typeof nextProp === 'number') {
        if (domElement.textContent !== '' + nextProp) {
          if ( !suppressHydrationWarning) {
            warnForTextDifference(domElement.textContent, nextProp);
          }

          updatePayload = [CHILDREN, '' + nextProp];
        }
      }
    } else if (registrationNameDependencies.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        if ( typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }

        if (propKey === 'onScroll') {
          listenToNonDelegatedEvent('scroll', domElement);
        }
      }
    } else if ( // Convince Flow we've calculated it (it's DEV-only in this method.)
    typeof isCustomComponentTag === 'boolean') {
      // Validate that the properties correspond to their expected values.
      var serverValue = void 0;
      var propertyInfo = getPropertyInfo(propKey);

      if (suppressHydrationWarning) ; else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || // Controlled attributes are not validated
      // TODO: Only ignore them on controlled tags.
      propKey === 'value' || propKey === 'checked' || propKey === 'selected') ; else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
        var serverHTML = domElement.innerHTML;
        var nextHtml = nextProp ? nextProp[HTML$1] : undefined;

        if (nextHtml != null) {
          var expectedHTML = normalizeHTML(domElement, nextHtml);

          if (expectedHTML !== serverHTML) {
            warnForPropDifference(propKey, serverHTML, expectedHTML);
          }
        }
      } else if (propKey === STYLE) {
        // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames.delete(propKey);

        if (canDiffStyleForHydrationWarning) {
          var expectedStyle = createDangerousStringForStyles(nextProp);
          serverValue = domElement.getAttribute('style');

          if (expectedStyle !== serverValue) {
            warnForPropDifference(propKey, serverValue, expectedStyle);
          }
        }
      } else if (isCustomComponentTag) {
        // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames.delete(propKey.toLowerCase());
        serverValue = getValueForAttribute(domElement, propKey, nextProp);

        if (nextProp !== serverValue) {
          warnForPropDifference(propKey, serverValue, nextProp);
        }
      } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
        var isMismatchDueToBadCasing = false;

        if (propertyInfo !== null) {
          // $FlowFixMe - Should be inferred as not undefined.
          extraAttributeNames.delete(propertyInfo.attributeName);
          serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
        } else {
          var ownNamespace = parentNamespace;

          if (ownNamespace === HTML_NAMESPACE$1) {
            ownNamespace = getIntrinsicNamespace(tag);
          }

          if (ownNamespace === HTML_NAMESPACE$1) {
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames.delete(propKey.toLowerCase());
          } else {
            var standardName = getPossibleStandardName(propKey);

            if (standardName !== null && standardName !== propKey) {
              // If an SVG prop is supplied with bad casing, it will
              // be successfully parsed from HTML, but will produce a mismatch
              // (and would be incorrectly rendered on the client).
              // However, we already warn about bad casing elsewhere.
              // So we'll skip the misleading extra mismatch warning in this case.
              isMismatchDueToBadCasing = true; // $FlowFixMe - Should be inferred as not undefined.

              extraAttributeNames.delete(standardName);
            } // $FlowFixMe - Should be inferred as not undefined.


            extraAttributeNames.delete(propKey);
          }

          serverValue = getValueForAttribute(domElement, propKey, nextProp);
        }

        if (nextProp !== serverValue && !isMismatchDueToBadCasing) {
          warnForPropDifference(propKey, serverValue, nextProp);
        }
      }
    }
  }

  {
    // $FlowFixMe - Should be inferred as not undefined.
    if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {
      // $FlowFixMe - Should be inferred as not undefined.
      warnForExtraAttributes(extraAttributeNames);
    }
  }

  switch (tag) {
    case 'input':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper(domElement, rawProps, true);
      break;

    case 'textarea':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper$3(domElement);
      break;

    case 'select':
    case 'option':
      // For input and textarea we current always set the value property at
      // post mount to force it to diverge from attributes. However, for
      // option and select we don't quite do the same thing and select
      // is not resilient to the DOM state changing so we don't do that here.
      // TODO: Consider not doing this for input and textarea.
      break;

    default:
      if (typeof rawProps.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }

      break;
  }

  return updatePayload;
}
function diffHydratedText(textNode, text) {
  var isDifferent = textNode.nodeValue !== text;
  return isDifferent;
}
function warnForUnmatchedText(textNode, text) {
  {
    warnForTextDifference(textNode.nodeValue, text);
  }
}
function warnForDeletedHydratableElement(parentNode, child) {
  {
    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;

    error('Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
  }
}
function warnForDeletedHydratableText(parentNode, child) {
  {
    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;

    error('Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
  }
}
function warnForInsertedHydratedElement(parentNode, tag, props) {
  {
    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;

    error('Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
  }
}
function warnForInsertedHydratedText(parentNode, text) {
  {
    if (text === '') {
      // We expect to insert empty text nodes since they're not represented in
      // the HTML.
      // TODO: Remove this special case if we can just avoid inserting empty
      // text nodes.
      return;
    }

    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;

    error('Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
  }
}
function restoreControlledState$3(domElement, tag, props) {
  switch (tag) {
    case 'input':
      restoreControlledState(domElement, props);
      return;

    case 'textarea':
      restoreControlledState$2(domElement, props);
      return;

    case 'select':
      restoreControlledState$1(domElement, props);
      return;
  }
}

var validateDOMNesting = function () {};

var updatedAncestorInfo = function () {};

{
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.
  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope

  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template', // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope

  var buttonScopeTags = inScopeTags.concat(['button']); // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags

  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
  var emptyAncestorInfo = {
    current: null,
    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,
    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  updatedAncestorInfo = function (oldInfo, tag) {
    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);

    var info = {
      tag: tag
    };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }

    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    } // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody


    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }

    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }

    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }

    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }

    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }

    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }

    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };
  /**
   * Returns whether
   */


  var isTagValidWithParent = function (tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';

      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but

      case 'option':
        return tag === '#text';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr

      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody

      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup

      case 'colgroup':
        return tag === 'col' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable

      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead

      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element

      case 'html':
        return tag === 'head' || tag === 'body' || tag === 'frameset';

      case 'frameset':
        return tag === 'frame';

      case '#document':
        return tag === 'html';
    } // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody


    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'body':
      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frameset':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };
  /**
   * Returns whether
   */


  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':
      case 'pre':
      case 'listing':
      case 'table':
      case 'hr':
      case 'xmp':
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  var didWarn$1 = {};

  validateDOMNesting = function (childTag, childText, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    if (childText != null) {
      if (childTag != null) {
        error('validateDOMNesting: when childText is passed, childTag should be null');
      }

      childTag = '#text';
    }

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var invalidParentOrAncestor = invalidParent || invalidAncestor;

    if (!invalidParentOrAncestor) {
      return;
    }

    var ancestorTag = invalidParentOrAncestor.tag;
    var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag;

    if (didWarn$1[warnKey]) {
      return;
    }

    didWarn$1[warnKey] = true;
    var tagDisplayName = childTag;
    var whitespaceInfo = '';

    if (childTag === '#text') {
      if (/\S/.test(childText)) {
        tagDisplayName = 'Text nodes';
      } else {
        tagDisplayName = 'Whitespace text nodes';
        whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
      }
    } else {
      tagDisplayName = '<' + childTag + '>';
    }

    if (invalidParent) {
      var info = '';

      if (ancestorTag === 'table' && childTag === 'tr') {
        info += ' Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by ' + 'the browser.';
      }

      error('validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info);
    } else {
      error('validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.', tagDisplayName, ancestorTag);
    }
  };
}

var SUPPRESS_HYDRATION_WARNING$1;

{
  SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
}

var SUSPENSE_START_DATA = '$';
var SUSPENSE_END_DATA = '/$';
var SUSPENSE_PENDING_START_DATA = '$?';
var SUSPENSE_FALLBACK_START_DATA = '$!';
var STYLE$1 = 'style';
var eventsEnabled = null;
var selectionInformation = null;

function shouldAutoFocusHostComponent(type, props) {
  switch (type) {
    case 'button':
    case 'input':
    case 'select':
    case 'textarea':
      return !!props.autoFocus;
  }

  return false;
}
function getRootHostContext(rootContainerInstance) {
  var type;
  var namespace;
  var nodeType = rootContainerInstance.nodeType;

  switch (nodeType) {
    case DOCUMENT_NODE:
    case DOCUMENT_FRAGMENT_NODE:
      {
        type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
        var root = rootContainerInstance.documentElement;
        namespace = root ? root.namespaceURI : getChildNamespace(null, '');
        break;
      }

    default:
      {
        var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
        var ownNamespace = container.namespaceURI || null;
        type = container.tagName;
        namespace = getChildNamespace(ownNamespace, type);
        break;
      }
  }

  {
    var validatedTag = type.toLowerCase();
    var ancestorInfo = updatedAncestorInfo(null, validatedTag);
    return {
      namespace: namespace,
      ancestorInfo: ancestorInfo
    };
  }
}
function getChildHostContext(parentHostContext, type, rootContainerInstance) {
  {
    var parentHostContextDev = parentHostContext;
    var namespace = getChildNamespace(parentHostContextDev.namespace, type);
    var ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
    return {
      namespace: namespace,
      ancestorInfo: ancestorInfo
    };
  }
}
function getPublicInstance(instance) {
  return instance;
}
function prepareForCommit(containerInfo) {
  eventsEnabled = isEnabled();
  selectionInformation = getSelectionInformation();
  var activeInstance = null;

  setEnabled(false);
  return activeInstance;
}
function resetAfterCommit(containerInfo) {
  restoreSelection(selectionInformation);
  setEnabled(eventsEnabled);
  eventsEnabled = null;
  selectionInformation = null;
}
function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
  var parentNamespace;

  {
    // TODO: take namespace into account when validating.
    var hostContextDev = hostContext;
    validateDOMNesting(type, null, hostContextDev.ancestorInfo);

    if (typeof props.children === 'string' || typeof props.children === 'number') {
      var string = '' + props.children;
      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
      validateDOMNesting(null, string, ownAncestorInfo);
    }

    parentNamespace = hostContextDev.namespace;
  }

  var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
  precacheFiberNode(internalInstanceHandle, domElement);
  updateFiberProps(domElement, props);
  return domElement;
}
function appendInitialChild(parentInstance, child) {
  parentInstance.appendChild(child);
}
function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
  setInitialProperties(domElement, type, props, rootContainerInstance);
  return shouldAutoFocusHostComponent(type, props);
}
function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
  {
    var hostContextDev = hostContext;

    if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
      var string = '' + newProps.children;
      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
      validateDOMNesting(null, string, ownAncestorInfo);
    }
  }

  return diffProperties(domElement, type, oldProps, newProps);
}
function shouldSetTextContent(type, props) {
  return type === 'textarea' || type === 'option' || type === 'noscript' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
}
function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
  {
    var hostContextDev = hostContext;
    validateDOMNesting(null, text, hostContextDev.ancestorInfo);
  }

  var textNode = createTextNode(text, rootContainerInstance);
  precacheFiberNode(internalInstanceHandle, textNode);
  return textNode;
}
// if a component just imports ReactDOM (e.g. for findDOMNode).
// Some environments might not have setTimeout or clearTimeout.

var scheduleTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;
var cancelTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;
var noTimeout = -1; // -------------------
function commitMount(domElement, type, newProps, internalInstanceHandle) {
  // Despite the naming that might imply otherwise, this method only
  // fires if there is an `Update` effect scheduled during mounting.
  // This happens if `finalizeInitialChildren` returns `true` (which it
  // does to implement the `autoFocus` attribute on the client). But
  // there are also other cases when this might happen (such as patching
  // up text content during hydration mismatch). So we'll check this again.
  if (shouldAutoFocusHostComponent(type, newProps)) {
    domElement.focus();
  }
}
function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
  // Update the props handle so that we know which props are the ones with
  // with current event handlers.
  updateFiberProps(domElement, newProps); // Apply the diff to the DOM node.

  updateProperties(domElement, updatePayload, type, oldProps, newProps);
}
function resetTextContent(domElement) {
  setTextContent(domElement, '');
}
function commitTextUpdate(textInstance, oldText, newText) {
  textInstance.nodeValue = newText;
}
function appendChild(parentInstance, child) {
  parentInstance.appendChild(child);
}
function appendChildToContainer(container, child) {
  var parentNode;

  if (container.nodeType === COMMENT_NODE) {
    parentNode = container.parentNode;
    parentNode.insertBefore(child, container);
  } else {
    parentNode = container;
    parentNode.appendChild(child);
  } // This container might be used for a portal.
  // If something inside a portal is clicked, that click should bubble
  // through the React tree. However, on Mobile Safari the click would
  // never bubble through the *DOM* tree unless an ancestor with onclick
  // event exists. So we wouldn't see it and dispatch it.
  // This is why we ensure that non React root containers have inline onclick
  // defined.
  // https://github.com/facebook/react/issues/11918


  var reactRootContainer = container._reactRootContainer;

  if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) {
    // TODO: This cast may not be sound for SVG, MathML or custom elements.
    trapClickOnNonInteractiveElement(parentNode);
  }
}
function insertBefore(parentInstance, child, beforeChild) {
  parentInstance.insertBefore(child, beforeChild);
}
function insertInContainerBefore(container, child, beforeChild) {
  if (container.nodeType === COMMENT_NODE) {
    container.parentNode.insertBefore(child, beforeChild);
  } else {
    container.insertBefore(child, beforeChild);
  }
}

function removeChild(parentInstance, child) {
  parentInstance.removeChild(child);
}
function removeChildFromContainer(container, child) {
  if (container.nodeType === COMMENT_NODE) {
    container.parentNode.removeChild(child);
  } else {
    container.removeChild(child);
  }
}
function hideInstance(instance) {
  // TODO: Does this work for all element types? What about MathML? Should we
  // pass host context to this method?
  instance = instance;
  var style = instance.style;

  if (typeof style.setProperty === 'function') {
    style.setProperty('display', 'none', 'important');
  } else {
    style.display = 'none';
  }
}
function hideTextInstance(textInstance) {
  textInstance.nodeValue = '';
}
function unhideInstance(instance, props) {
  instance = instance;
  var styleProp = props[STYLE$1];
  var display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty('display') ? styleProp.display : null;
  instance.style.display = dangerousStyleValue('display', display);
}
function unhideTextInstance(textInstance, text) {
  textInstance.nodeValue = text;
}
function clearContainer(container) {
  if (container.nodeType === ELEMENT_NODE) {
    container.textContent = '';
  } else if (container.nodeType === DOCUMENT_NODE) {
    var body = container.body;

    if (body != null) {
      body.textContent = '';
    }
  }
} // -------------------
function canHydrateInstance(instance, type, props) {
  if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
    return null;
  } // This has now been refined to an element node.


  return instance;
}
function canHydrateTextInstance(instance, text) {
  if (text === '' || instance.nodeType !== TEXT_NODE) {
    // Empty strings are not parsed by HTML so there won't be a correct match here.
    return null;
  } // This has now been refined to a text node.


  return instance;
}
function isSuspenseInstancePending(instance) {
  return instance.data === SUSPENSE_PENDING_START_DATA;
}
function isSuspenseInstanceFallback(instance) {
  return instance.data === SUSPENSE_FALLBACK_START_DATA;
}

function getNextHydratable(node) {
  // Skip non-hydratable nodes.
  for (; node != null; node = node.nextSibling) {
    var nodeType = node.nodeType;

    if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) {
      break;
    }
  }

  return node;
}

function getNextHydratableSibling(instance) {
  return getNextHydratable(instance.nextSibling);
}
function getFirstHydratableChild(parentInstance) {
  return getNextHydratable(parentInstance.firstChild);
}
function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
  precacheFiberNode(internalInstanceHandle, instance); // TODO: Possibly defer this until the commit phase where all the events
  // get attached.

  updateFiberProps(instance, props);
  var parentNamespace;

  {
    var hostContextDev = hostContext;
    parentNamespace = hostContextDev.namespace;
  }

  return diffHydratedProperties(instance, type, props, parentNamespace);
}
function hydrateTextInstance(textInstance, text, internalInstanceHandle) {
  precacheFiberNode(internalInstanceHandle, textInstance);
  return diffHydratedText(textInstance, text);
}
function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
  var node = suspenseInstance.nextSibling; // Skip past all nodes within this suspense boundary.
  // There might be nested nodes so we need to keep track of how
  // deep we are and only break out when we're back on top.

  var depth = 0;

  while (node) {
    if (node.nodeType === COMMENT_NODE) {
      var data = node.data;

      if (data === SUSPENSE_END_DATA) {
        if (depth === 0) {
          return getNextHydratableSibling(node);
        } else {
          depth--;
        }
      } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
        depth++;
      }
    }

    node = node.nextSibling;
  } // TODO: Warn, we didn't find the end comment boundary.


  return null;
} // Returns the SuspenseInstance if this node is a direct child of a
// SuspenseInstance. I.e. if its previous sibling is a Comment with
// SUSPENSE_x_START_DATA. Otherwise, null.

function getParentSuspenseInstance(targetInstance) {
  var node = targetInstance.previousSibling; // Skip past all nodes within this suspense boundary.
  // There might be nested nodes so we need to keep track of how
  // deep we are and only break out when we're back on top.

  var depth = 0;

  while (node) {
    if (node.nodeType === COMMENT_NODE) {
      var data = node.data;

      if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
        if (depth === 0) {
          return node;
        } else {
          depth--;
        }
      } else if (data === SUSPENSE_END_DATA) {
        depth++;
      }
    }

    node = node.previousSibling;
  }

  return null;
}
function commitHydratedContainer(container) {
  // Retry if any event replaying was blocked on this.
  retryIfBlockedOn(container);
}
function commitHydratedSuspenseInstance(suspenseInstance) {
  // Retry if any event replaying was blocked on this.
  retryIfBlockedOn(suspenseInstance);
}
function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text) {
  {
    warnForUnmatchedText(textInstance, text);
  }
}
function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text) {
  if ( parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
    warnForUnmatchedText(textInstance, text);
  }
}
function didNotHydrateContainerInstance(parentContainer, instance) {
  {
    if (instance.nodeType === ELEMENT_NODE) {
      warnForDeletedHydratableElement(parentContainer, instance);
    } else if (instance.nodeType === COMMENT_NODE) ; else {
      warnForDeletedHydratableText(parentContainer, instance);
    }
  }
}
function didNotHydrateInstance(parentType, parentProps, parentInstance, instance) {
  if ( parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
    if (instance.nodeType === ELEMENT_NODE) {
      warnForDeletedHydratableElement(parentInstance, instance);
    } else if (instance.nodeType === COMMENT_NODE) ; else {
      warnForDeletedHydratableText(parentInstance, instance);
    }
  }
}
function didNotFindHydratableContainerInstance(parentContainer, type, props) {
  {
    warnForInsertedHydratedElement(parentContainer, type);
  }
}
function didNotFindHydratableContainerTextInstance(parentContainer, text) {
  {
    warnForInsertedHydratedText(parentContainer, text);
  }
}
function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props) {
  if ( parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
    warnForInsertedHydratedElement(parentInstance, type);
  }
}
function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text) {
  if ( parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
    warnForInsertedHydratedText(parentInstance, text);
  }
}
function didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance) {
  if ( parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) ;
}
var clientId = 0;
function makeClientIdInDEV(warnOnAccessInDEV) {
  var id = 'r:' + (clientId++).toString(36);
  return {
    toString: function () {
      warnOnAccessInDEV();
      return id;
    },
    valueOf: function () {
      warnOnAccessInDEV();
      return id;
    }
  };
}
function isOpaqueHydratingObject(value) {
  return value !== null && typeof value === 'object' && value.$$typeof === REACT_OPAQUE_ID_TYPE;
}
function makeOpaqueHydratingObject(attemptToReadValue) {
  return {
    $$typeof: REACT_OPAQUE_ID_TYPE,
    toString: attemptToReadValue,
    valueOf: attemptToReadValue
  };
}
function preparePortalMount(portalInstance) {
  {
    listenToAllSupportedEvents(portalInstance);
  }
}

var randomKey = Math.random().toString(36).slice(2);
var internalInstanceKey = '__reactFiber$' + randomKey;
var internalPropsKey = '__reactProps$' + randomKey;
var internalContainerInstanceKey = '__reactContainer$' + randomKey;
var internalEventHandlersKey = '__reactEvents$' + randomKey;
function precacheFiberNode(hostInst, node) {
  node[internalInstanceKey] = hostInst;
}
function markContainerAsRoot(hostRoot, node) {
  node[internalContainerInstanceKey] = hostRoot;
}
function unmarkContainerAsRoot(node) {
  node[internalContainerInstanceKey] = null;
}
function isContainerMarkedAsRoot(node) {
  return !!node[internalContainerInstanceKey];
} // Given a DOM node, return the closest HostComponent or HostText fiber ancestor.
// If the target node is part of a hydrated or not yet rendered subtree, then
// this may also return a SuspenseComponent or HostRoot to indicate that.
// Conceptually the HostRoot fiber is a child of the Container node. So if you
// pass the Container node as the targetNode, you will not actually get the
// HostRoot back. To get to the HostRoot, you need to pass a child of it.
// The same thing applies to Suspense boundaries.

function getClosestInstanceFromNode(targetNode) {
  var targetInst = targetNode[internalInstanceKey];

  if (targetInst) {
    // Don't return HostRoot or SuspenseComponent here.
    return targetInst;
  } // If the direct event target isn't a React owned DOM node, we need to look
  // to see if one of its parents is a React owned DOM node.


  var parentNode = targetNode.parentNode;

  while (parentNode) {
    // We'll check if this is a container root that could include
    // React nodes in the future. We need to check this first because
    // if we're a child of a dehydrated container, we need to first
    // find that inner container before moving on to finding the parent
    // instance. Note that we don't check this field on  the targetNode
    // itself because the fibers are conceptually between the container
    // node and the first child. It isn't surrounding the container node.
    // If it's not a container, we check if it's an instance.
    targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];

    if (targetInst) {
      // Since this wasn't the direct target of the event, we might have
      // stepped past dehydrated DOM nodes to get here. However they could
      // also have been non-React nodes. We need to answer which one.
      // If we the instance doesn't have any children, then there can't be
      // a nested suspense boundary within it. So we can use this as a fast
      // bailout. Most of the time, when people add non-React children to
      // the tree, it is using a ref to a child-less DOM node.
      // Normally we'd only need to check one of the fibers because if it
      // has ever gone from having children to deleting them or vice versa
      // it would have deleted the dehydrated boundary nested inside already.
      // However, since the HostRoot starts out with an alternate it might
      // have one on the alternate so we need to check in case this was a
      // root.
      var alternate = targetInst.alternate;

      if (targetInst.child !== null || alternate !== null && alternate.child !== null) {
        // Next we need to figure out if the node that skipped past is
        // nested within a dehydrated boundary and if so, which one.
        var suspenseInstance = getParentSuspenseInstance(targetNode);

        while (suspenseInstance !== null) {
          // We found a suspense instance. That means that we haven't
          // hydrated it yet. Even though we leave the comments in the
          // DOM after hydrating, and there are boundaries in the DOM
          // that could already be hydrated, we wouldn't have found them
          // through this pass since if the target is hydrated it would
          // have had an internalInstanceKey on it.
          // Let's get the fiber associated with the SuspenseComponent
          // as the deepest instance.
          var targetSuspenseInst = suspenseInstance[internalInstanceKey];

          if (targetSuspenseInst) {
            return targetSuspenseInst;
          } // If we don't find a Fiber on the comment, it might be because
          // we haven't gotten to hydrate it yet. There might still be a
          // parent boundary that hasn't above this one so we need to find
          // the outer most that is known.


          suspenseInstance = getParentSuspenseInstance(suspenseInstance); // If we don't find one, then that should mean that the parent
          // host component also hasn't hydrated yet. We can return it
          // below since it will bail out on the isMounted check later.
        }
      }

      return targetInst;
    }

    targetNode = parentNode;
    parentNode = targetNode.parentNode;
  }

  return null;
}
/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */

function getInstanceFromNode(node) {
  var inst = node[internalInstanceKey] || node[internalContainerInstanceKey];

  if (inst) {
    if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) {
      return inst;
    } else {
      return null;
    }
  }

  return null;
}
/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */

function getNodeFromInstance(inst) {
  if (inst.tag === HostComponent || inst.tag === HostText) {
    // In Fiber this, is just the state node right now. We assume it will be
    // a host component or host text.
    return inst.stateNode;
  } // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.


  {
    {
      throw Error( "getNodeFromInstance: Invalid argument." );
    }
  }
}
function getFiberCurrentPropsFromNode(node) {
  return node[internalPropsKey] || null;
}
function updateFiberProps(node, props) {
  node[internalPropsKey] = props;
}
function getEventListenerSet(node) {
  var elementListenerSet = node[internalEventHandlersKey];

  if (elementListenerSet === undefined) {
    elementListenerSet = node[internalEventHandlersKey] = new Set();
  }

  return elementListenerSet;
}

var loggedTypeFailures = {};
var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;

function setCurrentlyValidatingElement(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
    } else {
      ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
  }
}

function checkPropTypes(typeSpecs, values, location, componentName, element) {
  {
    // $FlowFixMe This is okay but Flow doesn't know it.
    var has = Function.call.bind(Object.prototype.hasOwnProperty);

    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.

        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
            err.name = 'Invariant Violation';
            throw err;
          }

          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
        } catch (ex) {
          error$1 = ex;
        }

        if (error$1 && !(error$1 instanceof Error)) {
          setCurrentlyValidatingElement(element);

          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);

          setCurrentlyValidatingElement(null);
        }

        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error$1.message] = true;
          setCurrentlyValidatingElement(element);

          error('Failed %s type: %s', location, error$1.message);

          setCurrentlyValidatingElement(null);
        }
      }
    }
  }
}

var valueStack = [];
var fiberStack;

{
  fiberStack = [];
}

var index = -1;

function createCursor(defaultValue) {
  return {
    current: defaultValue
  };
}

function pop(cursor, fiber) {
  if (index < 0) {
    {
      error('Unexpected pop.');
    }

    return;
  }

  {
    if (fiber !== fiberStack[index]) {
      error('Unexpected Fiber popped.');
    }
  }

  cursor.current = valueStack[index];
  valueStack[index] = null;

  {
    fiberStack[index] = null;
  }

  index--;
}

function push(cursor, value, fiber) {
  index++;
  valueStack[index] = cursor.current;

  {
    fiberStack[index] = fiber;
  }

  cursor.current = value;
}

var warnedAboutMissingGetChildContext;

{
  warnedAboutMissingGetChildContext = {};
}

var emptyContextObject = {};

{
  Object.freeze(emptyContextObject);
} // A cursor to the current merged context object on the stack.


var contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.

var didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.
// We use this to get access to the parent context after we have already
// pushed the next context provider, and now need to merge their contexts.

var previousContext = emptyContextObject;

function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {
  {
    if (didPushOwnContextIfProvider && isContextProvider(Component)) {
      // If the fiber is a context provider itself, when we read its context
      // we may have already pushed its own child context on the stack. A context
      // provider should not "see" its own child context. Therefore we read the
      // previous (parent) context instead for a context provider.
      return previousContext;
    }

    return contextStackCursor.current;
  }
}

function cacheContext(workInProgress, unmaskedContext, maskedContext) {
  {
    var instance = workInProgress.stateNode;
    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
    instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
  }
}

function getMaskedContext(workInProgress, unmaskedContext) {
  {
    var type = workInProgress.type;
    var contextTypes = type.contextTypes;

    if (!contextTypes) {
      return emptyContextObject;
    } // Avoid recreating masked context unless unmasked context has changed.
    // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
    // This may trigger infinite loops if componentWillReceiveProps calls setState.


    var instance = workInProgress.stateNode;

    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
      return instance.__reactInternalMemoizedMaskedChildContext;
    }

    var context = {};

    for (var key in contextTypes) {
      context[key] = unmaskedContext[key];
    }

    {
      var name = getComponentName(type) || 'Unknown';
      checkPropTypes(contextTypes, context, 'context', name);
    } // Cache unmasked context so we can avoid recreating masked context unless necessary.
    // Context is created before the class component is instantiated so check for instance.


    if (instance) {
      cacheContext(workInProgress, unmaskedContext, context);
    }

    return context;
  }
}

function hasContextChanged() {
  {
    return didPerformWorkStackCursor.current;
  }
}

function isContextProvider(type) {
  {
    var childContextTypes = type.childContextTypes;
    return childContextTypes !== null && childContextTypes !== undefined;
  }
}

function popContext(fiber) {
  {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }
}

function popTopLevelContextObject(fiber) {
  {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }
}

function pushTopLevelContextObject(fiber, context, didChange) {
  {
    if (!(contextStackCursor.current === emptyContextObject)) {
      {
        throw Error( "Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue." );
      }
    }

    push(contextStackCursor, context, fiber);
    push(didPerformWorkStackCursor, didChange, fiber);
  }
}

function processChildContext(fiber, type, parentContext) {
  {
    var instance = fiber.stateNode;
    var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.
    // It has only been added in Fiber to match the (unintentional) behavior in Stack.

    if (typeof instance.getChildContext !== 'function') {
      {
        var componentName = getComponentName(type) || 'Unknown';

        if (!warnedAboutMissingGetChildContext[componentName]) {
          warnedAboutMissingGetChildContext[componentName] = true;

          error('%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);
        }
      }

      return parentContext;
    }

    var childContext = instance.getChildContext();

    for (var contextKey in childContext) {
      if (!(contextKey in childContextTypes)) {
        {
          throw Error( (getComponentName(type) || 'Unknown') + ".getChildContext(): key \"" + contextKey + "\" is not defined in childContextTypes." );
        }
      }
    }

    {
      var name = getComponentName(type) || 'Unknown';
      checkPropTypes(childContextTypes, childContext, 'child context', name);
    }

    return _assign({}, parentContext, childContext);
  }
}

function pushContextProvider(workInProgress) {
  {
    var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.
    // If the instance does not exist yet, we will push null at first,
    // and replace it on the stack later when invalidating the context.

    var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject; // Remember the parent context so we can merge with it later.
    // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.

    previousContext = contextStackCursor.current;
    push(contextStackCursor, memoizedMergedChildContext, workInProgress);
    push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
    return true;
  }
}

function invalidateContextProvider(workInProgress, type, didChange) {
  {
    var instance = workInProgress.stateNode;

    if (!instance) {
      {
        throw Error( "Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue." );
      }
    }

    if (didChange) {
      // Merge parent and own context.
      // Skip this if we're not updating due to sCU.
      // This avoids unnecessarily recomputing memoized values.
      var mergedContext = processChildContext(workInProgress, type, previousContext);
      instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.
      // It is important to unwind the context in the reverse order.

      pop(didPerformWorkStackCursor, workInProgress);
      pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.

      push(contextStackCursor, mergedContext, workInProgress);
      push(didPerformWorkStackCursor, didChange, workInProgress);
    } else {
      pop(didPerformWorkStackCursor, workInProgress);
      push(didPerformWorkStackCursor, didChange, workInProgress);
    }
  }
}

function findCurrentUnmaskedContext(fiber) {
  {
    // Currently this is only used with renderSubtreeIntoContainer; not sure if it
    // makes sense elsewhere
    if (!(isFiberMounted(fiber) && fiber.tag === ClassComponent)) {
      {
        throw Error( "Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue." );
      }
    }

    var node = fiber;

    do {
      switch (node.tag) {
        case HostRoot:
          return node.stateNode.context;

        case ClassComponent:
          {
            var Component = node.type;

            if (isContextProvider(Component)) {
              return node.stateNode.__reactInternalMemoizedMergedChildContext;
            }

            break;
          }
      }

      node = node.return;
    } while (node !== null);

    {
      {
        throw Error( "Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue." );
      }
    }
  }
}

var LegacyRoot = 0;
var BlockingRoot = 1;
var ConcurrentRoot = 2;

var rendererID = null;
var injectedHook = null;
var hasLoggedError = false;
var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';
function injectInternals(internals) {
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
    // No DevTools
    return false;
  }

  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;

  if (hook.isDisabled) {
    // This isn't a real property on the hook, but it can be set to opt out
    // of DevTools integration and associated warnings and logs.
    // https://github.com/facebook/react/issues/3877
    return true;
  }

  if (!hook.supportsFiber) {
    {
      error('The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://reactjs.org/link/react-devtools');
    } // DevTools exists, even though it doesn't support Fiber.


    return true;
  }

  try {
    rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.

    injectedHook = hook;
  } catch (err) {
    // Catch all errors because it is unsafe to throw during initialization.
    {
      error('React instrumentation encountered an error: %s.', err);
    }
  } // DevTools exists


  return true;
}
function onScheduleRoot(root, children) {
  {
    if (injectedHook && typeof injectedHook.onScheduleFiberRoot === 'function') {
      try {
        injectedHook.onScheduleFiberRoot(rendererID, root, children);
      } catch (err) {
        if ( !hasLoggedError) {
          hasLoggedError = true;

          error('React instrumentation encountered an error: %s', err);
        }
      }
    }
  }
}
function onCommitRoot(root, priorityLevel) {
  if (injectedHook && typeof injectedHook.onCommitFiberRoot === 'function') {
    try {
      var didError = (root.current.flags & DidCapture) === DidCapture;

      if (enableProfilerTimer) {
        injectedHook.onCommitFiberRoot(rendererID, root, priorityLevel, didError);
      }
    } catch (err) {
      {
        if (!hasLoggedError) {
          hasLoggedError = true;

          error('React instrumentation encountered an error: %s', err);
        }
      }
    }
  }
}
function onCommitUnmount(fiber) {
  if (injectedHook && typeof injectedHook.onCommitFiberUnmount === 'function') {
    try {
      injectedHook.onCommitFiberUnmount(rendererID, fiber);
    } catch (err) {
      {
        if (!hasLoggedError) {
          hasLoggedError = true;

          error('React instrumentation encountered an error: %s', err);
        }
      }
    }
  }
}

var Scheduler_runWithPriority = Scheduler.unstable_runWithPriority,
    Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback,
    Scheduler_cancelCallback = Scheduler.unstable_cancelCallback,
    Scheduler_shouldYield = Scheduler.unstable_shouldYield,
    Scheduler_requestPaint = Scheduler.unstable_requestPaint,
    Scheduler_now$1 = Scheduler.unstable_now,
    Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,
    Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority,
    Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,
    Scheduler_NormalPriority = Scheduler.unstable_NormalPriority,
    Scheduler_LowPriority = Scheduler.unstable_LowPriority,
    Scheduler_IdlePriority = Scheduler.unstable_IdlePriority;

{
  // Provide explicit error message when production+profiling bundle of e.g.
  // react-dom is used with production (non-profiling) bundle of
  // scheduler/tracing
  if (!(tracing$1.__interactionsRef != null && tracing$1.__interactionsRef.current != null)) {
    {
      throw Error( "It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at https://reactjs.org/link/profiling" );
    }
  }
}

var fakeCallbackNode = {}; // Except for NoPriority, these correspond to Scheduler priorities. We use
// ascending numbers so we can compare them like numbers. They start at 90 to
// avoid clashing with Scheduler's priorities.

var ImmediatePriority$1 = 99;
var UserBlockingPriority$2 = 98;
var NormalPriority$1 = 97;
var LowPriority$1 = 96;
var IdlePriority$1 = 95; // NoPriority is the absence of priority. Also React-only.

var NoPriority$1 = 90;
var shouldYield = Scheduler_shouldYield;
var requestPaint = // Fall back gracefully if we're running an older version of Scheduler.
Scheduler_requestPaint !== undefined ? Scheduler_requestPaint : function () {};
var syncQueue = null;
var immediateQueueCallbackNode = null;
var isFlushingSyncQueue = false;
var initialTimeMs$1 = Scheduler_now$1(); // If the initial timestamp is reasonably small, use Scheduler's `now` directly.
// This will be the case for modern browsers that support `performance.now`. In
// older browsers, Scheduler falls back to `Date.now`, which returns a Unix
// timestamp. In that case, subtract the module initialization time to simulate
// the behavior of performance.now and keep our times small enough to fit
// within 32 bits.
// TODO: Consider lifting this into Scheduler.

var now = initialTimeMs$1 < 10000 ? Scheduler_now$1 : function () {
  return Scheduler_now$1() - initialTimeMs$1;
};
function getCurrentPriorityLevel() {
  switch (Scheduler_getCurrentPriorityLevel()) {
    case Scheduler_ImmediatePriority:
      return ImmediatePriority$1;

    case Scheduler_UserBlockingPriority:
      return UserBlockingPriority$2;

    case Scheduler_NormalPriority:
      return NormalPriority$1;

    case Scheduler_LowPriority:
      return LowPriority$1;

    case Scheduler_IdlePriority:
      return IdlePriority$1;

    default:
      {
        {
          throw Error( "Unknown priority level." );
        }
      }

  }
}

function reactPriorityToSchedulerPriority(reactPriorityLevel) {
  switch (reactPriorityLevel) {
    case ImmediatePriority$1:
      return Scheduler_ImmediatePriority;

    case UserBlockingPriority$2:
      return Scheduler_UserBlockingPriority;

    case NormalPriority$1:
      return Scheduler_NormalPriority;

    case LowPriority$1:
      return Scheduler_LowPriority;

    case IdlePriority$1:
      return Scheduler_IdlePriority;

    default:
      {
        {
          throw Error( "Unknown priority level." );
        }
      }

  }
}

function runWithPriority$1(reactPriorityLevel, fn) {
  var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
  return Scheduler_runWithPriority(priorityLevel, fn);
}
function scheduleCallback(reactPriorityLevel, callback, options) {
  var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
  return Scheduler_scheduleCallback(priorityLevel, callback, options);
}
function scheduleSyncCallback(callback) {
  // Push this callback into an internal queue. We'll flush these either in
  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.
  if (syncQueue === null) {
    syncQueue = [callback]; // Flush the queue in the next tick, at the earliest.

    immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl);
  } else {
    // Push onto existing queue. Don't need to schedule a callback because
    // we already scheduled one when we created the queue.
    syncQueue.push(callback);
  }

  return fakeCallbackNode;
}
function cancelCallback(callbackNode) {
  if (callbackNode !== fakeCallbackNode) {
    Scheduler_cancelCallback(callbackNode);
  }
}
function flushSyncCallbackQueue() {
  if (immediateQueueCallbackNode !== null) {
    var node = immediateQueueCallbackNode;
    immediateQueueCallbackNode = null;
    Scheduler_cancelCallback(node);
  }

  flushSyncCallbackQueueImpl();
}

function flushSyncCallbackQueueImpl() {
  if (!isFlushingSyncQueue && syncQueue !== null) {
    // Prevent re-entrancy.
    isFlushingSyncQueue = true;
    var i = 0;

    {
      try {
        var _isSync2 = true;
        var _queue = syncQueue;
        runWithPriority$1(ImmediatePriority$1, function () {
          for (; i < _queue.length; i++) {
            var callback = _queue[i];

            do {
              callback = callback(_isSync2);
            } while (callback !== null);
          }
        });
        syncQueue = null;
      } catch (error) {
        // If something throws, leave the remaining callbacks on the queue.
        if (syncQueue !== null) {
          syncQueue = syncQueue.slice(i + 1);
        } // Resume flushing in the next tick


        Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue);
        throw error;
      } finally {
        isFlushingSyncQueue = false;
      }
    }
  }
}

// TODO: this is special because it gets imported during build.
var ReactVersion = '17.0.2';

var NoMode = 0;
var StrictMode = 1; // TODO: Remove BlockingMode and ConcurrentMode by reading from the root
// tag instead

var BlockingMode = 2;
var ConcurrentMode = 4;
var ProfileMode = 8;
var DebugTracingMode = 16;

var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;
var NoTransition = 0;
function requestCurrentTransition() {
  return ReactCurrentBatchConfig.transition;
}

var ReactStrictModeWarnings = {
  recordUnsafeLifecycleWarnings: function (fiber, instance) {},
  flushPendingUnsafeLifecycleWarnings: function () {},
  recordLegacyContextWarning: function (fiber, instance) {},
  flushLegacyContextWarning: function () {},
  discardPendingWarnings: function () {}
};

{
  var findStrictRoot = function (fiber) {
    var maybeStrictRoot = null;
    var node = fiber;

    while (node !== null) {
      if (node.mode & StrictMode) {
        maybeStrictRoot = node;
      }

      node = node.return;
    }

    return maybeStrictRoot;
  };

  var setToSortedString = function (set) {
    var array = [];
    set.forEach(function (value) {
      array.push(value);
    });
    return array.sort().join(', ');
  };

  var pendingComponentWillMountWarnings = [];
  var pendingUNSAFE_ComponentWillMountWarnings = [];
  var pendingComponentWillReceivePropsWarnings = [];
  var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
  var pendingComponentWillUpdateWarnings = [];
  var pendingUNSAFE_ComponentWillUpdateWarnings = []; // Tracks components we have already warned about.

  var didWarnAboutUnsafeLifecycles = new Set();

  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {
    // Dedup strategy: Warn once per component.
    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
      return;
    }

    if (typeof instance.componentWillMount === 'function' && // Don't warn about react-lifecycles-compat polyfilled components.
    instance.componentWillMount.__suppressDeprecationWarning !== true) {
      pendingComponentWillMountWarnings.push(fiber);
    }

    if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillMount === 'function') {
      pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
    }

    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
      pendingComponentWillReceivePropsWarnings.push(fiber);
    }

    if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
      pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
    }

    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
      pendingComponentWillUpdateWarnings.push(fiber);
    }

    if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillUpdate === 'function') {
      pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
    }
  };

  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {
    // We do an initial pass to gather component names
    var componentWillMountUniqueNames = new Set();

    if (pendingComponentWillMountWarnings.length > 0) {
      pendingComponentWillMountWarnings.forEach(function (fiber) {
        componentWillMountUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingComponentWillMountWarnings = [];
    }

    var UNSAFE_componentWillMountUniqueNames = new Set();

    if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
      pendingUNSAFE_ComponentWillMountWarnings.forEach(function (fiber) {
        UNSAFE_componentWillMountUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingUNSAFE_ComponentWillMountWarnings = [];
    }

    var componentWillReceivePropsUniqueNames = new Set();

    if (pendingComponentWillReceivePropsWarnings.length > 0) {
      pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {
        componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingComponentWillReceivePropsWarnings = [];
    }

    var UNSAFE_componentWillReceivePropsUniqueNames = new Set();

    if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
      pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function (fiber) {
        UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
    }

    var componentWillUpdateUniqueNames = new Set();

    if (pendingComponentWillUpdateWarnings.length > 0) {
      pendingComponentWillUpdateWarnings.forEach(function (fiber) {
        componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingComponentWillUpdateWarnings = [];
    }

    var UNSAFE_componentWillUpdateUniqueNames = new Set();

    if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
      pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function (fiber) {
        UNSAFE_componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingUNSAFE_ComponentWillUpdateWarnings = [];
    } // Finally, we flush all the warnings
    // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'


    if (UNSAFE_componentWillMountUniqueNames.size > 0) {
      var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);

      error('Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\n' + '\nPlease update the following components: %s', sortedNames);
    }

    if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
      var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);

      error('Using UNSAFE_componentWillReceiveProps in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + "* If you're updating state whenever props change, " + 'refactor your code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n' + '\nPlease update the following components: %s', _sortedNames);
    }

    if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
      var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);

      error('Using UNSAFE_componentWillUpdate in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + '\nPlease update the following components: %s', _sortedNames2);
    }

    if (componentWillMountUniqueNames.size > 0) {
      var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);

      warn('componentWillMount has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\n' + '* Rename componentWillMount to UNSAFE_componentWillMount to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames3);
    }

    if (componentWillReceivePropsUniqueNames.size > 0) {
      var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);

      warn('componentWillReceiveProps has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + "* If you're updating state whenever props change, refactor your " + 'code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n' + '* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames4);
    }

    if (componentWillUpdateUniqueNames.size > 0) {
      var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);

      warn('componentWillUpdate has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + '* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames5);
    }
  };

  var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.

  var didWarnAboutLegacyContext = new Set();

  ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {
    var strictRoot = findStrictRoot(fiber);

    if (strictRoot === null) {
      error('Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');

      return;
    } // Dedup strategy: Warn once per component.


    if (didWarnAboutLegacyContext.has(fiber.type)) {
      return;
    }

    var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);

    if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {
      if (warningsForRoot === undefined) {
        warningsForRoot = [];
        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
      }

      warningsForRoot.push(fiber);
    }
  };

  ReactStrictModeWarnings.flushLegacyContextWarning = function () {
    pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {
      if (fiberArray.length === 0) {
        return;
      }

      var firstFiber = fiberArray[0];
      var uniqueNames = new Set();
      fiberArray.forEach(function (fiber) {
        uniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutLegacyContext.add(fiber.type);
      });
      var sortedNames = setToSortedString(uniqueNames);

      try {
        setCurrentFiber(firstFiber);

        error('Legacy context API has been detected within a strict-mode tree.' + '\n\nThe old API will be supported in all 16.x releases, but applications ' + 'using it should migrate to the new version.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context', sortedNames);
      } finally {
        resetCurrentFiber();
      }
    });
  };

  ReactStrictModeWarnings.discardPendingWarnings = function () {
    pendingComponentWillMountWarnings = [];
    pendingUNSAFE_ComponentWillMountWarnings = [];
    pendingComponentWillReceivePropsWarnings = [];
    pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
    pendingComponentWillUpdateWarnings = [];
    pendingUNSAFE_ComponentWillUpdateWarnings = [];
    pendingLegacyContextWarning = new Map();
  };
}

function resolveDefaultProps(Component, baseProps) {
  if (Component && Component.defaultProps) {
    // Resolve default props. Taken from ReactElement
    var props = _assign({}, baseProps);

    var defaultProps = Component.defaultProps;

    for (var propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }

    return props;
  }

  return baseProps;
}

// Max 31 bit integer. The max integer size in V8 for 32-bit systems.
// Math.pow(2, 30) - 1
// 0b111111111111111111111111111111
var MAX_SIGNED_31_BIT_INT = 1073741823;

var valueCursor = createCursor(null);
var rendererSigil;

{
  // Use this to detect multiple renderers using the same context
  rendererSigil = {};
}

var currentlyRenderingFiber = null;
var lastContextDependency = null;
var lastContextWithAllBitsObserved = null;
var isDisallowedContextReadInDEV = false;
function resetContextDependencies() {
  // This is called right before React yields execution, to ensure `readContext`
  // cannot be called outside the render phase.
  currentlyRenderingFiber = null;
  lastContextDependency = null;
  lastContextWithAllBitsObserved = null;

  {
    isDisallowedContextReadInDEV = false;
  }
}
function enterDisallowedContextReadInDEV() {
  {
    isDisallowedContextReadInDEV = true;
  }
}
function exitDisallowedContextReadInDEV() {
  {
    isDisallowedContextReadInDEV = false;
  }
}
function pushProvider(providerFiber, nextValue) {
  var context = providerFiber.type._context;

  {
    push(valueCursor, context._currentValue, providerFiber);
    context._currentValue = nextValue;

    {
      if (context._currentRenderer !== undefined && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) {
        error('Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.');
      }

      context._currentRenderer = rendererSigil;
    }
  }
}
function popProvider(providerFiber) {
  var currentValue = valueCursor.current;
  pop(valueCursor, providerFiber);
  var context = providerFiber.type._context;

  {
    context._currentValue = currentValue;
  }
}
function calculateChangedBits(context, newValue, oldValue) {
  if (objectIs(oldValue, newValue)) {
    // No change
    return 0;
  } else {
    var changedBits = typeof context._calculateChangedBits === 'function' ? context._calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;

    {
      if ((changedBits & MAX_SIGNED_31_BIT_INT) !== changedBits) {
        error('calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits);
      }
    }

    return changedBits | 0;
  }
}
function scheduleWorkOnParentPath(parent, renderLanes) {
  // Update the child lanes of all the ancestors, including the alternates.
  var node = parent;

  while (node !== null) {
    var alternate = node.alternate;

    if (!isSubsetOfLanes(node.childLanes, renderLanes)) {
      node.childLanes = mergeLanes(node.childLanes, renderLanes);

      if (alternate !== null) {
        alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);
      }
    } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes)) {
      alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);
    } else {
      // Neither alternate was updated, which means the rest of the
      // ancestor path already has sufficient priority.
      break;
    }

    node = node.return;
  }
}
function propagateContextChange(workInProgress, context, changedBits, renderLanes) {
  var fiber = workInProgress.child;

  if (fiber !== null) {
    // Set the return pointer of the child to the work-in-progress fiber.
    fiber.return = workInProgress;
  }

  while (fiber !== null) {
    var nextFiber = void 0; // Visit this fiber.

    var list = fiber.dependencies;

    if (list !== null) {
      nextFiber = fiber.child;
      var dependency = list.firstContext;

      while (dependency !== null) {
        // Check if the context matches.
        if (dependency.context === context && (dependency.observedBits & changedBits) !== 0) {
          // Match! Schedule an update on this fiber.
          if (fiber.tag === ClassComponent) {
            // Schedule a force update on the work-in-progress.
            var update = createUpdate(NoTimestamp, pickArbitraryLane(renderLanes));
            update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the
            // update to the current fiber, too, which means it will persist even if
            // this render is thrown away. Since it's a race condition, not sure it's
            // worth fixing.

            enqueueUpdate(fiber, update);
          }

          fiber.lanes = mergeLanes(fiber.lanes, renderLanes);
          var alternate = fiber.alternate;

          if (alternate !== null) {
            alternate.lanes = mergeLanes(alternate.lanes, renderLanes);
          }

          scheduleWorkOnParentPath(fiber.return, renderLanes); // Mark the updated lanes on the list, too.

          list.lanes = mergeLanes(list.lanes, renderLanes); // Since we already found a match, we can stop traversing the
          // dependency list.

          break;
        }

        dependency = dependency.next;
      }
    } else if (fiber.tag === ContextProvider) {
      // Don't scan deeper if this is a matching provider
      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
    } else {
      // Traverse down.
      nextFiber = fiber.child;
    }

    if (nextFiber !== null) {
      // Set the return pointer of the child to the work-in-progress fiber.
      nextFiber.return = fiber;
    } else {
      // No child. Traverse to next sibling.
      nextFiber = fiber;

      while (nextFiber !== null) {
        if (nextFiber === workInProgress) {
          // We're back to the root of this subtree. Exit.
          nextFiber = null;
          break;
        }

        var sibling = nextFiber.sibling;

        if (sibling !== null) {
          // Set the return pointer of the sibling to the work-in-progress fiber.
          sibling.return = nextFiber.return;
          nextFiber = sibling;
          break;
        } // No more siblings. Traverse up.


        nextFiber = nextFiber.return;
      }
    }

    fiber = nextFiber;
  }
}
function prepareToReadContext(workInProgress, renderLanes) {
  currentlyRenderingFiber = workInProgress;
  lastContextDependency = null;
  lastContextWithAllBitsObserved = null;
  var dependencies = workInProgress.dependencies;

  if (dependencies !== null) {
    var firstContext = dependencies.firstContext;

    if (firstContext !== null) {
      if (includesSomeLane(dependencies.lanes, renderLanes)) {
        // Context list has a pending update. Mark that this fiber performed work.
        markWorkInProgressReceivedUpdate();
      } // Reset the work-in-progress list


      dependencies.firstContext = null;
    }
  }
}
function readContext(context, observedBits) {
  {
    // This warning would fire if you read context inside a Hook like useMemo.
    // Unlike the class check below, it's not enforced in production for perf.
    if (isDisallowedContextReadInDEV) {
      error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');
    }
  }

  if (lastContextWithAllBitsObserved === context) ; else if (observedBits === false || observedBits === 0) ; else {
    var resolvedObservedBits; // Avoid deopting on observable arguments or heterogeneous types.

    if (typeof observedBits !== 'number' || observedBits === MAX_SIGNED_31_BIT_INT) {
      // Observe all updates.
      lastContextWithAllBitsObserved = context;
      resolvedObservedBits = MAX_SIGNED_31_BIT_INT;
    } else {
      resolvedObservedBits = observedBits;
    }

    var contextItem = {
      context: context,
      observedBits: resolvedObservedBits,
      next: null
    };

    if (lastContextDependency === null) {
      if (!(currentlyRenderingFiber !== null)) {
        {
          throw Error( "Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()." );
        }
      } // This is the first dependency for this component. Create a new list.


      lastContextDependency = contextItem;
      currentlyRenderingFiber.dependencies = {
        lanes: NoLanes,
        firstContext: contextItem,
        responders: null
      };
    } else {
      // Append a new context item.
      lastContextDependency = lastContextDependency.next = contextItem;
    }
  }

  return  context._currentValue ;
}

var UpdateState = 0;
var ReplaceState = 1;
var ForceUpdate = 2;
var CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.
// It should only be read right after calling `processUpdateQueue`, via
// `checkHasForceUpdateAfterProcessing`.

var hasForceUpdate = false;
var didWarnUpdateInsideUpdate;
var currentlyProcessingQueue;

{
  didWarnUpdateInsideUpdate = false;
  currentlyProcessingQueue = null;
}

function initializeUpdateQueue(fiber) {
  var queue = {
    baseState: fiber.memoizedState,
    firstBaseUpdate: null,
    lastBaseUpdate: null,
    shared: {
      pending: null
    },
    effects: null
  };
  fiber.updateQueue = queue;
}
function cloneUpdateQueue(current, workInProgress) {
  // Clone the update queue from current. Unless it's already a clone.
  var queue = workInProgress.updateQueue;
  var currentQueue = current.updateQueue;

  if (queue === currentQueue) {
    var clone = {
      baseState: currentQueue.baseState,
      firstBaseUpdate: currentQueue.firstBaseUpdate,
      lastBaseUpdate: currentQueue.lastBaseUpdate,
      shared: currentQueue.shared,
      effects: currentQueue.effects
    };
    workInProgress.updateQueue = clone;
  }
}
function createUpdate(eventTime, lane) {
  var update = {
    eventTime: eventTime,
    lane: lane,
    tag: UpdateState,
    payload: null,
    callback: null,
    next: null
  };
  return update;
}
function enqueueUpdate(fiber, update) {
  var updateQueue = fiber.updateQueue;

  if (updateQueue === null) {
    // Only occurs if the fiber has been unmounted.
    return;
  }

  var sharedQueue = updateQueue.shared;
  var pending = sharedQueue.pending;

  if (pending === null) {
    // This is the first update. Create a circular list.
    update.next = update;
  } else {
    update.next = pending.next;
    pending.next = update;
  }

  sharedQueue.pending = update;

  {
    if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {
      error('An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');

      didWarnUpdateInsideUpdate = true;
    }
  }
}
function enqueueCapturedUpdate(workInProgress, capturedUpdate) {
  // Captured updates are updates that are thrown by a child during the render
  // phase. They should be discarded if the render is aborted. Therefore,
  // we should only put them on the work-in-progress queue, not the current one.
  var queue = workInProgress.updateQueue; // Check if the work-in-progress queue is a clone.

  var current = workInProgress.alternate;

  if (current !== null) {
    var currentQueue = current.updateQueue;

    if (queue === currentQueue) {
      // The work-in-progress queue is the same as current. This happens when
      // we bail out on a parent fiber that then captures an error thrown by
      // a child. Since we want to append the update only to the work-in
      // -progress queue, we need to clone the updates. We usually clone during
      // processUpdateQueue, but that didn't happen in this case because we
      // skipped over the parent when we bailed out.
      var newFirst = null;
      var newLast = null;
      var firstBaseUpdate = queue.firstBaseUpdate;

      if (firstBaseUpdate !== null) {
        // Loop through the updates and clone them.
        var update = firstBaseUpdate;

        do {
          var clone = {
            eventTime: update.eventTime,
            lane: update.lane,
            tag: update.tag,
            payload: update.payload,
            callback: update.callback,
            next: null
          };

          if (newLast === null) {
            newFirst = newLast = clone;
          } else {
            newLast.next = clone;
            newLast = clone;
          }

          update = update.next;
        } while (update !== null); // Append the captured update the end of the cloned list.


        if (newLast === null) {
          newFirst = newLast = capturedUpdate;
        } else {
          newLast.next = capturedUpdate;
          newLast = capturedUpdate;
        }
      } else {
        // There are no base updates.
        newFirst = newLast = capturedUpdate;
      }

      queue = {
        baseState: currentQueue.baseState,
        firstBaseUpdate: newFirst,
        lastBaseUpdate: newLast,
        shared: currentQueue.shared,
        effects: currentQueue.effects
      };
      workInProgress.updateQueue = queue;
      return;
    }
  } // Append the update to the end of the list.


  var lastBaseUpdate = queue.lastBaseUpdate;

  if (lastBaseUpdate === null) {
    queue.firstBaseUpdate = capturedUpdate;
  } else {
    lastBaseUpdate.next = capturedUpdate;
  }

  queue.lastBaseUpdate = capturedUpdate;
}

function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
  switch (update.tag) {
    case ReplaceState:
      {
        var payload = update.payload;

        if (typeof payload === 'function') {
          // Updater function
          {
            enterDisallowedContextReadInDEV();
          }

          var nextState = payload.call(instance, prevState, nextProps);

          {
            if ( workInProgress.mode & StrictMode) {
              disableLogs();

              try {
                payload.call(instance, prevState, nextProps);
              } finally {
                reenableLogs();
              }
            }

            exitDisallowedContextReadInDEV();
          }

          return nextState;
        } // State object


        return payload;
      }

    case CaptureUpdate:
      {
        workInProgress.flags = workInProgress.flags & ~ShouldCapture | DidCapture;
      }
    // Intentional fallthrough

    case UpdateState:
      {
        var _payload = update.payload;
        var partialState;

        if (typeof _payload === 'function') {
          // Updater function
          {
            enterDisallowedContextReadInDEV();
          }

          partialState = _payload.call(instance, prevState, nextProps);

          {
            if ( workInProgress.mode & StrictMode) {
              disableLogs();

              try {
                _payload.call(instance, prevState, nextProps);
              } finally {
                reenableLogs();
              }
            }

            exitDisallowedContextReadInDEV();
          }
        } else {
          // Partial state object
          partialState = _payload;
        }

        if (partialState === null || partialState === undefined) {
          // Null and undefined are treated as no-ops.
          return prevState;
        } // Merge the partial state and the previous state.


        return _assign({}, prevState, partialState);
      }

    case ForceUpdate:
      {
        hasForceUpdate = true;
        return prevState;
      }
  }

  return prevState;
}

function processUpdateQueue(workInProgress, props, instance, renderLanes) {
  // This is always non-null on a ClassComponent or HostRoot
  var queue = workInProgress.updateQueue;
  hasForceUpdate = false;

  {
    currentlyProcessingQueue = queue.shared;
  }

  var firstBaseUpdate = queue.firstBaseUpdate;
  var lastBaseUpdate = queue.lastBaseUpdate; // Check if there are pending updates. If so, transfer them to the base queue.

  var pendingQueue = queue.shared.pending;

  if (pendingQueue !== null) {
    queue.shared.pending = null; // The pending queue is circular. Disconnect the pointer between first
    // and last so that it's non-circular.

    var lastPendingUpdate = pendingQueue;
    var firstPendingUpdate = lastPendingUpdate.next;
    lastPendingUpdate.next = null; // Append pending updates to base queue

    if (lastBaseUpdate === null) {
      firstBaseUpdate = firstPendingUpdate;
    } else {
      lastBaseUpdate.next = firstPendingUpdate;
    }

    lastBaseUpdate = lastPendingUpdate; // If there's a current queue, and it's different from the base queue, then
    // we need to transfer the updates to that queue, too. Because the base
    // queue is a singly-linked list with no cycles, we can append to both
    // lists and take advantage of structural sharing.
    // TODO: Pass `current` as argument

    var current = workInProgress.alternate;

    if (current !== null) {
      // This is always non-null on a ClassComponent or HostRoot
      var currentQueue = current.updateQueue;
      var currentLastBaseUpdate = currentQueue.lastBaseUpdate;

      if (currentLastBaseUpdate !== lastBaseUpdate) {
        if (currentLastBaseUpdate === null) {
          currentQueue.firstBaseUpdate = firstPendingUpdate;
        } else {
          currentLastBaseUpdate.next = firstPendingUpdate;
        }

        currentQueue.lastBaseUpdate = lastPendingUpdate;
      }
    }
  } // These values may change as we process the queue.


  if (firstBaseUpdate !== null) {
    // Iterate through the list of updates to compute the result.
    var newState = queue.baseState; // TODO: Don't need to accumulate this. Instead, we can remove renderLanes
    // from the original lanes.

    var newLanes = NoLanes;
    var newBaseState = null;
    var newFirstBaseUpdate = null;
    var newLastBaseUpdate = null;
    var update = firstBaseUpdate;

    do {
      var updateLane = update.lane;
      var updateEventTime = update.eventTime;

      if (!isSubsetOfLanes(renderLanes, updateLane)) {
        // Priority is insufficient. Skip this update. If this is the first
        // skipped update, the previous update/state is the new base
        // update/state.
        var clone = {
          eventTime: updateEventTime,
          lane: updateLane,
          tag: update.tag,
          payload: update.payload,
          callback: update.callback,
          next: null
        };

        if (newLastBaseUpdate === null) {
          newFirstBaseUpdate = newLastBaseUpdate = clone;
          newBaseState = newState;
        } else {
          newLastBaseUpdate = newLastBaseUpdate.next = clone;
        } // Update the remaining priority in the queue.


        newLanes = mergeLanes(newLanes, updateLane);
      } else {
        // This update does have sufficient priority.
        if (newLastBaseUpdate !== null) {
          var _clone = {
            eventTime: updateEventTime,
            // This update is going to be committed so we never want uncommit
            // it. Using NoLane works because 0 is a subset of all bitmasks, so
            // this will never be skipped by the check above.
            lane: NoLane,
            tag: update.tag,
            payload: update.payload,
            callback: update.callback,
            next: null
          };
          newLastBaseUpdate = newLastBaseUpdate.next = _clone;
        } // Process this update.


        newState = getStateFromUpdate(workInProgress, queue, update, newState, props, instance);
        var callback = update.callback;

        if (callback !== null) {
          workInProgress.flags |= Callback;
          var effects = queue.effects;

          if (effects === null) {
            queue.effects = [update];
          } else {
            effects.push(update);
          }
        }
      }

      update = update.next;

      if (update === null) {
        pendingQueue = queue.shared.pending;

        if (pendingQueue === null) {
          break;
        } else {
          // An update was scheduled from inside a reducer. Add the new
          // pending updates to the end of the list and keep processing.
          var _lastPendingUpdate = pendingQueue; // Intentionally unsound. Pending updates form a circular list, but we
          // unravel them when transferring them to the base queue.

          var _firstPendingUpdate = _lastPendingUpdate.next;
          _lastPendingUpdate.next = null;
          update = _firstPendingUpdate;
          queue.lastBaseUpdate = _lastPendingUpdate;
          queue.shared.pending = null;
        }
      }
    } while (true);

    if (newLastBaseUpdate === null) {
      newBaseState = newState;
    }

    queue.baseState = newBaseState;
    queue.firstBaseUpdate = newFirstBaseUpdate;
    queue.lastBaseUpdate = newLastBaseUpdate; // Set the remaining expiration time to be whatever is remaining in the queue.
    // This should be fine because the only two other things that contribute to
    // expiration time are props and context. We're already in the middle of the
    // begin phase by the time we start processing the queue, so we've already
    // dealt with the props. Context in components that specify
    // shouldComponentUpdate is tricky; but we'll have to account for
    // that regardless.

    markSkippedUpdateLanes(newLanes);
    workInProgress.lanes = newLanes;
    workInProgress.memoizedState = newState;
  }

  {
    currentlyProcessingQueue = null;
  }
}

function callCallback(callback, context) {
  if (!(typeof callback === 'function')) {
    {
      throw Error( "Invalid argument passed as callback. Expected a function. Instead received: " + callback );
    }
  }

  callback.call(context);
}

function resetHasForceUpdateBeforeProcessing() {
  hasForceUpdate = false;
}
function checkHasForceUpdateAfterProcessing() {
  return hasForceUpdate;
}
function commitUpdateQueue(finishedWork, finishedQueue, instance) {
  // Commit the effects
  var effects = finishedQueue.effects;
  finishedQueue.effects = null;

  if (effects !== null) {
    for (var i = 0; i < effects.length; i++) {
      var effect = effects[i];
      var callback = effect.callback;

      if (callback !== null) {
        effect.callback = null;
        callCallback(callback, instance);
      }
    }
  }
}

var fakeInternalInstance = {};
var isArray = Array.isArray; // React.Component uses a shared frozen object by default.
// We'll use it to determine whether we need to initialize legacy refs.

var emptyRefsObject = new React.Component().refs;
var didWarnAboutStateAssignmentForComponent;
var didWarnAboutUninitializedState;
var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
var didWarnAboutLegacyLifecyclesAndDerivedState;
var didWarnAboutUndefinedDerivedState;
var warnOnUndefinedDerivedState;
var warnOnInvalidCallback;
var didWarnAboutDirectlyAssigningPropsToState;
var didWarnAboutContextTypeAndContextTypes;
var didWarnAboutInvalidateContextType;

{
  didWarnAboutStateAssignmentForComponent = new Set();
  didWarnAboutUninitializedState = new Set();
  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
  didWarnAboutDirectlyAssigningPropsToState = new Set();
  didWarnAboutUndefinedDerivedState = new Set();
  didWarnAboutContextTypeAndContextTypes = new Set();
  didWarnAboutInvalidateContextType = new Set();
  var didWarnOnInvalidCallback = new Set();

  warnOnInvalidCallback = function (callback, callerName) {
    if (callback === null || typeof callback === 'function') {
      return;
    }

    var key = callerName + '_' + callback;

    if (!didWarnOnInvalidCallback.has(key)) {
      didWarnOnInvalidCallback.add(key);

      error('%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
    }
  };

  warnOnUndefinedDerivedState = function (type, partialState) {
    if (partialState === undefined) {
      var componentName = getComponentName(type) || 'Component';

      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
        didWarnAboutUndefinedDerivedState.add(componentName);

        error('%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);
      }
    }
  }; // This is so gross but it's at least non-critical and can be removed if
  // it causes problems. This is meant to give a nicer error message for
  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
  // ...)) which otherwise throws a "_processChildContext is not a function"
  // exception.


  Object.defineProperty(fakeInternalInstance, '_processChildContext', {
    enumerable: false,
    value: function () {
      {
        {
          throw Error( "_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal)." );
        }
      }
    }
  });
  Object.freeze(fakeInternalInstance);
}

function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
  var prevState = workInProgress.memoizedState;

  {
    if ( workInProgress.mode & StrictMode) {
      disableLogs();

      try {
        // Invoke the function an extra time to help detect side-effects.
        getDerivedStateFromProps(nextProps, prevState);
      } finally {
        reenableLogs();
      }
    }
  }

  var partialState = getDerivedStateFromProps(nextProps, prevState);

  {
    warnOnUndefinedDerivedState(ctor, partialState);
  } // Merge the partial state and the previous state.


  var memoizedState = partialState === null || partialState === undefined ? prevState : _assign({}, prevState, partialState);
  workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the
  // base state.

  if (workInProgress.lanes === NoLanes) {
    // Queue is always non-null for classes
    var updateQueue = workInProgress.updateQueue;
    updateQueue.baseState = memoizedState;
  }
}
var classComponentUpdater = {
  isMounted: isMounted,
  enqueueSetState: function (inst, payload, callback) {
    var fiber = get(inst);
    var eventTime = requestEventTime();
    var lane = requestUpdateLane(fiber);
    var update = createUpdate(eventTime, lane);
    update.payload = payload;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback(callback, 'setState');
      }

      update.callback = callback;
    }

    enqueueUpdate(fiber, update);
    scheduleUpdateOnFiber(fiber, lane, eventTime);
  },
  enqueueReplaceState: function (inst, payload, callback) {
    var fiber = get(inst);
    var eventTime = requestEventTime();
    var lane = requestUpdateLane(fiber);
    var update = createUpdate(eventTime, lane);
    update.tag = ReplaceState;
    update.payload = payload;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback(callback, 'replaceState');
      }

      update.callback = callback;
    }

    enqueueUpdate(fiber, update);
    scheduleUpdateOnFiber(fiber, lane, eventTime);
  },
  enqueueForceUpdate: function (inst, callback) {
    var fiber = get(inst);
    var eventTime = requestEventTime();
    var lane = requestUpdateLane(fiber);
    var update = createUpdate(eventTime, lane);
    update.tag = ForceUpdate;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback(callback, 'forceUpdate');
      }

      update.callback = callback;
    }

    enqueueUpdate(fiber, update);
    scheduleUpdateOnFiber(fiber, lane, eventTime);
  }
};

function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
  var instance = workInProgress.stateNode;

  if (typeof instance.shouldComponentUpdate === 'function') {
    {
      if ( workInProgress.mode & StrictMode) {
        disableLogs();

        try {
          // Invoke the function an extra time to help detect side-effects.
          instance.shouldComponentUpdate(newProps, newState, nextContext);
        } finally {
          reenableLogs();
        }
      }
    }

    var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);

    {
      if (shouldUpdate === undefined) {
        error('%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentName(ctor) || 'Component');
      }
    }

    return shouldUpdate;
  }

  if (ctor.prototype && ctor.prototype.isPureReactComponent) {
    return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
  }

  return true;
}

function checkClassInstance(workInProgress, ctor, newProps) {
  var instance = workInProgress.stateNode;

  {
    var name = getComponentName(ctor) || 'Component';
    var renderPresent = instance.render;

    if (!renderPresent) {
      if (ctor.prototype && typeof ctor.prototype.render === 'function') {
        error('%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);
      } else {
        error('%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);
      }
    }

    if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {
      error('getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name);
    }

    if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {
      error('getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name);
    }

    if (instance.propTypes) {
      error('propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name);
    }

    if (instance.contextType) {
      error('contextType was defined as an instance property on %s. Use a static ' + 'property to define contextType instead.', name);
    }

    {
      if (instance.contextTypes) {
        error('contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name);
      }

      if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
        didWarnAboutContextTypeAndContextTypes.add(ctor);

        error('%s declares both contextTypes and contextType static properties. ' + 'The legacy contextTypes property will be ignored.', name);
      }
    }

    if (typeof instance.componentShouldUpdate === 'function') {
      error('%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name);
    }

    if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {
      error('%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentName(ctor) || 'A pure component');
    }

    if (typeof instance.componentDidUnmount === 'function') {
      error('%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name);
    }

    if (typeof instance.componentDidReceiveProps === 'function') {
      error('%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name);
    }

    if (typeof instance.componentWillRecieveProps === 'function') {
      error('%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name);
    }

    if (typeof instance.UNSAFE_componentWillRecieveProps === 'function') {
      error('%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name);
    }

    var hasMutatedProps = instance.props !== newProps;

    if (instance.props !== undefined && hasMutatedProps) {
      error('%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", name, name);
    }

    if (instance.defaultProps) {
      error('Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name);
    }

    if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);

      error('%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentName(ctor));
    }

    if (typeof instance.getDerivedStateFromProps === 'function') {
      error('%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name);
    }

    if (typeof instance.getDerivedStateFromError === 'function') {
      error('%s: getDerivedStateFromError() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name);
    }

    if (typeof ctor.getSnapshotBeforeUpdate === 'function') {
      error('%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name);
    }

    var _state = instance.state;

    if (_state && (typeof _state !== 'object' || isArray(_state))) {
      error('%s.state: must be set to an object or null', name);
    }

    if (typeof instance.getChildContext === 'function' && typeof ctor.childContextTypes !== 'object') {
      error('%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name);
    }
  }
}

function adoptClassInstance(workInProgress, instance) {
  instance.updater = classComponentUpdater;
  workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates

  set(instance, workInProgress);

  {
    instance._reactInternalInstance = fakeInternalInstance;
  }
}

function constructClassInstance(workInProgress, ctor, props) {
  var isLegacyContextConsumer = false;
  var unmaskedContext = emptyContextObject;
  var context = emptyContextObject;
  var contextType = ctor.contextType;

  {
    if ('contextType' in ctor) {
      var isValid = // Allow null for conditional declaration
      contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>

      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
        didWarnAboutInvalidateContextType.add(ctor);
        var addendum = '';

        if (contextType === undefined) {
          addendum = ' However, it is set to undefined. ' + 'This can be caused by a typo or by mixing up named and default imports. ' + 'This can also happen due to a circular dependency, so ' + 'try moving the createContext() call to a separate file.';
        } else if (typeof contextType !== 'object') {
          addendum = ' However, it is set to a ' + typeof contextType + '.';
        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
          addendum = ' Did you accidentally pass the Context.Provider instead?';
        } else if (contextType._context !== undefined) {
          // <Context.Consumer>
          addendum = ' Did you accidentally pass the Context.Consumer instead?';
        } else {
          addendum = ' However, it is set to an object with keys {' + Object.keys(contextType).join(', ') + '}.';
        }

        error('%s defines an invalid contextType. ' + 'contextType should point to the Context object returned by React.createContext().%s', getComponentName(ctor) || 'Component', addendum);
      }
    }
  }

  if (typeof contextType === 'object' && contextType !== null) {
    context = readContext(contextType);
  } else {
    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    var contextTypes = ctor.contextTypes;
    isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;
    context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;
  } // Instantiate twice to help detect side-effects.


  {
    if ( workInProgress.mode & StrictMode) {
      disableLogs();

      try {
        new ctor(props, context); // eslint-disable-line no-new
      } finally {
        reenableLogs();
      }
    }
  }

  var instance = new ctor(props, context);
  var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
  adoptClassInstance(workInProgress, instance);

  {
    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {
      var componentName = getComponentName(ctor) || 'Component';

      if (!didWarnAboutUninitializedState.has(componentName)) {
        didWarnAboutUninitializedState.add(componentName);

        error('`%s` uses `getDerivedStateFromProps` but its initial state is ' + '%s. This is not recommended. Instead, define the initial state by ' + 'assigning an object to `this.state` in the constructor of `%s`. ' + 'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.', componentName, instance.state === null ? 'null' : 'undefined', componentName);
      }
    } // If new component APIs are defined, "unsafe" lifecycles won't be called.
    // Warn about these lifecycles if they are present.
    // Don't warn about react-lifecycles-compat polyfilled methods though.


    if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {
      var foundWillMountName = null;
      var foundWillReceivePropsName = null;
      var foundWillUpdateName = null;

      if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
        foundWillMountName = 'componentWillMount';
      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {
        foundWillMountName = 'UNSAFE_componentWillMount';
      }

      if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
        foundWillReceivePropsName = 'componentWillReceiveProps';
      } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
      }

      if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
        foundWillUpdateName = 'componentWillUpdate';
      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
        foundWillUpdateName = 'UNSAFE_componentWillUpdate';
      }

      if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
        var _componentName = getComponentName(ctor) || 'Component';

        var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';

        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
          didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);

          error('Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\n' + 'The above lifecycles should be removed. Learn more about this warning here:\n' + 'https://reactjs.org/link/unsafe-component-lifecycles', _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : '', foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : '', foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : '');
        }
      }
    }
  } // Cache unmasked context so we can avoid recreating masked context unless necessary.
  // ReactFiberContext usually updates this cache but can't for newly-created instances.


  if (isLegacyContextConsumer) {
    cacheContext(workInProgress, unmaskedContext, context);
  }

  return instance;
}

function callComponentWillMount(workInProgress, instance) {
  var oldState = instance.state;

  if (typeof instance.componentWillMount === 'function') {
    instance.componentWillMount();
  }

  if (typeof instance.UNSAFE_componentWillMount === 'function') {
    instance.UNSAFE_componentWillMount();
  }

  if (oldState !== instance.state) {
    {
      error('%s.componentWillMount(): Assigning directly to this.state is ' + "deprecated (except inside a component's " + 'constructor). Use setState instead.', getComponentName(workInProgress.type) || 'Component');
    }

    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }
}

function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
  var oldState = instance.state;

  if (typeof instance.componentWillReceiveProps === 'function') {
    instance.componentWillReceiveProps(newProps, nextContext);
  }

  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
  }

  if (instance.state !== oldState) {
    {
      var componentName = getComponentName(workInProgress.type) || 'Component';

      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
        didWarnAboutStateAssignmentForComponent.add(componentName);

        error('%s.componentWillReceiveProps(): Assigning directly to ' + "this.state is deprecated (except inside a component's " + 'constructor). Use setState instead.', componentName);
      }
    }

    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }
} // Invokes the mount life-cycles on a previously never rendered instance.


function mountClassInstance(workInProgress, ctor, newProps, renderLanes) {
  {
    checkClassInstance(workInProgress, ctor, newProps);
  }

  var instance = workInProgress.stateNode;
  instance.props = newProps;
  instance.state = workInProgress.memoizedState;
  instance.refs = emptyRefsObject;
  initializeUpdateQueue(workInProgress);
  var contextType = ctor.contextType;

  if (typeof contextType === 'object' && contextType !== null) {
    instance.context = readContext(contextType);
  } else {
    var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    instance.context = getMaskedContext(workInProgress, unmaskedContext);
  }

  {
    if (instance.state === newProps) {
      var componentName = getComponentName(ctor) || 'Component';

      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
        didWarnAboutDirectlyAssigningPropsToState.add(componentName);

        error('%s: It is not recommended to assign props directly to state ' + "because updates to props won't be reflected in state. " + 'In most cases, it is better to use props directly.', componentName);
      }
    }

    if (workInProgress.mode & StrictMode) {
      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
    }

    {
      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);
    }
  }

  processUpdateQueue(workInProgress, newProps, instance, renderLanes);
  instance.state = workInProgress.memoizedState;
  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;

  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
    instance.state = workInProgress.memoizedState;
  } // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.


  if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
    callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's
    // process them now.

    processUpdateQueue(workInProgress, newProps, instance, renderLanes);
    instance.state = workInProgress.memoizedState;
  }

  if (typeof instance.componentDidMount === 'function') {
    workInProgress.flags |= Update;
  }
}

function resumeMountClassInstance(workInProgress, ctor, newProps, renderLanes) {
  var instance = workInProgress.stateNode;
  var oldProps = workInProgress.memoizedProps;
  instance.props = oldProps;
  var oldContext = instance.context;
  var contextType = ctor.contextType;
  var nextContext = emptyContextObject;

  if (typeof contextType === 'object' && contextType !== null) {
    nextContext = readContext(contextType);
  } else {
    var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);
  }

  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
  // ever the previously attempted to render - not the "current". However,
  // during componentDidUpdate we pass the "current" props.
  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.

  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
    if (oldProps !== newProps || oldContext !== nextContext) {
      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
    }
  }

  resetHasForceUpdateBeforeProcessing();
  var oldState = workInProgress.memoizedState;
  var newState = instance.state = oldState;
  processUpdateQueue(workInProgress, newProps, instance, renderLanes);
  newState = workInProgress.memoizedState;

  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.flags |= Update;
    }

    return false;
  }

  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
    newState = workInProgress.memoizedState;
  }

  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);

  if (shouldUpdate) {
    // In order to support react-lifecycles-compat polyfilled components,
    // Unsafe lifecycles should not be invoked for components using the new APIs.
    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
      if (typeof instance.componentWillMount === 'function') {
        instance.componentWillMount();
      }

      if (typeof instance.UNSAFE_componentWillMount === 'function') {
        instance.UNSAFE_componentWillMount();
      }
    }

    if (typeof instance.componentDidMount === 'function') {
      workInProgress.flags |= Update;
    }
  } else {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.flags |= Update;
    } // If shouldComponentUpdate returned false, we should still update the
    // memoized state to indicate that this work can be reused.


    workInProgress.memoizedProps = newProps;
    workInProgress.memoizedState = newState;
  } // Update the existing instance's state, props, and context pointers even
  // if shouldComponentUpdate returns false.


  instance.props = newProps;
  instance.state = newState;
  instance.context = nextContext;
  return shouldUpdate;
} // Invokes the update life-cycles and returns false if it shouldn't rerender.


function updateClassInstance(current, workInProgress, ctor, newProps, renderLanes) {
  var instance = workInProgress.stateNode;
  cloneUpdateQueue(current, workInProgress);
  var unresolvedOldProps = workInProgress.memoizedProps;
  var oldProps = workInProgress.type === workInProgress.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress.type, unresolvedOldProps);
  instance.props = oldProps;
  var unresolvedNewProps = workInProgress.pendingProps;
  var oldContext = instance.context;
  var contextType = ctor.contextType;
  var nextContext = emptyContextObject;

  if (typeof contextType === 'object' && contextType !== null) {
    nextContext = readContext(contextType);
  } else {
    var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);
  }

  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
  // ever the previously attempted to render - not the "current". However,
  // during componentDidUpdate we pass the "current" props.
  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.

  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
    if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) {
      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
    }
  }

  resetHasForceUpdateBeforeProcessing();
  var oldState = workInProgress.memoizedState;
  var newState = instance.state = oldState;
  processUpdateQueue(workInProgress, newProps, instance, renderLanes);
  newState = workInProgress.memoizedState;

  if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidUpdate === 'function') {
      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.flags |= Update;
      }
    }

    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.flags |= Snapshot;
      }
    }

    return false;
  }

  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
    newState = workInProgress.memoizedState;
  }

  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);

  if (shouldUpdate) {
    // In order to support react-lifecycles-compat polyfilled components,
    // Unsafe lifecycles should not be invoked for components using the new APIs.
    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {
      if (typeof instance.componentWillUpdate === 'function') {
        instance.componentWillUpdate(newProps, newState, nextContext);
      }

      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
      }
    }

    if (typeof instance.componentDidUpdate === 'function') {
      workInProgress.flags |= Update;
    }

    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      workInProgress.flags |= Snapshot;
    }
  } else {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidUpdate === 'function') {
      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.flags |= Update;
      }
    }

    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.flags |= Snapshot;
      }
    } // If shouldComponentUpdate returned false, we should still update the
    // memoized props/state to indicate that this work can be reused.


    workInProgress.memoizedProps = newProps;
    workInProgress.memoizedState = newState;
  } // Update the existing instance's state, props, and context pointers even
  // if shouldComponentUpdate returns false.


  instance.props = newProps;
  instance.state = newState;
  instance.context = nextContext;
  return shouldUpdate;
}

var didWarnAboutMaps;
var didWarnAboutGenerators;
var didWarnAboutStringRefs;
var ownerHasKeyUseWarning;
var ownerHasFunctionTypeWarning;

var warnForMissingKey = function (child, returnFiber) {};

{
  didWarnAboutMaps = false;
  didWarnAboutGenerators = false;
  didWarnAboutStringRefs = {};
  /**
   * Warn if there's no key explicitly set on dynamic arrays of children or
   * object keys are not valid. This allows us to keep track of children between
   * updates.
   */

  ownerHasKeyUseWarning = {};
  ownerHasFunctionTypeWarning = {};

  warnForMissingKey = function (child, returnFiber) {
    if (child === null || typeof child !== 'object') {
      return;
    }

    if (!child._store || child._store.validated || child.key != null) {
      return;
    }

    if (!(typeof child._store === 'object')) {
      {
        throw Error( "React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue." );
      }
    }

    child._store.validated = true;
    var componentName = getComponentName(returnFiber.type) || 'Component';

    if (ownerHasKeyUseWarning[componentName]) {
      return;
    }

    ownerHasKeyUseWarning[componentName] = true;

    error('Each child in a list should have a unique ' + '"key" prop. See https://reactjs.org/link/warning-keys for ' + 'more information.');
  };
}

var isArray$1 = Array.isArray;

function coerceRef(returnFiber, current, element) {
  var mixedRef = element.ref;

  if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {
    {
      // TODO: Clean this up once we turn on the string ref warning for
      // everyone, because the strict mode case will no longer be relevant
      if ((returnFiber.mode & StrictMode || warnAboutStringRefs) && // We warn in ReactElement.js if owner and self are equal for string refs
      // because these cannot be automatically converted to an arrow function
      // using a codemod. Therefore, we don't have to warn about string refs again.
      !(element._owner && element._self && element._owner.stateNode !== element._self)) {
        var componentName = getComponentName(returnFiber.type) || 'Component';

        if (!didWarnAboutStringRefs[componentName]) {
          {
            error('A string ref, "%s", has been found within a strict mode tree. ' + 'String refs are a source of potential bugs and should be avoided. ' + 'We recommend using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', mixedRef);
          }

          didWarnAboutStringRefs[componentName] = true;
        }
      }
    }

    if (element._owner) {
      var owner = element._owner;
      var inst;

      if (owner) {
        var ownerFiber = owner;

        if (!(ownerFiber.tag === ClassComponent)) {
          {
            throw Error( "Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref" );
          }
        }

        inst = ownerFiber.stateNode;
      }

      if (!inst) {
        {
          throw Error( "Missing owner for string ref " + mixedRef + ". This error is likely caused by a bug in React. Please file an issue." );
        }
      }

      var stringRef = '' + mixedRef; // Check if previous string ref matches new string ref

      if (current !== null && current.ref !== null && typeof current.ref === 'function' && current.ref._stringRef === stringRef) {
        return current.ref;
      }

      var ref = function (value) {
        var refs = inst.refs;

        if (refs === emptyRefsObject) {
          // This is a lazy pooled frozen object, so we need to initialize.
          refs = inst.refs = {};
        }

        if (value === null) {
          delete refs[stringRef];
        } else {
          refs[stringRef] = value;
        }
      };

      ref._stringRef = stringRef;
      return ref;
    } else {
      if (!(typeof mixedRef === 'string')) {
        {
          throw Error( "Expected ref to be a function, a string, an object returned by React.createRef(), or null." );
        }
      }

      if (!element._owner) {
        {
          throw Error( "Element ref was specified as a string (" + mixedRef + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://reactjs.org/link/refs-must-have-owner for more information." );
        }
      }
    }
  }

  return mixedRef;
}

function throwOnInvalidObjectType(returnFiber, newChild) {
  if (returnFiber.type !== 'textarea') {
    {
      {
        throw Error( "Objects are not valid as a React child (found: " + (Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild) + "). If you meant to render a collection of children, use an array instead." );
      }
    }
  }
}

function warnOnFunctionType(returnFiber) {
  {
    var componentName = getComponentName(returnFiber.type) || 'Component';

    if (ownerHasFunctionTypeWarning[componentName]) {
      return;
    }

    ownerHasFunctionTypeWarning[componentName] = true;

    error('Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.');
  }
} // We avoid inlining this to avoid potential deopts from using try/catch.
// to be able to optimize each path individually by branching early. This needs
// a compiler or we can do it manually. Helpers that don't need this branching
// live outside of this function.


function ChildReconciler(shouldTrackSideEffects) {
  function deleteChild(returnFiber, childToDelete) {
    if (!shouldTrackSideEffects) {
      // Noop.
      return;
    } // Deletions are added in reversed order so we add it to the front.
    // At this point, the return fiber's effect list is empty except for
    // deletions, so we can just append the deletion to the list. The remaining
    // effects aren't added until the complete phase. Once we implement
    // resuming, this may not be true.


    var last = returnFiber.lastEffect;

    if (last !== null) {
      last.nextEffect = childToDelete;
      returnFiber.lastEffect = childToDelete;
    } else {
      returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
    }

    childToDelete.nextEffect = null;
    childToDelete.flags = Deletion;
  }

  function deleteRemainingChildren(returnFiber, currentFirstChild) {
    if (!shouldTrackSideEffects) {
      // Noop.
      return null;
    } // TODO: For the shouldClone case, this could be micro-optimized a bit by
    // assuming that after the first child we've already added everything.


    var childToDelete = currentFirstChild;

    while (childToDelete !== null) {
      deleteChild(returnFiber, childToDelete);
      childToDelete = childToDelete.sibling;
    }

    return null;
  }

  function mapRemainingChildren(returnFiber, currentFirstChild) {
    // Add the remaining children to a temporary map so that we can find them by
    // keys quickly. Implicit (null) keys get added to this set with their index
    // instead.
    var existingChildren = new Map();
    var existingChild = currentFirstChild;

    while (existingChild !== null) {
      if (existingChild.key !== null) {
        existingChildren.set(existingChild.key, existingChild);
      } else {
        existingChildren.set(existingChild.index, existingChild);
      }

      existingChild = existingChild.sibling;
    }

    return existingChildren;
  }

  function useFiber(fiber, pendingProps) {
    // We currently set sibling to null and index to 0 here because it is easy
    // to forget to do before returning it. E.g. for the single child case.
    var clone = createWorkInProgress(fiber, pendingProps);
    clone.index = 0;
    clone.sibling = null;
    return clone;
  }

  function placeChild(newFiber, lastPlacedIndex, newIndex) {
    newFiber.index = newIndex;

    if (!shouldTrackSideEffects) {
      // Noop.
      return lastPlacedIndex;
    }

    var current = newFiber.alternate;

    if (current !== null) {
      var oldIndex = current.index;

      if (oldIndex < lastPlacedIndex) {
        // This is a move.
        newFiber.flags = Placement;
        return lastPlacedIndex;
      } else {
        // This item can stay in place.
        return oldIndex;
      }
    } else {
      // This is an insertion.
      newFiber.flags = Placement;
      return lastPlacedIndex;
    }
  }

  function placeSingleChild(newFiber) {
    // This is simpler for the single child case. We only need to do a
    // placement for inserting new children.
    if (shouldTrackSideEffects && newFiber.alternate === null) {
      newFiber.flags = Placement;
    }

    return newFiber;
  }

  function updateTextNode(returnFiber, current, textContent, lanes) {
    if (current === null || current.tag !== HostText) {
      // Insert
      var created = createFiberFromText(textContent, returnFiber.mode, lanes);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, textContent);
      existing.return = returnFiber;
      return existing;
    }
  }

  function updateElement(returnFiber, current, element, lanes) {
    if (current !== null) {
      if (current.elementType === element.type || ( // Keep this check inline so it only runs on the false path:
       isCompatibleFamilyForHotReloading(current, element) )) {
        // Move based on index
        var existing = useFiber(current, element.props);
        existing.ref = coerceRef(returnFiber, current, element);
        existing.return = returnFiber;

        {
          existing._debugSource = element._source;
          existing._debugOwner = element._owner;
        }

        return existing;
      }
    } // Insert


    var created = createFiberFromElement(element, returnFiber.mode, lanes);
    created.ref = coerceRef(returnFiber, current, element);
    created.return = returnFiber;
    return created;
  }

  function updatePortal(returnFiber, current, portal, lanes) {
    if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
      // Insert
      var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, portal.children || []);
      existing.return = returnFiber;
      return existing;
    }
  }

  function updateFragment(returnFiber, current, fragment, lanes, key) {
    if (current === null || current.tag !== Fragment) {
      // Insert
      var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, fragment);
      existing.return = returnFiber;
      return existing;
    }
  }

  function createChild(returnFiber, newChild, lanes) {
    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys. If the previous node is implicitly keyed
      // we can continue to replace it without aborting even if it is not a text
      // node.
      var created = createFiberFromText('' + newChild, returnFiber.mode, lanes);
      created.return = returnFiber;
      return created;
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);

            _created.ref = coerceRef(returnFiber, null, newChild);
            _created.return = returnFiber;
            return _created;
          }

        case REACT_PORTAL_TYPE:
          {
            var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);

            _created2.return = returnFiber;
            return _created2;
          }
      }

      if (isArray$1(newChild) || getIteratorFn(newChild)) {
        var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);

        _created3.return = returnFiber;
        return _created3;
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType(returnFiber);
      }
    }

    return null;
  }

  function updateSlot(returnFiber, oldFiber, newChild, lanes) {
    // Update the fiber if the keys match, otherwise return null.
    var key = oldFiber !== null ? oldFiber.key : null;

    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys. If the previous node is implicitly keyed
      // we can continue to replace it without aborting even if it is not a text
      // node.
      if (key !== null) {
        return null;
      }

      return updateTextNode(returnFiber, oldFiber, '' + newChild, lanes);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            if (newChild.key === key) {
              if (newChild.type === REACT_FRAGMENT_TYPE) {
                return updateFragment(returnFiber, oldFiber, newChild.props.children, lanes, key);
              }

              return updateElement(returnFiber, oldFiber, newChild, lanes);
            } else {
              return null;
            }
          }

        case REACT_PORTAL_TYPE:
          {
            if (newChild.key === key) {
              return updatePortal(returnFiber, oldFiber, newChild, lanes);
            } else {
              return null;
            }
          }
      }

      if (isArray$1(newChild) || getIteratorFn(newChild)) {
        if (key !== null) {
          return null;
        }

        return updateFragment(returnFiber, oldFiber, newChild, lanes, null);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType(returnFiber);
      }
    }

    return null;
  }

  function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys, so we neither have to check the old nor
      // new node for the key. If both are text nodes, they match.
      var matchedFiber = existingChildren.get(newIdx) || null;
      return updateTextNode(returnFiber, matchedFiber, '' + newChild, lanes);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;

            if (newChild.type === REACT_FRAGMENT_TYPE) {
              return updateFragment(returnFiber, _matchedFiber, newChild.props.children, lanes, newChild.key);
            }

            return updateElement(returnFiber, _matchedFiber, newChild, lanes);
          }

        case REACT_PORTAL_TYPE:
          {
            var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;

            return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);
          }

      }

      if (isArray$1(newChild) || getIteratorFn(newChild)) {
        var _matchedFiber3 = existingChildren.get(newIdx) || null;

        return updateFragment(returnFiber, _matchedFiber3, newChild, lanes, null);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType(returnFiber);
      }
    }

    return null;
  }
  /**
   * Warns if there is a duplicate or missing key
   */


  function warnOnInvalidKey(child, knownKeys, returnFiber) {
    {
      if (typeof child !== 'object' || child === null) {
        return knownKeys;
      }

      switch (child.$$typeof) {
        case REACT_ELEMENT_TYPE:
        case REACT_PORTAL_TYPE:
          warnForMissingKey(child, returnFiber);
          var key = child.key;

          if (typeof key !== 'string') {
            break;
          }

          if (knownKeys === null) {
            knownKeys = new Set();
            knownKeys.add(key);
            break;
          }

          if (!knownKeys.has(key)) {
            knownKeys.add(key);
            break;
          }

          error('Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.', key);

          break;
      }
    }

    return knownKeys;
  }

  function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
    // This algorithm can't optimize by searching from both ends since we
    // don't have backpointers on fibers. I'm trying to see how far we can get
    // with that model. If it ends up not being worth the tradeoffs, we can
    // add it later.
    // Even with a two ended optimization, we'd want to optimize for the case
    // where there are few changes and brute force the comparison instead of
    // going for the Map. It'd like to explore hitting that path first in
    // forward-only mode and only go for the Map once we notice that we need
    // lots of look ahead. This doesn't handle reversal as well as two ended
    // search but that's unusual. Besides, for the two ended optimization to
    // work on Iterables, we'd need to copy the whole set.
    // In this first iteration, we'll just live with hitting the bad case
    // (adding everything to a Map) in for every insert/move.
    // If you change this code, also update reconcileChildrenIterator() which
    // uses the same algorithm.
    {
      // First, validate keys.
      var knownKeys = null;

      for (var i = 0; i < newChildren.length; i++) {
        var child = newChildren[i];
        knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
      }
    }

    var resultingFirstChild = null;
    var previousNewFiber = null;
    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;

    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }

      var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);

      if (newFiber === null) {
        // TODO: This breaks on empty slots like null children. That's
        // unfortunate because it triggers the slow path all the time. We need
        // a better way to communicate whether this was a miss or null,
        // boolean, undefined, etc.
        if (oldFiber === null) {
          oldFiber = nextOldFiber;
        }

        break;
      }

      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          // We matched the slot, but we didn't reuse the existing fiber, so we
          // need to delete the existing child.
          deleteChild(returnFiber, oldFiber);
        }
      }

      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);

      if (previousNewFiber === null) {
        // TODO: Move out of the loop. This only happens for the first run.
        resultingFirstChild = newFiber;
      } else {
        // TODO: Defer siblings if we're not at the right index for this slot.
        // I.e. if we had null values before, then we want to defer this
        // for each null value. However, we also don't want to call updateSlot
        // with the previous one.
        previousNewFiber.sibling = newFiber;
      }

      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (newIdx === newChildren.length) {
      // We've reached the end of the new children. We can delete the rest.
      deleteRemainingChildren(returnFiber, oldFiber);
      return resultingFirstChild;
    }

    if (oldFiber === null) {
      // If we don't have any more existing children we can choose a fast path
      // since the rest will all be insertions.
      for (; newIdx < newChildren.length; newIdx++) {
        var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);

        if (_newFiber === null) {
          continue;
        }

        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);

        if (previousNewFiber === null) {
          // TODO: Move out of the loop. This only happens for the first run.
          resultingFirstChild = _newFiber;
        } else {
          previousNewFiber.sibling = _newFiber;
        }

        previousNewFiber = _newFiber;
      }

      return resultingFirstChild;
    } // Add all children to a key map for quick lookups.


    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.

    for (; newIdx < newChildren.length; newIdx++) {
      var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);

      if (_newFiber2 !== null) {
        if (shouldTrackSideEffects) {
          if (_newFiber2.alternate !== null) {
            // The new fiber is a work in progress, but if there exists a
            // current, that means that we reused the fiber. We need to delete
            // it from the child list so that we don't add it to the deletion
            // list.
            existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
          }
        }

        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);

        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber2;
        } else {
          previousNewFiber.sibling = _newFiber2;
        }

        previousNewFiber = _newFiber2;
      }
    }

    if (shouldTrackSideEffects) {
      // Any existing children that weren't consumed above were deleted. We need
      // to add them to the deletion list.
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    return resultingFirstChild;
  }

  function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {
    // This is the same implementation as reconcileChildrenArray(),
    // but using the iterator instead.
    var iteratorFn = getIteratorFn(newChildrenIterable);

    if (!(typeof iteratorFn === 'function')) {
      {
        throw Error( "An object is not an iterable. This error is likely caused by a bug in React. Please file an issue." );
      }
    }

    {
      // We don't support rendering Generators because it's a mutation.
      // See https://github.com/facebook/react/issues/12995
      if (typeof Symbol === 'function' && // $FlowFixMe Flow doesn't know about toStringTag
      newChildrenIterable[Symbol.toStringTag] === 'Generator') {
        if (!didWarnAboutGenerators) {
          error('Using Generators as children is unsupported and will likely yield ' + 'unexpected results because enumerating a generator mutates it. ' + 'You may convert it to an array with `Array.from()` or the ' + '`[...spread]` operator before rendering. Keep in mind ' + 'you might need to polyfill these features for older browsers.');
        }

        didWarnAboutGenerators = true;
      } // Warn about using Maps as children


      if (newChildrenIterable.entries === iteratorFn) {
        if (!didWarnAboutMaps) {
          error('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');
        }

        didWarnAboutMaps = true;
      } // First, validate keys.
      // We'll get a different iterator later for the main pass.


      var _newChildren = iteratorFn.call(newChildrenIterable);

      if (_newChildren) {
        var knownKeys = null;

        var _step = _newChildren.next();

        for (; !_step.done; _step = _newChildren.next()) {
          var child = _step.value;
          knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
        }
      }
    }

    var newChildren = iteratorFn.call(newChildrenIterable);

    if (!(newChildren != null)) {
      {
        throw Error( "An iterable object provided no iterator." );
      }
    }

    var resultingFirstChild = null;
    var previousNewFiber = null;
    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;
    var step = newChildren.next();

    for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }

      var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);

      if (newFiber === null) {
        // TODO: This breaks on empty slots like null children. That's
        // unfortunate because it triggers the slow path all the time. We need
        // a better way to communicate whether this was a miss or null,
        // boolean, undefined, etc.
        if (oldFiber === null) {
          oldFiber = nextOldFiber;
        }

        break;
      }

      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          // We matched the slot, but we didn't reuse the existing fiber, so we
          // need to delete the existing child.
          deleteChild(returnFiber, oldFiber);
        }
      }

      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);

      if (previousNewFiber === null) {
        // TODO: Move out of the loop. This only happens for the first run.
        resultingFirstChild = newFiber;
      } else {
        // TODO: Defer siblings if we're not at the right index for this slot.
        // I.e. if we had null values before, then we want to defer this
        // for each null value. However, we also don't want to call updateSlot
        // with the previous one.
        previousNewFiber.sibling = newFiber;
      }

      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (step.done) {
      // We've reached the end of the new children. We can delete the rest.
      deleteRemainingChildren(returnFiber, oldFiber);
      return resultingFirstChild;
    }

    if (oldFiber === null) {
      // If we don't have any more existing children we can choose a fast path
      // since the rest will all be insertions.
      for (; !step.done; newIdx++, step = newChildren.next()) {
        var _newFiber3 = createChild(returnFiber, step.value, lanes);

        if (_newFiber3 === null) {
          continue;
        }

        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);

        if (previousNewFiber === null) {
          // TODO: Move out of the loop. This only happens for the first run.
          resultingFirstChild = _newFiber3;
        } else {
          previousNewFiber.sibling = _newFiber3;
        }

        previousNewFiber = _newFiber3;
      }

      return resultingFirstChild;
    } // Add all children to a key map for quick lookups.


    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.

    for (; !step.done; newIdx++, step = newChildren.next()) {
      var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);

      if (_newFiber4 !== null) {
        if (shouldTrackSideEffects) {
          if (_newFiber4.alternate !== null) {
            // The new fiber is a work in progress, but if there exists a
            // current, that means that we reused the fiber. We need to delete
            // it from the child list so that we don't add it to the deletion
            // list.
            existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
          }
        }

        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);

        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber4;
        } else {
          previousNewFiber.sibling = _newFiber4;
        }

        previousNewFiber = _newFiber4;
      }
    }

    if (shouldTrackSideEffects) {
      // Any existing children that weren't consumed above were deleted. We need
      // to add them to the deletion list.
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    return resultingFirstChild;
  }

  function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {
    // There's no need to check for keys on text nodes since we don't have a
    // way to define them.
    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
      // We already have an existing node so let's just update it and delete
      // the rest.
      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
      var existing = useFiber(currentFirstChild, textContent);
      existing.return = returnFiber;
      return existing;
    } // The existing first child is not a text node so we need to create one
    // and delete the existing ones.


    deleteRemainingChildren(returnFiber, currentFirstChild);
    var created = createFiberFromText(textContent, returnFiber.mode, lanes);
    created.return = returnFiber;
    return created;
  }

  function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {
    var key = element.key;
    var child = currentFirstChild;

    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        switch (child.tag) {
          case Fragment:
            {
              if (element.type === REACT_FRAGMENT_TYPE) {
                deleteRemainingChildren(returnFiber, child.sibling);
                var existing = useFiber(child, element.props.children);
                existing.return = returnFiber;

                {
                  existing._debugSource = element._source;
                  existing._debugOwner = element._owner;
                }

                return existing;
              }

              break;
            }

          case Block:

          // We intentionally fallthrough here if enableBlocksAPI is not on.
          // eslint-disable-next-lined no-fallthrough

          default:
            {
              if (child.elementType === element.type || ( // Keep this check inline so it only runs on the false path:
               isCompatibleFamilyForHotReloading(child, element) )) {
                deleteRemainingChildren(returnFiber, child.sibling);

                var _existing3 = useFiber(child, element.props);

                _existing3.ref = coerceRef(returnFiber, child, element);
                _existing3.return = returnFiber;

                {
                  _existing3._debugSource = element._source;
                  _existing3._debugOwner = element._owner;
                }

                return _existing3;
              }

              break;
            }
        } // Didn't match.


        deleteRemainingChildren(returnFiber, child);
        break;
      } else {
        deleteChild(returnFiber, child);
      }

      child = child.sibling;
    }

    if (element.type === REACT_FRAGMENT_TYPE) {
      var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);
      created.return = returnFiber;
      return created;
    } else {
      var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);

      _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
      _created4.return = returnFiber;
      return _created4;
    }
  }

  function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {
    var key = portal.key;
    var child = currentFirstChild;

    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, portal.children || []);
          existing.return = returnFiber;
          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }

      child = child.sibling;
    }

    var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
    created.return = returnFiber;
    return created;
  } // This API will tag the children with the side-effect of the reconciliation
  // itself. They will be added to the side-effect list as we pass through the
  // children and the parent.


  function reconcileChildFibers(returnFiber, currentFirstChild, newChild, lanes) {
    // This function is not recursive.
    // If the top level item is an array, we treat it as a set of children,
    // not as a fragment. Nested arrays on the other hand will be treated as
    // fragment nodes. Recursion happens at the normal flow.
    // Handle top level unkeyed fragments as if they were arrays.
    // This leads to an ambiguity between <>{[...]}</> and <>...</>.
    // We treat the ambiguous cases above the same.
    var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;

    if (isUnkeyedTopLevelFragment) {
      newChild = newChild.props.children;
    } // Handle object types


    var isObject = typeof newChild === 'object' && newChild !== null;

    if (isObject) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));

        case REACT_PORTAL_TYPE:
          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));

      }
    }

    if (typeof newChild === 'string' || typeof newChild === 'number') {
      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, lanes));
    }

    if (isArray$1(newChild)) {
      return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);
    }

    if (getIteratorFn(newChild)) {
      return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);
    }

    if (isObject) {
      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType(returnFiber);
      }
    }

    if (typeof newChild === 'undefined' && !isUnkeyedTopLevelFragment) {
      // If the new child is undefined, and the return fiber is a composite
      // component, throw an error. If Fiber return types are disabled,
      // we already threw above.
      switch (returnFiber.tag) {
        case ClassComponent:
          {
            {
              var instance = returnFiber.stateNode;

              if (instance.render._isMockFunction) {
                // We allow auto-mocks to proceed as if they're returning null.
                break;
              }
            }
          }
        // Intentionally fall through to the next case, which handles both
        // functions and classes
        // eslint-disable-next-lined no-fallthrough

        case Block:
        case FunctionComponent:
        case ForwardRef:
        case SimpleMemoComponent:
          {
            {
              {
                throw Error( (getComponentName(returnFiber.type) || 'Component') + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null." );
              }
            }
          }
      }
    } // Remaining cases are all treated as empty.


    return deleteRemainingChildren(returnFiber, currentFirstChild);
  }

  return reconcileChildFibers;
}

var reconcileChildFibers = ChildReconciler(true);
var mountChildFibers = ChildReconciler(false);
function cloneChildFibers(current, workInProgress) {
  if (!(current === null || workInProgress.child === current.child)) {
    {
      throw Error( "Resuming work not yet implemented." );
    }
  }

  if (workInProgress.child === null) {
    return;
  }

  var currentChild = workInProgress.child;
  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);
  workInProgress.child = newChild;
  newChild.return = workInProgress;

  while (currentChild.sibling !== null) {
    currentChild = currentChild.sibling;
    newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);
    newChild.return = workInProgress;
  }

  newChild.sibling = null;
} // Reset a workInProgress child set to prepare it for a second pass.

function resetChildFibers(workInProgress, lanes) {
  var child = workInProgress.child;

  while (child !== null) {
    resetWorkInProgress(child, lanes);
    child = child.sibling;
  }
}

var NO_CONTEXT = {};
var contextStackCursor$1 = createCursor(NO_CONTEXT);
var contextFiberStackCursor = createCursor(NO_CONTEXT);
var rootInstanceStackCursor = createCursor(NO_CONTEXT);

function requiredContext(c) {
  if (!(c !== NO_CONTEXT)) {
    {
      throw Error( "Expected host context to exist. This error is likely caused by a bug in React. Please file an issue." );
    }
  }

  return c;
}

function getRootHostContainer() {
  var rootInstance = requiredContext(rootInstanceStackCursor.current);
  return rootInstance;
}

function pushHostContainer(fiber, nextRootInstance) {
  // Push current root instance onto the stack;
  // This allows us to reset root when portals are popped.
  push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.
  // This enables us to pop only Fibers that provide unique contexts.

  push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.
  // However, we can't just call getRootHostContext() and push it because
  // we'd have a different number of entries on the stack depending on
  // whether getRootHostContext() throws somewhere in renderer code or not.
  // So we push an empty value first. This lets us safely unwind on errors.

  push(contextStackCursor$1, NO_CONTEXT, fiber);
  var nextRootContext = getRootHostContext(nextRootInstance); // Now that we know this function doesn't throw, replace it.

  pop(contextStackCursor$1, fiber);
  push(contextStackCursor$1, nextRootContext, fiber);
}

function popHostContainer(fiber) {
  pop(contextStackCursor$1, fiber);
  pop(contextFiberStackCursor, fiber);
  pop(rootInstanceStackCursor, fiber);
}

function getHostContext() {
  var context = requiredContext(contextStackCursor$1.current);
  return context;
}

function pushHostContext(fiber) {
  requiredContext(rootInstanceStackCursor.current);
  var context = requiredContext(contextStackCursor$1.current);
  var nextContext = getChildHostContext(context, fiber.type); // Don't push this Fiber's context unless it's unique.

  if (context === nextContext) {
    return;
  } // Track the context and the Fiber that provided it.
  // This enables us to pop only Fibers that provide unique contexts.


  push(contextFiberStackCursor, fiber, fiber);
  push(contextStackCursor$1, nextContext, fiber);
}

function popHostContext(fiber) {
  // Do not pop unless this Fiber provided the current context.
  // pushHostContext() only pushes Fibers that provide unique contexts.
  if (contextFiberStackCursor.current !== fiber) {
    return;
  }

  pop(contextStackCursor$1, fiber);
  pop(contextFiberStackCursor, fiber);
}

var DefaultSuspenseContext = 0; // The Suspense Context is split into two parts. The lower bits is
// inherited deeply down the subtree. The upper bits only affect
// this immediate suspense boundary and gets reset each new
// boundary or suspense list.

var SubtreeSuspenseContextMask = 1; // Subtree Flags:
// InvisibleParentSuspenseContext indicates that one of our parent Suspense
// boundaries is not currently showing visible main content.
// Either because it is already showing a fallback or is not mounted at all.
// We can use this to determine if it is desirable to trigger a fallback at
// the parent. If not, then we might need to trigger undesirable boundaries
// and/or suspend the commit to avoid hiding the parent content.

var InvisibleParentSuspenseContext = 1; // Shallow Flags:
// ForceSuspenseFallback can be used by SuspenseList to force newly added
// items into their fallback state during one of the render passes.

var ForceSuspenseFallback = 2;
var suspenseStackCursor = createCursor(DefaultSuspenseContext);
function hasSuspenseContext(parentContext, flag) {
  return (parentContext & flag) !== 0;
}
function setDefaultShallowSuspenseContext(parentContext) {
  return parentContext & SubtreeSuspenseContextMask;
}
function setShallowSuspenseContext(parentContext, shallowContext) {
  return parentContext & SubtreeSuspenseContextMask | shallowContext;
}
function addSubtreeSuspenseContext(parentContext, subtreeContext) {
  return parentContext | subtreeContext;
}
function pushSuspenseContext(fiber, newContext) {
  push(suspenseStackCursor, newContext, fiber);
}
function popSuspenseContext(fiber) {
  pop(suspenseStackCursor, fiber);
}

function shouldCaptureSuspense(workInProgress, hasInvisibleParent) {
  // If it was the primary children that just suspended, capture and render the
  // fallback. Otherwise, don't capture and bubble to the next boundary.
  var nextState = workInProgress.memoizedState;

  if (nextState !== null) {
    if (nextState.dehydrated !== null) {
      // A dehydrated boundary always captures.
      return true;
    }

    return false;
  }

  var props = workInProgress.memoizedProps; // In order to capture, the Suspense component must have a fallback prop.

  if (props.fallback === undefined) {
    return false;
  } // Regular boundaries always capture.


  if (props.unstable_avoidThisFallback !== true) {
    return true;
  } // If it's a boundary we should avoid, then we prefer to bubble up to the
  // parent boundary if it is currently invisible.


  if (hasInvisibleParent) {
    return false;
  } // If the parent is not able to handle it, we must handle it.


  return true;
}
function findFirstSuspended(row) {
  var node = row;

  while (node !== null) {
    if (node.tag === SuspenseComponent) {
      var state = node.memoizedState;

      if (state !== null) {
        var dehydrated = state.dehydrated;

        if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) {
          return node;
        }
      }
    } else if (node.tag === SuspenseListComponent && // revealOrder undefined can't be trusted because it don't
    // keep track of whether it suspended or not.
    node.memoizedProps.revealOrder !== undefined) {
      var didSuspend = (node.flags & DidCapture) !== NoFlags;

      if (didSuspend) {
        return node;
      }
    } else if (node.child !== null) {
      node.child.return = node;
      node = node.child;
      continue;
    }

    if (node === row) {
      return null;
    }

    while (node.sibling === null) {
      if (node.return === null || node.return === row) {
        return null;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  }

  return null;
}

var NoFlags$1 =
/*  */
0; // Represents whether effect should fire.

var HasEffect =
/* */
1; // Represents the phase in which the effect (not the clean-up) fires.

var Layout =
/*    */
2;
var Passive$1 =
/*   */
4;

// This may have been an insertion or a hydration.

var hydrationParentFiber = null;
var nextHydratableInstance = null;
var isHydrating = false;

function enterHydrationState(fiber) {

  var parentInstance = fiber.stateNode.containerInfo;
  nextHydratableInstance = getFirstHydratableChild(parentInstance);
  hydrationParentFiber = fiber;
  isHydrating = true;
  return true;
}

function deleteHydratableInstance(returnFiber, instance) {
  {
    switch (returnFiber.tag) {
      case HostRoot:
        didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);
        break;

      case HostComponent:
        didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);
        break;
    }
  }

  var childToDelete = createFiberFromHostInstanceForDeletion();
  childToDelete.stateNode = instance;
  childToDelete.return = returnFiber;
  childToDelete.flags = Deletion; // This might seem like it belongs on progressedFirstDeletion. However,
  // these children are not part of the reconciliation list of children.
  // Even if we abort and rereconcile the children, that will try to hydrate
  // again and the nodes are still in the host tree so these will be
  // recreated.

  if (returnFiber.lastEffect !== null) {
    returnFiber.lastEffect.nextEffect = childToDelete;
    returnFiber.lastEffect = childToDelete;
  } else {
    returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
  }
}

function insertNonHydratedInstance(returnFiber, fiber) {
  fiber.flags = fiber.flags & ~Hydrating | Placement;

  {
    switch (returnFiber.tag) {
      case HostRoot:
        {
          var parentContainer = returnFiber.stateNode.containerInfo;

          switch (fiber.tag) {
            case HostComponent:
              var type = fiber.type;
              fiber.pendingProps;
              didNotFindHydratableContainerInstance(parentContainer, type);
              break;

            case HostText:
              var text = fiber.pendingProps;
              didNotFindHydratableContainerTextInstance(parentContainer, text);
              break;
          }

          break;
        }

      case HostComponent:
        {
          var parentType = returnFiber.type;
          var parentProps = returnFiber.memoizedProps;
          var parentInstance = returnFiber.stateNode;

          switch (fiber.tag) {
            case HostComponent:
              var _type = fiber.type;
              fiber.pendingProps;
              didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type);
              break;

            case HostText:
              var _text = fiber.pendingProps;
              didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);
              break;

            case SuspenseComponent:
              didNotFindHydratableSuspenseInstance(parentType, parentProps);
              break;
          }

          break;
        }

      default:
        return;
    }
  }
}

function tryHydrate(fiber, nextInstance) {
  switch (fiber.tag) {
    case HostComponent:
      {
        var type = fiber.type;
        fiber.pendingProps;
        var instance = canHydrateInstance(nextInstance, type);

        if (instance !== null) {
          fiber.stateNode = instance;
          return true;
        }

        return false;
      }

    case HostText:
      {
        var text = fiber.pendingProps;
        var textInstance = canHydrateTextInstance(nextInstance, text);

        if (textInstance !== null) {
          fiber.stateNode = textInstance;
          return true;
        }

        return false;
      }

    case SuspenseComponent:
      {

        return false;
      }

    default:
      return false;
  }
}

function tryToClaimNextHydratableInstance(fiber) {
  if (!isHydrating) {
    return;
  }

  var nextInstance = nextHydratableInstance;

  if (!nextInstance) {
    // Nothing to hydrate. Make it an insertion.
    insertNonHydratedInstance(hydrationParentFiber, fiber);
    isHydrating = false;
    hydrationParentFiber = fiber;
    return;
  }

  var firstAttemptedInstance = nextInstance;

  if (!tryHydrate(fiber, nextInstance)) {
    // If we can't hydrate this instance let's try the next one.
    // We use this as a heuristic. It's based on intuition and not data so it
    // might be flawed or unnecessary.
    nextInstance = getNextHydratableSibling(firstAttemptedInstance);

    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
      // Nothing to hydrate. Make it an insertion.
      insertNonHydratedInstance(hydrationParentFiber, fiber);
      isHydrating = false;
      hydrationParentFiber = fiber;
      return;
    } // We matched the next one, we'll now assume that the first one was
    // superfluous and we'll delete it. Since we can't eagerly delete it
    // we'll have to schedule a deletion. To do that, this node needs a dummy
    // fiber associated with it.


    deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);
  }

  hydrationParentFiber = fiber;
  nextHydratableInstance = getFirstHydratableChild(nextInstance);
}

function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {

  var instance = fiber.stateNode;
  var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber); // TODO: Type this specific to this type of component.

  fiber.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
  // is a new ref we mark this as an update.

  if (updatePayload !== null) {
    return true;
  }

  return false;
}

function prepareToHydrateHostTextInstance(fiber) {

  var textInstance = fiber.stateNode;
  var textContent = fiber.memoizedProps;
  var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);

  {
    if (shouldUpdate) {
      // We assume that prepareToHydrateHostTextInstance is called in a context where the
      // hydration parent is the parent host component of this host text.
      var returnFiber = hydrationParentFiber;

      if (returnFiber !== null) {
        switch (returnFiber.tag) {
          case HostRoot:
            {
              var parentContainer = returnFiber.stateNode.containerInfo;
              didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);
              break;
            }

          case HostComponent:
            {
              var parentType = returnFiber.type;
              var parentProps = returnFiber.memoizedProps;
              var parentInstance = returnFiber.stateNode;
              didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);
              break;
            }
        }
      }
    }
  }

  return shouldUpdate;
}

function skipPastDehydratedSuspenseInstance(fiber) {

  var suspenseState = fiber.memoizedState;
  var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;

  if (!suspenseInstance) {
    {
      throw Error( "Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue." );
    }
  }

  return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
}

function popToNextHostParent(fiber) {
  var parent = fiber.return;

  while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent) {
    parent = parent.return;
  }

  hydrationParentFiber = parent;
}

function popHydrationState(fiber) {

  if (fiber !== hydrationParentFiber) {
    // We're deeper than the current hydration context, inside an inserted
    // tree.
    return false;
  }

  if (!isHydrating) {
    // If we're not currently hydrating but we're in a hydration context, then
    // we were an insertion and now need to pop up reenter hydration of our
    // siblings.
    popToNextHostParent(fiber);
    isHydrating = true;
    return false;
  }

  var type = fiber.type; // If we have any remaining hydratable nodes, we need to delete them now.
  // We only do this deeper than head and body since they tend to have random
  // other nodes in them. We also ignore components with pure text content in
  // side of them.
  // TODO: Better heuristic.

  if (fiber.tag !== HostComponent || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {
    var nextInstance = nextHydratableInstance;

    while (nextInstance) {
      deleteHydratableInstance(fiber, nextInstance);
      nextInstance = getNextHydratableSibling(nextInstance);
    }
  }

  popToNextHostParent(fiber);

  if (fiber.tag === SuspenseComponent) {
    nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);
  } else {
    nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
  }

  return true;
}

function resetHydrationState() {

  hydrationParentFiber = null;
  nextHydratableInstance = null;
  isHydrating = false;
}

function getIsHydrating() {
  return isHydrating;
}

// and should be reset before starting a new render.
// This tracks which mutable sources need to be reset after a render.

var workInProgressSources = [];
var rendererSigil$1;

{
  // Used to detect multiple renderers using the same mutable source.
  rendererSigil$1 = {};
}

function markSourceAsDirty(mutableSource) {
  workInProgressSources.push(mutableSource);
}
function resetWorkInProgressVersions() {
  for (var i = 0; i < workInProgressSources.length; i++) {
    var mutableSource = workInProgressSources[i];

    {
      mutableSource._workInProgressVersionPrimary = null;
    }
  }

  workInProgressSources.length = 0;
}
function getWorkInProgressVersion(mutableSource) {
  {
    return mutableSource._workInProgressVersionPrimary;
  }
}
function setWorkInProgressVersion(mutableSource, version) {
  {
    mutableSource._workInProgressVersionPrimary = version;
  }

  workInProgressSources.push(mutableSource);
}
function warnAboutMultipleRenderersDEV(mutableSource) {
  {
    {
      if (mutableSource._currentPrimaryRenderer == null) {
        mutableSource._currentPrimaryRenderer = rendererSigil$1;
      } else if (mutableSource._currentPrimaryRenderer !== rendererSigil$1) {
        error('Detected multiple renderers concurrently rendering the ' + 'same mutable source. This is currently unsupported.');
      }
    }
  }
} // Eager reads the version of a mutable source and stores it on the root.

var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,
    ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
var didWarnAboutMismatchedHooksForComponent;
var didWarnAboutUseOpaqueIdentifier;

{
  didWarnAboutUseOpaqueIdentifier = {};
  didWarnAboutMismatchedHooksForComponent = new Set();
}

// These are set right before calling the component.
var renderLanes = NoLanes; // The work-in-progress fiber. I've named it differently to distinguish it from
// the work-in-progress hook.

var currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The
// current hook list is the list that belongs to the current fiber. The
// work-in-progress hook list is a new list that will be added to the
// work-in-progress fiber.

var currentHook = null;
var workInProgressHook = null; // Whether an update was scheduled at any point during the render phase. This
// does not get reset if we do another render pass; only when we're completely
// finished evaluating this component. This is an optimization so we know
// whether we need to clear render phase updates after a throw.

var didScheduleRenderPhaseUpdate = false; // Where an update was scheduled only during the current render pass. This
// gets reset after each attempt.
// TODO: Maybe there's some way to consolidate this with
// `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.

var didScheduleRenderPhaseUpdateDuringThisPass = false;
var RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook

var currentHookNameInDev = null; // In DEV, this list ensures that hooks are called in the same order between renders.
// The list stores the order of hooks used during the initial render (mount).
// Subsequent renders (updates) reference this list.

var hookTypesDev = null;
var hookTypesUpdateIndexDev = -1; // In DEV, this tracks whether currently rendering component needs to ignore
// the dependencies for Hooks that need them (e.g. useEffect or useMemo).
// When true, such Hooks will always be "remounted". Only used during hot reload.

var ignorePreviousDependencies = false;

function mountHookTypesDev() {
  {
    var hookName = currentHookNameInDev;

    if (hookTypesDev === null) {
      hookTypesDev = [hookName];
    } else {
      hookTypesDev.push(hookName);
    }
  }
}

function updateHookTypesDev() {
  {
    var hookName = currentHookNameInDev;

    if (hookTypesDev !== null) {
      hookTypesUpdateIndexDev++;

      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {
        warnOnHookMismatchInDev(hookName);
      }
    }
  }
}

function checkDepsAreArrayDev(deps) {
  {
    if (deps !== undefined && deps !== null && !Array.isArray(deps)) {
      // Verify deps, but only on mount to avoid extra checks.
      // It's unlikely their type would change as usually you define them inline.
      error('%s received a final argument that is not an array (instead, received `%s`). When ' + 'specified, the final argument must be an array.', currentHookNameInDev, typeof deps);
    }
  }
}

function warnOnHookMismatchInDev(currentHookName) {
  {
    var componentName = getComponentName(currentlyRenderingFiber$1.type);

    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
      didWarnAboutMismatchedHooksForComponent.add(componentName);

      if (hookTypesDev !== null) {
        var table = '';
        var secondColumnStart = 30;

        for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {
          var oldHookName = hookTypesDev[i];
          var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;
          var row = i + 1 + ". " + oldHookName; // Extra space so second column lines up
          // lol @ IE not supporting String#repeat

          while (row.length < secondColumnStart) {
            row += ' ';
          }

          row += newHookName + '\n';
          table += row;
        }

        error('React has detected a change in the order of Hooks called by %s. ' + 'This will lead to bugs and errors if not fixed. ' + 'For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\n\n' + '   Previous render            Next render\n' + '   ------------------------------------------------------\n' + '%s' + '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n', componentName, table);
      }
    }
  }
}

function throwInvalidHookError() {
  {
    {
      throw Error( "Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem." );
    }
  }
}

function areHookInputsEqual(nextDeps, prevDeps) {
  {
    if (ignorePreviousDependencies) {
      // Only true when this component is being hot reloaded.
      return false;
    }
  }

  if (prevDeps === null) {
    {
      error('%s received a final argument during this render, but not during ' + 'the previous render. Even though the final argument is optional, ' + 'its type cannot change between renders.', currentHookNameInDev);
    }

    return false;
  }

  {
    // Don't bother comparing lengths in prod because these arrays should be
    // passed inline.
    if (nextDeps.length !== prevDeps.length) {
      error('The final argument passed to %s changed size between renders. The ' + 'order and size of this array must remain constant.\n\n' + 'Previous: %s\n' + 'Incoming: %s', currentHookNameInDev, "[" + prevDeps.join(', ') + "]", "[" + nextDeps.join(', ') + "]");
    }
  }

  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
    if (objectIs(nextDeps[i], prevDeps[i])) {
      continue;
    }

    return false;
  }

  return true;
}

function renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {
  renderLanes = nextRenderLanes;
  currentlyRenderingFiber$1 = workInProgress;

  {
    hookTypesDev = current !== null ? current._debugHookTypes : null;
    hookTypesUpdateIndexDev = -1; // Used for hot reloading:

    ignorePreviousDependencies = current !== null && current.type !== workInProgress.type;
  }

  workInProgress.memoizedState = null;
  workInProgress.updateQueue = null;
  workInProgress.lanes = NoLanes; // The following should have already been reset
  // currentHook = null;
  // workInProgressHook = null;
  // didScheduleRenderPhaseUpdate = false;
  // TODO Warn if no hooks are used at all during mount, then some are used during update.
  // Currently we will identify the update render as a mount because memoizedState === null.
  // This is tricky because it's valid for certain types of components (e.g. React.lazy)
  // Using memoizedState to differentiate between mount/update only works if at least one stateful hook is used.
  // Non-stateful hooks (e.g. context) don't get added to memoizedState,
  // so memoizedState would be null during updates and mounts.

  {
    if (current !== null && current.memoizedState !== null) {
      ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
    } else if (hookTypesDev !== null) {
      // This dispatcher handles an edge case where a component is updating,
      // but no stateful hooks have been used.
      // We want to match the production code behavior (which will use HooksDispatcherOnMount),
      // but with the extra DEV validation to ensure hooks ordering hasn't changed.
      // This dispatcher does that.
      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
    } else {
      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
    }
  }

  var children = Component(props, secondArg); // Check if there was a render phase update

  if (didScheduleRenderPhaseUpdateDuringThisPass) {
    // Keep rendering in a loop for as long as render phase updates continue to
    // be scheduled. Use a counter to prevent infinite loops.
    var numberOfReRenders = 0;

    do {
      didScheduleRenderPhaseUpdateDuringThisPass = false;

      if (!(numberOfReRenders < RE_RENDER_LIMIT)) {
        {
          throw Error( "Too many re-renders. React limits the number of renders to prevent an infinite loop." );
        }
      }

      numberOfReRenders += 1;

      {
        // Even when hot reloading, allow dependencies to stabilize
        // after first render to prevent infinite render phase updates.
        ignorePreviousDependencies = false;
      } // Start over from the beginning of the list


      currentHook = null;
      workInProgressHook = null;
      workInProgress.updateQueue = null;

      {
        // Also validate hook order for cascading updates.
        hookTypesUpdateIndexDev = -1;
      }

      ReactCurrentDispatcher$1.current =  HooksDispatcherOnRerenderInDEV ;
      children = Component(props, secondArg);
    } while (didScheduleRenderPhaseUpdateDuringThisPass);
  } // We can assume the previous dispatcher is always this one, since we set it
  // at the beginning of the render phase and there's no re-entrancy.


  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;

  {
    workInProgress._debugHookTypes = hookTypesDev;
  } // This check uses currentHook so that it works the same in DEV and prod bundles.
  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.


  var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;
  renderLanes = NoLanes;
  currentlyRenderingFiber$1 = null;
  currentHook = null;
  workInProgressHook = null;

  {
    currentHookNameInDev = null;
    hookTypesDev = null;
    hookTypesUpdateIndexDev = -1;
  }

  didScheduleRenderPhaseUpdate = false;

  if (!!didRenderTooFewHooks) {
    {
      throw Error( "Rendered fewer hooks than expected. This may be caused by an accidental early return statement." );
    }
  }

  return children;
}
function bailoutHooks(current, workInProgress, lanes) {
  workInProgress.updateQueue = current.updateQueue;
  workInProgress.flags &= ~(Passive | Update);
  current.lanes = removeLanes(current.lanes, lanes);
}
function resetHooksAfterThrow() {
  // We can assume the previous dispatcher is always this one, since we set it
  // at the beginning of the render phase and there's no re-entrancy.
  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;

  if (didScheduleRenderPhaseUpdate) {
    // There were render phase updates. These are only valid for this render
    // phase, which we are now aborting. Remove the updates from the queues so
    // they do not persist to the next render. Do not remove updates from hooks
    // that weren't processed.
    //
    // Only reset the updates from the queue if it has a clone. If it does
    // not have a clone, that means it wasn't processed, and the updates were
    // scheduled before we entered the render phase.
    var hook = currentlyRenderingFiber$1.memoizedState;

    while (hook !== null) {
      var queue = hook.queue;

      if (queue !== null) {
        queue.pending = null;
      }

      hook = hook.next;
    }

    didScheduleRenderPhaseUpdate = false;
  }

  renderLanes = NoLanes;
  currentlyRenderingFiber$1 = null;
  currentHook = null;
  workInProgressHook = null;

  {
    hookTypesDev = null;
    hookTypesUpdateIndexDev = -1;
    currentHookNameInDev = null;
    isUpdatingOpaqueValueInRenderPhase = false;
  }

  didScheduleRenderPhaseUpdateDuringThisPass = false;
}

function mountWorkInProgressHook() {
  var hook = {
    memoizedState: null,
    baseState: null,
    baseQueue: null,
    queue: null,
    next: null
  };

  if (workInProgressHook === null) {
    // This is the first hook in the list
    currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;
  } else {
    // Append to the end of the list
    workInProgressHook = workInProgressHook.next = hook;
  }

  return workInProgressHook;
}

function updateWorkInProgressHook() {
  // This function is used both for updates and for re-renders triggered by a
  // render phase update. It assumes there is either a current hook we can
  // clone, or a work-in-progress hook from a previous render pass that we can
  // use as a base. When we reach the end of the base list, we must switch to
  // the dispatcher used for mounts.
  var nextCurrentHook;

  if (currentHook === null) {
    var current = currentlyRenderingFiber$1.alternate;

    if (current !== null) {
      nextCurrentHook = current.memoizedState;
    } else {
      nextCurrentHook = null;
    }
  } else {
    nextCurrentHook = currentHook.next;
  }

  var nextWorkInProgressHook;

  if (workInProgressHook === null) {
    nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;
  } else {
    nextWorkInProgressHook = workInProgressHook.next;
  }

  if (nextWorkInProgressHook !== null) {
    // There's already a work-in-progress. Reuse it.
    workInProgressHook = nextWorkInProgressHook;
    nextWorkInProgressHook = workInProgressHook.next;
    currentHook = nextCurrentHook;
  } else {
    // Clone from the current hook.
    if (!(nextCurrentHook !== null)) {
      {
        throw Error( "Rendered more hooks than during the previous render." );
      }
    }

    currentHook = nextCurrentHook;
    var newHook = {
      memoizedState: currentHook.memoizedState,
      baseState: currentHook.baseState,
      baseQueue: currentHook.baseQueue,
      queue: currentHook.queue,
      next: null
    };

    if (workInProgressHook === null) {
      // This is the first hook in the list.
      currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;
    } else {
      // Append to the end of the list.
      workInProgressHook = workInProgressHook.next = newHook;
    }
  }

  return workInProgressHook;
}

function createFunctionComponentUpdateQueue() {
  return {
    lastEffect: null
  };
}

function basicStateReducer(state, action) {
  // $FlowFixMe: Flow doesn't like mixed types
  return typeof action === 'function' ? action(state) : action;
}

function mountReducer(reducer, initialArg, init) {
  var hook = mountWorkInProgressHook();
  var initialState;

  if (init !== undefined) {
    initialState = init(initialArg);
  } else {
    initialState = initialArg;
  }

  hook.memoizedState = hook.baseState = initialState;
  var queue = hook.queue = {
    pending: null,
    dispatch: null,
    lastRenderedReducer: reducer,
    lastRenderedState: initialState
  };
  var dispatch = queue.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, queue);
  return [hook.memoizedState, dispatch];
}

function updateReducer(reducer, initialArg, init) {
  var hook = updateWorkInProgressHook();
  var queue = hook.queue;

  if (!(queue !== null)) {
    {
      throw Error( "Should have a queue. This is likely a bug in React. Please file an issue." );
    }
  }

  queue.lastRenderedReducer = reducer;
  var current = currentHook; // The last rebase update that is NOT part of the base state.

  var baseQueue = current.baseQueue; // The last pending update that hasn't been processed yet.

  var pendingQueue = queue.pending;

  if (pendingQueue !== null) {
    // We have new updates that haven't been processed yet.
    // We'll add them to the base queue.
    if (baseQueue !== null) {
      // Merge the pending queue and the base queue.
      var baseFirst = baseQueue.next;
      var pendingFirst = pendingQueue.next;
      baseQueue.next = pendingFirst;
      pendingQueue.next = baseFirst;
    }

    {
      if (current.baseQueue !== baseQueue) {
        // Internal invariant that should never happen, but feasibly could in
        // the future if we implement resuming, or some form of that.
        error('Internal error: Expected work-in-progress queue to be a clone. ' + 'This is a bug in React.');
      }
    }

    current.baseQueue = baseQueue = pendingQueue;
    queue.pending = null;
  }

  if (baseQueue !== null) {
    // We have a queue to process.
    var first = baseQueue.next;
    var newState = current.baseState;
    var newBaseState = null;
    var newBaseQueueFirst = null;
    var newBaseQueueLast = null;
    var update = first;

    do {
      var updateLane = update.lane;

      if (!isSubsetOfLanes(renderLanes, updateLane)) {
        // Priority is insufficient. Skip this update. If this is the first
        // skipped update, the previous update/state is the new base
        // update/state.
        var clone = {
          lane: updateLane,
          action: update.action,
          eagerReducer: update.eagerReducer,
          eagerState: update.eagerState,
          next: null
        };

        if (newBaseQueueLast === null) {
          newBaseQueueFirst = newBaseQueueLast = clone;
          newBaseState = newState;
        } else {
          newBaseQueueLast = newBaseQueueLast.next = clone;
        } // Update the remaining priority in the queue.
        // TODO: Don't need to accumulate this. Instead, we can remove
        // renderLanes from the original lanes.


        currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);
        markSkippedUpdateLanes(updateLane);
      } else {
        // This update does have sufficient priority.
        if (newBaseQueueLast !== null) {
          var _clone = {
            // This update is going to be committed so we never want uncommit
            // it. Using NoLane works because 0 is a subset of all bitmasks, so
            // this will never be skipped by the check above.
            lane: NoLane,
            action: update.action,
            eagerReducer: update.eagerReducer,
            eagerState: update.eagerState,
            next: null
          };
          newBaseQueueLast = newBaseQueueLast.next = _clone;
        } // Process this update.


        if (update.eagerReducer === reducer) {
          // If this update was processed eagerly, and its reducer matches the
          // current reducer, we can use the eagerly computed state.
          newState = update.eagerState;
        } else {
          var action = update.action;
          newState = reducer(newState, action);
        }
      }

      update = update.next;
    } while (update !== null && update !== first);

    if (newBaseQueueLast === null) {
      newBaseState = newState;
    } else {
      newBaseQueueLast.next = newBaseQueueFirst;
    } // Mark that the fiber performed work, but only if the new state is
    // different from the current state.


    if (!objectIs(newState, hook.memoizedState)) {
      markWorkInProgressReceivedUpdate();
    }

    hook.memoizedState = newState;
    hook.baseState = newBaseState;
    hook.baseQueue = newBaseQueueLast;
    queue.lastRenderedState = newState;
  }

  var dispatch = queue.dispatch;
  return [hook.memoizedState, dispatch];
}

function rerenderReducer(reducer, initialArg, init) {
  var hook = updateWorkInProgressHook();
  var queue = hook.queue;

  if (!(queue !== null)) {
    {
      throw Error( "Should have a queue. This is likely a bug in React. Please file an issue." );
    }
  }

  queue.lastRenderedReducer = reducer; // This is a re-render. Apply the new render phase updates to the previous
  // work-in-progress hook.

  var dispatch = queue.dispatch;
  var lastRenderPhaseUpdate = queue.pending;
  var newState = hook.memoizedState;

  if (lastRenderPhaseUpdate !== null) {
    // The queue doesn't persist past this render pass.
    queue.pending = null;
    var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;
    var update = firstRenderPhaseUpdate;

    do {
      // Process this render phase update. We don't have to check the
      // priority because it will always be the same as the current
      // render's.
      var action = update.action;
      newState = reducer(newState, action);
      update = update.next;
    } while (update !== firstRenderPhaseUpdate); // Mark that the fiber performed work, but only if the new state is
    // different from the current state.


    if (!objectIs(newState, hook.memoizedState)) {
      markWorkInProgressReceivedUpdate();
    }

    hook.memoizedState = newState; // Don't persist the state accumulated from the render phase updates to
    // the base state unless the queue is empty.
    // TODO: Not sure if this is the desired semantics, but it's what we
    // do for gDSFP. I can't remember why.

    if (hook.baseQueue === null) {
      hook.baseState = newState;
    }

    queue.lastRenderedState = newState;
  }

  return [newState, dispatch];
}

function readFromUnsubcribedMutableSource(root, source, getSnapshot) {
  {
    warnAboutMultipleRenderersDEV(source);
  }

  var getVersion = source._getVersion;
  var version = getVersion(source._source); // Is it safe for this component to read from this source during the current render?

  var isSafeToReadFromSource = false; // Check the version first.
  // If this render has already been started with a specific version,
  // we can use it alone to determine if we can safely read from the source.

  var currentRenderVersion = getWorkInProgressVersion(source);

  if (currentRenderVersion !== null) {
    // It's safe to read if the store hasn't been mutated since the last time
    // we read something.
    isSafeToReadFromSource = currentRenderVersion === version;
  } else {
    // If there's no version, then this is the first time we've read from the
    // source during the current render pass, so we need to do a bit more work.
    // What we need to determine is if there are any hooks that already
    // subscribed to the source, and if so, whether there are any pending
    // mutations that haven't been synchronized yet.
    //
    // If there are no pending mutations, then `root.mutableReadLanes` will be
    // empty, and we know we can safely read.
    //
    // If there *are* pending mutations, we may still be able to safely read
    // if the currently rendering lanes are inclusive of the pending mutation
    // lanes, since that guarantees that the value we're about to read from
    // the source is consistent with the values that we read during the most
    // recent mutation.
    isSafeToReadFromSource = isSubsetOfLanes(renderLanes, root.mutableReadLanes);

    if (isSafeToReadFromSource) {
      // If it's safe to read from this source during the current render,
      // store the version in case other components read from it.
      // A changed version number will let those components know to throw and restart the render.
      setWorkInProgressVersion(source, version);
    }
  }

  if (isSafeToReadFromSource) {
    var snapshot = getSnapshot(source._source);

    {
      if (typeof snapshot === 'function') {
        error('Mutable source should not return a function as the snapshot value. ' + 'Functions may close over mutable values and cause tearing.');
      }
    }

    return snapshot;
  } else {
    // This handles the special case of a mutable source being shared between renderers.
    // In that case, if the source is mutated between the first and second renderer,
    // The second renderer don't know that it needs to reset the WIP version during unwind,
    // (because the hook only marks sources as dirty if it's written to their WIP version).
    // That would cause this tear check to throw again and eventually be visible to the user.
    // We can avoid this infinite loop by explicitly marking the source as dirty.
    //
    // This can lead to tearing in the first renderer when it resumes,
    // but there's nothing we can do about that (short of throwing here and refusing to continue the render).
    markSourceAsDirty(source);

    {
      {
        throw Error( "Cannot read from mutable source during the current render without tearing. This is a bug in React. Please file an issue." );
      }
    }
  }
}

function useMutableSource(hook, source, getSnapshot, subscribe) {
  var root = getWorkInProgressRoot();

  if (!(root !== null)) {
    {
      throw Error( "Expected a work-in-progress root. This is a bug in React. Please file an issue." );
    }
  }

  var getVersion = source._getVersion;
  var version = getVersion(source._source);
  var dispatcher = ReactCurrentDispatcher$1.current; // eslint-disable-next-line prefer-const

  var _dispatcher$useState = dispatcher.useState(function () {
    return readFromUnsubcribedMutableSource(root, source, getSnapshot);
  }),
      currentSnapshot = _dispatcher$useState[0],
      setSnapshot = _dispatcher$useState[1];

  var snapshot = currentSnapshot; // Grab a handle to the state hook as well.
  // We use it to clear the pending update queue if we have a new source.

  var stateHook = workInProgressHook;
  var memoizedState = hook.memoizedState;
  var refs = memoizedState.refs;
  var prevGetSnapshot = refs.getSnapshot;
  var prevSource = memoizedState.source;
  var prevSubscribe = memoizedState.subscribe;
  var fiber = currentlyRenderingFiber$1;
  hook.memoizedState = {
    refs: refs,
    source: source,
    subscribe: subscribe
  }; // Sync the values needed by our subscription handler after each commit.

  dispatcher.useEffect(function () {
    refs.getSnapshot = getSnapshot; // Normally the dispatch function for a state hook never changes,
    // but this hook recreates the queue in certain cases  to avoid updates from stale sources.
    // handleChange() below needs to reference the dispatch function without re-subscribing,
    // so we use a ref to ensure that it always has the latest version.

    refs.setSnapshot = setSnapshot; // Check for a possible change between when we last rendered now.

    var maybeNewVersion = getVersion(source._source);

    if (!objectIs(version, maybeNewVersion)) {
      var maybeNewSnapshot = getSnapshot(source._source);

      {
        if (typeof maybeNewSnapshot === 'function') {
          error('Mutable source should not return a function as the snapshot value. ' + 'Functions may close over mutable values and cause tearing.');
        }
      }

      if (!objectIs(snapshot, maybeNewSnapshot)) {
        setSnapshot(maybeNewSnapshot);
        var lane = requestUpdateLane(fiber);
        markRootMutableRead(root, lane);
      } // If the source mutated between render and now,
      // there may be state updates already scheduled from the old source.
      // Entangle the updates so that they render in the same batch.


      markRootEntangled(root, root.mutableReadLanes);
    }
  }, [getSnapshot, source, subscribe]); // If we got a new source or subscribe function, re-subscribe in a passive effect.

  dispatcher.useEffect(function () {
    var handleChange = function () {
      var latestGetSnapshot = refs.getSnapshot;
      var latestSetSnapshot = refs.setSnapshot;

      try {
        latestSetSnapshot(latestGetSnapshot(source._source)); // Record a pending mutable source update with the same expiration time.

        var lane = requestUpdateLane(fiber);
        markRootMutableRead(root, lane);
      } catch (error) {
        // A selector might throw after a source mutation.
        // e.g. it might try to read from a part of the store that no longer exists.
        // In this case we should still schedule an update with React.
        // Worst case the selector will throw again and then an error boundary will handle it.
        latestSetSnapshot(function () {
          throw error;
        });
      }
    };

    var unsubscribe = subscribe(source._source, handleChange);

    {
      if (typeof unsubscribe !== 'function') {
        error('Mutable source subscribe function must return an unsubscribe function.');
      }
    }

    return unsubscribe;
  }, [source, subscribe]); // If any of the inputs to useMutableSource change, reading is potentially unsafe.
  //
  // If either the source or the subscription have changed we can't can't trust the update queue.
  // Maybe the source changed in a way that the old subscription ignored but the new one depends on.
  //
  // If the getSnapshot function changed, we also shouldn't rely on the update queue.
  // It's possible that the underlying source was mutated between the when the last "change" event fired,
  // and when the current render (with the new getSnapshot function) is processed.
  //
  // In both cases, we need to throw away pending updates (since they are no longer relevant)
  // and treat reading from the source as we do in the mount case.

  if (!objectIs(prevGetSnapshot, getSnapshot) || !objectIs(prevSource, source) || !objectIs(prevSubscribe, subscribe)) {
    // Create a new queue and setState method,
    // So if there are interleaved updates, they get pushed to the older queue.
    // When this becomes current, the previous queue and dispatch method will be discarded,
    // including any interleaving updates that occur.
    var newQueue = {
      pending: null,
      dispatch: null,
      lastRenderedReducer: basicStateReducer,
      lastRenderedState: snapshot
    };
    newQueue.dispatch = setSnapshot = dispatchAction.bind(null, currentlyRenderingFiber$1, newQueue);
    stateHook.queue = newQueue;
    stateHook.baseQueue = null;
    snapshot = readFromUnsubcribedMutableSource(root, source, getSnapshot);
    stateHook.memoizedState = stateHook.baseState = snapshot;
  }

  return snapshot;
}

function mountMutableSource(source, getSnapshot, subscribe) {
  var hook = mountWorkInProgressHook();
  hook.memoizedState = {
    refs: {
      getSnapshot: getSnapshot,
      setSnapshot: null
    },
    source: source,
    subscribe: subscribe
  };
  return useMutableSource(hook, source, getSnapshot, subscribe);
}

function updateMutableSource(source, getSnapshot, subscribe) {
  var hook = updateWorkInProgressHook();
  return useMutableSource(hook, source, getSnapshot, subscribe);
}

function mountState(initialState) {
  var hook = mountWorkInProgressHook();

  if (typeof initialState === 'function') {
    // $FlowFixMe: Flow doesn't like mixed types
    initialState = initialState();
  }

  hook.memoizedState = hook.baseState = initialState;
  var queue = hook.queue = {
    pending: null,
    dispatch: null,
    lastRenderedReducer: basicStateReducer,
    lastRenderedState: initialState
  };
  var dispatch = queue.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, queue);
  return [hook.memoizedState, dispatch];
}

function updateState(initialState) {
  return updateReducer(basicStateReducer);
}

function rerenderState(initialState) {
  return rerenderReducer(basicStateReducer);
}

function pushEffect(tag, create, destroy, deps) {
  var effect = {
    tag: tag,
    create: create,
    destroy: destroy,
    deps: deps,
    // Circular
    next: null
  };
  var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;

  if (componentUpdateQueue === null) {
    componentUpdateQueue = createFunctionComponentUpdateQueue();
    currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
    componentUpdateQueue.lastEffect = effect.next = effect;
  } else {
    var lastEffect = componentUpdateQueue.lastEffect;

    if (lastEffect === null) {
      componentUpdateQueue.lastEffect = effect.next = effect;
    } else {
      var firstEffect = lastEffect.next;
      lastEffect.next = effect;
      effect.next = firstEffect;
      componentUpdateQueue.lastEffect = effect;
    }
  }

  return effect;
}

function mountRef(initialValue) {
  var hook = mountWorkInProgressHook();
  var ref = {
    current: initialValue
  };

  {
    Object.seal(ref);
  }

  hook.memoizedState = ref;
  return ref;
}

function updateRef(initialValue) {
  var hook = updateWorkInProgressHook();
  return hook.memoizedState;
}

function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
  var hook = mountWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  currentlyRenderingFiber$1.flags |= fiberFlags;
  hook.memoizedState = pushEffect(HasEffect | hookFlags, create, undefined, nextDeps);
}

function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
  var hook = updateWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var destroy = undefined;

  if (currentHook !== null) {
    var prevEffect = currentHook.memoizedState;
    destroy = prevEffect.destroy;

    if (nextDeps !== null) {
      var prevDeps = prevEffect.deps;

      if (areHookInputsEqual(nextDeps, prevDeps)) {
        pushEffect(hookFlags, create, destroy, nextDeps);
        return;
      }
    }
  }

  currentlyRenderingFiber$1.flags |= fiberFlags;
  hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);
}

function mountEffect(create, deps) {
  {
    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
    if ('undefined' !== typeof jest) {
      warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
    }
  }

  return mountEffectImpl(Update | Passive, Passive$1, create, deps);
}

function updateEffect(create, deps) {
  {
    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
    if ('undefined' !== typeof jest) {
      warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
    }
  }

  return updateEffectImpl(Update | Passive, Passive$1, create, deps);
}

function mountLayoutEffect(create, deps) {
  return mountEffectImpl(Update, Layout, create, deps);
}

function updateLayoutEffect(create, deps) {
  return updateEffectImpl(Update, Layout, create, deps);
}

function imperativeHandleEffect(create, ref) {
  if (typeof ref === 'function') {
    var refCallback = ref;

    var _inst = create();

    refCallback(_inst);
    return function () {
      refCallback(null);
    };
  } else if (ref !== null && ref !== undefined) {
    var refObject = ref;

    {
      if (!refObject.hasOwnProperty('current')) {
        error('Expected useImperativeHandle() first argument to either be a ' + 'ref callback or React.createRef() object. Instead received: %s.', 'an object with keys {' + Object.keys(refObject).join(', ') + '}');
      }
    }

    var _inst2 = create();

    refObject.current = _inst2;
    return function () {
      refObject.current = null;
    };
  }
}

function mountImperativeHandle(ref, create, deps) {
  {
    if (typeof create !== 'function') {
      error('Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null');
    }
  } // TODO: If deps are provided, should we skip comparing the ref itself?


  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;
  return mountEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
}

function updateImperativeHandle(ref, create, deps) {
  {
    if (typeof create !== 'function') {
      error('Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null');
    }
  } // TODO: If deps are provided, should we skip comparing the ref itself?


  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;
  return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
}

function mountDebugValue(value, formatterFn) {// This hook is normally a no-op.
  // The react-debug-hooks package injects its own implementation
  // so that e.g. DevTools can display custom hook values.
}

var updateDebugValue = mountDebugValue;

function mountCallback(callback, deps) {
  var hook = mountWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  hook.memoizedState = [callback, nextDeps];
  return callback;
}

function updateCallback(callback, deps) {
  var hook = updateWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var prevState = hook.memoizedState;

  if (prevState !== null) {
    if (nextDeps !== null) {
      var prevDeps = prevState[1];

      if (areHookInputsEqual(nextDeps, prevDeps)) {
        return prevState[0];
      }
    }
  }

  hook.memoizedState = [callback, nextDeps];
  return callback;
}

function mountMemo(nextCreate, deps) {
  var hook = mountWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var nextValue = nextCreate();
  hook.memoizedState = [nextValue, nextDeps];
  return nextValue;
}

function updateMemo(nextCreate, deps) {
  var hook = updateWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var prevState = hook.memoizedState;

  if (prevState !== null) {
    // Assume these are defined. If they're not, areHookInputsEqual will warn.
    if (nextDeps !== null) {
      var prevDeps = prevState[1];

      if (areHookInputsEqual(nextDeps, prevDeps)) {
        return prevState[0];
      }
    }
  }

  var nextValue = nextCreate();
  hook.memoizedState = [nextValue, nextDeps];
  return nextValue;
}

function mountDeferredValue(value) {
  var _mountState = mountState(value),
      prevValue = _mountState[0],
      setValue = _mountState[1];

  mountEffect(function () {
    var prevTransition = ReactCurrentBatchConfig$1.transition;
    ReactCurrentBatchConfig$1.transition = 1;

    try {
      setValue(value);
    } finally {
      ReactCurrentBatchConfig$1.transition = prevTransition;
    }
  }, [value]);
  return prevValue;
}

function updateDeferredValue(value) {
  var _updateState = updateState(),
      prevValue = _updateState[0],
      setValue = _updateState[1];

  updateEffect(function () {
    var prevTransition = ReactCurrentBatchConfig$1.transition;
    ReactCurrentBatchConfig$1.transition = 1;

    try {
      setValue(value);
    } finally {
      ReactCurrentBatchConfig$1.transition = prevTransition;
    }
  }, [value]);
  return prevValue;
}

function rerenderDeferredValue(value) {
  var _rerenderState = rerenderState(),
      prevValue = _rerenderState[0],
      setValue = _rerenderState[1];

  updateEffect(function () {
    var prevTransition = ReactCurrentBatchConfig$1.transition;
    ReactCurrentBatchConfig$1.transition = 1;

    try {
      setValue(value);
    } finally {
      ReactCurrentBatchConfig$1.transition = prevTransition;
    }
  }, [value]);
  return prevValue;
}

function startTransition(setPending, callback) {
  var priorityLevel = getCurrentPriorityLevel();

  {
    runWithPriority$1(priorityLevel < UserBlockingPriority$2 ? UserBlockingPriority$2 : priorityLevel, function () {
      setPending(true);
    });
    runWithPriority$1(priorityLevel > NormalPriority$1 ? NormalPriority$1 : priorityLevel, function () {
      var prevTransition = ReactCurrentBatchConfig$1.transition;
      ReactCurrentBatchConfig$1.transition = 1;

      try {
        setPending(false);
        callback();
      } finally {
        ReactCurrentBatchConfig$1.transition = prevTransition;
      }
    });
  }
}

function mountTransition() {
  var _mountState2 = mountState(false),
      isPending = _mountState2[0],
      setPending = _mountState2[1]; // The `start` method can be stored on a ref, since `setPending`
  // never changes.


  var start = startTransition.bind(null, setPending);
  mountRef(start);
  return [start, isPending];
}

function updateTransition() {
  var _updateState2 = updateState(),
      isPending = _updateState2[0];

  var startRef = updateRef();
  var start = startRef.current;
  return [start, isPending];
}

function rerenderTransition() {
  var _rerenderState2 = rerenderState(),
      isPending = _rerenderState2[0];

  var startRef = updateRef();
  var start = startRef.current;
  return [start, isPending];
}

var isUpdatingOpaqueValueInRenderPhase = false;
function getIsUpdatingOpaqueValueInRenderPhaseInDEV() {
  {
    return isUpdatingOpaqueValueInRenderPhase;
  }
}

function warnOnOpaqueIdentifierAccessInDEV(fiber) {
  {
    // TODO: Should warn in effects and callbacks, too
    var name = getComponentName(fiber.type) || 'Unknown';

    if (getIsRendering() && !didWarnAboutUseOpaqueIdentifier[name]) {
      error('The object passed back from useOpaqueIdentifier is meant to be ' + 'passed through to attributes only. Do not read the ' + 'value directly.');

      didWarnAboutUseOpaqueIdentifier[name] = true;
    }
  }
}

function mountOpaqueIdentifier() {
  var makeId =  makeClientIdInDEV.bind(null, warnOnOpaqueIdentifierAccessInDEV.bind(null, currentlyRenderingFiber$1)) ;

  if (getIsHydrating()) {
    var didUpgrade = false;
    var fiber = currentlyRenderingFiber$1;

    var readValue = function () {
      if (!didUpgrade) {
        // Only upgrade once. This works even inside the render phase because
        // the update is added to a shared queue, which outlasts the
        // in-progress render.
        didUpgrade = true;

        {
          isUpdatingOpaqueValueInRenderPhase = true;
          setId(makeId());
          isUpdatingOpaqueValueInRenderPhase = false;
          warnOnOpaqueIdentifierAccessInDEV(fiber);
        }
      }

      {
        {
          throw Error( "The object passed back from useOpaqueIdentifier is meant to be passed through to attributes only. Do not read the value directly." );
        }
      }
    };

    var id = makeOpaqueHydratingObject(readValue);
    var setId = mountState(id)[1];

    if ((currentlyRenderingFiber$1.mode & BlockingMode) === NoMode) {
      currentlyRenderingFiber$1.flags |= Update | Passive;
      pushEffect(HasEffect | Passive$1, function () {
        setId(makeId());
      }, undefined, null);
    }

    return id;
  } else {
    var _id = makeId();

    mountState(_id);
    return _id;
  }
}

function updateOpaqueIdentifier() {
  var id = updateState()[0];
  return id;
}

function rerenderOpaqueIdentifier() {
  var id = rerenderState()[0];
  return id;
}

function dispatchAction(fiber, queue, action) {
  {
    if (typeof arguments[3] === 'function') {
      error("State updates from the useState() and useReducer() Hooks don't support the " + 'second callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().');
    }
  }

  var eventTime = requestEventTime();
  var lane = requestUpdateLane(fiber);
  var update = {
    lane: lane,
    action: action,
    eagerReducer: null,
    eagerState: null,
    next: null
  }; // Append the update to the end of the list.

  var pending = queue.pending;

  if (pending === null) {
    // This is the first update. Create a circular list.
    update.next = update;
  } else {
    update.next = pending.next;
    pending.next = update;
  }

  queue.pending = update;
  var alternate = fiber.alternate;

  if (fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1) {
    // This is a render phase update. Stash it in a lazily-created map of
    // queue -> linked list of updates. After this render pass, we'll restart
    // and apply the stashed updates on top of the work-in-progress hook.
    didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;
  } else {
    if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {
      // The queue is currently empty, which means we can eagerly compute the
      // next state before entering the render phase. If the new state is the
      // same as the current state, we may be able to bail out entirely.
      var lastRenderedReducer = queue.lastRenderedReducer;

      if (lastRenderedReducer !== null) {
        var prevDispatcher;

        {
          prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
        }

        try {
          var currentState = queue.lastRenderedState;
          var eagerState = lastRenderedReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute
          // it, on the update object. If the reducer hasn't changed by the
          // time we enter the render phase, then the eager state can be used
          // without calling the reducer again.

          update.eagerReducer = lastRenderedReducer;
          update.eagerState = eagerState;

          if (objectIs(eagerState, currentState)) {
            // Fast path. We can bail out without scheduling React to re-render.
            // It's still possible that we'll need to rebase this update later,
            // if the component re-renders for a different reason and by that
            // time the reducer has changed.
            return;
          }
        } catch (error) {// Suppress the error. It will throw again in the render phase.
        } finally {
          {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        }
      }
    }

    {
      // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
      if ('undefined' !== typeof jest) {
        warnIfNotScopedWithMatchingAct(fiber);
        warnIfNotCurrentlyActingUpdatesInDev(fiber);
      }
    }

    scheduleUpdateOnFiber(fiber, lane, eventTime);
  }
}

var ContextOnlyDispatcher = {
  readContext: readContext,
  useCallback: throwInvalidHookError,
  useContext: throwInvalidHookError,
  useEffect: throwInvalidHookError,
  useImperativeHandle: throwInvalidHookError,
  useLayoutEffect: throwInvalidHookError,
  useMemo: throwInvalidHookError,
  useReducer: throwInvalidHookError,
  useRef: throwInvalidHookError,
  useState: throwInvalidHookError,
  useDebugValue: throwInvalidHookError,
  useDeferredValue: throwInvalidHookError,
  useTransition: throwInvalidHookError,
  useMutableSource: throwInvalidHookError,
  useOpaqueIdentifier: throwInvalidHookError,
  unstable_isNewReconciler: enableNewReconciler
};
var HooksDispatcherOnMountInDEV = null;
var HooksDispatcherOnMountWithHookTypesInDEV = null;
var HooksDispatcherOnUpdateInDEV = null;
var HooksDispatcherOnRerenderInDEV = null;
var InvalidNestedHooksDispatcherOnMountInDEV = null;
var InvalidNestedHooksDispatcherOnUpdateInDEV = null;
var InvalidNestedHooksDispatcherOnRerenderInDEV = null;

{
  var warnInvalidContextAccess = function () {
    error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');
  };

  var warnInvalidHookAccess = function () {
    error('Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' + 'You can only call Hooks at the top level of your React function. ' + 'For more information, see ' + 'https://reactjs.org/link/rules-of-hooks');
  };

  HooksDispatcherOnMountInDEV = {
    readContext: function (context, observedBits) {
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      mountHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      mountHookTypesDev();
      return mountRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      mountHookTypesDev();
      return mountDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      mountHookTypesDev();
      return mountDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      mountHookTypesDev();
      return mountTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      mountHookTypesDev();
      return mountMutableSource(source, getSnapshot, subscribe);
    },
    useOpaqueIdentifier: function () {
      currentHookNameInDev = 'useOpaqueIdentifier';
      mountHookTypesDev();
      return mountOpaqueIdentifier();
    },
    unstable_isNewReconciler: enableNewReconciler
  };
  HooksDispatcherOnMountWithHookTypesInDEV = {
    readContext: function (context, observedBits) {
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      updateHookTypesDev();
      return mountCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      updateHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      updateHookTypesDev();
      return mountEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      updateHookTypesDev();
      return mountImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      updateHookTypesDev();
      return mountLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      updateHookTypesDev();
      return mountRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      updateHookTypesDev();
      return mountDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      updateHookTypesDev();
      return mountDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      updateHookTypesDev();
      return mountTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      updateHookTypesDev();
      return mountMutableSource(source, getSnapshot, subscribe);
    },
    useOpaqueIdentifier: function () {
      currentHookNameInDev = 'useOpaqueIdentifier';
      updateHookTypesDev();
      return mountOpaqueIdentifier();
    },
    unstable_isNewReconciler: enableNewReconciler
  };
  HooksDispatcherOnUpdateInDEV = {
    readContext: function (context, observedBits) {
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      updateHookTypesDev();
      return updateCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      updateHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      updateHookTypesDev();
      return updateEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      updateHookTypesDev();
      return updateImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      updateHookTypesDev();
      return updateLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      updateHookTypesDev();
      return updateRef();
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      updateHookTypesDev();
      return updateDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      updateHookTypesDev();
      return updateDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      updateHookTypesDev();
      return updateTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      updateHookTypesDev();
      return updateMutableSource(source, getSnapshot, subscribe);
    },
    useOpaqueIdentifier: function () {
      currentHookNameInDev = 'useOpaqueIdentifier';
      updateHookTypesDev();
      return updateOpaqueIdentifier();
    },
    unstable_isNewReconciler: enableNewReconciler
  };
  HooksDispatcherOnRerenderInDEV = {
    readContext: function (context, observedBits) {
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      updateHookTypesDev();
      return updateCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      updateHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      updateHookTypesDev();
      return updateEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      updateHookTypesDev();
      return updateImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      updateHookTypesDev();
      return updateLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;

      try {
        return updateMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;

      try {
        return rerenderReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      updateHookTypesDev();
      return updateRef();
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;

      try {
        return rerenderState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      updateHookTypesDev();
      return updateDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      updateHookTypesDev();
      return rerenderDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      updateHookTypesDev();
      return rerenderTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      updateHookTypesDev();
      return updateMutableSource(source, getSnapshot, subscribe);
    },
    useOpaqueIdentifier: function () {
      currentHookNameInDev = 'useOpaqueIdentifier';
      updateHookTypesDev();
      return rerenderOpaqueIdentifier();
    },
    unstable_isNewReconciler: enableNewReconciler
  };
  InvalidNestedHooksDispatcherOnMountInDEV = {
    readContext: function (context, observedBits) {
      warnInvalidContextAccess();
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      warnInvalidHookAccess();
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      warnInvalidHookAccess();
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      warnInvalidHookAccess();
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountMutableSource(source, getSnapshot, subscribe);
    },
    useOpaqueIdentifier: function () {
      currentHookNameInDev = 'useOpaqueIdentifier';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountOpaqueIdentifier();
    },
    unstable_isNewReconciler: enableNewReconciler
  };
  InvalidNestedHooksDispatcherOnUpdateInDEV = {
    readContext: function (context, observedBits) {
      warnInvalidContextAccess();
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateRef();
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateMutableSource(source, getSnapshot, subscribe);
    },
    useOpaqueIdentifier: function () {
      currentHookNameInDev = 'useOpaqueIdentifier';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateOpaqueIdentifier();
    },
    unstable_isNewReconciler: enableNewReconciler
  };
  InvalidNestedHooksDispatcherOnRerenderInDEV = {
    readContext: function (context, observedBits) {
      warnInvalidContextAccess();
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return rerenderReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateRef();
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return rerenderState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return rerenderDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return rerenderTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateMutableSource(source, getSnapshot, subscribe);
    },
    useOpaqueIdentifier: function () {
      currentHookNameInDev = 'useOpaqueIdentifier';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return rerenderOpaqueIdentifier();
    },
    unstable_isNewReconciler: enableNewReconciler
  };
}

var now$1 = Scheduler.unstable_now;
var commitTime = 0;
var profilerStartTime = -1;

function getCommitTime() {
  return commitTime;
}

function recordCommitTime() {

  commitTime = now$1();
}

function startProfilerTimer(fiber) {

  profilerStartTime = now$1();

  if (fiber.actualStartTime < 0) {
    fiber.actualStartTime = now$1();
  }
}

function stopProfilerTimerIfRunning(fiber) {

  profilerStartTime = -1;
}

function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {

  if (profilerStartTime >= 0) {
    var elapsedTime = now$1() - profilerStartTime;
    fiber.actualDuration += elapsedTime;

    if (overrideBaseTime) {
      fiber.selfBaseDuration = elapsedTime;
    }

    profilerStartTime = -1;
  }
}

function transferActualDuration(fiber) {
  // Transfer time spent rendering these children so we don't lose it
  // after we rerender. This is used as a helper in special cases
  // where we should count the work of multiple passes.
  var child = fiber.child;

  while (child) {
    fiber.actualDuration += child.actualDuration;
    child = child.sibling;
  }
}

var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
var didReceiveUpdate = false;
var didWarnAboutBadClass;
var didWarnAboutModulePatternComponent;
var didWarnAboutContextTypeOnFunctionComponent;
var didWarnAboutGetDerivedStateOnFunctionComponent;
var didWarnAboutFunctionRefs;
var didWarnAboutReassigningProps;
var didWarnAboutRevealOrder;
var didWarnAboutTailOptions;

{
  didWarnAboutBadClass = {};
  didWarnAboutModulePatternComponent = {};
  didWarnAboutContextTypeOnFunctionComponent = {};
  didWarnAboutGetDerivedStateOnFunctionComponent = {};
  didWarnAboutFunctionRefs = {};
  didWarnAboutReassigningProps = false;
  didWarnAboutRevealOrder = {};
  didWarnAboutTailOptions = {};
}

function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {
  if (current === null) {
    // If this is a fresh new component that hasn't been rendered yet, we
    // won't update its child set by applying minimal side-effects. Instead,
    // we will add them all to the child before it gets rendered. That means
    // we can optimize this reconciliation pass by not tracking side-effects.
    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);
  } else {
    // If the current child is the same as the work in progress, it means that
    // we haven't yet started any work on these children. Therefore, we use
    // the clone algorithm to create a copy of all the current children.
    // If we had any progressed work already, that is invalid at this point so
    // let's throw it out.
    workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);
  }
}

function forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes) {
  // This function is fork of reconcileChildren. It's used in cases where we
  // want to reconcile without matching against the existing set. This has the
  // effect of all current children being unmounted; even if the type and key
  // are the same, the old child is unmounted and a new child is created.
  //
  // To do this, we're going to go through the reconcile algorithm twice. In
  // the first pass, we schedule a deletion for all the current children by
  // passing null.
  workInProgress.child = reconcileChildFibers(workInProgress, current.child, null, renderLanes); // In the second pass, we mount the new children. The trick here is that we
  // pass null in place of where we usually pass the current child set. This has
  // the effect of remounting all children regardless of whether their
  // identities match.

  workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);
}

function updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {
  // TODO: current can be non-null here even if the component
  // hasn't yet mounted. This happens after the first render suspends.
  // We'll need to figure out if this is fine or can cause issues.
  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var innerPropTypes = Component.propTypes;

      if (innerPropTypes) {
        checkPropTypes(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentName(Component));
      }
    }
  }

  var render = Component.render;
  var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent

  var nextChildren;
  prepareToReadContext(workInProgress, renderLanes);

  {
    ReactCurrentOwner$1.current = workInProgress;
    setIsRendering(true);
    nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);

    if ( workInProgress.mode & StrictMode) {
      disableLogs();

      try {
        nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);
      } finally {
        reenableLogs();
      }
    }

    setIsRendering(false);
  }

  if (current !== null && !didReceiveUpdate) {
    bailoutHooks(current, workInProgress, renderLanes);
    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
  } // React DevTools reads this flag.


  workInProgress.flags |= PerformedWork;
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}

function updateMemoComponent(current, workInProgress, Component, nextProps, updateLanes, renderLanes) {
  if (current === null) {
    var type = Component.type;

    if (isSimpleFunctionComponent(type) && Component.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
    Component.defaultProps === undefined) {
      var resolvedType = type;

      {
        resolvedType = resolveFunctionForHotReloading(type);
      } // If this is a plain function component without default props,
      // and with only the default shallow comparison, we upgrade it
      // to a SimpleMemoComponent to allow fast path updates.


      workInProgress.tag = SimpleMemoComponent;
      workInProgress.type = resolvedType;

      {
        validateFunctionComponentInDev(workInProgress, type);
      }

      return updateSimpleMemoComponent(current, workInProgress, resolvedType, nextProps, updateLanes, renderLanes);
    }

    {
      var innerPropTypes = type.propTypes;

      if (innerPropTypes) {
        // Inner memo component props aren't currently validated in createElement.
        // We could move it there, but we'd still need this for lazy code path.
        checkPropTypes(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentName(type));
      }
    }

    var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);
    child.ref = workInProgress.ref;
    child.return = workInProgress;
    workInProgress.child = child;
    return child;
  }

  {
    var _type = Component.type;
    var _innerPropTypes = _type.propTypes;

    if (_innerPropTypes) {
      // Inner memo component props aren't currently validated in createElement.
      // We could move it there, but we'd still need this for lazy code path.
      checkPropTypes(_innerPropTypes, nextProps, // Resolved props
      'prop', getComponentName(_type));
    }
  }

  var currentChild = current.child; // This is always exactly one child

  if (!includesSomeLane(updateLanes, renderLanes)) {
    // This will be the props with resolved defaultProps,
    // unlike current.memoizedProps which will be the unresolved ones.
    var prevProps = currentChild.memoizedProps; // Default to shallow comparison

    var compare = Component.compare;
    compare = compare !== null ? compare : shallowEqual;

    if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    }
  } // React DevTools reads this flag.


  workInProgress.flags |= PerformedWork;
  var newChild = createWorkInProgress(currentChild, nextProps);
  newChild.ref = workInProgress.ref;
  newChild.return = workInProgress;
  workInProgress.child = newChild;
  return newChild;
}

function updateSimpleMemoComponent(current, workInProgress, Component, nextProps, updateLanes, renderLanes) {
  // TODO: current can be non-null here even if the component
  // hasn't yet mounted. This happens when the inner render suspends.
  // We'll need to figure out if this is fine or can cause issues.
  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var outerMemoType = workInProgress.elementType;

      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
        // We warn when you define propTypes on lazy()
        // so let's just skip over it to find memo() outer wrapper.
        // Inner props for memo are validated later.
        var lazyComponent = outerMemoType;
        var payload = lazyComponent._payload;
        var init = lazyComponent._init;

        try {
          outerMemoType = init(payload);
        } catch (x) {
          outerMemoType = null;
        } // Inner propTypes will be validated in the function component path.


        var outerPropTypes = outerMemoType && outerMemoType.propTypes;

        if (outerPropTypes) {
          checkPropTypes(outerPropTypes, nextProps, // Resolved (SimpleMemoComponent has no defaultProps)
          'prop', getComponentName(outerMemoType));
        }
      }
    }
  }

  if (current !== null) {
    var prevProps = current.memoizedProps;

    if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref && ( // Prevent bailout if the implementation changed due to hot reload.
     workInProgress.type === current.type )) {
      didReceiveUpdate = false;

      if (!includesSomeLane(renderLanes, updateLanes)) {
        // The pending lanes were cleared at the beginning of beginWork. We're
        // about to bail out, but there might be other lanes that weren't
        // included in the current render. Usually, the priority level of the
        // remaining updates is accumlated during the evaluation of the
        // component (i.e. when processing the update queue). But since since
        // we're bailing out early *without* evaluating the component, we need
        // to account for it here, too. Reset to the value of the current fiber.
        // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,
        // because a MemoComponent fiber does not have hooks or an update queue;
        // rather, it wraps around an inner component, which may or may not
        // contains hooks.
        // TODO: Move the reset at in beginWork out of the common path so that
        // this is no longer necessary.
        workInProgress.lanes = current.lanes;
        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
      } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {
        // This is a special case that only exists for legacy mode.
        // See https://github.com/facebook/react/pull/19216.
        didReceiveUpdate = true;
      }
    }
  }

  return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);
}

function updateOffscreenComponent(current, workInProgress, renderLanes) {
  var nextProps = workInProgress.pendingProps;
  var nextChildren = nextProps.children;
  var prevState = current !== null ? current.memoizedState : null;

  if (nextProps.mode === 'hidden' || nextProps.mode === 'unstable-defer-without-hiding') {
    if ((workInProgress.mode & ConcurrentMode) === NoMode) {
      // In legacy sync mode, don't defer the subtree. Render it now.
      // TODO: Figure out what we should do in Blocking mode.
      var nextState = {
        baseLanes: NoLanes
      };
      workInProgress.memoizedState = nextState;
      pushRenderLanes(workInProgress, renderLanes);
    } else if (!includesSomeLane(renderLanes, OffscreenLane)) {
      var nextBaseLanes;

      if (prevState !== null) {
        var prevBaseLanes = prevState.baseLanes;
        nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);
      } else {
        nextBaseLanes = renderLanes;
      } // Schedule this fiber to re-render at offscreen priority. Then bailout.


      {
        markSpawnedWork(OffscreenLane);
      }

      workInProgress.lanes = workInProgress.childLanes = laneToLanes(OffscreenLane);
      var _nextState = {
        baseLanes: nextBaseLanes
      };
      workInProgress.memoizedState = _nextState; // We're about to bail out, but we need to push this to the stack anyway
      // to avoid a push/pop misalignment.

      pushRenderLanes(workInProgress, nextBaseLanes);
      return null;
    } else {
      // Rendering at offscreen, so we can clear the base lanes.
      var _nextState2 = {
        baseLanes: NoLanes
      };
      workInProgress.memoizedState = _nextState2; // Push the lanes that were skipped when we bailed out.

      var subtreeRenderLanes = prevState !== null ? prevState.baseLanes : renderLanes;
      pushRenderLanes(workInProgress, subtreeRenderLanes);
    }
  } else {
    var _subtreeRenderLanes;

    if (prevState !== null) {
      _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes); // Since we're not hidden anymore, reset the state

      workInProgress.memoizedState = null;
    } else {
      // We weren't previously hidden, and we still aren't, so there's nothing
      // special to do. Need to push to the stack regardless, though, to avoid
      // a push/pop misalignment.
      _subtreeRenderLanes = renderLanes;
    }

    pushRenderLanes(workInProgress, _subtreeRenderLanes);
  }

  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
} // Note: These happen to have identical begin phases, for now. We shouldn't hold
// ourselves to this constraint, though. If the behavior diverges, we should
// fork the function.


var updateLegacyHiddenComponent = updateOffscreenComponent;

function updateFragment(current, workInProgress, renderLanes) {
  var nextChildren = workInProgress.pendingProps;
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}

function updateMode(current, workInProgress, renderLanes) {
  var nextChildren = workInProgress.pendingProps.children;
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}

function updateProfiler(current, workInProgress, renderLanes) {
  {
    workInProgress.flags |= Update; // Reset effect durations for the next eventual effect phase.
    // These are reset during render to allow the DevTools commit hook a chance to read them,

    var stateNode = workInProgress.stateNode;
    stateNode.effectDuration = 0;
    stateNode.passiveEffectDuration = 0;
  }

  var nextProps = workInProgress.pendingProps;
  var nextChildren = nextProps.children;
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}

function markRef(current, workInProgress) {
  var ref = workInProgress.ref;

  if (current === null && ref !== null || current !== null && current.ref !== ref) {
    // Schedule a Ref effect
    workInProgress.flags |= Ref;
  }
}

function updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {
  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var innerPropTypes = Component.propTypes;

      if (innerPropTypes) {
        checkPropTypes(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentName(Component));
      }
    }
  }

  var context;

  {
    var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);
    context = getMaskedContext(workInProgress, unmaskedContext);
  }

  var nextChildren;
  prepareToReadContext(workInProgress, renderLanes);

  {
    ReactCurrentOwner$1.current = workInProgress;
    setIsRendering(true);
    nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);

    if ( workInProgress.mode & StrictMode) {
      disableLogs();

      try {
        nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);
      } finally {
        reenableLogs();
      }
    }

    setIsRendering(false);
  }

  if (current !== null && !didReceiveUpdate) {
    bailoutHooks(current, workInProgress, renderLanes);
    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
  } // React DevTools reads this flag.


  workInProgress.flags |= PerformedWork;
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}

function updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {
  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var innerPropTypes = Component.propTypes;

      if (innerPropTypes) {
        checkPropTypes(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentName(Component));
      }
    }
  } // Push context providers early to prevent context stack mismatches.
  // During mounting we don't know the child context yet as the instance doesn't exist.
  // We will invalidate the child context in finishClassComponent() right after rendering.


  var hasContext;

  if (isContextProvider(Component)) {
    hasContext = true;
    pushContextProvider(workInProgress);
  } else {
    hasContext = false;
  }

  prepareToReadContext(workInProgress, renderLanes);
  var instance = workInProgress.stateNode;
  var shouldUpdate;

  if (instance === null) {
    if (current !== null) {
      // A class component without an instance only mounts if it suspended
      // inside a non-concurrent tree, in an inconsistent state. We want to
      // treat it like a new mount, even though an empty version of it already
      // committed. Disconnect the alternate pointers.
      current.alternate = null;
      workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

      workInProgress.flags |= Placement;
    } // In the initial pass we might need to construct the instance.


    constructClassInstance(workInProgress, Component, nextProps);
    mountClassInstance(workInProgress, Component, nextProps, renderLanes);
    shouldUpdate = true;
  } else if (current === null) {
    // In a resume, we'll already have an instance we can reuse.
    shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderLanes);
  } else {
    shouldUpdate = updateClassInstance(current, workInProgress, Component, nextProps, renderLanes);
  }

  var nextUnitOfWork = finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes);

  {
    var inst = workInProgress.stateNode;

    if (shouldUpdate && inst.props !== nextProps) {
      if (!didWarnAboutReassigningProps) {
        error('It looks like %s is reassigning its own `this.props` while rendering. ' + 'This is not supported and can lead to confusing bugs.', getComponentName(workInProgress.type) || 'a component');
      }

      didWarnAboutReassigningProps = true;
    }
  }

  return nextUnitOfWork;
}

function finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes) {
  // Refs should update even if shouldComponentUpdate returns false
  markRef(current, workInProgress);
  var didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;

  if (!shouldUpdate && !didCaptureError) {
    // Context providers should defer to sCU for rendering
    if (hasContext) {
      invalidateContextProvider(workInProgress, Component, false);
    }

    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
  }

  var instance = workInProgress.stateNode; // Rerender

  ReactCurrentOwner$1.current = workInProgress;
  var nextChildren;

  if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {
    // If we captured an error, but getDerivedStateFromError is not defined,
    // unmount all the children. componentDidCatch will schedule an update to
    // re-render a fallback. This is temporary until we migrate everyone to
    // the new API.
    // TODO: Warn in a future release.
    nextChildren = null;

    {
      stopProfilerTimerIfRunning();
    }
  } else {
    {
      setIsRendering(true);
      nextChildren = instance.render();

      if ( workInProgress.mode & StrictMode) {
        disableLogs();

        try {
          instance.render();
        } finally {
          reenableLogs();
        }
      }

      setIsRendering(false);
    }
  } // React DevTools reads this flag.


  workInProgress.flags |= PerformedWork;

  if (current !== null && didCaptureError) {
    // If we're recovering from an error, reconcile without reusing any of
    // the existing children. Conceptually, the normal children and the children
    // that are shown on error are two different sets, so we shouldn't reuse
    // normal children even if their identities match.
    forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes);
  } else {
    reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  } // Memoize state using the values we just used to render.
  // TODO: Restructure so we never read values from the instance.


  workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.

  if (hasContext) {
    invalidateContextProvider(workInProgress, Component, true);
  }

  return workInProgress.child;
}

function pushHostRootContext(workInProgress) {
  var root = workInProgress.stateNode;

  if (root.pendingContext) {
    pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
  } else if (root.context) {
    // Should always be set
    pushTopLevelContextObject(workInProgress, root.context, false);
  }

  pushHostContainer(workInProgress, root.containerInfo);
}

function updateHostRoot(current, workInProgress, renderLanes) {
  pushHostRootContext(workInProgress);
  var updateQueue = workInProgress.updateQueue;

  if (!(current !== null && updateQueue !== null)) {
    {
      throw Error( "If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue." );
    }
  }

  var nextProps = workInProgress.pendingProps;
  var prevState = workInProgress.memoizedState;
  var prevChildren = prevState !== null ? prevState.element : null;
  cloneUpdateQueue(current, workInProgress);
  processUpdateQueue(workInProgress, nextProps, null, renderLanes);
  var nextState = workInProgress.memoizedState; // Caution: React DevTools currently depends on this property
  // being called "element".

  var nextChildren = nextState.element;

  if (nextChildren === prevChildren) {
    resetHydrationState();
    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
  }

  var root = workInProgress.stateNode;

  if (root.hydrate && enterHydrationState(workInProgress)) {
    // If we don't have any current children this might be the first pass.
    // We always try to hydrate. If this isn't a hydration pass there won't
    // be any children to hydrate which is effectively the same thing as
    // not hydrating.
    {
      var mutableSourceEagerHydrationData = root.mutableSourceEagerHydrationData;

      if (mutableSourceEagerHydrationData != null) {
        for (var i = 0; i < mutableSourceEagerHydrationData.length; i += 2) {
          var mutableSource = mutableSourceEagerHydrationData[i];
          var version = mutableSourceEagerHydrationData[i + 1];
          setWorkInProgressVersion(mutableSource, version);
        }
      }
    }

    var child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);
    workInProgress.child = child;
    var node = child;

    while (node) {
      // Mark each child as hydrating. This is a fast path to know whether this
      // tree is part of a hydrating tree. This is used to determine if a child
      // node has fully mounted yet, and for scheduling event replaying.
      // Conceptually this is similar to Placement in that a new subtree is
      // inserted into the React tree here. It just happens to not need DOM
      // mutations because it already exists.
      node.flags = node.flags & ~Placement | Hydrating;
      node = node.sibling;
    }
  } else {
    // Otherwise reset hydration state in case we aborted and resumed another
    // root.
    reconcileChildren(current, workInProgress, nextChildren, renderLanes);
    resetHydrationState();
  }

  return workInProgress.child;
}

function updateHostComponent(current, workInProgress, renderLanes) {
  pushHostContext(workInProgress);

  if (current === null) {
    tryToClaimNextHydratableInstance(workInProgress);
  }

  var type = workInProgress.type;
  var nextProps = workInProgress.pendingProps;
  var prevProps = current !== null ? current.memoizedProps : null;
  var nextChildren = nextProps.children;
  var isDirectTextChild = shouldSetTextContent(type, nextProps);

  if (isDirectTextChild) {
    // We special case a direct text child of a host node. This is a common
    // case. We won't handle it as a reified child. We will instead handle
    // this in the host environment that also has access to this prop. That
    // avoids allocating another HostText fiber and traversing it.
    nextChildren = null;
  } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {
    // If we're switching from a direct text child to a normal child, or to
    // empty, we need to schedule the text content to be reset.
    workInProgress.flags |= ContentReset;
  }

  markRef(current, workInProgress);
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}

function updateHostText(current, workInProgress) {
  if (current === null) {
    tryToClaimNextHydratableInstance(workInProgress);
  } // Nothing to do here. This is terminal. We'll do the completion step
  // immediately after.


  return null;
}

function mountLazyComponent(_current, workInProgress, elementType, updateLanes, renderLanes) {
  if (_current !== null) {
    // A lazy component only mounts if it suspended inside a non-
    // concurrent tree, in an inconsistent state. We want to treat it like
    // a new mount, even though an empty version of it already committed.
    // Disconnect the alternate pointers.
    _current.alternate = null;
    workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

    workInProgress.flags |= Placement;
  }

  var props = workInProgress.pendingProps;
  var lazyComponent = elementType;
  var payload = lazyComponent._payload;
  var init = lazyComponent._init;
  var Component = init(payload); // Store the unwrapped component in the type.

  workInProgress.type = Component;
  var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);
  var resolvedProps = resolveDefaultProps(Component, props);
  var child;

  switch (resolvedTag) {
    case FunctionComponent:
      {
        {
          validateFunctionComponentInDev(workInProgress, Component);
          workInProgress.type = Component = resolveFunctionForHotReloading(Component);
        }

        child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderLanes);
        return child;
      }

    case ClassComponent:
      {
        {
          workInProgress.type = Component = resolveClassForHotReloading(Component);
        }

        child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderLanes);
        return child;
      }

    case ForwardRef:
      {
        {
          workInProgress.type = Component = resolveForwardRefForHotReloading(Component);
        }

        child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderLanes);
        return child;
      }

    case MemoComponent:
      {
        {
          if (workInProgress.type !== workInProgress.elementType) {
            var outerPropTypes = Component.propTypes;

            if (outerPropTypes) {
              checkPropTypes(outerPropTypes, resolvedProps, // Resolved for outer only
              'prop', getComponentName(Component));
            }
          }
        }

        child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too
        updateLanes, renderLanes);
        return child;
      }
  }

  var hint = '';

  {
    if (Component !== null && typeof Component === 'object' && Component.$$typeof === REACT_LAZY_TYPE) {
      hint = ' Did you wrap a component in React.lazy() more than once?';
    }
  } // This message intentionally doesn't mention ForwardRef or MemoComponent
  // because the fact that it's a separate type of work is an
  // implementation detail.


  {
    {
      throw Error( "Element type is invalid. Received a promise that resolves to: " + Component + ". Lazy element type must resolve to a class or function." + hint );
    }
  }
}

function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderLanes) {
  if (_current !== null) {
    // An incomplete component only mounts if it suspended inside a non-
    // concurrent tree, in an inconsistent state. We want to treat it like
    // a new mount, even though an empty version of it already committed.
    // Disconnect the alternate pointers.
    _current.alternate = null;
    workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

    workInProgress.flags |= Placement;
  } // Promote the fiber to a class and try rendering again.


  workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`
  // Push context providers early to prevent context stack mismatches.
  // During mounting we don't know the child context yet as the instance doesn't exist.
  // We will invalidate the child context in finishClassComponent() right after rendering.

  var hasContext;

  if (isContextProvider(Component)) {
    hasContext = true;
    pushContextProvider(workInProgress);
  } else {
    hasContext = false;
  }

  prepareToReadContext(workInProgress, renderLanes);
  constructClassInstance(workInProgress, Component, nextProps);
  mountClassInstance(workInProgress, Component, nextProps, renderLanes);
  return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);
}

function mountIndeterminateComponent(_current, workInProgress, Component, renderLanes) {
  if (_current !== null) {
    // An indeterminate component only mounts if it suspended inside a non-
    // concurrent tree, in an inconsistent state. We want to treat it like
    // a new mount, even though an empty version of it already committed.
    // Disconnect the alternate pointers.
    _current.alternate = null;
    workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

    workInProgress.flags |= Placement;
  }

  var props = workInProgress.pendingProps;
  var context;

  {
    var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);
    context = getMaskedContext(workInProgress, unmaskedContext);
  }

  prepareToReadContext(workInProgress, renderLanes);
  var value;

  {
    if (Component.prototype && typeof Component.prototype.render === 'function') {
      var componentName = getComponentName(Component) || 'Unknown';

      if (!didWarnAboutBadClass[componentName]) {
        error("The <%s /> component appears to have a render method, but doesn't extend React.Component. " + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);

        didWarnAboutBadClass[componentName] = true;
      }
    }

    if (workInProgress.mode & StrictMode) {
      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
    }

    setIsRendering(true);
    ReactCurrentOwner$1.current = workInProgress;
    value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);
    setIsRendering(false);
  } // React DevTools reads this flag.


  workInProgress.flags |= PerformedWork;

  {
    // Support for module components is deprecated and is removed behind a flag.
    // Whether or not it would crash later, we want to show a good message in DEV first.
    if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
      var _componentName = getComponentName(Component) || 'Unknown';

      if (!didWarnAboutModulePatternComponent[_componentName]) {
        error('The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + "If you can't use a class try assigning the prototype on the function as a workaround. " + "`%s.prototype = React.Component.prototype`. Don't use an arrow function since it " + 'cannot be called with `new` by React.', _componentName, _componentName, _componentName);

        didWarnAboutModulePatternComponent[_componentName] = true;
      }
    }
  }

  if ( // Run these checks in production only if the flag is off.
  // Eventually we'll delete this branch altogether.
   typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
    {
      var _componentName2 = getComponentName(Component) || 'Unknown';

      if (!didWarnAboutModulePatternComponent[_componentName2]) {
        error('The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + "If you can't use a class try assigning the prototype on the function as a workaround. " + "`%s.prototype = React.Component.prototype`. Don't use an arrow function since it " + 'cannot be called with `new` by React.', _componentName2, _componentName2, _componentName2);

        didWarnAboutModulePatternComponent[_componentName2] = true;
      }
    } // Proceed under the assumption that this is a class instance


    workInProgress.tag = ClassComponent; // Throw out any hooks that were used.

    workInProgress.memoizedState = null;
    workInProgress.updateQueue = null; // Push context providers early to prevent context stack mismatches.
    // During mounting we don't know the child context yet as the instance doesn't exist.
    // We will invalidate the child context in finishClassComponent() right after rendering.

    var hasContext = false;

    if (isContextProvider(Component)) {
      hasContext = true;
      pushContextProvider(workInProgress);
    } else {
      hasContext = false;
    }

    workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;
    initializeUpdateQueue(workInProgress);
    var getDerivedStateFromProps = Component.getDerivedStateFromProps;

    if (typeof getDerivedStateFromProps === 'function') {
      applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, props);
    }

    adoptClassInstance(workInProgress, value);
    mountClassInstance(workInProgress, Component, props, renderLanes);
    return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);
  } else {
    // Proceed under the assumption that this is a function component
    workInProgress.tag = FunctionComponent;

    {

      if ( workInProgress.mode & StrictMode) {
        disableLogs();

        try {
          value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);
        } finally {
          reenableLogs();
        }
      }
    }

    reconcileChildren(null, workInProgress, value, renderLanes);

    {
      validateFunctionComponentInDev(workInProgress, Component);
    }

    return workInProgress.child;
  }
}

function validateFunctionComponentInDev(workInProgress, Component) {
  {
    if (Component) {
      if (Component.childContextTypes) {
        error('%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component');
      }
    }

    if (workInProgress.ref !== null) {
      var info = '';
      var ownerName = getCurrentFiberOwnerNameInDevOrNull();

      if (ownerName) {
        info += '\n\nCheck the render method of `' + ownerName + '`.';
      }

      var warningKey = ownerName || workInProgress._debugID || '';
      var debugSource = workInProgress._debugSource;

      if (debugSource) {
        warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
      }

      if (!didWarnAboutFunctionRefs[warningKey]) {
        didWarnAboutFunctionRefs[warningKey] = true;

        error('Function components cannot be given refs. ' + 'Attempts to access this ref will fail. ' + 'Did you mean to use React.forwardRef()?%s', info);
      }
    }

    if (typeof Component.getDerivedStateFromProps === 'function') {
      var _componentName3 = getComponentName(Component) || 'Unknown';

      if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
        error('%s: Function components do not support getDerivedStateFromProps.', _componentName3);

        didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
      }
    }

    if (typeof Component.contextType === 'object' && Component.contextType !== null) {
      var _componentName4 = getComponentName(Component) || 'Unknown';

      if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
        error('%s: Function components do not support contextType.', _componentName4);

        didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
      }
    }
  }
}

var SUSPENDED_MARKER = {
  dehydrated: null,
  retryLane: NoLane
};

function mountSuspenseOffscreenState(renderLanes) {
  return {
    baseLanes: renderLanes
  };
}

function updateSuspenseOffscreenState(prevOffscreenState, renderLanes) {
  return {
    baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes)
  };
} // TODO: Probably should inline this back


function shouldRemainOnFallback(suspenseContext, current, workInProgress, renderLanes) {
  // If we're already showing a fallback, there are cases where we need to
  // remain on that fallback regardless of whether the content has resolved.
  // For example, SuspenseList coordinates when nested content appears.
  if (current !== null) {
    var suspenseState = current.memoizedState;

    if (suspenseState === null) {
      // Currently showing content. Don't hide it, even if ForceSuspenseFallack
      // is true. More precise name might be "ForceRemainSuspenseFallback".
      // Note: This is a factoring smell. Can't remain on a fallback if there's
      // no fallback to remain on.
      return false;
    }
  } // Not currently showing content. Consult the Suspense context.


  return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
}

function getRemainingWorkInPrimaryTree(current, renderLanes) {
  // TODO: Should not remove render lanes that were pinged during this render
  return removeLanes(current.childLanes, renderLanes);
}

function updateSuspenseComponent(current, workInProgress, renderLanes) {
  var nextProps = workInProgress.pendingProps; // This is used by DevTools to force a boundary to suspend.

  {
    if (shouldSuspend(workInProgress)) {
      workInProgress.flags |= DidCapture;
    }
  }

  var suspenseContext = suspenseStackCursor.current;
  var showFallback = false;
  var didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;

  if (didSuspend || shouldRemainOnFallback(suspenseContext, current)) {
    // Something in this boundary's subtree already suspended. Switch to
    // rendering the fallback children.
    showFallback = true;
    workInProgress.flags &= ~DidCapture;
  } else {
    // Attempting the main content
    if (current === null || current.memoizedState !== null) {
      // This is a new mount or this boundary is already showing a fallback state.
      // Mark this subtree context as having at least one invisible parent that could
      // handle the fallback state.
      // Boundaries without fallbacks or should be avoided are not considered since
      // they cannot handle preferred fallback states.
      if (nextProps.fallback !== undefined && nextProps.unstable_avoidThisFallback !== true) {
        suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
      }
    }
  }

  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
  pushSuspenseContext(workInProgress, suspenseContext); // OK, the next part is confusing. We're about to reconcile the Suspense
  // boundary's children. This involves some custom reconcilation logic. Two
  // main reasons this is so complicated.
  //
  // First, Legacy Mode has different semantics for backwards compatibility. The
  // primary tree will commit in an inconsistent state, so when we do the
  // second pass to render the fallback, we do some exceedingly, uh, clever
  // hacks to make that not totally break. Like transferring effects and
  // deletions from hidden tree. In Concurrent Mode, it's much simpler,
  // because we bailout on the primary tree completely and leave it in its old
  // state, no effects. Same as what we do for Offscreen (except that
  // Offscreen doesn't have the first render pass).
  //
  // Second is hydration. During hydration, the Suspense fiber has a slightly
  // different layout, where the child points to a dehydrated fragment, which
  // contains the DOM rendered by the server.
  //
  // Third, even if you set all that aside, Suspense is like error boundaries in
  // that we first we try to render one tree, and if that fails, we render again
  // and switch to a different tree. Like a try/catch block. So we have to track
  // which branch we're currently rendering. Ideally we would model this using
  // a stack.

  if (current === null) {
    // Initial mount
    // If we're currently hydrating, try to hydrate this boundary.
    // But only if this has a fallback.
    if (nextProps.fallback !== undefined) {
      tryToClaimNextHydratableInstance(workInProgress); // This could've been a dehydrated suspense component.
    }

    var nextPrimaryChildren = nextProps.children;
    var nextFallbackChildren = nextProps.fallback;

    if (showFallback) {
      var fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);
      var primaryChildFragment = workInProgress.child;
      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);
      workInProgress.memoizedState = SUSPENDED_MARKER;
      return fallbackFragment;
    } else if (typeof nextProps.unstable_expectedLoadTime === 'number') {
      // This is a CPU-bound tree. Skip this tree and show a placeholder to
      // unblock the surrounding content. Then immediately retry after the
      // initial commit.
      var _fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);

      var _primaryChildFragment = workInProgress.child;
      _primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);
      workInProgress.memoizedState = SUSPENDED_MARKER; // Since nothing actually suspended, there will nothing to ping this to
      // get it started back up to attempt the next item. While in terms of
      // priority this work has the same priority as this current render, it's
      // not part of the same transition once the transition has committed. If
      // it's sync, we still want to yield so that it can be painted.
      // Conceptually, this is really the same as pinging. We can use any
      // RetryLane even if it's the one currently rendering since we're leaving
      // it behind on this node.

      workInProgress.lanes = SomeRetryLane;

      {
        markSpawnedWork(SomeRetryLane);
      }

      return _fallbackFragment;
    } else {
      return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren, renderLanes);
    }
  } else {
    // This is an update.
    // If the current fiber has a SuspenseState, that means it's already showing
    // a fallback.
    var prevState = current.memoizedState;

    if (prevState !== null) {

      if (showFallback) {
        var _nextFallbackChildren2 = nextProps.fallback;
        var _nextPrimaryChildren2 = nextProps.children;

        var _fallbackChildFragment = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren2, _nextFallbackChildren2, renderLanes);

        var _primaryChildFragment3 = workInProgress.child;
        var prevOffscreenState = current.child.memoizedState;
        _primaryChildFragment3.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);
        _primaryChildFragment3.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes);
        workInProgress.memoizedState = SUSPENDED_MARKER;
        return _fallbackChildFragment;
      } else {
        var _nextPrimaryChildren3 = nextProps.children;

        var _primaryChildFragment4 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren3, renderLanes);

        workInProgress.memoizedState = null;
        return _primaryChildFragment4;
      }
    } else {
      // The current tree is not already showing a fallback.
      if (showFallback) {
        // Timed out.
        var _nextFallbackChildren3 = nextProps.fallback;
        var _nextPrimaryChildren4 = nextProps.children;

        var _fallbackChildFragment2 = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren4, _nextFallbackChildren3, renderLanes);

        var _primaryChildFragment5 = workInProgress.child;
        var _prevOffscreenState = current.child.memoizedState;
        _primaryChildFragment5.memoizedState = _prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(_prevOffscreenState, renderLanes);
        _primaryChildFragment5.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes); // Skip the primary children, and continue working on the
        // fallback children.

        workInProgress.memoizedState = SUSPENDED_MARKER;
        return _fallbackChildFragment2;
      } else {
        // Still haven't timed out. Continue rendering the children, like we
        // normally do.
        var _nextPrimaryChildren5 = nextProps.children;

        var _primaryChildFragment6 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren5, renderLanes);

        workInProgress.memoizedState = null;
        return _primaryChildFragment6;
      }
    }
  }
}

function mountSuspensePrimaryChildren(workInProgress, primaryChildren, renderLanes) {
  var mode = workInProgress.mode;
  var primaryChildProps = {
    mode: 'visible',
    children: primaryChildren
  };
  var primaryChildFragment = createFiberFromOffscreen(primaryChildProps, mode, renderLanes, null);
  primaryChildFragment.return = workInProgress;
  workInProgress.child = primaryChildFragment;
  return primaryChildFragment;
}

function mountSuspenseFallbackChildren(workInProgress, primaryChildren, fallbackChildren, renderLanes) {
  var mode = workInProgress.mode;
  var progressedPrimaryFragment = workInProgress.child;
  var primaryChildProps = {
    mode: 'hidden',
    children: primaryChildren
  };
  var primaryChildFragment;
  var fallbackChildFragment;

  if ((mode & BlockingMode) === NoMode && progressedPrimaryFragment !== null) {
    // In legacy mode, we commit the primary tree as if it successfully
    // completed, even though it's in an inconsistent state.
    primaryChildFragment = progressedPrimaryFragment;
    primaryChildFragment.childLanes = NoLanes;
    primaryChildFragment.pendingProps = primaryChildProps;

    if ( workInProgress.mode & ProfileMode) {
      // Reset the durations from the first pass so they aren't included in the
      // final amounts. This seems counterintuitive, since we're intentionally
      // not measuring part of the render phase, but this makes it match what we
      // do in Concurrent Mode.
      primaryChildFragment.actualDuration = 0;
      primaryChildFragment.actualStartTime = -1;
      primaryChildFragment.selfBaseDuration = 0;
      primaryChildFragment.treeBaseDuration = 0;
    }

    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);
  } else {
    primaryChildFragment = createFiberFromOffscreen(primaryChildProps, mode, NoLanes, null);
    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);
  }

  primaryChildFragment.return = workInProgress;
  fallbackChildFragment.return = workInProgress;
  primaryChildFragment.sibling = fallbackChildFragment;
  workInProgress.child = primaryChildFragment;
  return fallbackChildFragment;
}

function createWorkInProgressOffscreenFiber(current, offscreenProps) {
  // The props argument to `createWorkInProgress` is `any` typed, so we use this
  // wrapper function to constrain it.
  return createWorkInProgress(current, offscreenProps);
}

function updateSuspensePrimaryChildren(current, workInProgress, primaryChildren, renderLanes) {
  var currentPrimaryChildFragment = current.child;
  var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
  var primaryChildFragment = createWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {
    mode: 'visible',
    children: primaryChildren
  });

  if ((workInProgress.mode & BlockingMode) === NoMode) {
    primaryChildFragment.lanes = renderLanes;
  }

  primaryChildFragment.return = workInProgress;
  primaryChildFragment.sibling = null;

  if (currentFallbackChildFragment !== null) {
    // Delete the fallback child fragment
    currentFallbackChildFragment.nextEffect = null;
    currentFallbackChildFragment.flags = Deletion;
    workInProgress.firstEffect = workInProgress.lastEffect = currentFallbackChildFragment;
  }

  workInProgress.child = primaryChildFragment;
  return primaryChildFragment;
}

function updateSuspenseFallbackChildren(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {
  var mode = workInProgress.mode;
  var currentPrimaryChildFragment = current.child;
  var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
  var primaryChildProps = {
    mode: 'hidden',
    children: primaryChildren
  };
  var primaryChildFragment;

  if ( // In legacy mode, we commit the primary tree as if it successfully
  // completed, even though it's in an inconsistent state.
  (mode & BlockingMode) === NoMode && // Make sure we're on the second pass, i.e. the primary child fragment was
  // already cloned. In legacy mode, the only case where this isn't true is
  // when DevTools forces us to display a fallback; we skip the first render
  // pass entirely and go straight to rendering the fallback. (In Concurrent
  // Mode, SuspenseList can also trigger this scenario, but this is a legacy-
  // only codepath.)
  workInProgress.child !== currentPrimaryChildFragment) {
    var progressedPrimaryFragment = workInProgress.child;
    primaryChildFragment = progressedPrimaryFragment;
    primaryChildFragment.childLanes = NoLanes;
    primaryChildFragment.pendingProps = primaryChildProps;

    if ( workInProgress.mode & ProfileMode) {
      // Reset the durations from the first pass so they aren't included in the
      // final amounts. This seems counterintuitive, since we're intentionally
      // not measuring part of the render phase, but this makes it match what we
      // do in Concurrent Mode.
      primaryChildFragment.actualDuration = 0;
      primaryChildFragment.actualStartTime = -1;
      primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;
      primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;
    } // The fallback fiber was added as a deletion effect during the first pass.
    // However, since we're going to remain on the fallback, we no longer want
    // to delete it. So we need to remove it from the list. Deletions are stored
    // on the same list as effects. We want to keep the effects from the primary
    // tree. So we copy the primary child fragment's effect list, which does not
    // include the fallback deletion effect.


    var progressedLastEffect = primaryChildFragment.lastEffect;

    if (progressedLastEffect !== null) {
      workInProgress.firstEffect = primaryChildFragment.firstEffect;
      workInProgress.lastEffect = progressedLastEffect;
      progressedLastEffect.nextEffect = null;
    } else {
      // TODO: Reset this somewhere else? Lol legacy mode is so weird.
      workInProgress.firstEffect = workInProgress.lastEffect = null;
    }
  } else {
    primaryChildFragment = createWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps);
  }

  var fallbackChildFragment;

  if (currentFallbackChildFragment !== null) {
    fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);
  } else {
    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null); // Needs a placement effect because the parent (the Suspense boundary) already
    // mounted but this is a new fiber.

    fallbackChildFragment.flags |= Placement;
  }

  fallbackChildFragment.return = workInProgress;
  primaryChildFragment.return = workInProgress;
  primaryChildFragment.sibling = fallbackChildFragment;
  workInProgress.child = primaryChildFragment;
  return fallbackChildFragment;
}

function scheduleWorkOnFiber(fiber, renderLanes) {
  fiber.lanes = mergeLanes(fiber.lanes, renderLanes);
  var alternate = fiber.alternate;

  if (alternate !== null) {
    alternate.lanes = mergeLanes(alternate.lanes, renderLanes);
  }

  scheduleWorkOnParentPath(fiber.return, renderLanes);
}

function propagateSuspenseContextChange(workInProgress, firstChild, renderLanes) {
  // Mark any Suspense boundaries with fallbacks as having work to do.
  // If they were previously forced into fallbacks, they may now be able
  // to unblock.
  var node = firstChild;

  while (node !== null) {
    if (node.tag === SuspenseComponent) {
      var state = node.memoizedState;

      if (state !== null) {
        scheduleWorkOnFiber(node, renderLanes);
      }
    } else if (node.tag === SuspenseListComponent) {
      // If the tail is hidden there might not be an Suspense boundaries
      // to schedule work on. In this case we have to schedule it on the
      // list itself.
      // We don't have to traverse to the children of the list since
      // the list will propagate the change when it rerenders.
      scheduleWorkOnFiber(node, renderLanes);
    } else if (node.child !== null) {
      node.child.return = node;
      node = node.child;
      continue;
    }

    if (node === workInProgress) {
      return;
    }

    while (node.sibling === null) {
      if (node.return === null || node.return === workInProgress) {
        return;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function findLastContentRow(firstChild) {
  // This is going to find the last row among these children that is already
  // showing content on the screen, as opposed to being in fallback state or
  // new. If a row has multiple Suspense boundaries, any of them being in the
  // fallback state, counts as the whole row being in a fallback state.
  // Note that the "rows" will be workInProgress, but any nested children
  // will still be current since we haven't rendered them yet. The mounted
  // order may not be the same as the new order. We use the new order.
  var row = firstChild;
  var lastContentRow = null;

  while (row !== null) {
    var currentRow = row.alternate; // New rows can't be content rows.

    if (currentRow !== null && findFirstSuspended(currentRow) === null) {
      lastContentRow = row;
    }

    row = row.sibling;
  }

  return lastContentRow;
}

function validateRevealOrder(revealOrder) {
  {
    if (revealOrder !== undefined && revealOrder !== 'forwards' && revealOrder !== 'backwards' && revealOrder !== 'together' && !didWarnAboutRevealOrder[revealOrder]) {
      didWarnAboutRevealOrder[revealOrder] = true;

      if (typeof revealOrder === 'string') {
        switch (revealOrder.toLowerCase()) {
          case 'together':
          case 'forwards':
          case 'backwards':
            {
              error('"%s" is not a valid value for revealOrder on <SuspenseList />. ' + 'Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());

              break;
            }

          case 'forward':
          case 'backward':
            {
              error('"%s" is not a valid value for revealOrder on <SuspenseList />. ' + 'React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());

              break;
            }

          default:
            error('"%s" is not a supported revealOrder on <SuspenseList />. ' + 'Did you mean "together", "forwards" or "backwards"?', revealOrder);

            break;
        }
      } else {
        error('%s is not a supported value for revealOrder on <SuspenseList />. ' + 'Did you mean "together", "forwards" or "backwards"?', revealOrder);
      }
    }
  }
}

function validateTailOptions(tailMode, revealOrder) {
  {
    if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {
      if (tailMode !== 'collapsed' && tailMode !== 'hidden') {
        didWarnAboutTailOptions[tailMode] = true;

        error('"%s" is not a supported value for tail on <SuspenseList />. ' + 'Did you mean "collapsed" or "hidden"?', tailMode);
      } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {
        didWarnAboutTailOptions[tailMode] = true;

        error('<SuspenseList tail="%s" /> is only valid if revealOrder is ' + '"forwards" or "backwards". ' + 'Did you mean to specify revealOrder="forwards"?', tailMode);
      }
    }
  }
}

function validateSuspenseListNestedChild(childSlot, index) {
  {
    var isArray = Array.isArray(childSlot);
    var isIterable = !isArray && typeof getIteratorFn(childSlot) === 'function';

    if (isArray || isIterable) {
      var type = isArray ? 'array' : 'iterable';

      error('A nested %s was passed to row #%s in <SuspenseList />. Wrap it in ' + 'an additional SuspenseList to configure its revealOrder: ' + '<SuspenseList revealOrder=...> ... ' + '<SuspenseList revealOrder=...>{%s}</SuspenseList> ... ' + '</SuspenseList>', type, index, type);

      return false;
    }
  }

  return true;
}

function validateSuspenseListChildren(children, revealOrder) {
  {
    if ((revealOrder === 'forwards' || revealOrder === 'backwards') && children !== undefined && children !== null && children !== false) {
      if (Array.isArray(children)) {
        for (var i = 0; i < children.length; i++) {
          if (!validateSuspenseListNestedChild(children[i], i)) {
            return;
          }
        }
      } else {
        var iteratorFn = getIteratorFn(children);

        if (typeof iteratorFn === 'function') {
          var childrenIterator = iteratorFn.call(children);

          if (childrenIterator) {
            var step = childrenIterator.next();
            var _i = 0;

            for (; !step.done; step = childrenIterator.next()) {
              if (!validateSuspenseListNestedChild(step.value, _i)) {
                return;
              }

              _i++;
            }
          }
        } else {
          error('A single row was passed to a <SuspenseList revealOrder="%s" />. ' + 'This is not useful since it needs multiple rows. ' + 'Did you mean to pass multiple children or an array?', revealOrder);
        }
      }
    }
  }
}

function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode, lastEffectBeforeRendering) {
  var renderState = workInProgress.memoizedState;

  if (renderState === null) {
    workInProgress.memoizedState = {
      isBackwards: isBackwards,
      rendering: null,
      renderingStartTime: 0,
      last: lastContentRow,
      tail: tail,
      tailMode: tailMode,
      lastEffect: lastEffectBeforeRendering
    };
  } else {
    // We can reuse the existing object from previous renders.
    renderState.isBackwards = isBackwards;
    renderState.rendering = null;
    renderState.renderingStartTime = 0;
    renderState.last = lastContentRow;
    renderState.tail = tail;
    renderState.tailMode = tailMode;
    renderState.lastEffect = lastEffectBeforeRendering;
  }
} // This can end up rendering this component multiple passes.
// The first pass splits the children fibers into two sets. A head and tail.
// We first render the head. If anything is in fallback state, we do another
// pass through beginWork to rerender all children (including the tail) with
// the force suspend context. If the first render didn't have anything in
// in fallback state. Then we render each row in the tail one-by-one.
// That happens in the completeWork phase without going back to beginWork.


function updateSuspenseListComponent(current, workInProgress, renderLanes) {
  var nextProps = workInProgress.pendingProps;
  var revealOrder = nextProps.revealOrder;
  var tailMode = nextProps.tail;
  var newChildren = nextProps.children;
  validateRevealOrder(revealOrder);
  validateTailOptions(tailMode, revealOrder);
  validateSuspenseListChildren(newChildren, revealOrder);
  reconcileChildren(current, workInProgress, newChildren, renderLanes);
  var suspenseContext = suspenseStackCursor.current;
  var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);

  if (shouldForceFallback) {
    suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
    workInProgress.flags |= DidCapture;
  } else {
    var didSuspendBefore = current !== null && (current.flags & DidCapture) !== NoFlags;

    if (didSuspendBefore) {
      // If we previously forced a fallback, we need to schedule work
      // on any nested boundaries to let them know to try to render
      // again. This is the same as context updating.
      propagateSuspenseContextChange(workInProgress, workInProgress.child, renderLanes);
    }

    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
  }

  pushSuspenseContext(workInProgress, suspenseContext);

  if ((workInProgress.mode & BlockingMode) === NoMode) {
    // In legacy mode, SuspenseList doesn't work so we just
    // use make it a noop by treating it as the default revealOrder.
    workInProgress.memoizedState = null;
  } else {
    switch (revealOrder) {
      case 'forwards':
        {
          var lastContentRow = findLastContentRow(workInProgress.child);
          var tail;

          if (lastContentRow === null) {
            // The whole list is part of the tail.
            // TODO: We could fast path by just rendering the tail now.
            tail = workInProgress.child;
            workInProgress.child = null;
          } else {
            // Disconnect the tail rows after the content row.
            // We're going to render them separately later.
            tail = lastContentRow.sibling;
            lastContentRow.sibling = null;
          }

          initSuspenseListRenderState(workInProgress, false, // isBackwards
          tail, lastContentRow, tailMode, workInProgress.lastEffect);
          break;
        }

      case 'backwards':
        {
          // We're going to find the first row that has existing content.
          // At the same time we're going to reverse the list of everything
          // we pass in the meantime. That's going to be our tail in reverse
          // order.
          var _tail = null;
          var row = workInProgress.child;
          workInProgress.child = null;

          while (row !== null) {
            var currentRow = row.alternate; // New rows can't be content rows.

            if (currentRow !== null && findFirstSuspended(currentRow) === null) {
              // This is the beginning of the main content.
              workInProgress.child = row;
              break;
            }

            var nextRow = row.sibling;
            row.sibling = _tail;
            _tail = row;
            row = nextRow;
          } // TODO: If workInProgress.child is null, we can continue on the tail immediately.


          initSuspenseListRenderState(workInProgress, true, // isBackwards
          _tail, null, // last
          tailMode, workInProgress.lastEffect);
          break;
        }

      case 'together':
        {
          initSuspenseListRenderState(workInProgress, false, // isBackwards
          null, // tail
          null, // last
          undefined, workInProgress.lastEffect);
          break;
        }

      default:
        {
          // The default reveal order is the same as not having
          // a boundary.
          workInProgress.memoizedState = null;
        }
    }
  }

  return workInProgress.child;
}

function updatePortalComponent(current, workInProgress, renderLanes) {
  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
  var nextChildren = workInProgress.pendingProps;

  if (current === null) {
    // Portals are special because we don't append the children during mount
    // but at commit. Therefore we need to track insertions which the normal
    // flow doesn't do during mount. This doesn't happen at the root because
    // the root always starts with a "current" with a null child.
    // TODO: Consider unifying this with how the root works.
    workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);
  } else {
    reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  }

  return workInProgress.child;
}

var hasWarnedAboutUsingNoValuePropOnContextProvider = false;

function updateContextProvider(current, workInProgress, renderLanes) {
  var providerType = workInProgress.type;
  var context = providerType._context;
  var newProps = workInProgress.pendingProps;
  var oldProps = workInProgress.memoizedProps;
  var newValue = newProps.value;

  {
    if (!('value' in newProps)) {
      if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {
        hasWarnedAboutUsingNoValuePropOnContextProvider = true;

        error('The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?');
      }
    }

    var providerPropTypes = workInProgress.type.propTypes;

    if (providerPropTypes) {
      checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider');
    }
  }

  pushProvider(workInProgress, newValue);

  if (oldProps !== null) {
    var oldValue = oldProps.value;
    var changedBits = calculateChangedBits(context, newValue, oldValue);

    if (changedBits === 0) {
      // No change. Bailout early if children are the same.
      if (oldProps.children === newProps.children && !hasContextChanged()) {
        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
      }
    } else {
      // The context value changed. Search for matching consumers and schedule
      // them to update.
      propagateContextChange(workInProgress, context, changedBits, renderLanes);
    }
  }

  var newChildren = newProps.children;
  reconcileChildren(current, workInProgress, newChildren, renderLanes);
  return workInProgress.child;
}

var hasWarnedAboutUsingContextAsConsumer = false;

function updateContextConsumer(current, workInProgress, renderLanes) {
  var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In
  // DEV mode, we create a separate object for Context.Consumer that acts
  // like a proxy to Context. This proxy object adds unnecessary code in PROD
  // so we use the old behaviour (Context.Consumer references Context) to
  // reduce size and overhead. The separate object references context via
  // a property called "_context", which also gives us the ability to check
  // in DEV mode if this property exists or not and warn if it does not.

  {
    if (context._context === undefined) {
      // This may be because it's a Context (rather than a Consumer).
      // Or it may be because it's older React where they're the same thing.
      // We only want to warn if we're sure it's a new React.
      if (context !== context.Consumer) {
        if (!hasWarnedAboutUsingContextAsConsumer) {
          hasWarnedAboutUsingContextAsConsumer = true;

          error('Rendering <Context> directly is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
        }
      }
    } else {
      context = context._context;
    }
  }

  var newProps = workInProgress.pendingProps;
  var render = newProps.children;

  {
    if (typeof render !== 'function') {
      error('A context consumer was rendered with multiple children, or a child ' + "that isn't a function. A context consumer expects a single child " + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.');
    }
  }

  prepareToReadContext(workInProgress, renderLanes);
  var newValue = readContext(context, newProps.unstable_observedBits);
  var newChildren;

  {
    ReactCurrentOwner$1.current = workInProgress;
    setIsRendering(true);
    newChildren = render(newValue);
    setIsRendering(false);
  } // React DevTools reads this flag.


  workInProgress.flags |= PerformedWork;
  reconcileChildren(current, workInProgress, newChildren, renderLanes);
  return workInProgress.child;
}

function markWorkInProgressReceivedUpdate() {
  didReceiveUpdate = true;
}

function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {
  if (current !== null) {
    // Reuse previous dependencies
    workInProgress.dependencies = current.dependencies;
  }

  {
    // Don't update "base" render times for bailouts.
    stopProfilerTimerIfRunning();
  }

  markSkippedUpdateLanes(workInProgress.lanes); // Check if the children have any pending work.

  if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {
    // The children don't have any work either. We can skip them.
    // TODO: Once we add back resuming, we should check if the children are
    // a work-in-progress set. If so, we need to transfer their effects.
    return null;
  } else {
    // This fiber doesn't have work, but its subtree does. Clone the child
    // fibers and continue.
    cloneChildFibers(current, workInProgress);
    return workInProgress.child;
  }
}

function remountFiber(current, oldWorkInProgress, newWorkInProgress) {
  {
    var returnFiber = oldWorkInProgress.return;

    if (returnFiber === null) {
      throw new Error('Cannot swap the root fiber.');
    } // Disconnect from the old current.
    // It will get deleted.


    current.alternate = null;
    oldWorkInProgress.alternate = null; // Connect to the new tree.

    newWorkInProgress.index = oldWorkInProgress.index;
    newWorkInProgress.sibling = oldWorkInProgress.sibling;
    newWorkInProgress.return = oldWorkInProgress.return;
    newWorkInProgress.ref = oldWorkInProgress.ref; // Replace the child/sibling pointers above it.

    if (oldWorkInProgress === returnFiber.child) {
      returnFiber.child = newWorkInProgress;
    } else {
      var prevSibling = returnFiber.child;

      if (prevSibling === null) {
        throw new Error('Expected parent to have a child.');
      }

      while (prevSibling.sibling !== oldWorkInProgress) {
        prevSibling = prevSibling.sibling;

        if (prevSibling === null) {
          throw new Error('Expected to find the previous sibling.');
        }
      }

      prevSibling.sibling = newWorkInProgress;
    } // Delete the old fiber and place the new one.
    // Since the old fiber is disconnected, we have to schedule it manually.


    var last = returnFiber.lastEffect;

    if (last !== null) {
      last.nextEffect = current;
      returnFiber.lastEffect = current;
    } else {
      returnFiber.firstEffect = returnFiber.lastEffect = current;
    }

    current.nextEffect = null;
    current.flags = Deletion;
    newWorkInProgress.flags |= Placement; // Restart work from the new fiber.

    return newWorkInProgress;
  }
}

function beginWork(current, workInProgress, renderLanes) {
  var updateLanes = workInProgress.lanes;

  {
    if (workInProgress._debugNeedsRemount && current !== null) {
      // This will restart the begin phase with a new fiber.
      return remountFiber(current, workInProgress, createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.lanes));
    }
  }

  if (current !== null) {
    var oldProps = current.memoizedProps;
    var newProps = workInProgress.pendingProps;

    if (oldProps !== newProps || hasContextChanged() || ( // Force a re-render if the implementation changed due to hot reload:
     workInProgress.type !== current.type )) {
      // If props or context changed, mark the fiber as having performed work.
      // This may be unset if the props are determined to be equal later (memo).
      didReceiveUpdate = true;
    } else if (!includesSomeLane(renderLanes, updateLanes)) {
      didReceiveUpdate = false; // This fiber does not have any pending work. Bailout without entering
      // the begin phase. There's still some bookkeeping we that needs to be done
      // in this optimized path, mostly pushing stuff onto the stack.

      switch (workInProgress.tag) {
        case HostRoot:
          pushHostRootContext(workInProgress);
          resetHydrationState();
          break;

        case HostComponent:
          pushHostContext(workInProgress);
          break;

        case ClassComponent:
          {
            var Component = workInProgress.type;

            if (isContextProvider(Component)) {
              pushContextProvider(workInProgress);
            }

            break;
          }

        case HostPortal:
          pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
          break;

        case ContextProvider:
          {
            var newValue = workInProgress.memoizedProps.value;
            pushProvider(workInProgress, newValue);
            break;
          }

        case Profiler:
          {
            // Profiler should only call onRender when one of its descendants actually rendered.
            var hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);

            if (hasChildWork) {
              workInProgress.flags |= Update;
            } // Reset effect durations for the next eventual effect phase.
            // These are reset during render to allow the DevTools commit hook a chance to read them,


            var stateNode = workInProgress.stateNode;
            stateNode.effectDuration = 0;
            stateNode.passiveEffectDuration = 0;
          }

          break;

        case SuspenseComponent:
          {
            var state = workInProgress.memoizedState;

            if (state !== null) {
              // whether to retry the primary children, or to skip over it and
              // go straight to the fallback. Check the priority of the primary
              // child fragment.


              var primaryChildFragment = workInProgress.child;
              var primaryChildLanes = primaryChildFragment.childLanes;

              if (includesSomeLane(renderLanes, primaryChildLanes)) {
                // The primary children have pending work. Use the normal path
                // to attempt to render the primary children again.
                return updateSuspenseComponent(current, workInProgress, renderLanes);
              } else {
                // The primary child fragment does not have pending work marked
                // on it
                pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // The primary children do not have pending work with sufficient
                // priority. Bailout.

                var child = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);

                if (child !== null) {
                  // The fallback children have pending work. Skip over the
                  // primary children and work on the fallback.
                  return child.sibling;
                } else {
                  return null;
                }
              }
            } else {
              pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
            }

            break;
          }

        case SuspenseListComponent:
          {
            var didSuspendBefore = (current.flags & DidCapture) !== NoFlags;

            var _hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);

            if (didSuspendBefore) {
              if (_hasChildWork) {
                // If something was in fallback state last time, and we have all the
                // same children then we're still in progressive loading state.
                // Something might get unblocked by state updates or retries in the
                // tree which will affect the tail. So we need to use the normal
                // path to compute the correct tail.
                return updateSuspenseListComponent(current, workInProgress, renderLanes);
              } // If none of the children had any work, that means that none of
              // them got retried so they'll still be blocked in the same way
              // as before. We can fast bail out.


              workInProgress.flags |= DidCapture;
            } // If nothing suspended before and we're rendering the same children,
            // then the tail doesn't matter. Anything new that suspends will work
            // in the "together" mode, so we can continue from the state we had.


            var renderState = workInProgress.memoizedState;

            if (renderState !== null) {
              // Reset to the "together" mode in case we've started a different
              // update in the past but didn't complete it.
              renderState.rendering = null;
              renderState.tail = null;
              renderState.lastEffect = null;
            }

            pushSuspenseContext(workInProgress, suspenseStackCursor.current);

            if (_hasChildWork) {
              break;
            } else {
              // If none of the children had any work, that means that none of
              // them got retried so they'll still be blocked in the same way
              // as before. We can fast bail out.
              return null;
            }
          }

        case OffscreenComponent:
        case LegacyHiddenComponent:
          {
            // Need to check if the tree still needs to be deferred. This is
            // almost identical to the logic used in the normal update path,
            // so we'll just enter that. The only difference is we'll bail out
            // at the next level instead of this one, because the child props
            // have not changed. Which is fine.
            // TODO: Probably should refactor `beginWork` to split the bailout
            // path from the normal path. I'm tempted to do a labeled break here
            // but I won't :)
            workInProgress.lanes = NoLanes;
            return updateOffscreenComponent(current, workInProgress, renderLanes);
          }
      }

      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    } else {
      if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {
        // This is a special case that only exists for legacy mode.
        // See https://github.com/facebook/react/pull/19216.
        didReceiveUpdate = true;
      } else {
        // An update was scheduled on this fiber, but there are no new props
        // nor legacy context. Set this to false. If an update queue or context
        // consumer produces a changed value, it will set this to true. Otherwise,
        // the component will assume the children have not changed and bail out.
        didReceiveUpdate = false;
      }
    }
  } else {
    didReceiveUpdate = false;
  } // Before entering the begin phase, clear pending update priority.
  // TODO: This assumes that we're about to evaluate the component and process
  // the update queue. However, there's an exception: SimpleMemoComponent
  // sometimes bails out later in the begin phase. This indicates that we should
  // move this assignment out of the common path and into each branch.


  workInProgress.lanes = NoLanes;

  switch (workInProgress.tag) {
    case IndeterminateComponent:
      {
        return mountIndeterminateComponent(current, workInProgress, workInProgress.type, renderLanes);
      }

    case LazyComponent:
      {
        var elementType = workInProgress.elementType;
        return mountLazyComponent(current, workInProgress, elementType, updateLanes, renderLanes);
      }

    case FunctionComponent:
      {
        var _Component = workInProgress.type;
        var unresolvedProps = workInProgress.pendingProps;
        var resolvedProps = workInProgress.elementType === _Component ? unresolvedProps : resolveDefaultProps(_Component, unresolvedProps);
        return updateFunctionComponent(current, workInProgress, _Component, resolvedProps, renderLanes);
      }

    case ClassComponent:
      {
        var _Component2 = workInProgress.type;
        var _unresolvedProps = workInProgress.pendingProps;

        var _resolvedProps = workInProgress.elementType === _Component2 ? _unresolvedProps : resolveDefaultProps(_Component2, _unresolvedProps);

        return updateClassComponent(current, workInProgress, _Component2, _resolvedProps, renderLanes);
      }

    case HostRoot:
      return updateHostRoot(current, workInProgress, renderLanes);

    case HostComponent:
      return updateHostComponent(current, workInProgress, renderLanes);

    case HostText:
      return updateHostText(current, workInProgress);

    case SuspenseComponent:
      return updateSuspenseComponent(current, workInProgress, renderLanes);

    case HostPortal:
      return updatePortalComponent(current, workInProgress, renderLanes);

    case ForwardRef:
      {
        var type = workInProgress.type;
        var _unresolvedProps2 = workInProgress.pendingProps;

        var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);

        return updateForwardRef(current, workInProgress, type, _resolvedProps2, renderLanes);
      }

    case Fragment:
      return updateFragment(current, workInProgress, renderLanes);

    case Mode:
      return updateMode(current, workInProgress, renderLanes);

    case Profiler:
      return updateProfiler(current, workInProgress, renderLanes);

    case ContextProvider:
      return updateContextProvider(current, workInProgress, renderLanes);

    case ContextConsumer:
      return updateContextConsumer(current, workInProgress, renderLanes);

    case MemoComponent:
      {
        var _type2 = workInProgress.type;
        var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.

        var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);

        {
          if (workInProgress.type !== workInProgress.elementType) {
            var outerPropTypes = _type2.propTypes;

            if (outerPropTypes) {
              checkPropTypes(outerPropTypes, _resolvedProps3, // Resolved for outer only
              'prop', getComponentName(_type2));
            }
          }
        }

        _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
        return updateMemoComponent(current, workInProgress, _type2, _resolvedProps3, updateLanes, renderLanes);
      }

    case SimpleMemoComponent:
      {
        return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, updateLanes, renderLanes);
      }

    case IncompleteClassComponent:
      {
        var _Component3 = workInProgress.type;
        var _unresolvedProps4 = workInProgress.pendingProps;

        var _resolvedProps4 = workInProgress.elementType === _Component3 ? _unresolvedProps4 : resolveDefaultProps(_Component3, _unresolvedProps4);

        return mountIncompleteClassComponent(current, workInProgress, _Component3, _resolvedProps4, renderLanes);
      }

    case SuspenseListComponent:
      {
        return updateSuspenseListComponent(current, workInProgress, renderLanes);
      }

    case FundamentalComponent:
      {

        break;
      }

    case ScopeComponent:
      {

        break;
      }

    case Block:
      {

        break;
      }

    case OffscreenComponent:
      {
        return updateOffscreenComponent(current, workInProgress, renderLanes);
      }

    case LegacyHiddenComponent:
      {
        return updateLegacyHiddenComponent(current, workInProgress, renderLanes);
      }
  }

  {
    {
      throw Error( "Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue." );
    }
  }
}

function markUpdate(workInProgress) {
  // Tag the fiber with an update effect. This turns a Placement into
  // a PlacementAndUpdate.
  workInProgress.flags |= Update;
}

function markRef$1(workInProgress) {
  workInProgress.flags |= Ref;
}

var appendAllChildren;
var updateHostContainer;
var updateHostComponent$1;
var updateHostText$1;

{
  // Mutation mode
  appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {
    // We only have the top Fiber that was created but we need recurse down its
    // children to find all the terminal nodes.
    var node = workInProgress.child;

    while (node !== null) {
      if (node.tag === HostComponent || node.tag === HostText) {
        appendInitialChild(parent, node.stateNode);
      } else if (node.tag === HostPortal) ; else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === workInProgress) {
        return;
      }

      while (node.sibling === null) {
        if (node.return === null || node.return === workInProgress) {
          return;
        }

        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  };

  updateHostContainer = function (workInProgress) {// Noop
  };

  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {
    // If we have an alternate, that means this is an update and we need to
    // schedule a side-effect to do the updates.
    var oldProps = current.memoizedProps;

    if (oldProps === newProps) {
      // In mutation mode, this is sufficient for a bailout because
      // we won't touch this node even if children changed.
      return;
    } // If we get updated because one of our children updated, we don't
    // have newProps so we'll have to reuse them.
    // TODO: Split the update API as separate for the props vs. children.
    // Even better would be if children weren't special cased at all tho.


    var instance = workInProgress.stateNode;
    var currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host
    // component is hitting the resume path. Figure out why. Possibly
    // related to `hidden`.

    var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext); // TODO: Type this specific to this type of component.

    workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
    // is a new ref we mark this as an update. All the work is done in commitWork.

    if (updatePayload) {
      markUpdate(workInProgress);
    }
  };

  updateHostText$1 = function (current, workInProgress, oldText, newText) {
    // If the text differs, mark it as an update. All the work in done in commitWork.
    if (oldText !== newText) {
      markUpdate(workInProgress);
    }
  };
}

function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
  if (getIsHydrating()) {
    // If we're hydrating, we should consume as many items as we can
    // so we don't leave any behind.
    return;
  }

  switch (renderState.tailMode) {
    case 'hidden':
      {
        // Any insertions at the end of the tail list after this point
        // should be invisible. If there are already mounted boundaries
        // anything before them are not considered for collapsing.
        // Therefore we need to go through the whole tail to find if
        // there are any.
        var tailNode = renderState.tail;
        var lastTailNode = null;

        while (tailNode !== null) {
          if (tailNode.alternate !== null) {
            lastTailNode = tailNode;
          }

          tailNode = tailNode.sibling;
        } // Next we're simply going to delete all insertions after the
        // last rendered item.


        if (lastTailNode === null) {
          // All remaining items in the tail are insertions.
          renderState.tail = null;
        } else {
          // Detach the insertion after the last node that was already
          // inserted.
          lastTailNode.sibling = null;
        }

        break;
      }

    case 'collapsed':
      {
        // Any insertions at the end of the tail list after this point
        // should be invisible. If there are already mounted boundaries
        // anything before them are not considered for collapsing.
        // Therefore we need to go through the whole tail to find if
        // there are any.
        var _tailNode = renderState.tail;
        var _lastTailNode = null;

        while (_tailNode !== null) {
          if (_tailNode.alternate !== null) {
            _lastTailNode = _tailNode;
          }

          _tailNode = _tailNode.sibling;
        } // Next we're simply going to delete all insertions after the
        // last rendered item.


        if (_lastTailNode === null) {
          // All remaining items in the tail are insertions.
          if (!hasRenderedATailFallback && renderState.tail !== null) {
            // We suspended during the head. We want to show at least one
            // row at the tail. So we'll keep on and cut off the rest.
            renderState.tail.sibling = null;
          } else {
            renderState.tail = null;
          }
        } else {
          // Detach the insertion after the last node that was already
          // inserted.
          _lastTailNode.sibling = null;
        }

        break;
      }
  }
}

function completeWork(current, workInProgress, renderLanes) {
  var newProps = workInProgress.pendingProps;

  switch (workInProgress.tag) {
    case IndeterminateComponent:
    case LazyComponent:
    case SimpleMemoComponent:
    case FunctionComponent:
    case ForwardRef:
    case Fragment:
    case Mode:
    case Profiler:
    case ContextConsumer:
    case MemoComponent:
      return null;

    case ClassComponent:
      {
        var Component = workInProgress.type;

        if (isContextProvider(Component)) {
          popContext(workInProgress);
        }

        return null;
      }

    case HostRoot:
      {
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        resetWorkInProgressVersions();
        var fiberRoot = workInProgress.stateNode;

        if (fiberRoot.pendingContext) {
          fiberRoot.context = fiberRoot.pendingContext;
          fiberRoot.pendingContext = null;
        }

        if (current === null || current.child === null) {
          // If we hydrated, pop so that we can delete any remaining children
          // that weren't hydrated.
          var wasHydrated = popHydrationState(workInProgress);

          if (wasHydrated) {
            // If we hydrated, then we'll need to schedule an update for
            // the commit side-effects on the root.
            markUpdate(workInProgress);
          } else if (!fiberRoot.hydrate) {
            // Schedule an effect to clear this container at the start of the next commit.
            // This handles the case of React rendering into a container with previous children.
            // It's also safe to do for updates too, because current.child would only be null
            // if the previous render was null (so the the container would already be empty).
            workInProgress.flags |= Snapshot;
          }
        }

        updateHostContainer(workInProgress);
        return null;
      }

    case HostComponent:
      {
        popHostContext(workInProgress);
        var rootContainerInstance = getRootHostContainer();
        var type = workInProgress.type;

        if (current !== null && workInProgress.stateNode != null) {
          updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);

          if (current.ref !== workInProgress.ref) {
            markRef$1(workInProgress);
          }
        } else {
          if (!newProps) {
            if (!(workInProgress.stateNode !== null)) {
              {
                throw Error( "We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue." );
              }
            } // This can happen when we abort work.


            return null;
          }

          var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context
          // "stack" as the parent. Then append children as we go in beginWork
          // or completeWork depending on whether we want to add them top->down or
          // bottom->up. Top->down is faster in IE11.

          var _wasHydrated = popHydrationState(workInProgress);

          if (_wasHydrated) {
            // TODO: Move this and createInstance step into the beginPhase
            // to consolidate.
            if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) {
              // If changes to the hydrated node need to be applied at the
              // commit-phase we mark this as such.
              markUpdate(workInProgress);
            }
          } else {
            var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);
            appendAllChildren(instance, workInProgress, false, false);
            workInProgress.stateNode = instance; // Certain renderers require commit-time effects for initial mount.
            // (eg DOM renderer supports auto-focus for certain elements).
            // Make sure such renderers get scheduled for later work.

            if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance)) {
              markUpdate(workInProgress);
            }
          }

          if (workInProgress.ref !== null) {
            // If there is a ref on a host node we need to schedule a callback
            markRef$1(workInProgress);
          }
        }

        return null;
      }

    case HostText:
      {
        var newText = newProps;

        if (current && workInProgress.stateNode != null) {
          var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need
          // to schedule a side-effect to do the updates.

          updateHostText$1(current, workInProgress, oldText, newText);
        } else {
          if (typeof newText !== 'string') {
            if (!(workInProgress.stateNode !== null)) {
              {
                throw Error( "We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue." );
              }
            } // This can happen when we abort work.

          }

          var _rootContainerInstance = getRootHostContainer();

          var _currentHostContext = getHostContext();

          var _wasHydrated2 = popHydrationState(workInProgress);

          if (_wasHydrated2) {
            if (prepareToHydrateHostTextInstance(workInProgress)) {
              markUpdate(workInProgress);
            }
          } else {
            workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);
          }
        }

        return null;
      }

    case SuspenseComponent:
      {
        popSuspenseContext(workInProgress);
        var nextState = workInProgress.memoizedState;

        if ((workInProgress.flags & DidCapture) !== NoFlags) {
          // Something suspended. Re-render with the fallback children.
          workInProgress.lanes = renderLanes; // Do not reset the effect list.

          if ( (workInProgress.mode & ProfileMode) !== NoMode) {
            transferActualDuration(workInProgress);
          }

          return workInProgress;
        }

        var nextDidTimeout = nextState !== null;
        var prevDidTimeout = false;

        if (current === null) {
          if (workInProgress.memoizedProps.fallback !== undefined) {
            popHydrationState(workInProgress);
          }
        } else {
          var prevState = current.memoizedState;
          prevDidTimeout = prevState !== null;
        }

        if (nextDidTimeout && !prevDidTimeout) {
          // If this subtreee is running in blocking mode we can suspend,
          // otherwise we won't suspend.
          // TODO: This will still suspend a synchronous tree if anything
          // in the concurrent tree already suspended during this render.
          // This is a known bug.
          if ((workInProgress.mode & BlockingMode) !== NoMode) {
            // TODO: Move this back to throwException because this is too late
            // if this is a large tree which is common for initial loads. We
            // don't know if we should restart a render or not until we get
            // this marker, and this is too late.
            // If this render already had a ping or lower pri updates,
            // and this is the first time we know we're going to suspend we
            // should be able to immediately restart from within throwException.
            var hasInvisibleChildContext = current === null && workInProgress.memoizedProps.unstable_avoidThisFallback !== true;

            if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {
              // If this was in an invisible tree or a new render, then showing
              // this boundary is ok.
              renderDidSuspend();
            } else {
              // Otherwise, we're going to have to hide content so we should
              // suspend for longer if possible.
              renderDidSuspendDelayIfPossible();
            }
          }
        }

        {
          // TODO: Only schedule updates if these values are non equal, i.e. it changed.
          if (nextDidTimeout || prevDidTimeout) {
            // If this boundary just timed out, schedule an effect to attach a
            // retry listener to the promise. This flag is also used to hide the
            // primary children. In mutation mode, we also need the flag to
            // *unhide* children that were previously hidden, so check if this
            // is currently timed out, too.
            workInProgress.flags |= Update;
          }
        }

        return null;
      }

    case HostPortal:
      popHostContainer(workInProgress);
      updateHostContainer(workInProgress);

      if (current === null) {
        preparePortalMount(workInProgress.stateNode.containerInfo);
      }

      return null;

    case ContextProvider:
      // Pop provider fiber
      popProvider(workInProgress);
      return null;

    case IncompleteClassComponent:
      {
        // Same as class component case. I put it down here so that the tags are
        // sequential to ensure this switch is compiled to a jump table.
        var _Component = workInProgress.type;

        if (isContextProvider(_Component)) {
          popContext(workInProgress);
        }

        return null;
      }

    case SuspenseListComponent:
      {
        popSuspenseContext(workInProgress);
        var renderState = workInProgress.memoizedState;

        if (renderState === null) {
          // We're running in the default, "independent" mode.
          // We don't do anything in this mode.
          return null;
        }

        var didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;
        var renderedTail = renderState.rendering;

        if (renderedTail === null) {
          // We just rendered the head.
          if (!didSuspendAlready) {
            // This is the first pass. We need to figure out if anything is still
            // suspended in the rendered set.
            // If new content unsuspended, but there's still some content that
            // didn't. Then we need to do a second pass that forces everything
            // to keep showing their fallbacks.
            // We might be suspended if something in this render pass suspended, or
            // something in the previous committed pass suspended. Otherwise,
            // there's no chance so we can skip the expensive call to
            // findFirstSuspended.
            var cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.flags & DidCapture) === NoFlags);

            if (!cannotBeSuspended) {
              var row = workInProgress.child;

              while (row !== null) {
                var suspended = findFirstSuspended(row);

                if (suspended !== null) {
                  didSuspendAlready = true;
                  workInProgress.flags |= DidCapture;
                  cutOffTailIfNeeded(renderState, false); // If this is a newly suspended tree, it might not get committed as
                  // part of the second pass. In that case nothing will subscribe to
                  // its thennables. Instead, we'll transfer its thennables to the
                  // SuspenseList so that it can retry if they resolve.
                  // There might be multiple of these in the list but since we're
                  // going to wait for all of them anyway, it doesn't really matter
                  // which ones gets to ping. In theory we could get clever and keep
                  // track of how many dependencies remain but it gets tricky because
                  // in the meantime, we can add/remove/change items and dependencies.
                  // We might bail out of the loop before finding any but that
                  // doesn't matter since that means that the other boundaries that
                  // we did find already has their listeners attached.

                  var newThennables = suspended.updateQueue;

                  if (newThennables !== null) {
                    workInProgress.updateQueue = newThennables;
                    workInProgress.flags |= Update;
                  } // Rerender the whole list, but this time, we'll force fallbacks
                  // to stay in place.
                  // Reset the effect list before doing the second pass since that's now invalid.


                  if (renderState.lastEffect === null) {
                    workInProgress.firstEffect = null;
                  }

                  workInProgress.lastEffect = renderState.lastEffect; // Reset the child fibers to their original state.

                  resetChildFibers(workInProgress, renderLanes); // Set up the Suspense Context to force suspense and immediately
                  // rerender the children.

                  pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback));
                  return workInProgress.child;
                }

                row = row.sibling;
              }
            }

            if (renderState.tail !== null && now() > getRenderTargetTime()) {
              // We have already passed our CPU deadline but we still have rows
              // left in the tail. We'll just give up further attempts to render
              // the main content and only render fallbacks.
              workInProgress.flags |= DidCapture;
              didSuspendAlready = true;
              cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
              // to get it started back up to attempt the next item. While in terms
              // of priority this work has the same priority as this current render,
              // it's not part of the same transition once the transition has
              // committed. If it's sync, we still want to yield so that it can be
              // painted. Conceptually, this is really the same as pinging.
              // We can use any RetryLane even if it's the one currently rendering
              // since we're leaving it behind on this node.

              workInProgress.lanes = SomeRetryLane;

              {
                markSpawnedWork(SomeRetryLane);
              }
            }
          } else {
            cutOffTailIfNeeded(renderState, false);
          } // Next we're going to render the tail.

        } else {
          // Append the rendered row to the child list.
          if (!didSuspendAlready) {
            var _suspended = findFirstSuspended(renderedTail);

            if (_suspended !== null) {
              workInProgress.flags |= DidCapture;
              didSuspendAlready = true; // Ensure we transfer the update queue to the parent so that it doesn't
              // get lost if this row ends up dropped during a second pass.

              var _newThennables = _suspended.updateQueue;

              if (_newThennables !== null) {
                workInProgress.updateQueue = _newThennables;
                workInProgress.flags |= Update;
              }

              cutOffTailIfNeeded(renderState, true); // This might have been modified.

              if (renderState.tail === null && renderState.tailMode === 'hidden' && !renderedTail.alternate && !getIsHydrating() // We don't cut it if we're hydrating.
              ) {
                  // We need to delete the row we just rendered.
                  // Reset the effect list to what it was before we rendered this
                  // child. The nested children have already appended themselves.
                  var lastEffect = workInProgress.lastEffect = renderState.lastEffect; // Remove any effects that were appended after this point.

                  if (lastEffect !== null) {
                    lastEffect.nextEffect = null;
                  } // We're done.


                  return null;
                }
            } else if ( // The time it took to render last row is greater than the remaining
            // time we have to render. So rendering one more row would likely
            // exceed it.
            now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes !== OffscreenLane) {
              // We have now passed our CPU deadline and we'll just give up further
              // attempts to render the main content and only render fallbacks.
              // The assumption is that this is usually faster.
              workInProgress.flags |= DidCapture;
              didSuspendAlready = true;
              cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
              // to get it started back up to attempt the next item. While in terms
              // of priority this work has the same priority as this current render,
              // it's not part of the same transition once the transition has
              // committed. If it's sync, we still want to yield so that it can be
              // painted. Conceptually, this is really the same as pinging.
              // We can use any RetryLane even if it's the one currently rendering
              // since we're leaving it behind on this node.

              workInProgress.lanes = SomeRetryLane;

              {
                markSpawnedWork(SomeRetryLane);
              }
            }
          }

          if (renderState.isBackwards) {
            // The effect list of the backwards tail will have been added
            // to the end. This breaks the guarantee that life-cycles fire in
            // sibling order but that isn't a strong guarantee promised by React.
            // Especially since these might also just pop in during future commits.
            // Append to the beginning of the list.
            renderedTail.sibling = workInProgress.child;
            workInProgress.child = renderedTail;
          } else {
            var previousSibling = renderState.last;

            if (previousSibling !== null) {
              previousSibling.sibling = renderedTail;
            } else {
              workInProgress.child = renderedTail;
            }

            renderState.last = renderedTail;
          }
        }

        if (renderState.tail !== null) {
          // We still have tail rows to render.
          // Pop a row.
          var next = renderState.tail;
          renderState.rendering = next;
          renderState.tail = next.sibling;
          renderState.lastEffect = workInProgress.lastEffect;
          renderState.renderingStartTime = now();
          next.sibling = null; // Restore the context.
          // TODO: We can probably just avoid popping it instead and only
          // setting it the first time we go from not suspended to suspended.

          var suspenseContext = suspenseStackCursor.current;

          if (didSuspendAlready) {
            suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
          } else {
            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
          }

          pushSuspenseContext(workInProgress, suspenseContext); // Do a pass over the next row.

          return next;
        }

        return null;
      }

    case FundamentalComponent:
      {

        break;
      }

    case ScopeComponent:
      {

        break;
      }

    case Block:

      break;

    case OffscreenComponent:
    case LegacyHiddenComponent:
      {
        popRenderLanes(workInProgress);

        if (current !== null) {
          var _nextState = workInProgress.memoizedState;
          var _prevState = current.memoizedState;
          var prevIsHidden = _prevState !== null;
          var nextIsHidden = _nextState !== null;

          if (prevIsHidden !== nextIsHidden && newProps.mode !== 'unstable-defer-without-hiding') {
            workInProgress.flags |= Update;
          }
        }

        return null;
      }
  }

  {
    {
      throw Error( "Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue." );
    }
  }
}

function unwindWork(workInProgress, renderLanes) {
  switch (workInProgress.tag) {
    case ClassComponent:
      {
        var Component = workInProgress.type;

        if (isContextProvider(Component)) {
          popContext(workInProgress);
        }

        var flags = workInProgress.flags;

        if (flags & ShouldCapture) {
          workInProgress.flags = flags & ~ShouldCapture | DidCapture;

          if ( (workInProgress.mode & ProfileMode) !== NoMode) {
            transferActualDuration(workInProgress);
          }

          return workInProgress;
        }

        return null;
      }

    case HostRoot:
      {
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        resetWorkInProgressVersions();
        var _flags = workInProgress.flags;

        if (!((_flags & DidCapture) === NoFlags)) {
          {
            throw Error( "The root failed to unmount after an error. This is likely a bug in React. Please file an issue." );
          }
        }

        workInProgress.flags = _flags & ~ShouldCapture | DidCapture;
        return workInProgress;
      }

    case HostComponent:
      {
        // TODO: popHydrationState
        popHostContext(workInProgress);
        return null;
      }

    case SuspenseComponent:
      {
        popSuspenseContext(workInProgress);

        var _flags2 = workInProgress.flags;

        if (_flags2 & ShouldCapture) {
          workInProgress.flags = _flags2 & ~ShouldCapture | DidCapture; // Captured a suspense effect. Re-render the boundary.

          if ( (workInProgress.mode & ProfileMode) !== NoMode) {
            transferActualDuration(workInProgress);
          }

          return workInProgress;
        }

        return null;
      }

    case SuspenseListComponent:
      {
        popSuspenseContext(workInProgress); // SuspenseList doesn't actually catch anything. It should've been
        // caught by a nested boundary. If not, it should bubble through.

        return null;
      }

    case HostPortal:
      popHostContainer(workInProgress);
      return null;

    case ContextProvider:
      popProvider(workInProgress);
      return null;

    case OffscreenComponent:
    case LegacyHiddenComponent:
      popRenderLanes(workInProgress);
      return null;

    default:
      return null;
  }
}

function unwindInterruptedWork(interruptedWork) {
  switch (interruptedWork.tag) {
    case ClassComponent:
      {
        var childContextTypes = interruptedWork.type.childContextTypes;

        if (childContextTypes !== null && childContextTypes !== undefined) {
          popContext(interruptedWork);
        }

        break;
      }

    case HostRoot:
      {
        popHostContainer(interruptedWork);
        popTopLevelContextObject(interruptedWork);
        resetWorkInProgressVersions();
        break;
      }

    case HostComponent:
      {
        popHostContext(interruptedWork);
        break;
      }

    case HostPortal:
      popHostContainer(interruptedWork);
      break;

    case SuspenseComponent:
      popSuspenseContext(interruptedWork);
      break;

    case SuspenseListComponent:
      popSuspenseContext(interruptedWork);
      break;

    case ContextProvider:
      popProvider(interruptedWork);
      break;

    case OffscreenComponent:
    case LegacyHiddenComponent:
      popRenderLanes(interruptedWork);
      break;
  }
}

function createCapturedValue(value, source) {
  // If the value is an error, call this function immediately after it is thrown
  // so the stack is accurate.
  return {
    value: value,
    source: source,
    stack: getStackByFiberInDevAndProd(source)
  };
}

// This module is forked in different environments.
// By default, return `true` to log errors to the console.
// Forks can return `false` if this isn't desirable.
function showErrorDialog(boundary, errorInfo) {
  return true;
}

function logCapturedError(boundary, errorInfo) {
  try {
    var logError = showErrorDialog(boundary, errorInfo); // Allow injected showErrorDialog() to prevent default console.error logging.
    // This enables renderers like ReactNative to better manage redbox behavior.

    if (logError === false) {
      return;
    }

    var error = errorInfo.value;

    if (true) {
      var source = errorInfo.source;
      var stack = errorInfo.stack;
      var componentStack = stack !== null ? stack : ''; // Browsers support silencing uncaught errors by calling
      // `preventDefault()` in window `error` handler.
      // We record this information as an expando on the error.

      if (error != null && error._suppressLogging) {
        if (boundary.tag === ClassComponent) {
          // The error is recoverable and was silenced.
          // Ignore it and don't print the stack addendum.
          // This is handy for testing error boundaries without noise.
          return;
        } // The error is fatal. Since the silencing might have
        // been accidental, we'll surface it anyway.
        // However, the browser would have silenced the original error
        // so we'll print it first, and then print the stack addendum.


        console['error'](error); // Don't transform to our wrapper
        // For a more detailed description of this block, see:
        // https://github.com/facebook/react/pull/13384
      }

      var componentName = source ? getComponentName(source.type) : null;
      var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : 'The above error occurred in one of your React components:';
      var errorBoundaryMessage;
      var errorBoundaryName = getComponentName(boundary.type);

      if (errorBoundaryName) {
        errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
      } else {
        errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\n' + 'Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.';
      }

      var combinedMessage = componentNameMessage + "\n" + componentStack + "\n\n" + ("" + errorBoundaryMessage); // In development, we provide our own message with just the component stack.
      // We don't include the original error message and JS stack because the browser
      // has already printed it. Even if the application swallows the error, it is still
      // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.

      console['error'](combinedMessage); // Don't transform to our wrapper
    }
  } catch (e) {
    // This method must not throw, or React internal state will get messed up.
    // If console.error is overridden, or logCapturedError() shows a dialog that throws,
    // we want to report this error outside of the normal stack as a last resort.
    // https://github.com/facebook/react/issues/13188
    setTimeout(function () {
      throw e;
    });
  }
}

var PossiblyWeakMap$1 = typeof WeakMap === 'function' ? WeakMap : Map;

function createRootErrorUpdate(fiber, errorInfo, lane) {
  var update = createUpdate(NoTimestamp, lane); // Unmount the root by rendering null.

  update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property
  // being called "element".

  update.payload = {
    element: null
  };
  var error = errorInfo.value;

  update.callback = function () {
    onUncaughtError(error);
    logCapturedError(fiber, errorInfo);
  };

  return update;
}

function createClassErrorUpdate(fiber, errorInfo, lane) {
  var update = createUpdate(NoTimestamp, lane);
  update.tag = CaptureUpdate;
  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;

  if (typeof getDerivedStateFromError === 'function') {
    var error$1 = errorInfo.value;

    update.payload = function () {
      logCapturedError(fiber, errorInfo);
      return getDerivedStateFromError(error$1);
    };
  }

  var inst = fiber.stateNode;

  if (inst !== null && typeof inst.componentDidCatch === 'function') {
    update.callback = function callback() {
      {
        markFailedErrorBoundaryForHotReloading(fiber);
      }

      if (typeof getDerivedStateFromError !== 'function') {
        // To preserve the preexisting retry behavior of error boundaries,
        // we keep track of which ones already failed during this batch.
        // This gets reset before we yield back to the browser.
        // TODO: Warn in strict mode if getDerivedStateFromError is
        // not defined.
        markLegacyErrorBoundaryAsFailed(this); // Only log here if componentDidCatch is the only error boundary method defined

        logCapturedError(fiber, errorInfo);
      }

      var error$1 = errorInfo.value;
      var stack = errorInfo.stack;
      this.componentDidCatch(error$1, {
        componentStack: stack !== null ? stack : ''
      });

      {
        if (typeof getDerivedStateFromError !== 'function') {
          // If componentDidCatch is the only error boundary method defined,
          // then it needs to call setState to recover from errors.
          // If no state update is scheduled then the boundary will swallow the error.
          if (!includesSomeLane(fiber.lanes, SyncLane)) {
            error('%s: Error boundaries should implement getDerivedStateFromError(). ' + 'In that method, return a state update to display an error message or fallback UI.', getComponentName(fiber.type) || 'Unknown');
          }
        }
      }
    };
  } else {
    update.callback = function () {
      markFailedErrorBoundaryForHotReloading(fiber);
    };
  }

  return update;
}

function attachPingListener(root, wakeable, lanes) {
  // Attach a listener to the promise to "ping" the root and retry. But only if
  // one does not already exist for the lanes we're currently rendering (which
  // acts like a "thread ID" here).
  var pingCache = root.pingCache;
  var threadIDs;

  if (pingCache === null) {
    pingCache = root.pingCache = new PossiblyWeakMap$1();
    threadIDs = new Set();
    pingCache.set(wakeable, threadIDs);
  } else {
    threadIDs = pingCache.get(wakeable);

    if (threadIDs === undefined) {
      threadIDs = new Set();
      pingCache.set(wakeable, threadIDs);
    }
  }

  if (!threadIDs.has(lanes)) {
    // Memoize using the thread ID to prevent redundant listeners.
    threadIDs.add(lanes);
    var ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);
    wakeable.then(ping, ping);
  }
}

function throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {
  // The source fiber did not complete.
  sourceFiber.flags |= Incomplete; // Its effect list is no longer valid.

  sourceFiber.firstEffect = sourceFiber.lastEffect = null;

  if (value !== null && typeof value === 'object' && typeof value.then === 'function') {
    // This is a wakeable.
    var wakeable = value;

    if ((sourceFiber.mode & BlockingMode) === NoMode) {
      // Reset the memoizedState to what it was before we attempted
      // to render it.
      var currentSource = sourceFiber.alternate;

      if (currentSource) {
        sourceFiber.updateQueue = currentSource.updateQueue;
        sourceFiber.memoizedState = currentSource.memoizedState;
        sourceFiber.lanes = currentSource.lanes;
      } else {
        sourceFiber.updateQueue = null;
        sourceFiber.memoizedState = null;
      }
    }

    var hasInvisibleParentBoundary = hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext); // Schedule the nearest Suspense to re-render the timed out view.

    var _workInProgress = returnFiber;

    do {
      if (_workInProgress.tag === SuspenseComponent && shouldCaptureSuspense(_workInProgress, hasInvisibleParentBoundary)) {
        // Found the nearest boundary.
        // Stash the promise on the boundary fiber. If the boundary times out, we'll
        // attach another listener to flip the boundary back to its normal state.
        var wakeables = _workInProgress.updateQueue;

        if (wakeables === null) {
          var updateQueue = new Set();
          updateQueue.add(wakeable);
          _workInProgress.updateQueue = updateQueue;
        } else {
          wakeables.add(wakeable);
        } // If the boundary is outside of blocking mode, we should *not*
        // suspend the commit. Pretend as if the suspended component rendered
        // null and keep rendering. In the commit phase, we'll schedule a
        // subsequent synchronous update to re-render the Suspense.
        //
        // Note: It doesn't matter whether the component that suspended was
        // inside a blocking mode tree. If the Suspense is outside of it, we
        // should *not* suspend the commit.


        if ((_workInProgress.mode & BlockingMode) === NoMode) {
          _workInProgress.flags |= DidCapture;
          sourceFiber.flags |= ForceUpdateForLegacySuspense; // We're going to commit this fiber even though it didn't complete.
          // But we shouldn't call any lifecycle methods or callbacks. Remove
          // all lifecycle effect tags.

          sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);

          if (sourceFiber.tag === ClassComponent) {
            var currentSourceFiber = sourceFiber.alternate;

            if (currentSourceFiber === null) {
              // This is a new mount. Change the tag so it's not mistaken for a
              // completed class component. For example, we should not call
              // componentWillUnmount if it is deleted.
              sourceFiber.tag = IncompleteClassComponent;
            } else {
              // When we try rendering again, we should not reuse the current fiber,
              // since it's known to be in an inconsistent state. Use a force update to
              // prevent a bail out.
              var update = createUpdate(NoTimestamp, SyncLane);
              update.tag = ForceUpdate;
              enqueueUpdate(sourceFiber, update);
            }
          } // The source fiber did not complete. Mark it with Sync priority to
          // indicate that it still has pending work.


          sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane); // Exit without suspending.

          return;
        } // Confirmed that the boundary is in a concurrent mode tree. Continue
        // with the normal suspend path.
        //
        // After this we'll use a set of heuristics to determine whether this
        // render pass will run to completion or restart or "suspend" the commit.
        // The actual logic for this is spread out in different places.
        //
        // This first principle is that if we're going to suspend when we complete
        // a root, then we should also restart if we get an update or ping that
        // might unsuspend it, and vice versa. The only reason to suspend is
        // because you think you might want to restart before committing. However,
        // it doesn't make sense to restart only while in the period we're suspended.
        //
        // Restarting too aggressively is also not good because it starves out any
        // intermediate loading state. So we use heuristics to determine when.
        // Suspense Heuristics
        //
        // If nothing threw a Promise or all the same fallbacks are already showing,
        // then don't suspend/restart.
        //
        // If this is an initial render of a new tree of Suspense boundaries and
        // those trigger a fallback, then don't suspend/restart. We want to ensure
        // that we can show the initial loading state as quickly as possible.
        //
        // If we hit a "Delayed" case, such as when we'd switch from content back into
        // a fallback, then we should always suspend/restart. Transitions apply
        // to this case. If none is defined, JND is used instead.
        //
        // If we're already showing a fallback and it gets "retried", allowing us to show
        // another level, but there's still an inner boundary that would show a fallback,
        // then we suspend/restart for 500ms since the last time we showed a fallback
        // anywhere in the tree. This effectively throttles progressive loading into a
        // consistent train of commits. This also gives us an opportunity to restart to
        // get to the completed state slightly earlier.
        //
        // If there's ambiguity due to batching it's resolved in preference of:
        // 1) "delayed", 2) "initial render", 3) "retry".
        //
        // We want to ensure that a "busy" state doesn't get force committed. We want to
        // ensure that new initial loading states can commit as soon as possible.


        attachPingListener(root, wakeable, rootRenderLanes);
        _workInProgress.flags |= ShouldCapture;
        _workInProgress.lanes = rootRenderLanes;
        return;
      } // This boundary already captured during this render. Continue to the next
      // boundary.


      _workInProgress = _workInProgress.return;
    } while (_workInProgress !== null); // No boundary was found. Fallthrough to error mode.
    // TODO: Use invariant so the message is stripped in prod?


    value = new Error((getComponentName(sourceFiber.type) || 'A React component') + ' suspended while rendering, but no fallback UI was specified.\n' + '\n' + 'Add a <Suspense fallback=...> component higher in the tree to ' + 'provide a loading indicator or placeholder to display.');
  } // We didn't find a boundary that could handle this type of exception. Start
  // over and traverse parent path again, this time treating the exception
  // as an error.


  renderDidError();
  value = createCapturedValue(value, sourceFiber);
  var workInProgress = returnFiber;

  do {
    switch (workInProgress.tag) {
      case HostRoot:
        {
          var _errorInfo = value;
          workInProgress.flags |= ShouldCapture;
          var lane = pickArbitraryLane(rootRenderLanes);
          workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);

          var _update = createRootErrorUpdate(workInProgress, _errorInfo, lane);

          enqueueCapturedUpdate(workInProgress, _update);
          return;
        }

      case ClassComponent:
        // Capture and retry
        var errorInfo = value;
        var ctor = workInProgress.type;
        var instance = workInProgress.stateNode;

        if ((workInProgress.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {
          workInProgress.flags |= ShouldCapture;

          var _lane = pickArbitraryLane(rootRenderLanes);

          workInProgress.lanes = mergeLanes(workInProgress.lanes, _lane); // Schedule the error boundary to re-render using updated state

          var _update2 = createClassErrorUpdate(workInProgress, errorInfo, _lane);

          enqueueCapturedUpdate(workInProgress, _update2);
          return;
        }

        break;
    }

    workInProgress = workInProgress.return;
  } while (workInProgress !== null);
}

var didWarnAboutUndefinedSnapshotBeforeUpdate = null;

{
  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
}

var PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;

var callComponentWillUnmountWithTimer = function (current, instance) {
  instance.props = current.memoizedProps;
  instance.state = current.memoizedState;

  {
    instance.componentWillUnmount();
  }
}; // Capture errors so they don't interrupt unmounting.


function safelyCallComponentWillUnmount(current, instance) {
  {
    invokeGuardedCallback(null, callComponentWillUnmountWithTimer, null, current, instance);

    if (hasCaughtError()) {
      var unmountError = clearCaughtError();
      captureCommitPhaseError(current, unmountError);
    }
  }
}

function safelyDetachRef(current) {
  var ref = current.ref;

  if (ref !== null) {
    if (typeof ref === 'function') {
      {
        invokeGuardedCallback(null, ref, null, null);

        if (hasCaughtError()) {
          var refError = clearCaughtError();
          captureCommitPhaseError(current, refError);
        }
      }
    } else {
      ref.current = null;
    }
  }
}

function safelyCallDestroy(current, destroy) {
  {
    invokeGuardedCallback(null, destroy, null);

    if (hasCaughtError()) {
      var error = clearCaughtError();
      captureCommitPhaseError(current, error);
    }
  }
}

function commitBeforeMutationLifeCycles(current, finishedWork) {
  switch (finishedWork.tag) {
    case FunctionComponent:
    case ForwardRef:
    case SimpleMemoComponent:
    case Block:
      {
        return;
      }

    case ClassComponent:
      {
        if (finishedWork.flags & Snapshot) {
          if (current !== null) {
            var prevProps = current.memoizedProps;
            var prevState = current.memoizedState;
            var instance = finishedWork.stateNode; // We could update instance props and state here,
            // but instead we rely on them being set during last render.
            // TODO: revisit this when we implement resuming.

            {
              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                if (instance.props !== finishedWork.memoizedProps) {
                  error('Expected %s props to match memoized props before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance');
                }

                if (instance.state !== finishedWork.memoizedState) {
                  error('Expected %s state to match memoized state before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance');
                }
              }
            }

            var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);

            {
              var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;

              if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
                didWarnSet.add(finishedWork.type);

                error('%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' + 'must be returned. You have returned undefined.', getComponentName(finishedWork.type));
              }
            }

            instance.__reactInternalSnapshotBeforeUpdate = snapshot;
          }
        }

        return;
      }

    case HostRoot:
      {
        {
          if (finishedWork.flags & Snapshot) {
            var root = finishedWork.stateNode;
            clearContainer(root.containerInfo);
          }
        }

        return;
      }

    case HostComponent:
    case HostText:
    case HostPortal:
    case IncompleteClassComponent:
      // Nothing to do for these component types
      return;
  }

  {
    {
      throw Error( "This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue." );
    }
  }
}

function commitHookEffectListUnmount(tag, finishedWork) {
  var updateQueue = finishedWork.updateQueue;
  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;

  if (lastEffect !== null) {
    var firstEffect = lastEffect.next;
    var effect = firstEffect;

    do {
      if ((effect.tag & tag) === tag) {
        // Unmount
        var destroy = effect.destroy;
        effect.destroy = undefined;

        if (destroy !== undefined) {
          destroy();
        }
      }

      effect = effect.next;
    } while (effect !== firstEffect);
  }
}

function commitHookEffectListMount(tag, finishedWork) {
  var updateQueue = finishedWork.updateQueue;
  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;

  if (lastEffect !== null) {
    var firstEffect = lastEffect.next;
    var effect = firstEffect;

    do {
      if ((effect.tag & tag) === tag) {
        // Mount
        var create = effect.create;
        effect.destroy = create();

        {
          var destroy = effect.destroy;

          if (destroy !== undefined && typeof destroy !== 'function') {
            var addendum = void 0;

            if (destroy === null) {
              addendum = ' You returned null. If your effect does not require clean ' + 'up, return undefined (or nothing).';
            } else if (typeof destroy.then === 'function') {
              addendum = '\n\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. ' + 'Instead, write the async function inside your effect ' + 'and call it immediately:\n\n' + 'useEffect(() => {\n' + '  async function fetchData() {\n' + '    // You can await here\n' + '    const response = await MyAPI.getData(someId);\n' + '    // ...\n' + '  }\n' + '  fetchData();\n' + "}, [someId]); // Or [] if effect doesn't need props or state\n\n" + 'Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching';
            } else {
              addendum = ' You returned: ' + destroy;
            }

            error('An effect function must not return anything besides a function, ' + 'which is used for clean-up.%s', addendum);
          }
        }
      }

      effect = effect.next;
    } while (effect !== firstEffect);
  }
}

function schedulePassiveEffects(finishedWork) {
  var updateQueue = finishedWork.updateQueue;
  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;

  if (lastEffect !== null) {
    var firstEffect = lastEffect.next;
    var effect = firstEffect;

    do {
      var _effect = effect,
          next = _effect.next,
          tag = _effect.tag;

      if ((tag & Passive$1) !== NoFlags$1 && (tag & HasEffect) !== NoFlags$1) {
        enqueuePendingPassiveHookEffectUnmount(finishedWork, effect);
        enqueuePendingPassiveHookEffectMount(finishedWork, effect);
      }

      effect = next;
    } while (effect !== firstEffect);
  }
}

function commitLifeCycles(finishedRoot, current, finishedWork, committedLanes) {
  switch (finishedWork.tag) {
    case FunctionComponent:
    case ForwardRef:
    case SimpleMemoComponent:
    case Block:
      {
        // At this point layout effects have already been destroyed (during mutation phase).
        // This is done to prevent sibling component effects from interfering with each other,
        // e.g. a destroy function in one component should never override a ref set
        // by a create function in another component during the same commit.
        {
          commitHookEffectListMount(Layout | HasEffect, finishedWork);
        }

        schedulePassiveEffects(finishedWork);
        return;
      }

    case ClassComponent:
      {
        var instance = finishedWork.stateNode;

        if (finishedWork.flags & Update) {
          if (current === null) {
            // We could update instance props and state here,
            // but instead we rely on them being set during last render.
            // TODO: revisit this when we implement resuming.
            {
              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                if (instance.props !== finishedWork.memoizedProps) {
                  error('Expected %s props to match memoized props before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance');
                }

                if (instance.state !== finishedWork.memoizedState) {
                  error('Expected %s state to match memoized state before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance');
                }
              }
            }

            {
              instance.componentDidMount();
            }
          } else {
            var prevProps = finishedWork.elementType === finishedWork.type ? current.memoizedProps : resolveDefaultProps(finishedWork.type, current.memoizedProps);
            var prevState = current.memoizedState; // We could update instance props and state here,
            // but instead we rely on them being set during last render.
            // TODO: revisit this when we implement resuming.

            {
              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                if (instance.props !== finishedWork.memoizedProps) {
                  error('Expected %s props to match memoized props before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance');
                }

                if (instance.state !== finishedWork.memoizedState) {
                  error('Expected %s state to match memoized state before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance');
                }
              }
            }

            {
              instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
            }
          }
        } // TODO: I think this is now always non-null by the time it reaches the
        // commit phase. Consider removing the type check.


        var updateQueue = finishedWork.updateQueue;

        if (updateQueue !== null) {
          {
            if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
              if (instance.props !== finishedWork.memoizedProps) {
                error('Expected %s props to match memoized props before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance');
              }

              if (instance.state !== finishedWork.memoizedState) {
                error('Expected %s state to match memoized state before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance');
              }
            }
          } // We could update instance props and state here,
          // but instead we rely on them being set during last render.
          // TODO: revisit this when we implement resuming.


          commitUpdateQueue(finishedWork, updateQueue, instance);
        }

        return;
      }

    case HostRoot:
      {
        // TODO: I think this is now always non-null by the time it reaches the
        // commit phase. Consider removing the type check.
        var _updateQueue = finishedWork.updateQueue;

        if (_updateQueue !== null) {
          var _instance = null;

          if (finishedWork.child !== null) {
            switch (finishedWork.child.tag) {
              case HostComponent:
                _instance = getPublicInstance(finishedWork.child.stateNode);
                break;

              case ClassComponent:
                _instance = finishedWork.child.stateNode;
                break;
            }
          }

          commitUpdateQueue(finishedWork, _updateQueue, _instance);
        }

        return;
      }

    case HostComponent:
      {
        var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted
        // (eg DOM renderer may schedule auto-focus for inputs and form controls).
        // These effects should only be committed when components are first mounted,
        // aka when there is no current/alternate.

        if (current === null && finishedWork.flags & Update) {
          var type = finishedWork.type;
          var props = finishedWork.memoizedProps;
          commitMount(_instance2, type, props);
        }

        return;
      }

    case HostText:
      {
        // We have no life-cycles associated with text.
        return;
      }

    case HostPortal:
      {
        // We have no life-cycles associated with portals.
        return;
      }

    case Profiler:
      {
        {
          var _finishedWork$memoize2 = finishedWork.memoizedProps;
              _finishedWork$memoize2.onCommit;
              var onRender = _finishedWork$memoize2.onRender;
          finishedWork.stateNode.effectDuration;
          var commitTime = getCommitTime();

          if (typeof onRender === 'function') {
            {
              onRender(finishedWork.memoizedProps.id, current === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime, finishedRoot.memoizedInteractions);
            }
          }
        }

        return;
      }

    case SuspenseComponent:
      {
        commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
        return;
      }

    case SuspenseListComponent:
    case IncompleteClassComponent:
    case FundamentalComponent:
    case ScopeComponent:
    case OffscreenComponent:
    case LegacyHiddenComponent:
      return;
  }

  {
    {
      throw Error( "This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue." );
    }
  }
}

function hideOrUnhideAllChildren(finishedWork, isHidden) {
  {
    // We only have the top Fiber that was inserted but we need to recurse down its
    // children to find all the terminal nodes.
    var node = finishedWork;

    while (true) {
      if (node.tag === HostComponent) {
        var instance = node.stateNode;

        if (isHidden) {
          hideInstance(instance);
        } else {
          unhideInstance(node.stateNode, node.memoizedProps);
        }
      } else if (node.tag === HostText) {
        var _instance3 = node.stateNode;

        if (isHidden) {
          hideTextInstance(_instance3);
        } else {
          unhideTextInstance(_instance3, node.memoizedProps);
        }
      } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork) ; else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === finishedWork) {
        return;
      }

      while (node.sibling === null) {
        if (node.return === null || node.return === finishedWork) {
          return;
        }

        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }
}

function commitAttachRef(finishedWork) {
  var ref = finishedWork.ref;

  if (ref !== null) {
    var instance = finishedWork.stateNode;
    var instanceToUse;

    switch (finishedWork.tag) {
      case HostComponent:
        instanceToUse = getPublicInstance(instance);
        break;

      default:
        instanceToUse = instance;
    } // Moved outside to ensure DCE works with this flag

    if (typeof ref === 'function') {
      ref(instanceToUse);
    } else {
      {
        if (!ref.hasOwnProperty('current')) {
          error('Unexpected ref object provided for %s. ' + 'Use either a ref-setter function or React.createRef().', getComponentName(finishedWork.type));
        }
      }

      ref.current = instanceToUse;
    }
  }
}

function commitDetachRef(current) {
  var currentRef = current.ref;

  if (currentRef !== null) {
    if (typeof currentRef === 'function') {
      currentRef(null);
    } else {
      currentRef.current = null;
    }
  }
} // User-originating errors (lifecycles and refs) should not interrupt
// deletion, so don't let them throw. Host-originating errors should
// interrupt deletion, so it's okay


function commitUnmount(finishedRoot, current, renderPriorityLevel) {
  onCommitUnmount(current);

  switch (current.tag) {
    case FunctionComponent:
    case ForwardRef:
    case MemoComponent:
    case SimpleMemoComponent:
    case Block:
      {
        var updateQueue = current.updateQueue;

        if (updateQueue !== null) {
          var lastEffect = updateQueue.lastEffect;

          if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;

            do {
              var _effect2 = effect,
                  destroy = _effect2.destroy,
                  tag = _effect2.tag;

              if (destroy !== undefined) {
                if ((tag & Passive$1) !== NoFlags$1) {
                  enqueuePendingPassiveHookEffectUnmount(current, effect);
                } else {
                  {
                    safelyCallDestroy(current, destroy);
                  }
                }
              }

              effect = effect.next;
            } while (effect !== firstEffect);
          }
        }

        return;
      }

    case ClassComponent:
      {
        safelyDetachRef(current);
        var instance = current.stateNode;

        if (typeof instance.componentWillUnmount === 'function') {
          safelyCallComponentWillUnmount(current, instance);
        }

        return;
      }

    case HostComponent:
      {
        safelyDetachRef(current);
        return;
      }

    case HostPortal:
      {
        // TODO: this is recursive.
        // We are also not using this parent because
        // the portal will get pushed immediately.
        {
          unmountHostComponents(finishedRoot, current);
        }

        return;
      }

    case FundamentalComponent:
      {

        return;
      }

    case DehydratedFragment:
      {

        return;
      }

    case ScopeComponent:
      {

        return;
      }
  }
}

function commitNestedUnmounts(finishedRoot, root, renderPriorityLevel) {
  // While we're inside a removed host node we don't want to call
  // removeChild on the inner nodes because they're removed by the top
  // call anyway. We also want to call componentWillUnmount on all
  // composites before this host node is removed from the tree. Therefore
  // we do an inner loop while we're still inside the host node.
  var node = root;

  while (true) {
    commitUnmount(finishedRoot, node); // Visit children because they may contain more composite or host nodes.
    // Skip portals because commitUnmount() currently visits them recursively.

    if (node.child !== null && ( // If we use mutation we drill down into portals using commitUnmount above.
    // If we don't use mutation we drill down into portals here instead.
     node.tag !== HostPortal)) {
      node.child.return = node;
      node = node.child;
      continue;
    }

    if (node === root) {
      return;
    }

    while (node.sibling === null) {
      if (node.return === null || node.return === root) {
        return;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function detachFiberMutation(fiber) {
  // Cut off the return pointers to disconnect it from the tree. Ideally, we
  // should clear the child pointer of the parent alternate to let this
  // get GC:ed but we don't know which for sure which parent is the current
  // one so we'll settle for GC:ing the subtree of this child. This child
  // itself will be GC:ed when the parent updates the next time.
  // Note: we cannot null out sibling here, otherwise it can cause issues
  // with findDOMNode and how it requires the sibling field to carry out
  // traversal in a later effect. See PR #16820. We now clear the sibling
  // field after effects, see: detachFiberAfterEffects.
  //
  // Don't disconnect stateNode now; it will be detached in detachFiberAfterEffects.
  // It may be required if the current component is an error boundary,
  // and one of its descendants throws while unmounting a passive effect.
  fiber.alternate = null;
  fiber.child = null;
  fiber.dependencies = null;
  fiber.firstEffect = null;
  fiber.lastEffect = null;
  fiber.memoizedProps = null;
  fiber.memoizedState = null;
  fiber.pendingProps = null;
  fiber.return = null;
  fiber.updateQueue = null;

  {
    fiber._debugOwner = null;
  }
}

function getHostParentFiber(fiber) {
  var parent = fiber.return;

  while (parent !== null) {
    if (isHostParent(parent)) {
      return parent;
    }

    parent = parent.return;
  }

  {
    {
      throw Error( "Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue." );
    }
  }
}

function isHostParent(fiber) {
  return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
}

function getHostSibling(fiber) {
  // We're going to search forward into the tree until we find a sibling host
  // node. Unfortunately, if multiple insertions are done in a row we have to
  // search past them. This leads to exponential search for the next sibling.
  // TODO: Find a more efficient way to do this.
  var node = fiber;

  siblings: while (true) {
    // If we didn't find anything, let's try the next sibling.
    while (node.sibling === null) {
      if (node.return === null || isHostParent(node.return)) {
        // If we pop out of the root or hit the parent the fiber we are the
        // last sibling.
        return null;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;

    while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment) {
      // If it is not host node and, we might have a host node inside it.
      // Try to search down until we find one.
      if (node.flags & Placement) {
        // If we don't have a child, try the siblings instead.
        continue siblings;
      } // If we don't have a child, try the siblings instead.
      // We also skip portals because they are not part of this host tree.


      if (node.child === null || node.tag === HostPortal) {
        continue siblings;
      } else {
        node.child.return = node;
        node = node.child;
      }
    } // Check if this host node is stable or about to be placed.


    if (!(node.flags & Placement)) {
      // Found it!
      return node.stateNode;
    }
  }
}

function commitPlacement(finishedWork) {


  var parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.

  var parent;
  var isContainer;
  var parentStateNode = parentFiber.stateNode;

  switch (parentFiber.tag) {
    case HostComponent:
      parent = parentStateNode;
      isContainer = false;
      break;

    case HostRoot:
      parent = parentStateNode.containerInfo;
      isContainer = true;
      break;

    case HostPortal:
      parent = parentStateNode.containerInfo;
      isContainer = true;
      break;

    case FundamentalComponent:

    // eslint-disable-next-line-no-fallthrough

    default:
      {
        {
          throw Error( "Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue." );
        }
      }

  }

  if (parentFiber.flags & ContentReset) {
    // Reset the text content of the parent before doing any insertions
    resetTextContent(parent); // Clear ContentReset from the effect tag

    parentFiber.flags &= ~ContentReset;
  }

  var before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need to recurse down its
  // children to find all the terminal nodes.

  if (isContainer) {
    insertOrAppendPlacementNodeIntoContainer(finishedWork, before, parent);
  } else {
    insertOrAppendPlacementNode(finishedWork, before, parent);
  }
}

function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
  var tag = node.tag;
  var isHost = tag === HostComponent || tag === HostText;

  if (isHost || enableFundamentalAPI ) {
    var stateNode = isHost ? node.stateNode : node.stateNode.instance;

    if (before) {
      insertInContainerBefore(parent, stateNode, before);
    } else {
      appendChildToContainer(parent, stateNode);
    }
  } else if (tag === HostPortal) ; else {
    var child = node.child;

    if (child !== null) {
      insertOrAppendPlacementNodeIntoContainer(child, before, parent);
      var sibling = child.sibling;

      while (sibling !== null) {
        insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);
        sibling = sibling.sibling;
      }
    }
  }
}

function insertOrAppendPlacementNode(node, before, parent) {
  var tag = node.tag;
  var isHost = tag === HostComponent || tag === HostText;

  if (isHost || enableFundamentalAPI ) {
    var stateNode = isHost ? node.stateNode : node.stateNode.instance;

    if (before) {
      insertBefore(parent, stateNode, before);
    } else {
      appendChild(parent, stateNode);
    }
  } else if (tag === HostPortal) ; else {
    var child = node.child;

    if (child !== null) {
      insertOrAppendPlacementNode(child, before, parent);
      var sibling = child.sibling;

      while (sibling !== null) {
        insertOrAppendPlacementNode(sibling, before, parent);
        sibling = sibling.sibling;
      }
    }
  }
}

function unmountHostComponents(finishedRoot, current, renderPriorityLevel) {
  // We only have the top Fiber that was deleted but we need to recurse down its
  // children to find all the terminal nodes.
  var node = current; // Each iteration, currentParent is populated with node's host parent if not
  // currentParentIsValid.

  var currentParentIsValid = false; // Note: these two variables *must* always be updated together.

  var currentParent;
  var currentParentIsContainer;

  while (true) {
    if (!currentParentIsValid) {
      var parent = node.return;

      findParent: while (true) {
        if (!(parent !== null)) {
          {
            throw Error( "Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue." );
          }
        }

        var parentStateNode = parent.stateNode;

        switch (parent.tag) {
          case HostComponent:
            currentParent = parentStateNode;
            currentParentIsContainer = false;
            break findParent;

          case HostRoot:
            currentParent = parentStateNode.containerInfo;
            currentParentIsContainer = true;
            break findParent;

          case HostPortal:
            currentParent = parentStateNode.containerInfo;
            currentParentIsContainer = true;
            break findParent;

        }

        parent = parent.return;
      }

      currentParentIsValid = true;
    }

    if (node.tag === HostComponent || node.tag === HostText) {
      commitNestedUnmounts(finishedRoot, node); // After all the children have unmounted, it is now safe to remove the
      // node from the tree.

      if (currentParentIsContainer) {
        removeChildFromContainer(currentParent, node.stateNode);
      } else {
        removeChild(currentParent, node.stateNode);
      } // Don't visit children because we already visited them.

    } else if (node.tag === HostPortal) {
      if (node.child !== null) {
        // When we go into a portal, it becomes the parent to remove from.
        // We will reassign it back when we pop the portal on the way up.
        currentParent = node.stateNode.containerInfo;
        currentParentIsContainer = true; // Visit children because portals might contain host components.

        node.child.return = node;
        node = node.child;
        continue;
      }
    } else {
      commitUnmount(finishedRoot, node); // Visit children because we may find more host components below.

      if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }
    }

    if (node === current) {
      return;
    }

    while (node.sibling === null) {
      if (node.return === null || node.return === current) {
        return;
      }

      node = node.return;

      if (node.tag === HostPortal) {
        // When we go out of the portal, we need to restore the parent.
        // Since we don't keep a stack of them, we will search for it.
        currentParentIsValid = false;
      }
    }

    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function commitDeletion(finishedRoot, current, renderPriorityLevel) {
  {
    // Recursively delete all host nodes from the parent.
    // Detach refs and call componentWillUnmount() on the whole subtree.
    unmountHostComponents(finishedRoot, current);
  }

  var alternate = current.alternate;
  detachFiberMutation(current);

  if (alternate !== null) {
    detachFiberMutation(alternate);
  }
}

function commitWork(current, finishedWork) {

  switch (finishedWork.tag) {
    case FunctionComponent:
    case ForwardRef:
    case MemoComponent:
    case SimpleMemoComponent:
    case Block:
      {
        // Layout effects are destroyed during the mutation phase so that all
        // destroy functions for all fibers are called before any create functions.
        // This prevents sibling component effects from interfering with each other,
        // e.g. a destroy function in one component should never override a ref set
        // by a create function in another component during the same commit.
        {
          commitHookEffectListUnmount(Layout | HasEffect, finishedWork);
        }

        return;
      }

    case ClassComponent:
      {
        return;
      }

    case HostComponent:
      {
        var instance = finishedWork.stateNode;

        if (instance != null) {
          // Commit the work prepared earlier.
          var newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
          // as the newProps. The updatePayload will contain the real change in
          // this case.

          var oldProps = current !== null ? current.memoizedProps : newProps;
          var type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.

          var updatePayload = finishedWork.updateQueue;
          finishedWork.updateQueue = null;

          if (updatePayload !== null) {
            commitUpdate(instance, updatePayload, type, oldProps, newProps);
          }
        }

        return;
      }

    case HostText:
      {
        if (!(finishedWork.stateNode !== null)) {
          {
            throw Error( "This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue." );
          }
        }

        var textInstance = finishedWork.stateNode;
        var newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
        // as the newProps. The updatePayload will contain the real change in
        // this case.

        var oldText = current !== null ? current.memoizedProps : newText;
        commitTextUpdate(textInstance, oldText, newText);
        return;
      }

    case HostRoot:
      {
        {
          var _root = finishedWork.stateNode;

          if (_root.hydrate) {
            // We've just hydrated. No need to hydrate again.
            _root.hydrate = false;
            commitHydratedContainer(_root.containerInfo);
          }
        }

        return;
      }

    case Profiler:
      {
        return;
      }

    case SuspenseComponent:
      {
        commitSuspenseComponent(finishedWork);
        attachSuspenseRetryListeners(finishedWork);
        return;
      }

    case SuspenseListComponent:
      {
        attachSuspenseRetryListeners(finishedWork);
        return;
      }

    case IncompleteClassComponent:
      {
        return;
      }

    case FundamentalComponent:
      {

        break;
      }

    case ScopeComponent:
      {

        break;
      }

    case OffscreenComponent:
    case LegacyHiddenComponent:
      {
        var newState = finishedWork.memoizedState;
        var isHidden = newState !== null;
        hideOrUnhideAllChildren(finishedWork, isHidden);
        return;
      }
  }

  {
    {
      throw Error( "This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue." );
    }
  }
}

function commitSuspenseComponent(finishedWork) {
  var newState = finishedWork.memoizedState;

  if (newState !== null) {
    markCommitTimeOfFallback();

    {
      // Hide the Offscreen component that contains the primary children. TODO:
      // Ideally, this effect would have been scheduled on the Offscreen fiber
      // itself. That's how unhiding works: the Offscreen component schedules an
      // effect on itself. However, in this case, the component didn't complete,
      // so the fiber was never added to the effect list in the normal path. We
      // could have appended it to the effect list in the Suspense component's
      // second pass, but doing it this way is less complicated. This would be
      // simpler if we got rid of the effect list and traversed the tree, like
      // we're planning to do.
      var primaryChildParent = finishedWork.child;
      hideOrUnhideAllChildren(primaryChildParent, true);
    }
  }
}

function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {

  var newState = finishedWork.memoizedState;

  if (newState === null) {
    var current = finishedWork.alternate;

    if (current !== null) {
      var prevState = current.memoizedState;

      if (prevState !== null) {
        var suspenseInstance = prevState.dehydrated;

        if (suspenseInstance !== null) {
          commitHydratedSuspenseInstance(suspenseInstance);
        }
      }
    }
  }
}

function attachSuspenseRetryListeners(finishedWork) {
  // If this boundary just timed out, then it will have a set of wakeables.
  // For each wakeable, attach a listener so that when it resolves, React
  // attempts to re-render the boundary in the primary (pre-timeout) state.
  var wakeables = finishedWork.updateQueue;

  if (wakeables !== null) {
    finishedWork.updateQueue = null;
    var retryCache = finishedWork.stateNode;

    if (retryCache === null) {
      retryCache = finishedWork.stateNode = new PossiblyWeakSet();
    }

    wakeables.forEach(function (wakeable) {
      // Memoize using the boundary fiber to prevent redundant listeners.
      var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);

      if (!retryCache.has(wakeable)) {
        {
          if (wakeable.__reactDoNotTraceInteractions !== true) {
            retry = tracing$1.unstable_wrap(retry);
          }
        }

        retryCache.add(wakeable);
        wakeable.then(retry, retry);
      }
    });
  }
} // This function detects when a Suspense boundary goes from visible to hidden.
// It returns false if the boundary is already hidden.
// TODO: Use an effect tag.


function isSuspenseBoundaryBeingHidden(current, finishedWork) {
  if (current !== null) {
    var oldState = current.memoizedState;

    if (oldState === null || oldState.dehydrated !== null) {
      var newState = finishedWork.memoizedState;
      return newState !== null && newState.dehydrated === null;
    }
  }

  return false;
}

function commitResetTextContent(current) {

  resetTextContent(current.stateNode);
}

if (typeof Symbol === 'function' && Symbol.for) {
  var symbolFor$1 = Symbol.for;
  symbolFor$1('selector.component');
  symbolFor$1('selector.has_pseudo_class');
  symbolFor$1('selector.role');
  symbolFor$1('selector.test_id');
  symbolFor$1('selector.text');
}
var commitHooks = [];
function onCommitRoot$1() {
  {
    commitHooks.forEach(function (commitHook) {
      return commitHook();
    });
  }
}

var ceil = Math.ceil;
var ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher,
    ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,
    IsSomeRendererActing = ReactSharedInternals.IsSomeRendererActing;
var NoContext =
/*             */
0;
var BatchedContext =
/*               */
1;
var EventContext =
/*                 */
2;
var DiscreteEventContext =
/*         */
4;
var LegacyUnbatchedContext =
/*       */
8;
var RenderContext =
/*                */
16;
var CommitContext =
/*                */
32;
var RetryAfterError =
/*       */
64;
var RootIncomplete = 0;
var RootFatalErrored = 1;
var RootErrored = 2;
var RootSuspended = 3;
var RootSuspendedWithDelay = 4;
var RootCompleted = 5; // Describes where we are in the React execution stack

var executionContext = NoContext; // The root we're working on

var workInProgressRoot = null; // The fiber we're working on

var workInProgress = null; // The lanes we're rendering

var workInProgressRootRenderLanes = NoLanes; // Stack that allows components to change the render lanes for its subtree
// This is a superset of the lanes we started working on at the root. The only
// case where it's different from `workInProgressRootRenderLanes` is when we
// enter a subtree that is hidden and needs to be unhidden: Suspense and
// Offscreen component.
//
// Most things in the work loop should deal with workInProgressRootRenderLanes.
// Most things in begin/complete phases should deal with subtreeRenderLanes.

var subtreeRenderLanes = NoLanes;
var subtreeRenderLanesCursor = createCursor(NoLanes); // Whether to root completed, errored, suspended, etc.

var workInProgressRootExitStatus = RootIncomplete; // A fatal error, if one is thrown

var workInProgressRootFatalError = null; // "Included" lanes refer to lanes that were worked on during this render. It's
// slightly different than `renderLanes` because `renderLanes` can change as you
// enter and exit an Offscreen tree. This value is the combination of all render
// lanes for the entire render phase.

var workInProgressRootIncludedLanes = NoLanes; // The work left over by components that were visited during this render. Only
// includes unprocessed updates, not work in bailed out children.

var workInProgressRootSkippedLanes = NoLanes; // Lanes that were updated (in an interleaved event) during this render.

var workInProgressRootUpdatedLanes = NoLanes; // Lanes that were pinged (in an interleaved event) during this render.

var workInProgressRootPingedLanes = NoLanes;
var mostRecentlyUpdatedRoot = null; // The most recent time we committed a fallback. This lets us ensure a train
// model where we don't commit new loading states in too quick succession.

var globalMostRecentFallbackTime = 0;
var FALLBACK_THROTTLE_MS = 500; // The absolute time for when we should start giving up on rendering
// more and prefer CPU suspense heuristics instead.

var workInProgressRootRenderTargetTime = Infinity; // How long a render is supposed to take before we start following CPU
// suspense heuristics and opt out of rendering more content.

var RENDER_TIMEOUT_MS = 500;

function resetRenderTimer() {
  workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;
}

function getRenderTargetTime() {
  return workInProgressRootRenderTargetTime;
}
var nextEffect = null;
var hasUncaughtError = false;
var firstUncaughtError = null;
var legacyErrorBoundariesThatAlreadyFailed = null;
var rootDoesHavePassiveEffects = false;
var rootWithPendingPassiveEffects = null;
var pendingPassiveEffectsRenderPriority = NoPriority$1;
var pendingPassiveEffectsLanes = NoLanes;
var pendingPassiveHookEffectsMount = [];
var pendingPassiveHookEffectsUnmount = [];
var rootsWithPendingDiscreteUpdates = null; // Use these to prevent an infinite loop of nested updates

var NESTED_UPDATE_LIMIT = 50;
var nestedUpdateCount = 0;
var rootWithNestedUpdates = null;
var NESTED_PASSIVE_UPDATE_LIMIT = 50;
var nestedPassiveUpdateCount = 0; // Marks the need to reschedule pending interactions at these lanes
// during the commit phase. This enables them to be traced across components
// that spawn new work during render. E.g. hidden boundaries, suspended SSR
// hydration or SuspenseList.
// TODO: Can use a bitmask instead of an array

var spawnedWorkDuringRender = null; // If two updates are scheduled within the same event, we should treat their
// event times as simultaneous, even if the actual clock time has advanced
// between the first and second call.

var currentEventTime = NoTimestamp;
var currentEventWipLanes = NoLanes;
var currentEventPendingLanes = NoLanes; // Dev only flag that tracks if passive effects are currently being flushed.
// We warn about state updates for unmounted components differently in this case.

var isFlushingPassiveEffects = false;
var focusedInstanceHandle = null;
var shouldFireAfterActiveInstanceBlur = false;
function getWorkInProgressRoot() {
  return workInProgressRoot;
}
function requestEventTime() {
  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
    // We're inside React, so it's fine to read the actual time.
    return now();
  } // We're not inside React, so we may be in the middle of a browser event.


  if (currentEventTime !== NoTimestamp) {
    // Use the same start time for all updates until we enter React again.
    return currentEventTime;
  } // This is the first update since React yielded. Compute a new start time.


  currentEventTime = now();
  return currentEventTime;
}
function requestUpdateLane(fiber) {
  // Special cases
  var mode = fiber.mode;

  if ((mode & BlockingMode) === NoMode) {
    return SyncLane;
  } else if ((mode & ConcurrentMode) === NoMode) {
    return getCurrentPriorityLevel() === ImmediatePriority$1 ? SyncLane : SyncBatchedLane;
  } // The algorithm for assigning an update to a lane should be stable for all
  // updates at the same priority within the same event. To do this, the inputs
  // to the algorithm must be the same. For example, we use the `renderLanes`
  // to avoid choosing a lane that is already in the middle of rendering.
  //
  // However, the "included" lanes could be mutated in between updates in the
  // same event, like if you perform an update inside `flushSync`. Or any other
  // code path that might call `prepareFreshStack`.
  //
  // The trick we use is to cache the first of each of these inputs within an
  // event. Then reset the cached values once we can be sure the event is over.
  // Our heuristic for that is whenever we enter a concurrent work loop.
  //
  // We'll do the same for `currentEventPendingLanes` below.


  if (currentEventWipLanes === NoLanes) {
    currentEventWipLanes = workInProgressRootIncludedLanes;
  }

  var isTransition = requestCurrentTransition() !== NoTransition;

  if (isTransition) {
    if (currentEventPendingLanes !== NoLanes) {
      currentEventPendingLanes = mostRecentlyUpdatedRoot !== null ? mostRecentlyUpdatedRoot.pendingLanes : NoLanes;
    }

    return findTransitionLane(currentEventWipLanes, currentEventPendingLanes);
  } // TODO: Remove this dependency on the Scheduler priority.
  // To do that, we're replacing it with an update lane priority.


  var schedulerPriority = getCurrentPriorityLevel(); // The old behavior was using the priority level of the Scheduler.
  // This couples React to the Scheduler internals, so we're replacing it
  // with the currentUpdateLanePriority above. As an example of how this
  // could be problematic, if we're not inside `Scheduler.runWithPriority`,
  // then we'll get the priority of the current running Scheduler task,
  // which is probably not what we want.

  var lane;

  if ( // TODO: Temporary. We're removing the concept of discrete updates.
  (executionContext & DiscreteEventContext) !== NoContext && schedulerPriority === UserBlockingPriority$2) {
    lane = findUpdateLane(InputDiscreteLanePriority, currentEventWipLanes);
  } else {
    var schedulerLanePriority = schedulerPriorityToLanePriority(schedulerPriority);

    lane = findUpdateLane(schedulerLanePriority, currentEventWipLanes);
  }

  return lane;
}

function requestRetryLane(fiber) {
  // This is a fork of `requestUpdateLane` designed specifically for Suspense
  // "retries" — a special update that attempts to flip a Suspense boundary
  // from its placeholder state to its primary/resolved state.
  // Special cases
  var mode = fiber.mode;

  if ((mode & BlockingMode) === NoMode) {
    return SyncLane;
  } else if ((mode & ConcurrentMode) === NoMode) {
    return getCurrentPriorityLevel() === ImmediatePriority$1 ? SyncLane : SyncBatchedLane;
  } // See `requestUpdateLane` for explanation of `currentEventWipLanes`


  if (currentEventWipLanes === NoLanes) {
    currentEventWipLanes = workInProgressRootIncludedLanes;
  }

  return findRetryLane(currentEventWipLanes);
}

function scheduleUpdateOnFiber(fiber, lane, eventTime) {
  checkForNestedUpdates();
  warnAboutRenderPhaseUpdatesInDEV(fiber);
  var root = markUpdateLaneFromFiberToRoot(fiber, lane);

  if (root === null) {
    warnAboutUpdateOnUnmountedFiberInDEV(fiber);
    return null;
  } // Mark that the root has a pending update.


  markRootUpdated(root, lane, eventTime);

  if (root === workInProgressRoot) {
    // Received an update to a tree that's in the middle of rendering. Mark
    // that there was an interleaved update work on this root. Unless the
    // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render
    // phase update. In that case, we don't treat render phase updates as if
    // they were interleaved, for backwards compat reasons.
    {
      workInProgressRootUpdatedLanes = mergeLanes(workInProgressRootUpdatedLanes, lane);
    }

    if (workInProgressRootExitStatus === RootSuspendedWithDelay) {
      // The root already suspended with a delay, which means this render
      // definitely won't finish. Since we have a new update, let's mark it as
      // suspended now, right before marking the incoming update. This has the
      // effect of interrupting the current render and switching to the update.
      // TODO: Make sure this doesn't override pings that happen while we've
      // already started rendering.
      markRootSuspended$1(root, workInProgressRootRenderLanes);
    }
  } // TODO: requestUpdateLanePriority also reads the priority. Pass the
  // priority as an argument to that function and this one.


  var priorityLevel = getCurrentPriorityLevel();

  if (lane === SyncLane) {
    if ( // Check if we're inside unbatchedUpdates
    (executionContext & LegacyUnbatchedContext) !== NoContext && // Check if we're not already rendering
    (executionContext & (RenderContext | CommitContext)) === NoContext) {
      // Register pending interactions on the root to avoid losing traced interaction data.
      schedulePendingInteractions(root, lane); // This is a legacy edge case. The initial mount of a ReactDOM.render-ed
      // root inside of batchedUpdates should be synchronous, but layout updates
      // should be deferred until the end of the batch.

      performSyncWorkOnRoot(root);
    } else {
      ensureRootIsScheduled(root, eventTime);
      schedulePendingInteractions(root, lane);

      if (executionContext === NoContext) {
        // Flush the synchronous work now, unless we're already working or inside
        // a batch. This is intentionally inside scheduleUpdateOnFiber instead of
        // scheduleCallbackForFiber to preserve the ability to schedule a callback
        // without immediately flushing it. We only do this for user-initiated
        // updates, to preserve historical behavior of legacy mode.
        resetRenderTimer();
        flushSyncCallbackQueue();
      }
    }
  } else {
    // Schedule a discrete update but only if it's not Sync.
    if ((executionContext & DiscreteEventContext) !== NoContext && ( // Only updates at user-blocking priority or greater are considered
    // discrete, even inside a discrete event.
    priorityLevel === UserBlockingPriority$2 || priorityLevel === ImmediatePriority$1)) {
      // This is the result of a discrete event. Track the lowest priority
      // discrete update per root so we can flush them early, if needed.
      if (rootsWithPendingDiscreteUpdates === null) {
        rootsWithPendingDiscreteUpdates = new Set([root]);
      } else {
        rootsWithPendingDiscreteUpdates.add(root);
      }
    } // Schedule other updates after in case the callback is sync.


    ensureRootIsScheduled(root, eventTime);
    schedulePendingInteractions(root, lane);
  } // We use this when assigning a lane for a transition inside
  // `requestUpdateLane`. We assume it's the same as the root being updated,
  // since in the common case of a single root app it probably is. If it's not
  // the same root, then it's not a huge deal, we just might batch more stuff
  // together more than necessary.


  mostRecentlyUpdatedRoot = root;
} // This is split into a separate function so we can mark a fiber with pending
// work without treating it as a typical update that originates from an event;
// e.g. retrying a Suspense boundary isn't an update, but it does schedule work
// on a fiber.

function markUpdateLaneFromFiberToRoot(sourceFiber, lane) {
  // Update the source fiber's lanes
  sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);
  var alternate = sourceFiber.alternate;

  if (alternate !== null) {
    alternate.lanes = mergeLanes(alternate.lanes, lane);
  }

  {
    if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) {
      warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
    }
  } // Walk the parent path to the root and update the child expiration time.


  var node = sourceFiber;
  var parent = sourceFiber.return;

  while (parent !== null) {
    parent.childLanes = mergeLanes(parent.childLanes, lane);
    alternate = parent.alternate;

    if (alternate !== null) {
      alternate.childLanes = mergeLanes(alternate.childLanes, lane);
    } else {
      {
        if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {
          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
        }
      }
    }

    node = parent;
    parent = parent.return;
  }

  if (node.tag === HostRoot) {
    var root = node.stateNode;
    return root;
  } else {
    return null;
  }
} // Use this function to schedule a task for a root. There's only one task per
// root; if a task was already scheduled, we'll check to make sure the priority
// of the existing task is the same as the priority of the next level that the
// root has work on. This function is called on every update, and right before
// exiting a task.


function ensureRootIsScheduled(root, currentTime) {
  var existingCallbackNode = root.callbackNode; // Check if any lanes are being starved by other work. If so, mark them as
  // expired so we know to work on those next.

  markStarvedLanesAsExpired(root, currentTime); // Determine the next lanes to work on, and their priority.

  var nextLanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes); // This returns the priority level computed during the `getNextLanes` call.

  var newCallbackPriority = returnNextLanesPriority();

  if (nextLanes === NoLanes) {
    // Special case: There's nothing to work on.
    if (existingCallbackNode !== null) {
      cancelCallback(existingCallbackNode);
      root.callbackNode = null;
      root.callbackPriority = NoLanePriority;
    }

    return;
  } // Check if there's an existing task. We may be able to reuse it.


  if (existingCallbackNode !== null) {
    var existingCallbackPriority = root.callbackPriority;

    if (existingCallbackPriority === newCallbackPriority) {
      // The priority hasn't changed. We can reuse the existing task. Exit.
      return;
    } // The priority changed. Cancel the existing callback. We'll schedule a new
    // one below.


    cancelCallback(existingCallbackNode);
  } // Schedule a new callback.


  var newCallbackNode;

  if (newCallbackPriority === SyncLanePriority) {
    // Special case: Sync React callbacks are scheduled on a special
    // internal queue
    newCallbackNode = scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));
  } else if (newCallbackPriority === SyncBatchedLanePriority) {
    newCallbackNode = scheduleCallback(ImmediatePriority$1, performSyncWorkOnRoot.bind(null, root));
  } else {
    var schedulerPriorityLevel = lanePriorityToSchedulerPriority(newCallbackPriority);
    newCallbackNode = scheduleCallback(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root));
  }

  root.callbackPriority = newCallbackPriority;
  root.callbackNode = newCallbackNode;
} // This is the entry point for every concurrent task, i.e. anything that
// goes through Scheduler.


function performConcurrentWorkOnRoot(root) {
  // Since we know we're in a React event, we can clear the current
  // event time. The next update will compute a new event time.
  currentEventTime = NoTimestamp;
  currentEventWipLanes = NoLanes;
  currentEventPendingLanes = NoLanes;

  if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
    {
      throw Error( "Should not already be working." );
    }
  } // Flush any pending passive effects before deciding which lanes to work on,
  // in case they schedule additional work.


  var originalCallbackNode = root.callbackNode;
  var didFlushPassiveEffects = flushPassiveEffects();

  if (didFlushPassiveEffects) {
    // Something in the passive effect phase may have canceled the current task.
    // Check if the task node for this root was changed.
    if (root.callbackNode !== originalCallbackNode) {
      // The current task was canceled. Exit. We don't need to call
      // `ensureRootIsScheduled` because the check above implies either that
      // there's a new task, or that there's no remaining work on this root.
      return null;
    }
  } // Determine the next expiration time to work on, using the fields stored
  // on the root.


  var lanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);

  if (lanes === NoLanes) {
    // Defensive coding. This is never expected to happen.
    return null;
  }

  var exitStatus = renderRootConcurrent(root, lanes);

  if (includesSomeLane(workInProgressRootIncludedLanes, workInProgressRootUpdatedLanes)) {
    // The render included lanes that were updated during the render phase.
    // For example, when unhiding a hidden tree, we include all the lanes
    // that were previously skipped when the tree was hidden. That set of
    // lanes is a superset of the lanes we started rendering with.
    //
    // So we'll throw out the current work and restart.
    prepareFreshStack(root, NoLanes);
  } else if (exitStatus !== RootIncomplete) {
    if (exitStatus === RootErrored) {
      executionContext |= RetryAfterError; // If an error occurred during hydration,
      // discard server response and fall back to client side render.

      if (root.hydrate) {
        root.hydrate = false;
        clearContainer(root.containerInfo);
      } // If something threw an error, try rendering one more time. We'll render
      // synchronously to block concurrent data mutations, and we'll includes
      // all pending updates are included. If it still fails after the second
      // attempt, we'll give up and commit the resulting tree.


      lanes = getLanesToRetrySynchronouslyOnError(root);

      if (lanes !== NoLanes) {
        exitStatus = renderRootSync(root, lanes);
      }
    }

    if (exitStatus === RootFatalErrored) {
      var fatalError = workInProgressRootFatalError;
      prepareFreshStack(root, NoLanes);
      markRootSuspended$1(root, lanes);
      ensureRootIsScheduled(root, now());
      throw fatalError;
    } // We now have a consistent tree. The next step is either to commit it,
    // or, if something suspended, wait to commit it after a timeout.


    var finishedWork = root.current.alternate;
    root.finishedWork = finishedWork;
    root.finishedLanes = lanes;
    finishConcurrentRender(root, exitStatus, lanes);
  }

  ensureRootIsScheduled(root, now());

  if (root.callbackNode === originalCallbackNode) {
    // The task node scheduled for this root is the same one that's
    // currently executed. Need to return a continuation.
    return performConcurrentWorkOnRoot.bind(null, root);
  }

  return null;
}

function finishConcurrentRender(root, exitStatus, lanes) {
  switch (exitStatus) {
    case RootIncomplete:
    case RootFatalErrored:
      {
        {
          {
            throw Error( "Root did not complete. This is a bug in React." );
          }
        }
      }
    // Flow knows about invariant, so it complains if I add a break
    // statement, but eslint doesn't know about invariant, so it complains
    // if I do. eslint-disable-next-line no-fallthrough

    case RootErrored:
      {
        // We should have already attempted to retry this tree. If we reached
        // this point, it errored again. Commit it.
        commitRoot(root);
        break;
      }

    case RootSuspended:
      {
        markRootSuspended$1(root, lanes); // We have an acceptable loading state. We need to figure out if we
        // should immediately commit it or wait a bit.

        if (includesOnlyRetries(lanes) && // do not delay if we're inside an act() scope
        !shouldForceFlushFallbacksInDEV()) {
          // This render only included retries, no updates. Throttle committing
          // retries so that we don't show too many loading states too quickly.
          var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.

          if (msUntilTimeout > 10) {
            var nextLanes = getNextLanes(root, NoLanes);

            if (nextLanes !== NoLanes) {
              // There's additional work on this root.
              break;
            }

            var suspendedLanes = root.suspendedLanes;

            if (!isSubsetOfLanes(suspendedLanes, lanes)) {
              // We should prefer to render the fallback of at the last
              // suspended level. Ping the last suspended level to try
              // rendering it again.
              // FIXME: What if the suspended lanes are Idle? Should not restart.
              requestEventTime();
              markRootPinged(root, suspendedLanes);
              break;
            } // The render is suspended, it hasn't timed out, and there's no
            // lower priority work to do. Instead of committing the fallback
            // immediately, wait for more data to arrive.


            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), msUntilTimeout);
            break;
          }
        } // The work expired. Commit immediately.


        commitRoot(root);
        break;
      }

    case RootSuspendedWithDelay:
      {
        markRootSuspended$1(root, lanes);

        if (includesOnlyTransitions(lanes)) {
          // This is a transition, so we should exit without committing a
          // placeholder and without scheduling a timeout. Delay indefinitely
          // until we receive more data.
          break;
        }

        {
          // This is not a transition, but we did trigger an avoided state.
          // Schedule a placeholder to display after a short delay, using the Just
          // Noticeable Difference.
          // TODO: Is the JND optimization worth the added complexity? If this is
          // the only reason we track the event time, then probably not.
          // Consider removing.
          var mostRecentEventTime = getMostRecentEventTime(root, lanes);
          var eventTimeMs = mostRecentEventTime;
          var timeElapsedMs = now() - eventTimeMs;

          var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs; // Don't bother with a very short suspense time.


          if (_msUntilTimeout > 10) {
            // Instead of committing the fallback immediately, wait for more data
            // to arrive.
            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), _msUntilTimeout);
            break;
          }
        } // Commit the placeholder.


        commitRoot(root);
        break;
      }

    case RootCompleted:
      {
        // The work completed. Ready to commit.
        commitRoot(root);
        break;
      }

    default:
      {
        {
          {
            throw Error( "Unknown root exit status." );
          }
        }
      }
  }
}

function markRootSuspended$1(root, suspendedLanes) {
  // When suspending, we should always exclude lanes that were pinged or (more
  // rarely, since we try to avoid it) updated during the render phase.
  // TODO: Lol maybe there's a better way to factor this besides this
  // obnoxiously named function :)
  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);
  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootUpdatedLanes);
  markRootSuspended(root, suspendedLanes);
} // This is the entry point for synchronous tasks that don't go
// through Scheduler


function performSyncWorkOnRoot(root) {
  if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
    {
      throw Error( "Should not already be working." );
    }
  }

  flushPassiveEffects();
  var lanes;
  var exitStatus;

  if (root === workInProgressRoot && includesSomeLane(root.expiredLanes, workInProgressRootRenderLanes)) {
    // There's a partial tree, and at least one of its lanes has expired. Finish
    // rendering it before rendering the rest of the expired work.
    lanes = workInProgressRootRenderLanes;
    exitStatus = renderRootSync(root, lanes);

    if (includesSomeLane(workInProgressRootIncludedLanes, workInProgressRootUpdatedLanes)) {
      // The render included lanes that were updated during the render phase.
      // For example, when unhiding a hidden tree, we include all the lanes
      // that were previously skipped when the tree was hidden. That set of
      // lanes is a superset of the lanes we started rendering with.
      //
      // Note that this only happens when part of the tree is rendered
      // concurrently. If the whole tree is rendered synchronously, then there
      // are no interleaved events.
      lanes = getNextLanes(root, lanes);
      exitStatus = renderRootSync(root, lanes);
    }
  } else {
    lanes = getNextLanes(root, NoLanes);
    exitStatus = renderRootSync(root, lanes);
  }

  if (root.tag !== LegacyRoot && exitStatus === RootErrored) {
    executionContext |= RetryAfterError; // If an error occurred during hydration,
    // discard server response and fall back to client side render.

    if (root.hydrate) {
      root.hydrate = false;
      clearContainer(root.containerInfo);
    } // If something threw an error, try rendering one more time. We'll render
    // synchronously to block concurrent data mutations, and we'll includes
    // all pending updates are included. If it still fails after the second
    // attempt, we'll give up and commit the resulting tree.


    lanes = getLanesToRetrySynchronouslyOnError(root);

    if (lanes !== NoLanes) {
      exitStatus = renderRootSync(root, lanes);
    }
  }

  if (exitStatus === RootFatalErrored) {
    var fatalError = workInProgressRootFatalError;
    prepareFreshStack(root, NoLanes);
    markRootSuspended$1(root, lanes);
    ensureRootIsScheduled(root, now());
    throw fatalError;
  } // We now have a consistent tree. Because this is a sync render, we
  // will commit it even if something suspended.


  var finishedWork = root.current.alternate;
  root.finishedWork = finishedWork;
  root.finishedLanes = lanes;
  commitRoot(root); // Before exiting, make sure there's a callback scheduled for the next
  // pending level.

  ensureRootIsScheduled(root, now());
  return null;
}
function flushDiscreteUpdates() {
  // TODO: Should be able to flush inside batchedUpdates, but not inside `act`.
  // However, `act` uses `batchedUpdates`, so there's no way to distinguish
  // those two cases. Need to fix this before exposing flushDiscreteUpdates
  // as a public API.
  if ((executionContext & (BatchedContext | RenderContext | CommitContext)) !== NoContext) {
    {
      if ((executionContext & RenderContext) !== NoContext) {
        error('unstable_flushDiscreteUpdates: Cannot flush updates when React is ' + 'already rendering.');
      }
    } // We're already rendering, so we can't synchronously flush pending work.
    // This is probably a nested event dispatch triggered by a lifecycle/effect,
    // like `el.focus()`. Exit.


    return;
  }

  flushPendingDiscreteUpdates(); // If the discrete updates scheduled passive effects, flush them now so that
  // they fire before the next serial event.

  flushPassiveEffects();
}

function flushPendingDiscreteUpdates() {
  if (rootsWithPendingDiscreteUpdates !== null) {
    // For each root with pending discrete updates, schedule a callback to
    // immediately flush them.
    var roots = rootsWithPendingDiscreteUpdates;
    rootsWithPendingDiscreteUpdates = null;
    roots.forEach(function (root) {
      markDiscreteUpdatesExpired(root);
      ensureRootIsScheduled(root, now());
    });
  } // Now flush the immediate queue.


  flushSyncCallbackQueue();
}

function batchedUpdates$1(fn, a) {
  var prevExecutionContext = executionContext;
  executionContext |= BatchedContext;

  try {
    return fn(a);
  } finally {
    executionContext = prevExecutionContext;

    if (executionContext === NoContext) {
      // Flush the immediate callbacks that were scheduled during this batch
      resetRenderTimer();
      flushSyncCallbackQueue();
    }
  }
}
function batchedEventUpdates$1(fn, a) {
  var prevExecutionContext = executionContext;
  executionContext |= EventContext;

  try {
    return fn(a);
  } finally {
    executionContext = prevExecutionContext;

    if (executionContext === NoContext) {
      // Flush the immediate callbacks that were scheduled during this batch
      resetRenderTimer();
      flushSyncCallbackQueue();
    }
  }
}
function discreteUpdates$1(fn, a, b, c, d) {
  var prevExecutionContext = executionContext;
  executionContext |= DiscreteEventContext;

  {
    try {
      return runWithPriority$1(UserBlockingPriority$2, fn.bind(null, a, b, c, d));
    } finally {
      executionContext = prevExecutionContext;

      if (executionContext === NoContext) {
        // Flush the immediate callbacks that were scheduled during this batch
        resetRenderTimer();
        flushSyncCallbackQueue();
      }
    }
  }
}
function unbatchedUpdates(fn, a) {
  var prevExecutionContext = executionContext;
  executionContext &= ~BatchedContext;
  executionContext |= LegacyUnbatchedContext;

  try {
    return fn(a);
  } finally {
    executionContext = prevExecutionContext;

    if (executionContext === NoContext) {
      // Flush the immediate callbacks that were scheduled during this batch
      resetRenderTimer();
      flushSyncCallbackQueue();
    }
  }
}
function flushSync(fn, a) {
  var prevExecutionContext = executionContext;

  if ((prevExecutionContext & (RenderContext | CommitContext)) !== NoContext) {
    {
      error('flushSync was called from inside a lifecycle method. React cannot ' + 'flush when React is already rendering. Consider moving this call to ' + 'a scheduler task or micro task.');
    }

    return fn(a);
  }

  executionContext |= BatchedContext;

  {
    try {
      if (fn) {
        return runWithPriority$1(ImmediatePriority$1, fn.bind(null, a));
      } else {
        return undefined;
      }
    } finally {
      executionContext = prevExecutionContext; // Flush the immediate callbacks that were scheduled during this batch.
      // Note that this will happen even if batchedUpdates is higher up
      // the stack.

      flushSyncCallbackQueue();
    }
  }
}
function pushRenderLanes(fiber, lanes) {
  push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);
  subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);
  workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);
}
function popRenderLanes(fiber) {
  subtreeRenderLanes = subtreeRenderLanesCursor.current;
  pop(subtreeRenderLanesCursor, fiber);
}

function prepareFreshStack(root, lanes) {
  root.finishedWork = null;
  root.finishedLanes = NoLanes;
  var timeoutHandle = root.timeoutHandle;

  if (timeoutHandle !== noTimeout) {
    // The root previous suspended and scheduled a timeout to commit a fallback
    // state. Now that we have additional work, cancel the timeout.
    root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above

    cancelTimeout(timeoutHandle);
  }

  if (workInProgress !== null) {
    var interruptedWork = workInProgress.return;

    while (interruptedWork !== null) {
      unwindInterruptedWork(interruptedWork);
      interruptedWork = interruptedWork.return;
    }
  }

  workInProgressRoot = root;
  workInProgress = createWorkInProgress(root.current, null);
  workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;
  workInProgressRootExitStatus = RootIncomplete;
  workInProgressRootFatalError = null;
  workInProgressRootSkippedLanes = NoLanes;
  workInProgressRootUpdatedLanes = NoLanes;
  workInProgressRootPingedLanes = NoLanes;

  {
    spawnedWorkDuringRender = null;
  }

  {
    ReactStrictModeWarnings.discardPendingWarnings();
  }
}

function handleError(root, thrownValue) {
  do {
    var erroredWork = workInProgress;

    try {
      // Reset module-level state that was set during the render phase.
      resetContextDependencies();
      resetHooksAfterThrow();
      resetCurrentFiber(); // TODO: I found and added this missing line while investigating a
      // separate issue. Write a regression test using string refs.

      ReactCurrentOwner$2.current = null;

      if (erroredWork === null || erroredWork.return === null) {
        // Expected to be working on a non-root fiber. This is a fatal error
        // because there's no ancestor that can handle it; the root is
        // supposed to capture all errors that weren't caught by an error
        // boundary.
        workInProgressRootExitStatus = RootFatalErrored;
        workInProgressRootFatalError = thrownValue; // Set `workInProgress` to null. This represents advancing to the next
        // sibling, or the parent if there are no siblings. But since the root
        // has no siblings nor a parent, we set it to null. Usually this is
        // handled by `completeUnitOfWork` or `unwindWork`, but since we're
        // intentionally not calling those, we need set it here.
        // TODO: Consider calling `unwindWork` to pop the contexts.

        workInProgress = null;
        return;
      }

      if (enableProfilerTimer && erroredWork.mode & ProfileMode) {
        // Record the time spent rendering before an error was thrown. This
        // avoids inaccurate Profiler durations in the case of a
        // suspended render.
        stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);
      }

      throwException(root, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);
      completeUnitOfWork(erroredWork);
    } catch (yetAnotherThrownValue) {
      // Something in the return path also threw.
      thrownValue = yetAnotherThrownValue;

      if (workInProgress === erroredWork && erroredWork !== null) {
        // If this boundary has already errored, then we had trouble processing
        // the error. Bubble it to the next boundary.
        erroredWork = erroredWork.return;
        workInProgress = erroredWork;
      } else {
        erroredWork = workInProgress;
      }

      continue;
    } // Return to the normal work loop.


    return;
  } while (true);
}

function pushDispatcher() {
  var prevDispatcher = ReactCurrentDispatcher$2.current;
  ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;

  if (prevDispatcher === null) {
    // The React isomorphic package does not include a default dispatcher.
    // Instead the first renderer will lazily attach one, in order to give
    // nicer error messages.
    return ContextOnlyDispatcher;
  } else {
    return prevDispatcher;
  }
}

function popDispatcher(prevDispatcher) {
  ReactCurrentDispatcher$2.current = prevDispatcher;
}

function pushInteractions(root) {
  {
    var prevInteractions = tracing$1.__interactionsRef.current;
    tracing$1.__interactionsRef.current = root.memoizedInteractions;
    return prevInteractions;
  }
}

function popInteractions(prevInteractions) {
  {
    tracing$1.__interactionsRef.current = prevInteractions;
  }
}

function markCommitTimeOfFallback() {
  globalMostRecentFallbackTime = now();
}
function markSkippedUpdateLanes(lane) {
  workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);
}
function renderDidSuspend() {
  if (workInProgressRootExitStatus === RootIncomplete) {
    workInProgressRootExitStatus = RootSuspended;
  }
}
function renderDidSuspendDelayIfPossible() {
  if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) {
    workInProgressRootExitStatus = RootSuspendedWithDelay;
  } // Check if there are updates that we skipped tree that might have unblocked
  // this render.


  if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootUpdatedLanes))) {
    // Mark the current render as suspended so that we switch to working on
    // the updates that were skipped. Usually we only suspend at the end of
    // the render phase.
    // TODO: We should probably always mark the root as suspended immediately
    // (inside this function), since by suspending at the end of the render
    // phase introduces a potential mistake where we suspend lanes that were
    // pinged or updated while we were rendering.
    markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);
  }
}
function renderDidError() {
  if (workInProgressRootExitStatus !== RootCompleted) {
    workInProgressRootExitStatus = RootErrored;
  }
} // Called during render to determine if anything has suspended.
// Returns false if we're not sure.

function renderHasNotSuspendedYet() {
  // If something errored or completed, we can't really be sure,
  // so those are false.
  return workInProgressRootExitStatus === RootIncomplete;
}

function renderRootSync(root, lanes) {
  var prevExecutionContext = executionContext;
  executionContext |= RenderContext;
  var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack
  // and prepare a fresh one. Otherwise we'll continue where we left off.

  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
    prepareFreshStack(root, lanes);
    startWorkOnPendingInteractions(root, lanes);
  }

  var prevInteractions = pushInteractions(root);

  do {
    try {
      workLoopSync();
      break;
    } catch (thrownValue) {
      handleError(root, thrownValue);
    }
  } while (true);

  resetContextDependencies();

  {
    popInteractions(prevInteractions);
  }

  executionContext = prevExecutionContext;
  popDispatcher(prevDispatcher);

  if (workInProgress !== null) {
    // This is a sync render, so we should have finished the whole tree.
    {
      {
        throw Error( "Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue." );
      }
    }
  }


  workInProgressRoot = null;
  workInProgressRootRenderLanes = NoLanes;
  return workInProgressRootExitStatus;
} // The work loop is an extremely hot path. Tell Closure not to inline it.

/** @noinline */


function workLoopSync() {
  // Already timed out, so perform work without checking if we need to yield.
  while (workInProgress !== null) {
    performUnitOfWork(workInProgress);
  }
}

function renderRootConcurrent(root, lanes) {
  var prevExecutionContext = executionContext;
  executionContext |= RenderContext;
  var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack
  // and prepare a fresh one. Otherwise we'll continue where we left off.

  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
    resetRenderTimer();
    prepareFreshStack(root, lanes);
    startWorkOnPendingInteractions(root, lanes);
  }

  var prevInteractions = pushInteractions(root);

  do {
    try {
      workLoopConcurrent();
      break;
    } catch (thrownValue) {
      handleError(root, thrownValue);
    }
  } while (true);

  resetContextDependencies();

  {
    popInteractions(prevInteractions);
  }

  popDispatcher(prevDispatcher);
  executionContext = prevExecutionContext;


  if (workInProgress !== null) {

    return RootIncomplete;
  } else {


    workInProgressRoot = null;
    workInProgressRootRenderLanes = NoLanes; // Return the final exit status.

    return workInProgressRootExitStatus;
  }
}
/** @noinline */


function workLoopConcurrent() {
  // Perform work until Scheduler asks us to yield
  while (workInProgress !== null && !shouldYield()) {
    performUnitOfWork(workInProgress);
  }
}

function performUnitOfWork(unitOfWork) {
  // The current, flushed, state of this fiber is the alternate. Ideally
  // nothing should rely on this, but relying on it here means that we don't
  // need an additional field on the work in progress.
  var current = unitOfWork.alternate;
  setCurrentFiber(unitOfWork);
  var next;

  if ( (unitOfWork.mode & ProfileMode) !== NoMode) {
    startProfilerTimer(unitOfWork);
    next = beginWork$1(current, unitOfWork, subtreeRenderLanes);
    stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
  } else {
    next = beginWork$1(current, unitOfWork, subtreeRenderLanes);
  }

  resetCurrentFiber();
  unitOfWork.memoizedProps = unitOfWork.pendingProps;

  if (next === null) {
    // If this doesn't spawn new work, complete the current work.
    completeUnitOfWork(unitOfWork);
  } else {
    workInProgress = next;
  }

  ReactCurrentOwner$2.current = null;
}

function completeUnitOfWork(unitOfWork) {
  // Attempt to complete the current unit of work, then move to the next
  // sibling. If there are no more siblings, return to the parent fiber.
  var completedWork = unitOfWork;

  do {
    // The current, flushed, state of this fiber is the alternate. Ideally
    // nothing should rely on this, but relying on it here means that we don't
    // need an additional field on the work in progress.
    var current = completedWork.alternate;
    var returnFiber = completedWork.return; // Check if the work completed or if something threw.

    if ((completedWork.flags & Incomplete) === NoFlags) {
      setCurrentFiber(completedWork);
      var next = void 0;

      if ( (completedWork.mode & ProfileMode) === NoMode) {
        next = completeWork(current, completedWork, subtreeRenderLanes);
      } else {
        startProfilerTimer(completedWork);
        next = completeWork(current, completedWork, subtreeRenderLanes); // Update render duration assuming we didn't error.

        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
      }

      resetCurrentFiber();

      if (next !== null) {
        // Completing this fiber spawned new work. Work on that next.
        workInProgress = next;
        return;
      }

      resetChildLanes(completedWork);

      if (returnFiber !== null && // Do not append effects to parents if a sibling failed to complete
      (returnFiber.flags & Incomplete) === NoFlags) {
        // Append all the effects of the subtree and this fiber onto the effect
        // list of the parent. The completion order of the children affects the
        // side-effect order.
        if (returnFiber.firstEffect === null) {
          returnFiber.firstEffect = completedWork.firstEffect;
        }

        if (completedWork.lastEffect !== null) {
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = completedWork.firstEffect;
          }

          returnFiber.lastEffect = completedWork.lastEffect;
        } // If this fiber had side-effects, we append it AFTER the children's
        // side-effects. We can perform certain side-effects earlier if needed,
        // by doing multiple passes over the effect list. We don't want to
        // schedule our own side-effect on our own list because if end up
        // reusing children we'll schedule this effect onto itself since we're
        // at the end.


        var flags = completedWork.flags; // Skip both NoWork and PerformedWork tags when creating the effect
        // list. PerformedWork effect is read by React DevTools but shouldn't be
        // committed.

        if (flags > PerformedWork) {
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = completedWork;
          } else {
            returnFiber.firstEffect = completedWork;
          }

          returnFiber.lastEffect = completedWork;
        }
      }
    } else {
      // This fiber did not complete because something threw. Pop values off
      // the stack without entering the complete phase. If this is a boundary,
      // capture values if possible.
      var _next = unwindWork(completedWork); // Because this fiber did not complete, don't reset its expiration time.


      if (_next !== null) {
        // If completing this work spawned new work, do that next. We'll come
        // back here again.
        // Since we're restarting, remove anything that is not a host effect
        // from the effect tag.
        _next.flags &= HostEffectMask;
        workInProgress = _next;
        return;
      }

      if ( (completedWork.mode & ProfileMode) !== NoMode) {
        // Record the render duration for the fiber that errored.
        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false); // Include the time spent working on failed children before continuing.

        var actualDuration = completedWork.actualDuration;
        var child = completedWork.child;

        while (child !== null) {
          actualDuration += child.actualDuration;
          child = child.sibling;
        }

        completedWork.actualDuration = actualDuration;
      }

      if (returnFiber !== null) {
        // Mark the parent fiber as incomplete and clear its effect list.
        returnFiber.firstEffect = returnFiber.lastEffect = null;
        returnFiber.flags |= Incomplete;
      }
    }

    var siblingFiber = completedWork.sibling;

    if (siblingFiber !== null) {
      // If there is more work to do in this returnFiber, do that next.
      workInProgress = siblingFiber;
      return;
    } // Otherwise, return to the parent


    completedWork = returnFiber; // Update the next thing we're working on in case something throws.

    workInProgress = completedWork;
  } while (completedWork !== null); // We've reached the root.


  if (workInProgressRootExitStatus === RootIncomplete) {
    workInProgressRootExitStatus = RootCompleted;
  }
}

function resetChildLanes(completedWork) {
  if ( // TODO: Move this check out of the hot path by moving `resetChildLanes`
  // to switch statement in `completeWork`.
  (completedWork.tag === LegacyHiddenComponent || completedWork.tag === OffscreenComponent) && completedWork.memoizedState !== null && !includesSomeLane(subtreeRenderLanes, OffscreenLane) && (completedWork.mode & ConcurrentMode) !== NoLanes) {
    // The children of this component are hidden. Don't bubble their
    // expiration times.
    return;
  }

  var newChildLanes = NoLanes; // Bubble up the earliest expiration time.

  if ( (completedWork.mode & ProfileMode) !== NoMode) {
    // In profiling mode, resetChildExpirationTime is also used to reset
    // profiler durations.
    var actualDuration = completedWork.actualDuration;
    var treeBaseDuration = completedWork.selfBaseDuration; // When a fiber is cloned, its actualDuration is reset to 0. This value will
    // only be updated if work is done on the fiber (i.e. it doesn't bailout).
    // When work is done, it should bubble to the parent's actualDuration. If
    // the fiber has not been cloned though, (meaning no work was done), then
    // this value will reflect the amount of time spent working on a previous
    // render. In that case it should not bubble. We determine whether it was
    // cloned by comparing the child pointer.

    var shouldBubbleActualDurations = completedWork.alternate === null || completedWork.child !== completedWork.alternate.child;
    var child = completedWork.child;

    while (child !== null) {
      newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));

      if (shouldBubbleActualDurations) {
        actualDuration += child.actualDuration;
      }

      treeBaseDuration += child.treeBaseDuration;
      child = child.sibling;
    }

    var isTimedOutSuspense = completedWork.tag === SuspenseComponent && completedWork.memoizedState !== null;

    if (isTimedOutSuspense) {
      // Don't count time spent in a timed out Suspense subtree as part of the base duration.
      var primaryChildFragment = completedWork.child;

      if (primaryChildFragment !== null) {
        treeBaseDuration -= primaryChildFragment.treeBaseDuration;
      }
    }

    completedWork.actualDuration = actualDuration;
    completedWork.treeBaseDuration = treeBaseDuration;
  } else {
    var _child = completedWork.child;

    while (_child !== null) {
      newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));
      _child = _child.sibling;
    }
  }

  completedWork.childLanes = newChildLanes;
}

function commitRoot(root) {
  var renderPriorityLevel = getCurrentPriorityLevel();
  runWithPriority$1(ImmediatePriority$1, commitRootImpl.bind(null, root, renderPriorityLevel));
  return null;
}

function commitRootImpl(root, renderPriorityLevel) {
  do {
    // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which
    // means `flushPassiveEffects` will sometimes result in additional
    // passive effects. So we need to keep flushing in a loop until there are
    // no more pending effects.
    // TODO: Might be better if `flushPassiveEffects` did not automatically
    // flush synchronous work at the end, to avoid factoring hazards like this.
    flushPassiveEffects();
  } while (rootWithPendingPassiveEffects !== null);

  flushRenderPhaseStrictModeWarningsInDEV();

  if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
    {
      throw Error( "Should not already be working." );
    }
  }

  var finishedWork = root.finishedWork;
  var lanes = root.finishedLanes;

  if (finishedWork === null) {

    return null;
  }

  root.finishedWork = null;
  root.finishedLanes = NoLanes;

  if (!(finishedWork !== root.current)) {
    {
      throw Error( "Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue." );
    }
  } // commitRoot never returns a continuation; it always finishes synchronously.
  // So we can clear these now to allow a new callback to be scheduled.


  root.callbackNode = null; // Update the first and last pending times on this root. The new first
  // pending time is whatever is left on the root fiber.

  var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);
  markRootFinished(root, remainingLanes); // Clear already finished discrete updates in case that a later call of
  // `flushDiscreteUpdates` starts a useless render pass which may cancels
  // a scheduled timeout.

  if (rootsWithPendingDiscreteUpdates !== null) {
    if (!hasDiscreteLanes(remainingLanes) && rootsWithPendingDiscreteUpdates.has(root)) {
      rootsWithPendingDiscreteUpdates.delete(root);
    }
  }

  if (root === workInProgressRoot) {
    // We can reset these now that they are finished.
    workInProgressRoot = null;
    workInProgress = null;
    workInProgressRootRenderLanes = NoLanes;
  } // Get the list of effects.


  var firstEffect;

  if (finishedWork.flags > PerformedWork) {
    // A fiber's effect list consists only of its children, not itself. So if
    // the root has an effect, we need to add it to the end of the list. The
    // resulting list is the set that would belong to the root's parent, if it
    // had one; that is, all the effects in the tree including the root.
    if (finishedWork.lastEffect !== null) {
      finishedWork.lastEffect.nextEffect = finishedWork;
      firstEffect = finishedWork.firstEffect;
    } else {
      firstEffect = finishedWork;
    }
  } else {
    // There is no effect on the root.
    firstEffect = finishedWork.firstEffect;
  }

  if (firstEffect !== null) {

    var prevExecutionContext = executionContext;
    executionContext |= CommitContext;
    var prevInteractions = pushInteractions(root); // Reset this to null before calling lifecycles

    ReactCurrentOwner$2.current = null; // The commit phase is broken into several sub-phases. We do a separate pass
    // of the effect list for each phase: all mutation effects come before all
    // layout effects, and so on.
    // The first phase a "before mutation" phase. We use this phase to read the
    // state of the host tree right before we mutate it. This is where
    // getSnapshotBeforeUpdate is called.

    focusedInstanceHandle = prepareForCommit(root.containerInfo);
    shouldFireAfterActiveInstanceBlur = false;
    nextEffect = firstEffect;

    do {
      {
        invokeGuardedCallback(null, commitBeforeMutationEffects, null);

        if (hasCaughtError()) {
          if (!(nextEffect !== null)) {
            {
              throw Error( "Should be working on an effect." );
            }
          }

          var error = clearCaughtError();
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      }
    } while (nextEffect !== null); // We no longer need to track the active instance fiber


    focusedInstanceHandle = null;

    {
      // Mark the current commit time to be shared by all Profilers in this
      // batch. This enables them to be grouped later.
      recordCommitTime();
    } // The next phase is the mutation phase, where we mutate the host tree.


    nextEffect = firstEffect;

    do {
      {
        invokeGuardedCallback(null, commitMutationEffects, null, root, renderPriorityLevel);

        if (hasCaughtError()) {
          if (!(nextEffect !== null)) {
            {
              throw Error( "Should be working on an effect." );
            }
          }

          var _error = clearCaughtError();

          captureCommitPhaseError(nextEffect, _error);
          nextEffect = nextEffect.nextEffect;
        }
      }
    } while (nextEffect !== null);

    resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after
    // the mutation phase, so that the previous tree is still current during
    // componentWillUnmount, but before the layout phase, so that the finished
    // work is current during componentDidMount/Update.

    root.current = finishedWork; // The next phase is the layout phase, where we call effects that read
    // the host tree after it's been mutated. The idiomatic use case for this is
    // layout, but class component lifecycles also fire here for legacy reasons.

    nextEffect = firstEffect;

    do {
      {
        invokeGuardedCallback(null, commitLayoutEffects, null, root, lanes);

        if (hasCaughtError()) {
          if (!(nextEffect !== null)) {
            {
              throw Error( "Should be working on an effect." );
            }
          }

          var _error2 = clearCaughtError();

          captureCommitPhaseError(nextEffect, _error2);
          nextEffect = nextEffect.nextEffect;
        }
      }
    } while (nextEffect !== null);

    nextEffect = null; // Tell Scheduler to yield at the end of the frame, so the browser has an
    // opportunity to paint.

    requestPaint();

    {
      popInteractions(prevInteractions);
    }

    executionContext = prevExecutionContext;
  } else {
    // No effects.
    root.current = finishedWork; // Measure these anyway so the flamegraph explicitly shows that there were
    // no effects.
    // TODO: Maybe there's a better way to report this.

    {
      recordCommitTime();
    }
  }

  var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;

  if (rootDoesHavePassiveEffects) {
    // This commit has passive effects. Stash a reference to them. But don't
    // schedule a callback until after flushing layout work.
    rootDoesHavePassiveEffects = false;
    rootWithPendingPassiveEffects = root;
    pendingPassiveEffectsLanes = lanes;
    pendingPassiveEffectsRenderPriority = renderPriorityLevel;
  } else {
    // We are done with the effect chain at this point so let's clear the
    // nextEffect pointers to assist with GC. If we have passive effects, we'll
    // clear this in flushPassiveEffects.
    nextEffect = firstEffect;

    while (nextEffect !== null) {
      var nextNextEffect = nextEffect.nextEffect;
      nextEffect.nextEffect = null;

      if (nextEffect.flags & Deletion) {
        detachFiberAfterEffects(nextEffect);
      }

      nextEffect = nextNextEffect;
    }
  } // Read this again, since an effect might have updated it


  remainingLanes = root.pendingLanes; // Check if there's remaining work on this root

  if (remainingLanes !== NoLanes) {
    {
      if (spawnedWorkDuringRender !== null) {
        var expirationTimes = spawnedWorkDuringRender;
        spawnedWorkDuringRender = null;

        for (var i = 0; i < expirationTimes.length; i++) {
          scheduleInteractions(root, expirationTimes[i], root.memoizedInteractions);
        }
      }

      schedulePendingInteractions(root, remainingLanes);
    }
  } else {
    // If there's no remaining work, we can clear the set of already failed
    // error boundaries.
    legacyErrorBoundariesThatAlreadyFailed = null;
  }

  {
    if (!rootDidHavePassiveEffects) {
      // If there are no passive effects, then we can complete the pending interactions.
      // Otherwise, we'll wait until after the passive effects are flushed.
      // Wait to do this until after remaining work has been scheduled,
      // so that we don't prematurely signal complete for interactions when there's e.g. hidden work.
      finishPendingInteractions(root, lanes);
    }
  }

  if (remainingLanes === SyncLane) {
    // Count the number of times the root synchronously re-renders without
    // finishing. If there are too many, it indicates an infinite update loop.
    if (root === rootWithNestedUpdates) {
      nestedUpdateCount++;
    } else {
      nestedUpdateCount = 0;
      rootWithNestedUpdates = root;
    }
  } else {
    nestedUpdateCount = 0;
  }

  onCommitRoot(finishedWork.stateNode, renderPriorityLevel);

  {
    onCommitRoot$1();
  } // Always call this before exiting `commitRoot`, to ensure that any
  // additional work on this root is scheduled.


  ensureRootIsScheduled(root, now());

  if (hasUncaughtError) {
    hasUncaughtError = false;
    var _error3 = firstUncaughtError;
    firstUncaughtError = null;
    throw _error3;
  }

  if ((executionContext & LegacyUnbatchedContext) !== NoContext) {
    // a ReactDOM.render-ed root inside of batchedUpdates. The commit fired
    // synchronously, but layout updates should be deferred until the end
    // of the batch.


    return null;
  } // If layout work was scheduled, flush it now.


  flushSyncCallbackQueue();

  return null;
}

function commitBeforeMutationEffects() {
  while (nextEffect !== null) {
    var current = nextEffect.alternate;

    if (!shouldFireAfterActiveInstanceBlur && focusedInstanceHandle !== null) {
      if ((nextEffect.flags & Deletion) !== NoFlags) {
        if (doesFiberContain(nextEffect, focusedInstanceHandle)) {
          shouldFireAfterActiveInstanceBlur = true;
        }
      } else {
        // TODO: Move this out of the hot path using a dedicated effect tag.
        if (nextEffect.tag === SuspenseComponent && isSuspenseBoundaryBeingHidden(current, nextEffect) && doesFiberContain(nextEffect, focusedInstanceHandle)) {
          shouldFireAfterActiveInstanceBlur = true;
        }
      }
    }

    var flags = nextEffect.flags;

    if ((flags & Snapshot) !== NoFlags) {
      setCurrentFiber(nextEffect);
      commitBeforeMutationLifeCycles(current, nextEffect);
      resetCurrentFiber();
    }

    if ((flags & Passive) !== NoFlags) {
      // If there are passive effects, schedule a callback to flush at
      // the earliest opportunity.
      if (!rootDoesHavePassiveEffects) {
        rootDoesHavePassiveEffects = true;
        scheduleCallback(NormalPriority$1, function () {
          flushPassiveEffects();
          return null;
        });
      }
    }

    nextEffect = nextEffect.nextEffect;
  }
}

function commitMutationEffects(root, renderPriorityLevel) {
  // TODO: Should probably move the bulk of this function to commitWork.
  while (nextEffect !== null) {
    setCurrentFiber(nextEffect);
    var flags = nextEffect.flags;

    if (flags & ContentReset) {
      commitResetTextContent(nextEffect);
    }

    if (flags & Ref) {
      var current = nextEffect.alternate;

      if (current !== null) {
        commitDetachRef(current);
      }
    } // The following switch statement is only concerned about placement,
    // updates, and deletions. To avoid needing to add a case for every possible
    // bitmap value, we remove the secondary effects from the effect tag and
    // switch on that value.


    var primaryFlags = flags & (Placement | Update | Deletion | Hydrating);

    switch (primaryFlags) {
      case Placement:
        {
          commitPlacement(nextEffect); // Clear the "placement" from effect tag so that we know that this is
          // inserted, before any life-cycles like componentDidMount gets called.
          // TODO: findDOMNode doesn't rely on this any more but isMounted does
          // and isMounted is deprecated anyway so we should be able to kill this.

          nextEffect.flags &= ~Placement;
          break;
        }

      case PlacementAndUpdate:
        {
          // Placement
          commitPlacement(nextEffect); // Clear the "placement" from effect tag so that we know that this is
          // inserted, before any life-cycles like componentDidMount gets called.

          nextEffect.flags &= ~Placement; // Update

          var _current = nextEffect.alternate;
          commitWork(_current, nextEffect);
          break;
        }

      case Hydrating:
        {
          nextEffect.flags &= ~Hydrating;
          break;
        }

      case HydratingAndUpdate:
        {
          nextEffect.flags &= ~Hydrating; // Update

          var _current2 = nextEffect.alternate;
          commitWork(_current2, nextEffect);
          break;
        }

      case Update:
        {
          var _current3 = nextEffect.alternate;
          commitWork(_current3, nextEffect);
          break;
        }

      case Deletion:
        {
          commitDeletion(root, nextEffect);
          break;
        }
    }

    resetCurrentFiber();
    nextEffect = nextEffect.nextEffect;
  }
}

function commitLayoutEffects(root, committedLanes) {


  while (nextEffect !== null) {
    setCurrentFiber(nextEffect);
    var flags = nextEffect.flags;

    if (flags & (Update | Callback)) {
      var current = nextEffect.alternate;
      commitLifeCycles(root, current, nextEffect);
    }

    {
      if (flags & Ref) {
        commitAttachRef(nextEffect);
      }
    }

    resetCurrentFiber();
    nextEffect = nextEffect.nextEffect;
  }
}

function flushPassiveEffects() {
  // Returns whether passive effects were flushed.
  if (pendingPassiveEffectsRenderPriority !== NoPriority$1) {
    var priorityLevel = pendingPassiveEffectsRenderPriority > NormalPriority$1 ? NormalPriority$1 : pendingPassiveEffectsRenderPriority;
    pendingPassiveEffectsRenderPriority = NoPriority$1;

    {
      return runWithPriority$1(priorityLevel, flushPassiveEffectsImpl);
    }
  }

  return false;
}
function enqueuePendingPassiveHookEffectMount(fiber, effect) {
  pendingPassiveHookEffectsMount.push(effect, fiber);

  if (!rootDoesHavePassiveEffects) {
    rootDoesHavePassiveEffects = true;
    scheduleCallback(NormalPriority$1, function () {
      flushPassiveEffects();
      return null;
    });
  }
}
function enqueuePendingPassiveHookEffectUnmount(fiber, effect) {
  pendingPassiveHookEffectsUnmount.push(effect, fiber);

  {
    fiber.flags |= PassiveUnmountPendingDev;
    var alternate = fiber.alternate;

    if (alternate !== null) {
      alternate.flags |= PassiveUnmountPendingDev;
    }
  }

  if (!rootDoesHavePassiveEffects) {
    rootDoesHavePassiveEffects = true;
    scheduleCallback(NormalPriority$1, function () {
      flushPassiveEffects();
      return null;
    });
  }
}

function invokePassiveEffectCreate(effect) {
  var create = effect.create;
  effect.destroy = create();
}

function flushPassiveEffectsImpl() {
  if (rootWithPendingPassiveEffects === null) {
    return false;
  }

  var root = rootWithPendingPassiveEffects;
  var lanes = pendingPassiveEffectsLanes;
  rootWithPendingPassiveEffects = null;
  pendingPassiveEffectsLanes = NoLanes;

  if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
    {
      throw Error( "Cannot flush passive effects while already rendering." );
    }
  }

  {
    isFlushingPassiveEffects = true;
  }

  var prevExecutionContext = executionContext;
  executionContext |= CommitContext;
  var prevInteractions = pushInteractions(root); // It's important that ALL pending passive effect destroy functions are called
  // before ANY passive effect create functions are called.
  // Otherwise effects in sibling components might interfere with each other.
  // e.g. a destroy function in one component may unintentionally override a ref
  // value set by a create function in another component.
  // Layout effects have the same constraint.
  // First pass: Destroy stale passive effects.

  var unmountEffects = pendingPassiveHookEffectsUnmount;
  pendingPassiveHookEffectsUnmount = [];

  for (var i = 0; i < unmountEffects.length; i += 2) {
    var _effect = unmountEffects[i];
    var fiber = unmountEffects[i + 1];
    var destroy = _effect.destroy;
    _effect.destroy = undefined;

    {
      fiber.flags &= ~PassiveUnmountPendingDev;
      var alternate = fiber.alternate;

      if (alternate !== null) {
        alternate.flags &= ~PassiveUnmountPendingDev;
      }
    }

    if (typeof destroy === 'function') {
      {
        setCurrentFiber(fiber);

        {
          invokeGuardedCallback(null, destroy, null);
        }

        if (hasCaughtError()) {
          if (!(fiber !== null)) {
            {
              throw Error( "Should be working on an effect." );
            }
          }

          var error = clearCaughtError();
          captureCommitPhaseError(fiber, error);
        }

        resetCurrentFiber();
      }
    }
  } // Second pass: Create new passive effects.


  var mountEffects = pendingPassiveHookEffectsMount;
  pendingPassiveHookEffectsMount = [];

  for (var _i = 0; _i < mountEffects.length; _i += 2) {
    var _effect2 = mountEffects[_i];
    var _fiber = mountEffects[_i + 1];

    {
      setCurrentFiber(_fiber);

      {
        invokeGuardedCallback(null, invokePassiveEffectCreate, null, _effect2);
      }

      if (hasCaughtError()) {
        if (!(_fiber !== null)) {
          {
            throw Error( "Should be working on an effect." );
          }
        }

        var _error4 = clearCaughtError();

        captureCommitPhaseError(_fiber, _error4);
      }

      resetCurrentFiber();
    }
  } // Note: This currently assumes there are no passive effects on the root fiber
  // because the root is not part of its own effect list.
  // This could change in the future.


  var effect = root.current.firstEffect;

  while (effect !== null) {
    var nextNextEffect = effect.nextEffect; // Remove nextEffect pointer to assist GC

    effect.nextEffect = null;

    if (effect.flags & Deletion) {
      detachFiberAfterEffects(effect);
    }

    effect = nextNextEffect;
  }

  {
    popInteractions(prevInteractions);
    finishPendingInteractions(root, lanes);
  }

  {
    isFlushingPassiveEffects = false;
  }

  executionContext = prevExecutionContext;
  flushSyncCallbackQueue(); // If additional passive effects were scheduled, increment a counter. If this
  // exceeds the limit, we'll fire a warning.

  nestedPassiveUpdateCount = rootWithPendingPassiveEffects === null ? 0 : nestedPassiveUpdateCount + 1;
  return true;
}

function isAlreadyFailedLegacyErrorBoundary(instance) {
  return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
}
function markLegacyErrorBoundaryAsFailed(instance) {
  if (legacyErrorBoundariesThatAlreadyFailed === null) {
    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);
  } else {
    legacyErrorBoundariesThatAlreadyFailed.add(instance);
  }
}

function prepareToThrowUncaughtError(error) {
  if (!hasUncaughtError) {
    hasUncaughtError = true;
    firstUncaughtError = error;
  }
}

var onUncaughtError = prepareToThrowUncaughtError;

function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
  var errorInfo = createCapturedValue(error, sourceFiber);
  var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);
  enqueueUpdate(rootFiber, update);
  var eventTime = requestEventTime();
  var root = markUpdateLaneFromFiberToRoot(rootFiber, SyncLane);

  if (root !== null) {
    markRootUpdated(root, SyncLane, eventTime);
    ensureRootIsScheduled(root, eventTime);
    schedulePendingInteractions(root, SyncLane);
  }
}

function captureCommitPhaseError(sourceFiber, error) {
  if (sourceFiber.tag === HostRoot) {
    // Error was thrown at the root. There is no parent, so the root
    // itself should capture it.
    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);
    return;
  }

  var fiber = sourceFiber.return;

  while (fiber !== null) {
    if (fiber.tag === HostRoot) {
      captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);
      return;
    } else if (fiber.tag === ClassComponent) {
      var ctor = fiber.type;
      var instance = fiber.stateNode;

      if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
        var errorInfo = createCapturedValue(error, sourceFiber);
        var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);
        enqueueUpdate(fiber, update);
        var eventTime = requestEventTime();
        var root = markUpdateLaneFromFiberToRoot(fiber, SyncLane);

        if (root !== null) {
          markRootUpdated(root, SyncLane, eventTime);
          ensureRootIsScheduled(root, eventTime);
          schedulePendingInteractions(root, SyncLane);
        } else {
          // This component has already been unmounted.
          // We can't schedule any follow up work for the root because the fiber is already unmounted,
          // but we can still call the log-only boundary so the error isn't swallowed.
          //
          // TODO This is only a temporary bandaid for the old reconciler fork.
          // We can delete this special case once the new fork is merged.
          if (typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
            try {
              instance.componentDidCatch(error, errorInfo);
            } catch (errorToIgnore) {// TODO Ignore this error? Rethrow it?
              // This is kind of an edge case.
            }
          }
        }

        return;
      }
    }

    fiber = fiber.return;
  }
}
function pingSuspendedRoot(root, wakeable, pingedLanes) {
  var pingCache = root.pingCache;

  if (pingCache !== null) {
    // The wakeable resolved, so we no longer need to memoize, because it will
    // never be thrown again.
    pingCache.delete(wakeable);
  }

  var eventTime = requestEventTime();
  markRootPinged(root, pingedLanes);

  if (workInProgressRoot === root && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {
    // Received a ping at the same priority level at which we're currently
    // rendering. We might want to restart this render. This should mirror
    // the logic of whether or not a root suspends once it completes.
    // TODO: If we're rendering sync either due to Sync, Batched or expired,
    // we should probably never restart.
    // If we're suspended with delay, or if it's a retry, we'll always suspend
    // so we can always restart.
    if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {
      // Restart from the root.
      prepareFreshStack(root, NoLanes);
    } else {
      // Even though we can't restart right now, we might get an
      // opportunity later. So we mark this render as having a ping.
      workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);
    }
  }

  ensureRootIsScheduled(root, eventTime);
  schedulePendingInteractions(root, pingedLanes);
}

function retryTimedOutBoundary(boundaryFiber, retryLane) {
  // The boundary fiber (a Suspense component or SuspenseList component)
  // previously was rendered in its fallback state. One of the promises that
  // suspended it has resolved, which means at least part of the tree was
  // likely unblocked. Try rendering again, at a new expiration time.
  if (retryLane === NoLane) {
    retryLane = requestRetryLane(boundaryFiber);
  } // TODO: Special case idle priority?


  var eventTime = requestEventTime();
  var root = markUpdateLaneFromFiberToRoot(boundaryFiber, retryLane);

  if (root !== null) {
    markRootUpdated(root, retryLane, eventTime);
    ensureRootIsScheduled(root, eventTime);
    schedulePendingInteractions(root, retryLane);
  }
}
function resolveRetryWakeable(boundaryFiber, wakeable) {
  var retryLane = NoLane; // Default

  var retryCache;

  {
    retryCache = boundaryFiber.stateNode;
  }

  if (retryCache !== null) {
    // The wakeable resolved, so we no longer need to memoize, because it will
    // never be thrown again.
    retryCache.delete(wakeable);
  }

  retryTimedOutBoundary(boundaryFiber, retryLane);
} // Computes the next Just Noticeable Difference (JND) boundary.
// The theory is that a person can't tell the difference between small differences in time.
// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable
// difference in the experience. However, waiting for longer might mean that we can avoid
// showing an intermediate loading state. The longer we have already waited, the harder it
// is to tell small differences in time. Therefore, the longer we've already waited,
// the longer we can wait additionally. At some point we have to give up though.
// We pick a train model where the next boundary commits at a consistent schedule.
// These particular numbers are vague estimates. We expect to adjust them based on research.

function jnd(timeElapsed) {
  return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
}

function checkForNestedUpdates() {
  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
    nestedUpdateCount = 0;
    rootWithNestedUpdates = null;

    {
      {
        throw Error( "Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops." );
      }
    }
  }

  {
    if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
      nestedPassiveUpdateCount = 0;

      error('Maximum update depth exceeded. This can happen when a component ' + "calls setState inside useEffect, but useEffect either doesn't " + 'have a dependency array, or one of the dependencies changes on ' + 'every render.');
    }
  }
}

function flushRenderPhaseStrictModeWarningsInDEV() {
  {
    ReactStrictModeWarnings.flushLegacyContextWarning();

    {
      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
    }
  }
}

var didWarnStateUpdateForNotYetMountedComponent = null;

function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
  {
    if ((executionContext & RenderContext) !== NoContext) {
      // We let the other warning about render phase updates deal with this one.
      return;
    }

    if (!(fiber.mode & (BlockingMode | ConcurrentMode))) {
      return;
    }

    var tag = fiber.tag;

    if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent && tag !== Block) {
      // Only warn for user-defined components, not internal ones like Suspense.
      return;
    } // We show the whole stack but dedupe on the top component's name because
    // the problematic code almost always lies inside that component.


    var componentName = getComponentName(fiber.type) || 'ReactComponent';

    if (didWarnStateUpdateForNotYetMountedComponent !== null) {
      if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {
        return;
      }

      didWarnStateUpdateForNotYetMountedComponent.add(componentName);
    } else {
      didWarnStateUpdateForNotYetMountedComponent = new Set([componentName]);
    }

    var previousFiber = current;

    try {
      setCurrentFiber(fiber);

      error("Can't perform a React state update on a component that hasn't mounted yet. " + 'This indicates that you have a side-effect in your render function that ' + 'asynchronously later calls tries to update the component. Move this work to ' + 'useEffect instead.');
    } finally {
      if (previousFiber) {
        setCurrentFiber(fiber);
      } else {
        resetCurrentFiber();
      }
    }
  }
}

var didWarnStateUpdateForUnmountedComponent = null;

function warnAboutUpdateOnUnmountedFiberInDEV(fiber) {
  {
    var tag = fiber.tag;

    if (tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent && tag !== Block) {
      // Only warn for user-defined components, not internal ones like Suspense.
      return;
    } // If there are pending passive effects unmounts for this Fiber,
    // we can assume that they would have prevented this update.


    if ((fiber.flags & PassiveUnmountPendingDev) !== NoFlags) {
      return;
    } // We show the whole stack but dedupe on the top component's name because
    // the problematic code almost always lies inside that component.


    var componentName = getComponentName(fiber.type) || 'ReactComponent';

    if (didWarnStateUpdateForUnmountedComponent !== null) {
      if (didWarnStateUpdateForUnmountedComponent.has(componentName)) {
        return;
      }

      didWarnStateUpdateForUnmountedComponent.add(componentName);
    } else {
      didWarnStateUpdateForUnmountedComponent = new Set([componentName]);
    }

    if (isFlushingPassiveEffects) ; else {
      var previousFiber = current;

      try {
        setCurrentFiber(fiber);

        error("Can't perform a React state update on an unmounted component. This " + 'is a no-op, but it indicates a memory leak in your application. To ' + 'fix, cancel all subscriptions and asynchronous tasks in %s.', tag === ClassComponent ? 'the componentWillUnmount method' : 'a useEffect cleanup function');
      } finally {
        if (previousFiber) {
          setCurrentFiber(fiber);
        } else {
          resetCurrentFiber();
        }
      }
    }
  }
}

var beginWork$1;

{
  var dummyFiber = null;

  beginWork$1 = function (current, unitOfWork, lanes) {
    // If a component throws an error, we replay it again in a synchronously
    // dispatched event, so that the debugger will treat it as an uncaught
    // error See ReactErrorUtils for more information.
    // Before entering the begin phase, copy the work-in-progress onto a dummy
    // fiber. If beginWork throws, we'll use this to reset the state.
    var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);

    try {
      return beginWork(current, unitOfWork, lanes);
    } catch (originalError) {
      if (originalError !== null && typeof originalError === 'object' && typeof originalError.then === 'function') {
        // Don't replay promises. Treat everything else like an error.
        throw originalError;
      } // Keep this code in sync with handleError; any changes here must have
      // corresponding changes there.


      resetContextDependencies();
      resetHooksAfterThrow(); // Don't reset current debug fiber, since we're about to work on the
      // same fiber again.
      // Unwind the failed stack frame

      unwindInterruptedWork(unitOfWork); // Restore the original properties of the fiber.

      assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);

      if ( unitOfWork.mode & ProfileMode) {
        // Reset the profiler timer.
        startProfilerTimer(unitOfWork);
      } // Run beginWork again.


      invokeGuardedCallback(null, beginWork, null, current, unitOfWork, lanes);

      if (hasCaughtError()) {
        var replayError = clearCaughtError(); // `invokeGuardedCallback` sometimes sets an expando `_suppressLogging`.
        // Rethrow this error instead of the original one.

        throw replayError;
      } else {
        // This branch is reachable if the render phase is impure.
        throw originalError;
      }
    }
  };
}

var didWarnAboutUpdateInRender = false;
var didWarnAboutUpdateInRenderForAnotherComponent;

{
  didWarnAboutUpdateInRenderForAnotherComponent = new Set();
}

function warnAboutRenderPhaseUpdatesInDEV(fiber) {
  {
    if (isRendering && (executionContext & RenderContext) !== NoContext && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) {
      switch (fiber.tag) {
        case FunctionComponent:
        case ForwardRef:
        case SimpleMemoComponent:
          {
            var renderingComponentName = workInProgress && getComponentName(workInProgress.type) || 'Unknown'; // Dedupe by the rendering component because it's the one that needs to be fixed.

            var dedupeKey = renderingComponentName;

            if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {
              didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);
              var setStateComponentName = getComponentName(fiber.type) || 'Unknown';

              error('Cannot update a component (`%s`) while rendering a ' + 'different component (`%s`). To locate the bad setState() call inside `%s`, ' + 'follow the stack trace as described in https://reactjs.org/link/setstate-in-render', setStateComponentName, renderingComponentName, renderingComponentName);
            }

            break;
          }

        case ClassComponent:
          {
            if (!didWarnAboutUpdateInRender) {
              error('Cannot update during an existing state transition (such as ' + 'within `render`). Render methods should be a pure ' + 'function of props and state.');

              didWarnAboutUpdateInRender = true;
            }

            break;
          }
      }
    }
  }
} // a 'shared' variable that changes when act() opens/closes in tests.


var IsThisRendererActing = {
  current: false
};
function warnIfNotScopedWithMatchingAct(fiber) {
  {
    if ( IsSomeRendererActing.current === true && IsThisRendererActing.current !== true) {
      var previousFiber = current;

      try {
        setCurrentFiber(fiber);

        error("It looks like you're using the wrong act() around your test interactions.\n" + 'Be sure to use the matching version of act() corresponding to your renderer:\n\n' + '// for react-dom:\n' + // Break up imports to avoid accidentally parsing them as dependencies.
        'import {act} fr' + "om 'react-dom/test-utils';\n" + '// ...\n' + 'act(() => ...);\n\n' + '// for react-test-renderer:\n' + // Break up imports to avoid accidentally parsing them as dependencies.
        'import TestRenderer fr' + "om react-test-renderer';\n" + 'const {act} = TestRenderer;\n' + '// ...\n' + 'act(() => ...);');
      } finally {
        if (previousFiber) {
          setCurrentFiber(fiber);
        } else {
          resetCurrentFiber();
        }
      }
    }
  }
}
function warnIfNotCurrentlyActingEffectsInDEV(fiber) {
  {
    if ( (fiber.mode & StrictMode) !== NoMode && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) {
      error('An update to %s ran an effect, but was not wrapped in act(...).\n\n' + 'When testing, code that causes React state updates should be ' + 'wrapped into act(...):\n\n' + 'act(() => {\n' + '  /* fire events that update state */\n' + '});\n' + '/* assert on the output */\n\n' + "This ensures that you're testing the behavior the user would see " + 'in the browser.' + ' Learn more at https://reactjs.org/link/wrap-tests-with-act', getComponentName(fiber.type));
    }
  }
}

function warnIfNotCurrentlyActingUpdatesInDEV(fiber) {
  {
    if ( executionContext === NoContext && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) {
      var previousFiber = current;

      try {
        setCurrentFiber(fiber);

        error('An update to %s inside a test was not wrapped in act(...).\n\n' + 'When testing, code that causes React state updates should be ' + 'wrapped into act(...):\n\n' + 'act(() => {\n' + '  /* fire events that update state */\n' + '});\n' + '/* assert on the output */\n\n' + "This ensures that you're testing the behavior the user would see " + 'in the browser.' + ' Learn more at https://reactjs.org/link/wrap-tests-with-act', getComponentName(fiber.type));
      } finally {
        if (previousFiber) {
          setCurrentFiber(fiber);
        } else {
          resetCurrentFiber();
        }
      }
    }
  }
}

var warnIfNotCurrentlyActingUpdatesInDev = warnIfNotCurrentlyActingUpdatesInDEV; // In tests, we want to enforce a mocked scheduler.

var didWarnAboutUnmockedScheduler = false; // TODO Before we release concurrent mode, revisit this and decide whether a mocked
// scheduler is the actual recommendation. The alternative could be a testing build,
// a new lib, or whatever; we dunno just yet. This message is for early adopters
// to get their tests right.

function warnIfUnmockedScheduler(fiber) {
  {
    if (didWarnAboutUnmockedScheduler === false && Scheduler.unstable_flushAllWithoutAsserting === undefined) {
      if (fiber.mode & BlockingMode || fiber.mode & ConcurrentMode) {
        didWarnAboutUnmockedScheduler = true;

        error('In Concurrent or Sync modes, the "scheduler" module needs to be mocked ' + 'to guarantee consistent behaviour across tests and browsers. ' + 'For example, with jest: \n' + // Break up requires to avoid accidentally parsing them as dependencies.
        "jest.mock('scheduler', () => require" + "('scheduler/unstable_mock'));\n\n" + 'For more info, visit https://reactjs.org/link/mock-scheduler');
      }
    }
  }
}

function computeThreadID(root, lane) {
  // Interaction threads are unique per root and expiration time.
  // NOTE: Intentionally unsound cast. All that matters is that it's a number
  // and it represents a batch of work. Could make a helper function instead,
  // but meh this is fine for now.
  return lane * 1000 + root.interactionThreadID;
}

function markSpawnedWork(lane) {

  if (spawnedWorkDuringRender === null) {
    spawnedWorkDuringRender = [lane];
  } else {
    spawnedWorkDuringRender.push(lane);
  }
}

function scheduleInteractions(root, lane, interactions) {

  if (interactions.size > 0) {
    var pendingInteractionMap = root.pendingInteractionMap;
    var pendingInteractions = pendingInteractionMap.get(lane);

    if (pendingInteractions != null) {
      interactions.forEach(function (interaction) {
        if (!pendingInteractions.has(interaction)) {
          // Update the pending async work count for previously unscheduled interaction.
          interaction.__count++;
        }

        pendingInteractions.add(interaction);
      });
    } else {
      pendingInteractionMap.set(lane, new Set(interactions)); // Update the pending async work count for the current interactions.

      interactions.forEach(function (interaction) {
        interaction.__count++;
      });
    }

    var subscriber = tracing$1.__subscriberRef.current;

    if (subscriber !== null) {
      var threadID = computeThreadID(root, lane);
      subscriber.onWorkScheduled(interactions, threadID);
    }
  }
}

function schedulePendingInteractions(root, lane) {

  scheduleInteractions(root, lane, tracing$1.__interactionsRef.current);
}

function startWorkOnPendingInteractions(root, lanes) {
  // we can accurately attribute time spent working on it, And so that cascading
  // work triggered during the render phase will be associated with it.


  var interactions = new Set();
  root.pendingInteractionMap.forEach(function (scheduledInteractions, scheduledLane) {
    if (includesSomeLane(lanes, scheduledLane)) {
      scheduledInteractions.forEach(function (interaction) {
        return interactions.add(interaction);
      });
    }
  }); // Store the current set of interactions on the FiberRoot for a few reasons:
  // We can re-use it in hot functions like performConcurrentWorkOnRoot()
  // without having to recalculate it. We will also use it in commitWork() to
  // pass to any Profiler onRender() hooks. This also provides DevTools with a
  // way to access it when the onCommitRoot() hook is called.

  root.memoizedInteractions = interactions;

  if (interactions.size > 0) {
    var subscriber = tracing$1.__subscriberRef.current;

    if (subscriber !== null) {
      var threadID = computeThreadID(root, lanes);

      try {
        subscriber.onWorkStarted(interactions, threadID);
      } catch (error) {
        // If the subscriber throws, rethrow it in a separate task
        scheduleCallback(ImmediatePriority$1, function () {
          throw error;
        });
      }
    }
  }
}

function finishPendingInteractions(root, committedLanes) {

  var remainingLanesAfterCommit = root.pendingLanes;
  var subscriber;

  try {
    subscriber = tracing$1.__subscriberRef.current;

    if (subscriber !== null && root.memoizedInteractions.size > 0) {
      // FIXME: More than one lane can finish in a single commit.
      var threadID = computeThreadID(root, committedLanes);
      subscriber.onWorkStopped(root.memoizedInteractions, threadID);
    }
  } catch (error) {
    // If the subscriber throws, rethrow it in a separate task
    scheduleCallback(ImmediatePriority$1, function () {
      throw error;
    });
  } finally {
    // Clear completed interactions from the pending Map.
    // Unless the render was suspended or cascading work was scheduled,
    // In which case– leave pending interactions until the subsequent render.
    var pendingInteractionMap = root.pendingInteractionMap;
    pendingInteractionMap.forEach(function (scheduledInteractions, lane) {
      // Only decrement the pending interaction count if we're done.
      // If there's still work at the current priority,
      // That indicates that we are waiting for suspense data.
      if (!includesSomeLane(remainingLanesAfterCommit, lane)) {
        pendingInteractionMap.delete(lane);
        scheduledInteractions.forEach(function (interaction) {
          interaction.__count--;

          if (subscriber !== null && interaction.__count === 0) {
            try {
              subscriber.onInteractionScheduledWorkCompleted(interaction);
            } catch (error) {
              // If the subscriber throws, rethrow it in a separate task
              scheduleCallback(ImmediatePriority$1, function () {
                throw error;
              });
            }
          }
        });
      }
    });
  }
} // `act` testing API

function shouldForceFlushFallbacksInDEV() {
  // Never force flush in production. This function should get stripped out.
  return  actingUpdatesScopeDepth > 0;
}
// so we can tell if any async act() calls try to run in parallel.


var actingUpdatesScopeDepth = 0;

function detachFiberAfterEffects(fiber) {
  fiber.sibling = null;
  fiber.stateNode = null;
}

var resolveFamily = null; // $FlowFixMe Flow gets confused by a WeakSet feature check below.

var failedBoundaries = null;
var setRefreshHandler = function (handler) {
  {
    resolveFamily = handler;
  }
};
function resolveFunctionForHotReloading(type) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return type;
    }

    var family = resolveFamily(type);

    if (family === undefined) {
      return type;
    } // Use the latest known implementation.


    return family.current;
  }
}
function resolveClassForHotReloading(type) {
  // No implementation differences.
  return resolveFunctionForHotReloading(type);
}
function resolveForwardRefForHotReloading(type) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return type;
    }

    var family = resolveFamily(type);

    if (family === undefined) {
      // Check if we're dealing with a real forwardRef. Don't want to crash early.
      if (type !== null && type !== undefined && typeof type.render === 'function') {
        // ForwardRef is special because its resolved .type is an object,
        // but it's possible that we only have its inner render function in the map.
        // If that inner render function is different, we'll build a new forwardRef type.
        var currentRender = resolveFunctionForHotReloading(type.render);

        if (type.render !== currentRender) {
          var syntheticType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: currentRender
          };

          if (type.displayName !== undefined) {
            syntheticType.displayName = type.displayName;
          }

          return syntheticType;
        }
      }

      return type;
    } // Use the latest known implementation.


    return family.current;
  }
}
function isCompatibleFamilyForHotReloading(fiber, element) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return false;
    }

    var prevType = fiber.elementType;
    var nextType = element.type; // If we got here, we know types aren't === equal.

    var needsCompareFamilies = false;
    var $$typeofNextType = typeof nextType === 'object' && nextType !== null ? nextType.$$typeof : null;

    switch (fiber.tag) {
      case ClassComponent:
        {
          if (typeof nextType === 'function') {
            needsCompareFamilies = true;
          }

          break;
        }

      case FunctionComponent:
        {
          if (typeof nextType === 'function') {
            needsCompareFamilies = true;
          } else if ($$typeofNextType === REACT_LAZY_TYPE) {
            // We don't know the inner type yet.
            // We're going to assume that the lazy inner type is stable,
            // and so it is sufficient to avoid reconciling it away.
            // We're not going to unwrap or actually use the new lazy type.
            needsCompareFamilies = true;
          }

          break;
        }

      case ForwardRef:
        {
          if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {
            needsCompareFamilies = true;
          } else if ($$typeofNextType === REACT_LAZY_TYPE) {
            needsCompareFamilies = true;
          }

          break;
        }

      case MemoComponent:
      case SimpleMemoComponent:
        {
          if ($$typeofNextType === REACT_MEMO_TYPE) {
            // TODO: if it was but can no longer be simple,
            // we shouldn't set this.
            needsCompareFamilies = true;
          } else if ($$typeofNextType === REACT_LAZY_TYPE) {
            needsCompareFamilies = true;
          }

          break;
        }

      default:
        return false;
    } // Check if both types have a family and it's the same one.


    if (needsCompareFamilies) {
      // Note: memo() and forwardRef() we'll compare outer rather than inner type.
      // This means both of them need to be registered to preserve state.
      // If we unwrapped and compared the inner types for wrappers instead,
      // then we would risk falsely saying two separate memo(Foo)
      // calls are equivalent because they wrap the same Foo function.
      var prevFamily = resolveFamily(prevType);

      if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {
        return true;
      }
    }

    return false;
  }
}
function markFailedErrorBoundaryForHotReloading(fiber) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return;
    }

    if (typeof WeakSet !== 'function') {
      return;
    }

    if (failedBoundaries === null) {
      failedBoundaries = new WeakSet();
    }

    failedBoundaries.add(fiber);
  }
}
var scheduleRefresh = function (root, update) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return;
    }

    var staleFamilies = update.staleFamilies,
        updatedFamilies = update.updatedFamilies;
    flushPassiveEffects();
    flushSync(function () {
      scheduleFibersWithFamiliesRecursively(root.current, updatedFamilies, staleFamilies);
    });
  }
};
var scheduleRoot = function (root, element) {
  {
    if (root.context !== emptyContextObject) {
      // Super edge case: root has a legacy _renderSubtree context
      // but we don't know the parentComponent so we can't pass it.
      // Just ignore. We'll delete this with _renderSubtree code path later.
      return;
    }

    flushPassiveEffects();
    flushSync(function () {
      updateContainer(element, root, null, null);
    });
  }
};

function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
  {
    var alternate = fiber.alternate,
        child = fiber.child,
        sibling = fiber.sibling,
        tag = fiber.tag,
        type = fiber.type;
    var candidateType = null;

    switch (tag) {
      case FunctionComponent:
      case SimpleMemoComponent:
      case ClassComponent:
        candidateType = type;
        break;

      case ForwardRef:
        candidateType = type.render;
        break;
    }

    if (resolveFamily === null) {
      throw new Error('Expected resolveFamily to be set during hot reload.');
    }

    var needsRender = false;
    var needsRemount = false;

    if (candidateType !== null) {
      var family = resolveFamily(candidateType);

      if (family !== undefined) {
        if (staleFamilies.has(family)) {
          needsRemount = true;
        } else if (updatedFamilies.has(family)) {
          if (tag === ClassComponent) {
            needsRemount = true;
          } else {
            needsRender = true;
          }
        }
      }
    }

    if (failedBoundaries !== null) {
      if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {
        needsRemount = true;
      }
    }

    if (needsRemount) {
      fiber._debugNeedsRemount = true;
    }

    if (needsRemount || needsRender) {
      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
    }

    if (child !== null && !needsRemount) {
      scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
    }

    if (sibling !== null) {
      scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
    }
  }
}

var findHostInstancesForRefresh = function (root, families) {
  {
    var hostInstances = new Set();
    var types = new Set(families.map(function (family) {
      return family.current;
    }));
    findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);
    return hostInstances;
  }
};

function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
  {
    var child = fiber.child,
        sibling = fiber.sibling,
        tag = fiber.tag,
        type = fiber.type;
    var candidateType = null;

    switch (tag) {
      case FunctionComponent:
      case SimpleMemoComponent:
      case ClassComponent:
        candidateType = type;
        break;

      case ForwardRef:
        candidateType = type.render;
        break;
    }

    var didMatch = false;

    if (candidateType !== null) {
      if (types.has(candidateType)) {
        didMatch = true;
      }
    }

    if (didMatch) {
      // We have a match. This only drills down to the closest host components.
      // There's no need to search deeper because for the purpose of giving
      // visual feedback, "flashing" outermost parent rectangles is sufficient.
      findHostInstancesForFiberShallowly(fiber, hostInstances);
    } else {
      // If there's no match, maybe there will be one further down in the child tree.
      if (child !== null) {
        findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
      }
    }

    if (sibling !== null) {
      findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
    }
  }
}

function findHostInstancesForFiberShallowly(fiber, hostInstances) {
  {
    var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);

    if (foundHostInstances) {
      return;
    } // If we didn't find any host children, fallback to closest host parent.


    var node = fiber;

    while (true) {
      switch (node.tag) {
        case HostComponent:
          hostInstances.add(node.stateNode);
          return;

        case HostPortal:
          hostInstances.add(node.stateNode.containerInfo);
          return;

        case HostRoot:
          hostInstances.add(node.stateNode.containerInfo);
          return;
      }

      if (node.return === null) {
        throw new Error('Expected to reach root first.');
      }

      node = node.return;
    }
  }
}

function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
  {
    var node = fiber;
    var foundHostInstances = false;

    while (true) {
      if (node.tag === HostComponent) {
        // We got a match.
        foundHostInstances = true;
        hostInstances.add(node.stateNode); // There may still be more, so keep searching.
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === fiber) {
        return foundHostInstances;
      }

      while (node.sibling === null) {
        if (node.return === null || node.return === fiber) {
          return foundHostInstances;
        }

        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  return false;
}

var hasBadMapPolyfill;

{
  hasBadMapPolyfill = false;

  try {
    var nonExtensibleObject = Object.preventExtensions({});
    /* eslint-disable no-new */

    new Map([[nonExtensibleObject, null]]);
    new Set([nonExtensibleObject]);
    /* eslint-enable no-new */
  } catch (e) {
    // TODO: Consider warning about bad polyfills
    hasBadMapPolyfill = true;
  }
}

var debugCounter = 1;

function FiberNode(tag, pendingProps, key, mode) {
  // Instance
  this.tag = tag;
  this.key = key;
  this.elementType = null;
  this.type = null;
  this.stateNode = null; // Fiber

  this.return = null;
  this.child = null;
  this.sibling = null;
  this.index = 0;
  this.ref = null;
  this.pendingProps = pendingProps;
  this.memoizedProps = null;
  this.updateQueue = null;
  this.memoizedState = null;
  this.dependencies = null;
  this.mode = mode; // Effects

  this.flags = NoFlags;
  this.nextEffect = null;
  this.firstEffect = null;
  this.lastEffect = null;
  this.lanes = NoLanes;
  this.childLanes = NoLanes;
  this.alternate = null;

  {
    // Note: The following is done to avoid a v8 performance cliff.
    //
    // Initializing the fields below to smis and later updating them with
    // double values will cause Fibers to end up having separate shapes.
    // This behavior/bug has something to do with Object.preventExtension().
    // Fortunately this only impacts DEV builds.
    // Unfortunately it makes React unusably slow for some applications.
    // To work around this, initialize the fields below with doubles.
    //
    // Learn more about this here:
    // https://github.com/facebook/react/issues/14365
    // https://bugs.chromium.org/p/v8/issues/detail?id=8538
    this.actualDuration = Number.NaN;
    this.actualStartTime = Number.NaN;
    this.selfBaseDuration = Number.NaN;
    this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.
    // This won't trigger the performance cliff mentioned above,
    // and it simplifies other profiler code (including DevTools).

    this.actualDuration = 0;
    this.actualStartTime = -1;
    this.selfBaseDuration = 0;
    this.treeBaseDuration = 0;
  }

  {
    // This isn't directly used but is handy for debugging internals:
    this._debugID = debugCounter++;
    this._debugSource = null;
    this._debugOwner = null;
    this._debugNeedsRemount = false;
    this._debugHookTypes = null;

    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {
      Object.preventExtensions(this);
    }
  }
} // This is a constructor function, rather than a POJO constructor, still
// please ensure we do the following:
// 1) Nobody should add any instance methods on this. Instance methods can be
//    more difficult to predict when they get optimized and they are almost
//    never inlined properly in static compilers.
// 2) Nobody should rely on `instanceof Fiber` for type testing. We should
//    always know when it is a fiber.
// 3) We might want to experiment with using numeric keys since they are easier
//    to optimize in a non-JIT environment.
// 4) We can easily go from a constructor to a createFiber object literal if that
//    is faster.
// 5) It should be easy to port this to a C struct and keep a C implementation
//    compatible.


var createFiber = function (tag, pendingProps, key, mode) {
  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
  return new FiberNode(tag, pendingProps, key, mode);
};

function shouldConstruct$1(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function isSimpleFunctionComponent(type) {
  return typeof type === 'function' && !shouldConstruct$1(type) && type.defaultProps === undefined;
}
function resolveLazyComponentTag(Component) {
  if (typeof Component === 'function') {
    return shouldConstruct$1(Component) ? ClassComponent : FunctionComponent;
  } else if (Component !== undefined && Component !== null) {
    var $$typeof = Component.$$typeof;

    if ($$typeof === REACT_FORWARD_REF_TYPE) {
      return ForwardRef;
    }

    if ($$typeof === REACT_MEMO_TYPE) {
      return MemoComponent;
    }
  }

  return IndeterminateComponent;
} // This is used to create an alternate fiber to do work on.

function createWorkInProgress(current, pendingProps) {
  var workInProgress = current.alternate;

  if (workInProgress === null) {
    // We use a double buffering pooling technique because we know that we'll
    // only ever need at most two versions of a tree. We pool the "other" unused
    // node that we're free to reuse. This is lazily created to avoid allocating
    // extra objects for things that are never updated. It also allow us to
    // reclaim the extra memory if needed.
    workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
    workInProgress.elementType = current.elementType;
    workInProgress.type = current.type;
    workInProgress.stateNode = current.stateNode;

    {
      // DEV-only fields
      workInProgress._debugID = current._debugID;
      workInProgress._debugSource = current._debugSource;
      workInProgress._debugOwner = current._debugOwner;
      workInProgress._debugHookTypes = current._debugHookTypes;
    }

    workInProgress.alternate = current;
    current.alternate = workInProgress;
  } else {
    workInProgress.pendingProps = pendingProps; // Needed because Blocks store data on type.

    workInProgress.type = current.type; // We already have an alternate.
    // Reset the effect tag.

    workInProgress.flags = NoFlags; // The effect list is no longer valid.

    workInProgress.nextEffect = null;
    workInProgress.firstEffect = null;
    workInProgress.lastEffect = null;

    {
      // We intentionally reset, rather than copy, actualDuration & actualStartTime.
      // This prevents time from endlessly accumulating in new commits.
      // This has the downside of resetting values for different priority renders,
      // But works for yielding (the common case) and should support resuming.
      workInProgress.actualDuration = 0;
      workInProgress.actualStartTime = -1;
    }
  }

  workInProgress.childLanes = current.childLanes;
  workInProgress.lanes = current.lanes;
  workInProgress.child = current.child;
  workInProgress.memoizedProps = current.memoizedProps;
  workInProgress.memoizedState = current.memoizedState;
  workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so
  // it cannot be shared with the current fiber.

  var currentDependencies = current.dependencies;
  workInProgress.dependencies = currentDependencies === null ? null : {
    lanes: currentDependencies.lanes,
    firstContext: currentDependencies.firstContext
  }; // These will be overridden during the parent's reconciliation

  workInProgress.sibling = current.sibling;
  workInProgress.index = current.index;
  workInProgress.ref = current.ref;

  {
    workInProgress.selfBaseDuration = current.selfBaseDuration;
    workInProgress.treeBaseDuration = current.treeBaseDuration;
  }

  {
    workInProgress._debugNeedsRemount = current._debugNeedsRemount;

    switch (workInProgress.tag) {
      case IndeterminateComponent:
      case FunctionComponent:
      case SimpleMemoComponent:
        workInProgress.type = resolveFunctionForHotReloading(current.type);
        break;

      case ClassComponent:
        workInProgress.type = resolveClassForHotReloading(current.type);
        break;

      case ForwardRef:
        workInProgress.type = resolveForwardRefForHotReloading(current.type);
        break;
    }
  }

  return workInProgress;
} // Used to reuse a Fiber for a second pass.

function resetWorkInProgress(workInProgress, renderLanes) {
  // This resets the Fiber to what createFiber or createWorkInProgress would
  // have set the values to before during the first pass. Ideally this wouldn't
  // be necessary but unfortunately many code paths reads from the workInProgress
  // when they should be reading from current and writing to workInProgress.
  // We assume pendingProps, index, key, ref, return are still untouched to
  // avoid doing another reconciliation.
  // Reset the effect tag but keep any Placement tags, since that's something
  // that child fiber is setting, not the reconciliation.
  workInProgress.flags &= Placement; // The effect list is no longer valid.

  workInProgress.nextEffect = null;
  workInProgress.firstEffect = null;
  workInProgress.lastEffect = null;
  var current = workInProgress.alternate;

  if (current === null) {
    // Reset to createFiber's initial values.
    workInProgress.childLanes = NoLanes;
    workInProgress.lanes = renderLanes;
    workInProgress.child = null;
    workInProgress.memoizedProps = null;
    workInProgress.memoizedState = null;
    workInProgress.updateQueue = null;
    workInProgress.dependencies = null;
    workInProgress.stateNode = null;

    {
      // Note: We don't reset the actualTime counts. It's useful to accumulate
      // actual time across multiple render passes.
      workInProgress.selfBaseDuration = 0;
      workInProgress.treeBaseDuration = 0;
    }
  } else {
    // Reset to the cloned values that createWorkInProgress would've.
    workInProgress.childLanes = current.childLanes;
    workInProgress.lanes = current.lanes;
    workInProgress.child = current.child;
    workInProgress.memoizedProps = current.memoizedProps;
    workInProgress.memoizedState = current.memoizedState;
    workInProgress.updateQueue = current.updateQueue; // Needed because Blocks store data on type.

    workInProgress.type = current.type; // Clone the dependencies object. This is mutated during the render phase, so
    // it cannot be shared with the current fiber.

    var currentDependencies = current.dependencies;
    workInProgress.dependencies = currentDependencies === null ? null : {
      lanes: currentDependencies.lanes,
      firstContext: currentDependencies.firstContext
    };

    {
      // Note: We don't reset the actualTime counts. It's useful to accumulate
      // actual time across multiple render passes.
      workInProgress.selfBaseDuration = current.selfBaseDuration;
      workInProgress.treeBaseDuration = current.treeBaseDuration;
    }
  }

  return workInProgress;
}
function createHostRootFiber(tag) {
  var mode;

  if (tag === ConcurrentRoot) {
    mode = ConcurrentMode | BlockingMode | StrictMode;
  } else if (tag === BlockingRoot) {
    mode = BlockingMode | StrictMode;
  } else {
    mode = NoMode;
  }

  if ( isDevToolsPresent) {
    // Always collect profile timings when DevTools are present.
    // This enables DevTools to start capturing timing at any point–
    // Without some nodes in the tree having empty base times.
    mode |= ProfileMode;
  }

  return createFiber(HostRoot, null, null, mode);
}
function createFiberFromTypeAndProps(type, // React$ElementType
key, pendingProps, owner, mode, lanes) {
  var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.

  var resolvedType = type;

  if (typeof type === 'function') {
    if (shouldConstruct$1(type)) {
      fiberTag = ClassComponent;

      {
        resolvedType = resolveClassForHotReloading(resolvedType);
      }
    } else {
      {
        resolvedType = resolveFunctionForHotReloading(resolvedType);
      }
    }
  } else if (typeof type === 'string') {
    fiberTag = HostComponent;
  } else {
    getTag: switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, lanes, key);

      case REACT_DEBUG_TRACING_MODE_TYPE:
        fiberTag = Mode;
        mode |= DebugTracingMode;
        break;

      case REACT_STRICT_MODE_TYPE:
        fiberTag = Mode;
        mode |= StrictMode;
        break;

      case REACT_PROFILER_TYPE:
        return createFiberFromProfiler(pendingProps, mode, lanes, key);

      case REACT_SUSPENSE_TYPE:
        return createFiberFromSuspense(pendingProps, mode, lanes, key);

      case REACT_SUSPENSE_LIST_TYPE:
        return createFiberFromSuspenseList(pendingProps, mode, lanes, key);

      case REACT_OFFSCREEN_TYPE:
        return createFiberFromOffscreen(pendingProps, mode, lanes, key);

      case REACT_LEGACY_HIDDEN_TYPE:
        return createFiberFromLegacyHidden(pendingProps, mode, lanes, key);

      case REACT_SCOPE_TYPE:

      // eslint-disable-next-line no-fallthrough

      default:
        {
          if (typeof type === 'object' && type !== null) {
            switch (type.$$typeof) {
              case REACT_PROVIDER_TYPE:
                fiberTag = ContextProvider;
                break getTag;

              case REACT_CONTEXT_TYPE:
                // This is a consumer
                fiberTag = ContextConsumer;
                break getTag;

              case REACT_FORWARD_REF_TYPE:
                fiberTag = ForwardRef;

                {
                  resolvedType = resolveForwardRefForHotReloading(resolvedType);
                }

                break getTag;

              case REACT_MEMO_TYPE:
                fiberTag = MemoComponent;
                break getTag;

              case REACT_LAZY_TYPE:
                fiberTag = LazyComponent;
                resolvedType = null;
                break getTag;

              case REACT_BLOCK_TYPE:
                fiberTag = Block;
                break getTag;
            }
          }

          var info = '';

          {
            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
              info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and " + 'named imports.';
            }

            var ownerName = owner ? getComponentName(owner.type) : null;

            if (ownerName) {
              info += '\n\nCheck the render method of `' + ownerName + '`.';
            }
          }

          {
            {
              throw Error( "Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (type == null ? type : typeof type) + "." + info );
            }
          }
        }
    }
  }

  var fiber = createFiber(fiberTag, pendingProps, key, mode);
  fiber.elementType = type;
  fiber.type = resolvedType;
  fiber.lanes = lanes;

  {
    fiber._debugOwner = owner;
  }

  return fiber;
}
function createFiberFromElement(element, mode, lanes) {
  var owner = null;

  {
    owner = element._owner;
  }

  var type = element.type;
  var key = element.key;
  var pendingProps = element.props;
  var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);

  {
    fiber._debugSource = element._source;
    fiber._debugOwner = element._owner;
  }

  return fiber;
}
function createFiberFromFragment(elements, mode, lanes, key) {
  var fiber = createFiber(Fragment, elements, key, mode);
  fiber.lanes = lanes;
  return fiber;
}

function createFiberFromProfiler(pendingProps, mode, lanes, key) {
  {
    if (typeof pendingProps.id !== 'string') {
      error('Profiler must specify an "id" as a prop');
    }
  }

  var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode); // TODO: The Profiler fiber shouldn't have a type. It has a tag.

  fiber.elementType = REACT_PROFILER_TYPE;
  fiber.type = REACT_PROFILER_TYPE;
  fiber.lanes = lanes;

  {
    fiber.stateNode = {
      effectDuration: 0,
      passiveEffectDuration: 0
    };
  }

  return fiber;
}

function createFiberFromSuspense(pendingProps, mode, lanes, key) {
  var fiber = createFiber(SuspenseComponent, pendingProps, key, mode); // TODO: The SuspenseComponent fiber shouldn't have a type. It has a tag.
  // This needs to be fixed in getComponentName so that it relies on the tag
  // instead.

  fiber.type = REACT_SUSPENSE_TYPE;
  fiber.elementType = REACT_SUSPENSE_TYPE;
  fiber.lanes = lanes;
  return fiber;
}
function createFiberFromSuspenseList(pendingProps, mode, lanes, key) {
  var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);

  {
    // TODO: The SuspenseListComponent fiber shouldn't have a type. It has a tag.
    // This needs to be fixed in getComponentName so that it relies on the tag
    // instead.
    fiber.type = REACT_SUSPENSE_LIST_TYPE;
  }

  fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
  fiber.lanes = lanes;
  return fiber;
}
function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
  var fiber = createFiber(OffscreenComponent, pendingProps, key, mode); // TODO: The OffscreenComponent fiber shouldn't have a type. It has a tag.
  // This needs to be fixed in getComponentName so that it relies on the tag
  // instead.

  {
    fiber.type = REACT_OFFSCREEN_TYPE;
  }

  fiber.elementType = REACT_OFFSCREEN_TYPE;
  fiber.lanes = lanes;
  return fiber;
}
function createFiberFromLegacyHidden(pendingProps, mode, lanes, key) {
  var fiber = createFiber(LegacyHiddenComponent, pendingProps, key, mode); // TODO: The LegacyHidden fiber shouldn't have a type. It has a tag.
  // This needs to be fixed in getComponentName so that it relies on the tag
  // instead.

  {
    fiber.type = REACT_LEGACY_HIDDEN_TYPE;
  }

  fiber.elementType = REACT_LEGACY_HIDDEN_TYPE;
  fiber.lanes = lanes;
  return fiber;
}
function createFiberFromText(content, mode, lanes) {
  var fiber = createFiber(HostText, content, null, mode);
  fiber.lanes = lanes;
  return fiber;
}
function createFiberFromHostInstanceForDeletion() {
  var fiber = createFiber(HostComponent, null, null, NoMode); // TODO: These should not need a type.

  fiber.elementType = 'DELETED';
  fiber.type = 'DELETED';
  return fiber;
}
function createFiberFromPortal(portal, mode, lanes) {
  var pendingProps = portal.children !== null ? portal.children : [];
  var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
  fiber.lanes = lanes;
  fiber.stateNode = {
    containerInfo: portal.containerInfo,
    pendingChildren: null,
    // Used by persistent updates
    implementation: portal.implementation
  };
  return fiber;
} // Used for stashing WIP properties to replay failed work in DEV.

function assignFiberPropertiesInDEV(target, source) {
  if (target === null) {
    // This Fiber's initial properties will always be overwritten.
    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
    target = createFiber(IndeterminateComponent, null, null, NoMode);
  } // This is intentionally written as a list of all properties.
  // We tried to use Object.assign() instead but this is called in
  // the hottest path, and Object.assign() was too slow:
  // https://github.com/facebook/react/issues/12502
  // This code is DEV-only so size is not a concern.


  target.tag = source.tag;
  target.key = source.key;
  target.elementType = source.elementType;
  target.type = source.type;
  target.stateNode = source.stateNode;
  target.return = source.return;
  target.child = source.child;
  target.sibling = source.sibling;
  target.index = source.index;
  target.ref = source.ref;
  target.pendingProps = source.pendingProps;
  target.memoizedProps = source.memoizedProps;
  target.updateQueue = source.updateQueue;
  target.memoizedState = source.memoizedState;
  target.dependencies = source.dependencies;
  target.mode = source.mode;
  target.flags = source.flags;
  target.nextEffect = source.nextEffect;
  target.firstEffect = source.firstEffect;
  target.lastEffect = source.lastEffect;
  target.lanes = source.lanes;
  target.childLanes = source.childLanes;
  target.alternate = source.alternate;

  {
    target.actualDuration = source.actualDuration;
    target.actualStartTime = source.actualStartTime;
    target.selfBaseDuration = source.selfBaseDuration;
    target.treeBaseDuration = source.treeBaseDuration;
  }

  target._debugID = source._debugID;
  target._debugSource = source._debugSource;
  target._debugOwner = source._debugOwner;
  target._debugNeedsRemount = source._debugNeedsRemount;
  target._debugHookTypes = source._debugHookTypes;
  return target;
}

function FiberRootNode(containerInfo, tag, hydrate) {
  this.tag = tag;
  this.containerInfo = containerInfo;
  this.pendingChildren = null;
  this.current = null;
  this.pingCache = null;
  this.finishedWork = null;
  this.timeoutHandle = noTimeout;
  this.context = null;
  this.pendingContext = null;
  this.hydrate = hydrate;
  this.callbackNode = null;
  this.callbackPriority = NoLanePriority;
  this.eventTimes = createLaneMap(NoLanes);
  this.expirationTimes = createLaneMap(NoTimestamp);
  this.pendingLanes = NoLanes;
  this.suspendedLanes = NoLanes;
  this.pingedLanes = NoLanes;
  this.expiredLanes = NoLanes;
  this.mutableReadLanes = NoLanes;
  this.finishedLanes = NoLanes;
  this.entangledLanes = NoLanes;
  this.entanglements = createLaneMap(NoLanes);

  {
    this.mutableSourceEagerHydrationData = null;
  }

  {
    this.interactionThreadID = tracing$1.unstable_getThreadID();
    this.memoizedInteractions = new Set();
    this.pendingInteractionMap = new Map();
  }

  {
    switch (tag) {
      case BlockingRoot:
        this._debugRootType = 'createBlockingRoot()';
        break;

      case ConcurrentRoot:
        this._debugRootType = 'createRoot()';
        break;

      case LegacyRoot:
        this._debugRootType = 'createLegacyRoot()';
        break;
    }
  }
}

function createFiberRoot(containerInfo, tag, hydrate, hydrationCallbacks) {
  var root = new FiberRootNode(containerInfo, tag, hydrate);
  // stateNode is any.


  var uninitializedFiber = createHostRootFiber(tag);
  root.current = uninitializedFiber;
  uninitializedFiber.stateNode = root;
  initializeUpdateQueue(uninitializedFiber);
  return root;
}

// This ensures that the version used for server rendering matches the one
// that is eventually read during hydration.
// If they don't match there's a potential tear and a full deopt render is required.

function registerMutableSourceForHydration(root, mutableSource) {
  var getVersion = mutableSource._getVersion;
  var version = getVersion(mutableSource._source); // TODO Clear this data once all pending hydration work is finished.
  // Retaining it forever may interfere with GC.

  if (root.mutableSourceEagerHydrationData == null) {
    root.mutableSourceEagerHydrationData = [mutableSource, version];
  } else {
    root.mutableSourceEagerHydrationData.push(mutableSource, version);
  }
}

function createPortal(children, containerInfo, // TODO: figure out the API for cross-renderer implementation.
implementation) {
  var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
  return {
    // This tag allow us to uniquely identify this as a React Portal
    $$typeof: REACT_PORTAL_TYPE,
    key: key == null ? null : '' + key,
    children: children,
    containerInfo: containerInfo,
    implementation: implementation
  };
}

var didWarnAboutNestedUpdates;
var didWarnAboutFindNodeInStrictMode;

{
  didWarnAboutNestedUpdates = false;
  didWarnAboutFindNodeInStrictMode = {};
}

function getContextForSubtree(parentComponent) {
  if (!parentComponent) {
    return emptyContextObject;
  }

  var fiber = get(parentComponent);
  var parentContext = findCurrentUnmaskedContext(fiber);

  if (fiber.tag === ClassComponent) {
    var Component = fiber.type;

    if (isContextProvider(Component)) {
      return processChildContext(fiber, Component, parentContext);
    }
  }

  return parentContext;
}

function findHostInstanceWithWarning(component, methodName) {
  {
    var fiber = get(component);

    if (fiber === undefined) {
      if (typeof component.render === 'function') {
        {
          {
            throw Error( "Unable to find node on an unmounted component." );
          }
        }
      } else {
        {
          {
            throw Error( "Argument appears to not be a ReactComponent. Keys: " + Object.keys(component) );
          }
        }
      }
    }

    var hostFiber = findCurrentHostFiber(fiber);

    if (hostFiber === null) {
      return null;
    }

    if (hostFiber.mode & StrictMode) {
      var componentName = getComponentName(fiber.type) || 'Component';

      if (!didWarnAboutFindNodeInStrictMode[componentName]) {
        didWarnAboutFindNodeInStrictMode[componentName] = true;
        var previousFiber = current;

        try {
          setCurrentFiber(hostFiber);

          if (fiber.mode & StrictMode) {
            error('%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which is inside StrictMode. ' + 'Instead, add a ref directly to the element you want to reference. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-find-node', methodName, methodName, componentName);
          } else {
            error('%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which renders StrictMode children. ' + 'Instead, add a ref directly to the element you want to reference. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-find-node', methodName, methodName, componentName);
          }
        } finally {
          // Ideally this should reset to previous but this shouldn't be called in
          // render and there's another warning for that anyway.
          if (previousFiber) {
            setCurrentFiber(previousFiber);
          } else {
            resetCurrentFiber();
          }
        }
      }
    }

    return hostFiber.stateNode;
  }
}

function createContainer(containerInfo, tag, hydrate, hydrationCallbacks) {
  return createFiberRoot(containerInfo, tag, hydrate);
}
function updateContainer(element, container, parentComponent, callback) {
  {
    onScheduleRoot(container, element);
  }

  var current$1 = container.current;
  var eventTime = requestEventTime();

  {
    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
    if ('undefined' !== typeof jest) {
      warnIfUnmockedScheduler(current$1);
      warnIfNotScopedWithMatchingAct(current$1);
    }
  }

  var lane = requestUpdateLane(current$1);

  var context = getContextForSubtree(parentComponent);

  if (container.context === null) {
    container.context = context;
  } else {
    container.pendingContext = context;
  }

  {
    if (isRendering && current !== null && !didWarnAboutNestedUpdates) {
      didWarnAboutNestedUpdates = true;

      error('Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\n\n' + 'Check the render method of %s.', getComponentName(current.type) || 'Unknown');
    }
  }

  var update = createUpdate(eventTime, lane); // Caution: React DevTools currently depends on this property
  // being called "element".

  update.payload = {
    element: element
  };
  callback = callback === undefined ? null : callback;

  if (callback !== null) {
    {
      if (typeof callback !== 'function') {
        error('render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback);
      }
    }

    update.callback = callback;
  }

  enqueueUpdate(current$1, update);
  scheduleUpdateOnFiber(current$1, lane, eventTime);
  return lane;
}
function getPublicRootInstance(container) {
  var containerFiber = container.current;

  if (!containerFiber.child) {
    return null;
  }

  switch (containerFiber.child.tag) {
    case HostComponent:
      return getPublicInstance(containerFiber.child.stateNode);

    default:
      return containerFiber.child.stateNode;
  }
}

function markRetryLaneImpl(fiber, retryLane) {
  var suspenseState = fiber.memoizedState;

  if (suspenseState !== null && suspenseState.dehydrated !== null) {
    suspenseState.retryLane = higherPriorityLane(suspenseState.retryLane, retryLane);
  }
} // Increases the priority of thennables when they resolve within this boundary.


function markRetryLaneIfNotHydrated(fiber, retryLane) {
  markRetryLaneImpl(fiber, retryLane);
  var alternate = fiber.alternate;

  if (alternate) {
    markRetryLaneImpl(alternate, retryLane);
  }
}

function attemptUserBlockingHydration$1(fiber) {
  if (fiber.tag !== SuspenseComponent) {
    // We ignore HostRoots here because we can't increase
    // their priority and they should not suspend on I/O,
    // since you have to wrap anything that might suspend in
    // Suspense.
    return;
  }

  var eventTime = requestEventTime();
  var lane = InputDiscreteHydrationLane;
  scheduleUpdateOnFiber(fiber, lane, eventTime);
  markRetryLaneIfNotHydrated(fiber, lane);
}
function attemptContinuousHydration$1(fiber) {
  if (fiber.tag !== SuspenseComponent) {
    // We ignore HostRoots here because we can't increase
    // their priority and they should not suspend on I/O,
    // since you have to wrap anything that might suspend in
    // Suspense.
    return;
  }

  var eventTime = requestEventTime();
  var lane = SelectiveHydrationLane;
  scheduleUpdateOnFiber(fiber, lane, eventTime);
  markRetryLaneIfNotHydrated(fiber, lane);
}
function attemptHydrationAtCurrentPriority$1(fiber) {
  if (fiber.tag !== SuspenseComponent) {
    // We ignore HostRoots here because we can't increase
    // their priority other than synchronously flush it.
    return;
  }

  var eventTime = requestEventTime();
  var lane = requestUpdateLane(fiber);
  scheduleUpdateOnFiber(fiber, lane, eventTime);
  markRetryLaneIfNotHydrated(fiber, lane);
}
function runWithPriority$2(priority, fn) {

  try {
    setCurrentUpdateLanePriority(priority);
    return fn();
  } finally {
  }
}
function findHostInstanceWithNoPortals(fiber) {
  var hostFiber = findCurrentHostFiberWithNoPortals(fiber);

  if (hostFiber === null) {
    return null;
  }

  if (hostFiber.tag === FundamentalComponent) {
    return hostFiber.stateNode.instance;
  }

  return hostFiber.stateNode;
}

var shouldSuspendImpl = function (fiber) {
  return false;
};

function shouldSuspend(fiber) {
  return shouldSuspendImpl(fiber);
}
var overrideHookState = null;
var overrideHookStateDeletePath = null;
var overrideHookStateRenamePath = null;
var overrideProps = null;
var overridePropsDeletePath = null;
var overridePropsRenamePath = null;
var scheduleUpdate = null;
var setSuspenseHandler = null;

{
  var copyWithDeleteImpl = function (obj, path, index) {
    var key = path[index];
    var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj);

    if (index + 1 === path.length) {
      if (Array.isArray(updated)) {
        updated.splice(key, 1);
      } else {
        delete updated[key];
      }

      return updated;
    } // $FlowFixMe number or string is fine here


    updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);
    return updated;
  };

  var copyWithDelete = function (obj, path) {
    return copyWithDeleteImpl(obj, path, 0);
  };

  var copyWithRenameImpl = function (obj, oldPath, newPath, index) {
    var oldKey = oldPath[index];
    var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj);

    if (index + 1 === oldPath.length) {
      var newKey = newPath[index]; // $FlowFixMe number or string is fine here

      updated[newKey] = updated[oldKey];

      if (Array.isArray(updated)) {
        updated.splice(oldKey, 1);
      } else {
        delete updated[oldKey];
      }
    } else {
      // $FlowFixMe number or string is fine here
      updated[oldKey] = copyWithRenameImpl( // $FlowFixMe number or string is fine here
      obj[oldKey], oldPath, newPath, index + 1);
    }

    return updated;
  };

  var copyWithRename = function (obj, oldPath, newPath) {
    if (oldPath.length !== newPath.length) {
      warn('copyWithRename() expects paths of the same length');

      return;
    } else {
      for (var i = 0; i < newPath.length - 1; i++) {
        if (oldPath[i] !== newPath[i]) {
          warn('copyWithRename() expects paths to be the same except for the deepest key');

          return;
        }
      }
    }

    return copyWithRenameImpl(obj, oldPath, newPath, 0);
  };

  var copyWithSetImpl = function (obj, path, index, value) {
    if (index >= path.length) {
      return value;
    }

    var key = path[index];
    var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj); // $FlowFixMe number or string is fine here

    updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);
    return updated;
  };

  var copyWithSet = function (obj, path, value) {
    return copyWithSetImpl(obj, path, 0, value);
  };

  var findHook = function (fiber, id) {
    // For now, the "id" of stateful hooks is just the stateful hook index.
    // This may change in the future with e.g. nested hooks.
    var currentHook = fiber.memoizedState;

    while (currentHook !== null && id > 0) {
      currentHook = currentHook.next;
      id--;
    }

    return currentHook;
  }; // Support DevTools editable values for useState and useReducer.


  overrideHookState = function (fiber, id, path, value) {
    var hook = findHook(fiber, id);

    if (hook !== null) {
      var newState = copyWithSet(hook.memoizedState, path, value);
      hook.memoizedState = newState;
      hook.baseState = newState; // We aren't actually adding an update to the queue,
      // because there is no update we can add for useReducer hooks that won't trigger an error.
      // (There's no appropriate action type for DevTools overrides.)
      // As a result though, React will see the scheduled update as a noop and bailout.
      // Shallow cloning props works as a workaround for now to bypass the bailout check.

      fiber.memoizedProps = _assign({}, fiber.memoizedProps);
      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
    }
  };

  overrideHookStateDeletePath = function (fiber, id, path) {
    var hook = findHook(fiber, id);

    if (hook !== null) {
      var newState = copyWithDelete(hook.memoizedState, path);
      hook.memoizedState = newState;
      hook.baseState = newState; // We aren't actually adding an update to the queue,
      // because there is no update we can add for useReducer hooks that won't trigger an error.
      // (There's no appropriate action type for DevTools overrides.)
      // As a result though, React will see the scheduled update as a noop and bailout.
      // Shallow cloning props works as a workaround for now to bypass the bailout check.

      fiber.memoizedProps = _assign({}, fiber.memoizedProps);
      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
    }
  };

  overrideHookStateRenamePath = function (fiber, id, oldPath, newPath) {
    var hook = findHook(fiber, id);

    if (hook !== null) {
      var newState = copyWithRename(hook.memoizedState, oldPath, newPath);
      hook.memoizedState = newState;
      hook.baseState = newState; // We aren't actually adding an update to the queue,
      // because there is no update we can add for useReducer hooks that won't trigger an error.
      // (There's no appropriate action type for DevTools overrides.)
      // As a result though, React will see the scheduled update as a noop and bailout.
      // Shallow cloning props works as a workaround for now to bypass the bailout check.

      fiber.memoizedProps = _assign({}, fiber.memoizedProps);
      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
    }
  }; // Support DevTools props for function components, forwardRef, memo, host components, etc.


  overrideProps = function (fiber, path, value) {
    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);

    if (fiber.alternate) {
      fiber.alternate.pendingProps = fiber.pendingProps;
    }

    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
  };

  overridePropsDeletePath = function (fiber, path) {
    fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);

    if (fiber.alternate) {
      fiber.alternate.pendingProps = fiber.pendingProps;
    }

    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
  };

  overridePropsRenamePath = function (fiber, oldPath, newPath) {
    fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);

    if (fiber.alternate) {
      fiber.alternate.pendingProps = fiber.pendingProps;
    }

    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
  };

  scheduleUpdate = function (fiber) {
    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
  };

  setSuspenseHandler = function (newShouldSuspendImpl) {
    shouldSuspendImpl = newShouldSuspendImpl;
  };
}

function findHostInstanceByFiber(fiber) {
  var hostFiber = findCurrentHostFiber(fiber);

  if (hostFiber === null) {
    return null;
  }

  return hostFiber.stateNode;
}

function emptyFindFiberByHostInstance(instance) {
  return null;
}

function getCurrentFiberForDevTools() {
  return current;
}

function injectIntoDevTools(devToolsConfig) {
  var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
  var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
  return injectInternals({
    bundleType: devToolsConfig.bundleType,
    version: devToolsConfig.version,
    rendererPackageName: devToolsConfig.rendererPackageName,
    rendererConfig: devToolsConfig.rendererConfig,
    overrideHookState: overrideHookState,
    overrideHookStateDeletePath: overrideHookStateDeletePath,
    overrideHookStateRenamePath: overrideHookStateRenamePath,
    overrideProps: overrideProps,
    overridePropsDeletePath: overridePropsDeletePath,
    overridePropsRenamePath: overridePropsRenamePath,
    setSuspenseHandler: setSuspenseHandler,
    scheduleUpdate: scheduleUpdate,
    currentDispatcherRef: ReactCurrentDispatcher,
    findHostInstanceByFiber: findHostInstanceByFiber,
    findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,
    // React Refresh
    findHostInstancesForRefresh:  findHostInstancesForRefresh ,
    scheduleRefresh:  scheduleRefresh ,
    scheduleRoot:  scheduleRoot ,
    setRefreshHandler:  setRefreshHandler ,
    // Enables DevTools to append owner stacks to error messages in DEV mode.
    getCurrentFiber:  getCurrentFiberForDevTools 
  });
}

function ReactDOMBlockingRoot(container, tag, options) {
  this._internalRoot = createRootImpl(container, tag, options);
}

ReactDOMBlockingRoot.prototype.render = function (children) {
  var root = this._internalRoot;

  {
    if (typeof arguments[1] === 'function') {
      error('render(...): does not support the second callback argument. ' + 'To execute a side effect after rendering, declare it in a component body with useEffect().');
    }

    var container = root.containerInfo;

    if (container.nodeType !== COMMENT_NODE) {
      var hostInstance = findHostInstanceWithNoPortals(root.current);

      if (hostInstance) {
        if (hostInstance.parentNode !== container) {
          error('render(...): It looks like the React-rendered content of the ' + 'root container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + "root.unmount() to empty a root's container.");
        }
      }
    }
  }

  updateContainer(children, root, null, null);
};

ReactDOMBlockingRoot.prototype.unmount = function () {
  {
    if (typeof arguments[0] === 'function') {
      error('unmount(...): does not support a callback argument. ' + 'To execute a side effect after rendering, declare it in a component body with useEffect().');
    }
  }

  var root = this._internalRoot;
  var container = root.containerInfo;
  updateContainer(null, root, null, function () {
    unmarkContainerAsRoot(container);
  });
};

function createRootImpl(container, tag, options) {
  // Tag is either LegacyRoot or Concurrent Root
  var hydrate = options != null && options.hydrate === true;
  options != null && options.hydrationOptions || null;
  var mutableSources = options != null && options.hydrationOptions != null && options.hydrationOptions.mutableSources || null;
  var root = createContainer(container, tag, hydrate);
  markContainerAsRoot(root.current, container);
  container.nodeType;

  {
    var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
    listenToAllSupportedEvents(rootContainerElement);
  }

  if (mutableSources) {
    for (var i = 0; i < mutableSources.length; i++) {
      var mutableSource = mutableSources[i];
      registerMutableSourceForHydration(root, mutableSource);
    }
  }

  return root;
}
function createLegacyRoot(container, options) {
  return new ReactDOMBlockingRoot(container, LegacyRoot, options);
}
function isValidContainer(node) {
  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
}

var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
var topLevelUpdateWarnings;
var warnedAboutHydrateAPI = false;

{
  topLevelUpdateWarnings = function (container) {
    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
      var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer._internalRoot.current);

      if (hostInstance) {
        if (hostInstance.parentNode !== container) {
          error('render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.');
        }
      }
    }

    var isRootRenderedBySomeReact = !!container._reactRootContainer;
    var rootEl = getReactRootElementInContainer(container);
    var hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));

    if (hasNonRootReactChild && !isRootRenderedBySomeReact) {
      error('render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.');
    }

    if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === 'BODY') {
      error('render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.');
    }
  };
}

function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOCUMENT_NODE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function shouldHydrateDueToLegacyHeuristic(container) {
  var rootElement = getReactRootElementInContainer(container);
  return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));
}

function legacyCreateRootFromDOMContainer(container, forceHydrate) {
  var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container); // First clear any existing content.

  if (!shouldHydrate) {
    var warned = false;
    var rootSibling;

    while (rootSibling = container.lastChild) {
      {
        if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {
          warned = true;

          error('render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.');
        }
      }

      container.removeChild(rootSibling);
    }
  }

  {
    if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
      warnedAboutHydrateAPI = true;

      warn('render(): Calling ReactDOM.render() to hydrate server-rendered markup ' + 'will stop working in React v18. Replace the ReactDOM.render() call ' + 'with ReactDOM.hydrate() if you want React to attach to the server HTML.');
    }
  }

  return createLegacyRoot(container, shouldHydrate ? {
    hydrate: true
  } : undefined);
}

function warnOnInvalidCallback$1(callback, callerName) {
  {
    if (callback !== null && typeof callback !== 'function') {
      error('%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
    }
  }
}

function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
  {
    topLevelUpdateWarnings(container);
    warnOnInvalidCallback$1(callback === undefined ? null : callback, 'render');
  } // TODO: Without `any` type, Flow says "Property cannot be accessed on any
  // member of intersection type." Whyyyyyy.


  var root = container._reactRootContainer;
  var fiberRoot;

  if (!root) {
    // Initial mount
    root = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);
    fiberRoot = root._internalRoot;

    if (typeof callback === 'function') {
      var originalCallback = callback;

      callback = function () {
        var instance = getPublicRootInstance(fiberRoot);
        originalCallback.call(instance);
      };
    } // Initial mount should not be batched.


    unbatchedUpdates(function () {
      updateContainer(children, fiberRoot, parentComponent, callback);
    });
  } else {
    fiberRoot = root._internalRoot;

    if (typeof callback === 'function') {
      var _originalCallback = callback;

      callback = function () {
        var instance = getPublicRootInstance(fiberRoot);

        _originalCallback.call(instance);
      };
    } // Update


    updateContainer(children, fiberRoot, parentComponent, callback);
  }

  return getPublicRootInstance(fiberRoot);
}

function findDOMNode(componentOrElement) {
  {
    var owner = ReactCurrentOwner$3.current;

    if (owner !== null && owner.stateNode !== null) {
      var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;

      if (!warnedAboutRefsInRender) {
        error('%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(owner.type) || 'A component');
      }

      owner.stateNode._warnedAboutRefsInRender = true;
    }
  }

  if (componentOrElement == null) {
    return null;
  }

  if (componentOrElement.nodeType === ELEMENT_NODE) {
    return componentOrElement;
  }

  {
    return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');
  }
}
function hydrate(element, container, callback) {
  if (!isValidContainer(container)) {
    {
      throw Error( "Target container is not a DOM element." );
    }
  }

  {
    var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;

    if (isModernRoot) {
      error('You are calling ReactDOM.hydrate() on a container that was previously ' + 'passed to ReactDOM.createRoot(). This is not supported. ' + 'Did you mean to call createRoot(container, {hydrate: true}).render(element)?');
    }
  } // TODO: throw or warn if we couldn't hydrate?


  return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
}
function render(element, container, callback) {
  if (!isValidContainer(container)) {
    {
      throw Error( "Target container is not a DOM element." );
    }
  }

  {
    var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;

    if (isModernRoot) {
      error('You are calling ReactDOM.render() on a container that was previously ' + 'passed to ReactDOM.createRoot(). This is not supported. ' + 'Did you mean to call root.render(element)?');
    }
  }

  return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
}
function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
  if (!isValidContainer(containerNode)) {
    {
      throw Error( "Target container is not a DOM element." );
    }
  }

  if (!(parentComponent != null && has(parentComponent))) {
    {
      throw Error( "parentComponent must be a valid React Component" );
    }
  }

  return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
}
function unmountComponentAtNode(container) {
  if (!isValidContainer(container)) {
    {
      throw Error( "unmountComponentAtNode(...): Target container is not a DOM element." );
    }
  }

  {
    var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;

    if (isModernRoot) {
      error('You are calling ReactDOM.unmountComponentAtNode() on a container that was previously ' + 'passed to ReactDOM.createRoot(). This is not supported. Did you mean to call root.unmount()?');
    }
  }

  if (container._reactRootContainer) {
    {
      var rootEl = getReactRootElementInContainer(container);
      var renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);

      if (renderedByDifferentReact) {
        error("unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.');
      }
    } // Unmount should not be batched.


    unbatchedUpdates(function () {
      legacyRenderSubtreeIntoContainer(null, null, container, false, function () {
        // $FlowFixMe This should probably use `delete container._reactRootContainer`
        container._reactRootContainer = null;
        unmarkContainerAsRoot(container);
      });
    }); // If you call unmountComponentAtNode twice in quick succession, you'll
    // get `true` twice. That's probably fine?

    return true;
  } else {
    {
      var _rootEl = getReactRootElementInContainer(container);

      var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode(_rootEl)); // Check if the container itself is a React root node.

      var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;

      if (hasNonRootReactChild) {
        error("unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.');
      }
    }

    return false;
  }
}

setAttemptUserBlockingHydration(attemptUserBlockingHydration$1);
setAttemptContinuousHydration(attemptContinuousHydration$1);
setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);
setAttemptHydrationAtPriority(runWithPriority$2);
var didWarnAboutUnstableCreatePortal = false;

{
  if (typeof Map !== 'function' || // $FlowIssue Flow incorrectly thinks Map has no prototype
  Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' || // $FlowIssue Flow incorrectly thinks Set has no prototype
  Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {
    error('React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. https://reactjs.org/link/react-polyfills');
  }
}

setRestoreImplementation(restoreControlledState$3);
setBatchingImplementation(batchedUpdates$1, discreteUpdates$1, flushDiscreteUpdates, batchedEventUpdates$1);

function createPortal$1(children, container) {
  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  if (!isValidContainer(container)) {
    {
      throw Error( "Target container is not a DOM element." );
    }
  } // TODO: pass ReactDOM portal implementation as third argument
  // $FlowFixMe The Flow type is opaque but there's no way to actually create it.


  return createPortal(children, container, null, key);
}

function renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {

  return unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback);
}

function unstable_createPortal(children, container) {
  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  {
    if (!didWarnAboutUnstableCreatePortal) {
      didWarnAboutUnstableCreatePortal = true;

      warn('The ReactDOM.unstable_createPortal() alias has been deprecated, ' + 'and will be removed in React 18+. Update your code to use ' + 'ReactDOM.createPortal() instead. It has the exact same API, ' + 'but without the "unstable_" prefix.');
    }
  }

  return createPortal$1(children, container, key);
}

var Internals = {
  // Keep in sync with ReactTestUtils.js, and ReactTestUtilsAct.js.
  // This is an array for better minification.
  Events: [getInstanceFromNode, getNodeFromInstance, getFiberCurrentPropsFromNode, enqueueStateRestore, restoreStateIfNeeded, flushPassiveEffects, // TODO: This is related to `act`, not events. Move to separate key?
  IsThisRendererActing]
};
var foundDevTools = injectIntoDevTools({
  findFiberByHostInstance: getClosestInstanceFromNode,
  bundleType:  1 ,
  version: ReactVersion,
  rendererPackageName: 'react-dom'
});

{
  if (!foundDevTools && canUseDOM && window.top === window.self) {
    // If we're in Chrome or Firefox, provide a download link if not installed.
    if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
      var protocol = window.location.protocol; // Don't warn in exotic cases like chrome-extension://.

      if (/^(https?|file):$/.test(protocol)) {
        // eslint-disable-next-line react-internal/no-production-logging
        console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://reactjs.org/link/react-devtools' + (protocol === 'file:' ? '\nYou might need to use a local HTTP server (instead of file://): ' + 'https://reactjs.org/link/react-devtools-faq' : ''), 'font-weight:bold');
      }
    }
  }
}

reactDom_development.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;
reactDom_development.createPortal = createPortal$1;
reactDom_development.findDOMNode = findDOMNode;
reactDom_development.flushSync = flushSync;
reactDom_development.hydrate = hydrate;
reactDom_development.render = render;
reactDom_development.unmountComponentAtNode = unmountComponentAtNode;
reactDom_development.unstable_batchedUpdates = batchedUpdates$1;
reactDom_development.unstable_createPortal = unstable_createPortal;
reactDom_development.unstable_renderSubtreeIntoContainer = renderSubtreeIntoContainer;
reactDom_development.version = ReactVersion;
  })();
}

function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
  ) {
    return;
  }
  if (process.env.NODE_ENV !== 'production') {
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
  }
  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if (process.env.NODE_ENV === 'production') {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  reactDom.exports = reactDom_production_min;
} else {
  reactDom.exports = reactDom_development;
}

var ReactDOM = reactDom.exports;

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

function componentWillMount() {
  // Call this.constructor.gDSFP to support sub-classes.
  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
  if (state !== null && state !== undefined) {
    this.setState(state);
  }
}

function componentWillReceiveProps(nextProps) {
  // Call this.constructor.gDSFP to support sub-classes.
  // Use the setState() updater to ensure state isn't stale in certain edge cases.
  function updater(prevState) {
    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
    return state !== null && state !== undefined ? state : null;
  }
  // Binding "this" is important for shallow renderer support.
  this.setState(updater.bind(this));
}

function componentWillUpdate(nextProps, nextState) {
  try {
    var prevProps = this.props;
    var prevState = this.state;
    this.props = nextProps;
    this.state = nextState;
    this.__reactInternalSnapshotFlag = true;
    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(
      prevProps,
      prevState
    );
  } finally {
    this.props = prevProps;
    this.state = prevState;
  }
}

// React may warn about cWM/cWRP/cWU methods being deprecated.
// Add a flag to suppress these warnings for this special case.
componentWillMount.__suppressDeprecationWarning = true;
componentWillReceiveProps.__suppressDeprecationWarning = true;
componentWillUpdate.__suppressDeprecationWarning = true;

function polyfill(Component) {
  var prototype = Component.prototype;

  if (!prototype || !prototype.isReactComponent) {
    throw new Error('Can only polyfill class components');
  }

  if (
    typeof Component.getDerivedStateFromProps !== 'function' &&
    typeof prototype.getSnapshotBeforeUpdate !== 'function'
  ) {
    return Component;
  }

  // If new component APIs are defined, "unsafe" lifecycles won't be called.
  // Error if any of these lifecycles are present,
  // Because they would work differently between older and newer (16.3+) versions of React.
  var foundWillMountName = null;
  var foundWillReceivePropsName = null;
  var foundWillUpdateName = null;
  if (typeof prototype.componentWillMount === 'function') {
    foundWillMountName = 'componentWillMount';
  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {
    foundWillMountName = 'UNSAFE_componentWillMount';
  }
  if (typeof prototype.componentWillReceiveProps === 'function') {
    foundWillReceivePropsName = 'componentWillReceiveProps';
  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {
    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
  }
  if (typeof prototype.componentWillUpdate === 'function') {
    foundWillUpdateName = 'componentWillUpdate';
  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {
    foundWillUpdateName = 'UNSAFE_componentWillUpdate';
  }
  if (
    foundWillMountName !== null ||
    foundWillReceivePropsName !== null ||
    foundWillUpdateName !== null
  ) {
    var componentName = Component.displayName || Component.name;
    var newApiName =
      typeof Component.getDerivedStateFromProps === 'function'
        ? 'getDerivedStateFromProps()'
        : 'getSnapshotBeforeUpdate()';

    throw Error(
      'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' +
        componentName +
        ' uses ' +
        newApiName +
        ' but also contains the following legacy lifecycles:' +
        (foundWillMountName !== null ? '\n  ' + foundWillMountName : '') +
        (foundWillReceivePropsName !== null
          ? '\n  ' + foundWillReceivePropsName
          : '') +
        (foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '') +
        '\n\nThe above lifecycles should be removed. Learn more about this warning here:\n' +
        'https://fb.me/react-async-component-lifecycle-hooks'
    );
  }

  // React <= 16.2 does not support static getDerivedStateFromProps.
  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.
  // Newer versions of React will ignore these lifecycles if gDSFP exists.
  if (typeof Component.getDerivedStateFromProps === 'function') {
    prototype.componentWillMount = componentWillMount;
    prototype.componentWillReceiveProps = componentWillReceiveProps;
  }

  // React <= 16.2 does not support getSnapshotBeforeUpdate.
  // As a workaround, use cWU to invoke the new lifecycle.
  // Newer versions of React will ignore that lifecycle if gSBU exists.
  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {
    if (typeof prototype.componentDidUpdate !== 'function') {
      throw new Error(
        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'
      );
    }

    prototype.componentWillUpdate = componentWillUpdate;

    var componentDidUpdate = prototype.componentDidUpdate;

    prototype.componentDidUpdate = function componentDidUpdatePolyfill(
      prevProps,
      prevState,
      maybeSnapshot
    ) {
      // 16.3+ will not execute our will-update method;
      // It will pass a snapshot value to did-update though.
      // Older versions will require our polyfilled will-update value.
      // We need to handle both cases, but can't just check for the presence of "maybeSnapshot",
      // Because for <= 15.x versions this might be a "prevContext" object.
      // We also can't just check "__reactInternalSnapshot",
      // Because get-snapshot might return a falsy value.
      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.
      var snapshot = this.__reactInternalSnapshotFlag
        ? this.__reactInternalSnapshot
        : maybeSnapshot;

      componentDidUpdate.call(this, prevProps, prevState, snapshot);
    };
  }

  return Component;
}

var reactLifecyclesCompat_es = /*#__PURE__*/Object.freeze({
    __proto__: null,
    polyfill: polyfill
});

var require$$2 = /*@__PURE__*/getAugmentedNamespace(reactLifecyclesCompat_es);

var PropTypes$2 = {};

PropTypes$2.__esModule = true;
PropTypes$2.classNamesShape = PropTypes$2.timeoutsShape = void 0;

var _propTypes$1 = _interopRequireDefault$i(propTypes$1.exports);

function _interopRequireDefault$i(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var timeoutsShape$1 = process.env.NODE_ENV !== 'production' ? _propTypes$1.default.oneOfType([_propTypes$1.default.number, _propTypes$1.default.shape({
  enter: _propTypes$1.default.number,
  exit: _propTypes$1.default.number,
  appear: _propTypes$1.default.number
}).isRequired]) : null;
PropTypes$2.timeoutsShape = timeoutsShape$1;
var classNamesShape = process.env.NODE_ENV !== 'production' ? _propTypes$1.default.oneOfType([_propTypes$1.default.string, _propTypes$1.default.shape({
  enter: _propTypes$1.default.string,
  exit: _propTypes$1.default.string,
  active: _propTypes$1.default.string
}), _propTypes$1.default.shape({
  enter: _propTypes$1.default.string,
  enterDone: _propTypes$1.default.string,
  enterActive: _propTypes$1.default.string,
  exit: _propTypes$1.default.string,
  exitDone: _propTypes$1.default.string,
  exitActive: _propTypes$1.default.string
})]) : null;
PropTypes$2.classNamesShape = classNamesShape;

Transition$3.__esModule = true;
Transition$3.default = Transition$3.EXITING = Transition$3.ENTERED = Transition$3.ENTERING = Transition$3.EXITED = Transition$3.UNMOUNTED = void 0;

var PropTypes$1 = _interopRequireWildcard(propTypes$1.exports);

var _react$j = _interopRequireDefault$h(React__default);

var _reactDom$1 = _interopRequireDefault$h(reactDom.exports);

var _reactLifecyclesCompat = require$$2;

var _PropTypes = PropTypes$2;

function _interopRequireDefault$h(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _objectWithoutPropertiesLoose$3(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _inheritsLoose$5(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var UNMOUNTED$1 = 'unmounted';
Transition$3.UNMOUNTED = UNMOUNTED$1;
var EXITED$1 = 'exited';
Transition$3.EXITED = EXITED$1;
var ENTERING$1 = 'entering';
Transition$3.ENTERING = ENTERING$1;
var ENTERED$1 = 'entered';
Transition$3.ENTERED = ENTERED$1;
var EXITING$1 = 'exiting';
/**
 * The Transition component lets you describe a transition from one component
 * state to another _over time_ with a simple declarative API. Most commonly
 * it's used to animate the mounting and unmounting of a component, but can also
 * be used to describe in-place transition states as well.
 *
 * ---
 *
 * **Note**: `Transition` is a platform-agnostic base component. If you're using
 * transitions in CSS, you'll probably want to use
 * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
 * instead. It inherits all the features of `Transition`, but contains
 * additional features necessary to play nice with CSS transitions (hence the
 * name of the component).
 *
 * ---
 *
 * By default the `Transition` component does not alter the behavior of the
 * component it renders, it only tracks "enter" and "exit" states for the
 * components. It's up to you to give meaning and effect to those states. For
 * example we can add styles to a component when it enters or exits:
 *
 * ```jsx
 * import { Transition } from 'react-transition-group';
 *
 * const duration = 300;
 *
 * const defaultStyle = {
 *   transition: `opacity ${duration}ms ease-in-out`,
 *   opacity: 0,
 * }
 *
 * const transitionStyles = {
 *   entering: { opacity: 0 },
 *   entered:  { opacity: 1 },
 * };
 *
 * const Fade = ({ in: inProp }) => (
 *   <Transition in={inProp} timeout={duration}>
 *     {state => (
 *       <div style={{
 *         ...defaultStyle,
 *         ...transitionStyles[state]
 *       }}>
 *         I'm a fade Transition!
 *       </div>
 *     )}
 *   </Transition>
 * );
 * ```
 *
 * There are 4 main states a Transition can be in:
 *  - `'entering'`
 *  - `'entered'`
 *  - `'exiting'`
 *  - `'exited'`
 *
 * Transition state is toggled via the `in` prop. When `true` the component
 * begins the "Enter" stage. During this stage, the component will shift from
 * its current transition state, to `'entering'` for the duration of the
 * transition and then to the `'entered'` stage once it's complete. Let's take
 * the following example (we'll use the
 * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <Transition in={inProp} timeout={500}>
 *         {state => (
 *           // ...
 *         )}
 *       </Transition>
 *       <button onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the button is clicked the component will shift to the `'entering'` state
 * and stay there for 500ms (the value of `timeout`) before it finally switches
 * to `'entered'`.
 *
 * When `in` is `false` the same thing happens except the state moves from
 * `'exiting'` to `'exited'`.
 */

Transition$3.EXITING = EXITING$1;

var Transition$2 =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose$5(Transition, _React$Component);

  function Transition(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;
    var parentGroup = context.transitionGroup; // In the context of a TransitionGroup all enters are really appears

    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;

    if (props.in) {
      if (appear) {
        initialStatus = EXITED$1;
        _this.appearStatus = ENTERING$1;
      } else {
        initialStatus = ENTERED$1;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED$1;
      } else {
        initialStatus = EXITED$1;
      }
    }

    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }

  var _proto = Transition.prototype;

  _proto.getChildContext = function getChildContext() {
    return {
      transitionGroup: null // allows for nested Transitions

    };
  };

  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;

    if (nextIn && prevState.status === UNMOUNTED$1) {
      return {
        status: EXITED$1
      };
    }

    return null;
  }; // getSnapshotBeforeUpdate(prevProps) {
  //   let nextStatus = null
  //   if (prevProps !== this.props) {
  //     const { status } = this.state
  //     if (this.props.in) {
  //       if (status !== ENTERING && status !== ENTERED) {
  //         nextStatus = ENTERING
  //       }
  //     } else {
  //       if (status === ENTERING || status === ENTERED) {
  //         nextStatus = EXITING
  //       }
  //     }
  //   }
  //   return { nextStatus }
  // }


  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;

    if (prevProps !== this.props) {
      var status = this.state.status;

      if (this.props.in) {
        if (status !== ENTERING$1 && status !== ENTERED$1) {
          nextStatus = ENTERING$1;
        }
      } else {
        if (status === ENTERING$1 || status === ENTERED$1) {
          nextStatus = EXITING$1;
        }
      }
    }

    this.updateStatus(false, nextStatus);
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };

  _proto.getTimeouts = function getTimeouts() {
    var timeout = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout;

    if (timeout != null && typeof timeout !== 'number') {
      exit = timeout.exit;
      enter = timeout.enter; // TODO: remove fallback for next major

      appear = timeout.appear !== undefined ? timeout.appear : enter;
    }

    return {
      exit: exit,
      enter: enter,
      appear: appear
    };
  };

  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }

    if (nextStatus !== null) {
      // nextStatus will always be ENTERING or EXITING.
      this.cancelNextCallback();

      var node = _reactDom$1.default.findDOMNode(this);

      if (nextStatus === ENTERING$1) {
        this.performEnter(node, mounting);
      } else {
        this.performExit(node);
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED$1) {
      this.setState({
        status: UNMOUNTED$1
      });
    }
  };

  _proto.performEnter = function performEnter(node, mounting) {
    var _this2 = this;

    var enter = this.props.enter;
    var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;
    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED
    // if we are mounting and running this it means appear _must_ be set

    if (!mounting && !enter) {
      this.safeSetState({
        status: ENTERED$1
      }, function () {
        _this2.props.onEntered(node);
      });
      return;
    }

    this.props.onEnter(node, appearing);
    this.safeSetState({
      status: ENTERING$1
    }, function () {
      _this2.props.onEntering(node, appearing);

      _this2.onTransitionEnd(node, enterTimeout, function () {
        _this2.safeSetState({
          status: ENTERED$1
        }, function () {
          _this2.props.onEntered(node, appearing);
        });
      });
    });
  };

  _proto.performExit = function performExit(node) {
    var _this3 = this;

    var exit = this.props.exit;
    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED

    if (!exit) {
      this.safeSetState({
        status: EXITED$1
      }, function () {
        _this3.props.onExited(node);
      });
      return;
    }

    this.props.onExit(node);
    this.safeSetState({
      status: EXITING$1
    }, function () {
      _this3.props.onExiting(node);

      _this3.onTransitionEnd(node, timeouts.exit, function () {
        _this3.safeSetState({
          status: EXITED$1
        }, function () {
          _this3.props.onExited(node);
        });
      });
    });
  };

  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };

  _proto.safeSetState = function safeSetState(nextState, callback) {
    // This shouldn't be necessary, but there are weird race conditions with
    // setState callbacks and unmounting in testing, so always make sure that
    // we can cancel any pending setState callbacks after we unmount.
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };

  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;

    var active = true;

    this.nextCallback = function (event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };

    this.nextCallback.cancel = function () {
      active = false;
    };

    return this.nextCallback;
  };

  _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {
    this.setNextCallback(handler);
    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;

    if (!node || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }

    if (this.props.addEndListener) {
      this.props.addEndListener(node, this.nextCallback);
    }

    if (timeout != null) {
      setTimeout(this.nextCallback, timeout);
    }
  };

  _proto.render = function render() {
    var status = this.state.status;

    if (status === UNMOUNTED$1) {
      return null;
    }

    var _this$props = this.props,
        children = _this$props.children,
        childProps = _objectWithoutPropertiesLoose$3(_this$props, ["children"]); // filter props for Transtition


    delete childProps.in;
    delete childProps.mountOnEnter;
    delete childProps.unmountOnExit;
    delete childProps.appear;
    delete childProps.enter;
    delete childProps.exit;
    delete childProps.timeout;
    delete childProps.addEndListener;
    delete childProps.onEnter;
    delete childProps.onEntering;
    delete childProps.onEntered;
    delete childProps.onExit;
    delete childProps.onExiting;
    delete childProps.onExited;

    if (typeof children === 'function') {
      return children(status, childProps);
    }

    var child = _react$j.default.Children.only(children);

    return _react$j.default.cloneElement(child, childProps);
  };

  return Transition;
}(_react$j.default.Component);

Transition$2.contextTypes = {
  transitionGroup: PropTypes$1.object
};
Transition$2.childContextTypes = {
  transitionGroup: function transitionGroup() {}
};
Transition$2.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`, `'unmounted'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: PropTypes$1.oneOfType([PropTypes$1.func.isRequired, PropTypes$1.element.isRequired]).isRequired,

  /**
   * Show the component; triggers the enter or exit states
   */
  in: PropTypes$1.bool,

  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: PropTypes$1.bool,

  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: PropTypes$1.bool,

  /**
   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.
   * If you want to transition on the first mount set `appear` to `true`, and the
   * component will transition in as soon as the `<Transition>` mounts.
   *
   * > Note: there are no specific "appear" states. `appear` only adds an additional `enter` transition.
   */
  appear: PropTypes$1.bool,

  /**
   * Enable or disable enter transitions.
   */
  enter: PropTypes$1.bool,

  /**
   * Enable or disable exit transitions.
   */
  exit: PropTypes$1.bool,

  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function timeout(props) {
    var pt = _PropTypes.timeoutsShape;
    if (!props.addEndListener) pt = pt.isRequired;

    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return pt.apply(void 0, [props].concat(args));
  },

  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. **Note:** Timeouts are still used as a fallback if provided.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: PropTypes$1.func,

  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: PropTypes$1.func,

  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: PropTypes$1.func,

  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: PropTypes$1.func,

  /**
   * Callback fired before the "exiting" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: PropTypes$1.func,

  /**
   * Callback fired after the "exiting" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: PropTypes$1.func,

  /**
   * Callback fired after the "exited" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: PropTypes$1.func // Name the function so it is clearer in the documentation

} : {};

function noop$8() {}

Transition$2.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop$8,
  onEntering: noop$8,
  onEntered: noop$8,
  onExit: noop$8,
  onExiting: noop$8,
  onExited: noop$8
};
Transition$2.UNMOUNTED = 0;
Transition$2.EXITED = 1;
Transition$2.ENTERING = 2;
Transition$2.ENTERED = 3;
Transition$2.EXITING = 4;

var _default$c = (0, _reactLifecyclesCompat.polyfill)(Transition$2);

Transition$3.default = _default$c;

(function (module, exports) {

exports.__esModule = true;
exports.default = void 0;

var PropTypes = _interopRequireWildcard(propTypes$1.exports);

var _addClass = _interopRequireDefault(addClass.exports);

var _removeClass = _interopRequireDefault(removeClass);

var _react = _interopRequireDefault(React__default);

var _Transition = _interopRequireDefault(Transition$3);

var _PropTypes = PropTypes$2;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var addClass$1 = function addClass(node, classes) {
  return node && classes && classes.split(' ').forEach(function (c) {
    return (0, _addClass.default)(node, c);
  });
};

var removeClass$1 = function removeClass(node, classes) {
  return node && classes && classes.split(' ').forEach(function (c) {
    return (0, _removeClass.default)(node, c);
  });
};
/**
 * A transition component inspired by the excellent
 * [ng-animate](http://www.nganimate.org/) library, you should use it if you're
 * using CSS transitions or animations. It's built upon the
 * [`Transition`](https://reactcommunity.org/react-transition-group/transition)
 * component, so it inherits all of its props.
 *
 * `CSSTransition` applies a pair of class names during the `appear`, `enter`,
 * and `exit` states of the transition. The first class is applied and then a
 * second `*-active` class in order to activate the CSSS transition. After the
 * transition, matching `*-done` class names are applied to persist the
 * transition state.
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <CSSTransition in={inProp} timeout={200} classNames="my-node">
 *         <div>
 *           {"I'll receive my-node-* classes"}
 *         </div>
 *       </CSSTransition>
 *       <button type="button" onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the `in` prop is set to `true`, the child component will first receive
 * the class `example-enter`, then the `example-enter-active` will be added in
 * the next tick. `CSSTransition` [forces a
 * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)
 * between before adding the `example-enter-active`. This is an important trick
 * because it allows us to transition between `example-enter` and
 * `example-enter-active` even though they were added immediately one after
 * another. Most notably, this is what makes it possible for us to animate
 * _appearance_.
 *
 * ```css
 * .my-node-enter {
 *   opacity: 0;
 * }
 * .my-node-enter-active {
 *   opacity: 1;
 *   transition: opacity 200ms;
 * }
 * .my-node-exit {
 *   opacity: 1;
 * }
 * .my-node-exit-active {
 *   opacity: 0;
 *   transition: opacity: 200ms;
 * }
 * ```
 *
 * `*-active` classes represent which styles you want to animate **to**.
 */


var CSSTransition =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(CSSTransition, _React$Component);

  function CSSTransition() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _this.onEnter = function (node, appearing) {
      var _this$getClassNames = _this.getClassNames(appearing ? 'appear' : 'enter'),
          className = _this$getClassNames.className;

      _this.removeClasses(node, 'exit');

      addClass$1(node, className);

      if (_this.props.onEnter) {
        _this.props.onEnter(node, appearing);
      }
    };

    _this.onEntering = function (node, appearing) {
      var _this$getClassNames2 = _this.getClassNames(appearing ? 'appear' : 'enter'),
          activeClassName = _this$getClassNames2.activeClassName;

      _this.reflowAndAddClass(node, activeClassName);

      if (_this.props.onEntering) {
        _this.props.onEntering(node, appearing);
      }
    };

    _this.onEntered = function (node, appearing) {
      var appearClassName = _this.getClassNames('appear').doneClassName;

      var enterClassName = _this.getClassNames('enter').doneClassName;

      var doneClassName = appearing ? appearClassName + " " + enterClassName : enterClassName;

      _this.removeClasses(node, appearing ? 'appear' : 'enter');

      addClass$1(node, doneClassName);

      if (_this.props.onEntered) {
        _this.props.onEntered(node, appearing);
      }
    };

    _this.onExit = function (node) {
      var _this$getClassNames3 = _this.getClassNames('exit'),
          className = _this$getClassNames3.className;

      _this.removeClasses(node, 'appear');

      _this.removeClasses(node, 'enter');

      addClass$1(node, className);

      if (_this.props.onExit) {
        _this.props.onExit(node);
      }
    };

    _this.onExiting = function (node) {
      var _this$getClassNames4 = _this.getClassNames('exit'),
          activeClassName = _this$getClassNames4.activeClassName;

      _this.reflowAndAddClass(node, activeClassName);

      if (_this.props.onExiting) {
        _this.props.onExiting(node);
      }
    };

    _this.onExited = function (node) {
      var _this$getClassNames5 = _this.getClassNames('exit'),
          doneClassName = _this$getClassNames5.doneClassName;

      _this.removeClasses(node, 'exit');

      addClass$1(node, doneClassName);

      if (_this.props.onExited) {
        _this.props.onExited(node);
      }
    };

    _this.getClassNames = function (type) {
      var classNames = _this.props.classNames;
      var isStringClassNames = typeof classNames === 'string';
      var prefix = isStringClassNames && classNames ? classNames + '-' : '';
      var className = isStringClassNames ? prefix + type : classNames[type];
      var activeClassName = isStringClassNames ? className + '-active' : classNames[type + 'Active'];
      var doneClassName = isStringClassNames ? className + '-done' : classNames[type + 'Done'];
      return {
        className: className,
        activeClassName: activeClassName,
        doneClassName: doneClassName
      };
    };

    return _this;
  }

  var _proto = CSSTransition.prototype;

  _proto.removeClasses = function removeClasses(node, type) {
    var _this$getClassNames6 = this.getClassNames(type),
        className = _this$getClassNames6.className,
        activeClassName = _this$getClassNames6.activeClassName,
        doneClassName = _this$getClassNames6.doneClassName;

    className && removeClass$1(node, className);
    activeClassName && removeClass$1(node, activeClassName);
    doneClassName && removeClass$1(node, doneClassName);
  };

  _proto.reflowAndAddClass = function reflowAndAddClass(node, className) {
    // This is for to force a repaint,
    // which is necessary in order to transition styles when adding a class name.
    if (className) {
      /* eslint-disable no-unused-expressions */
      node && node.scrollTop;
      /* eslint-enable no-unused-expressions */

      addClass$1(node, className);
    }
  };

  _proto.render = function render() {
    var props = _extends({}, this.props);

    delete props.classNames;
    return _react.default.createElement(_Transition.default, _extends({}, props, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  };

  return CSSTransition;
}(_react.default.Component);

CSSTransition.defaultProps = {
  classNames: ''
};
CSSTransition.propTypes = process.env.NODE_ENV !== "production" ? _extends({}, _Transition.default.propTypes, {
  /**
   * The animation classNames applied to the component as it enters, exits or
   * has finished the transition. A single name can be provided and it will be
   * suffixed for each stage: e.g.
   *
   * `classNames="fade"` applies `fade-enter`, `fade-enter-active`,
   * `fade-enter-done`, `fade-exit`, `fade-exit-active`, `fade-exit-done`,
   * `fade-appear`, `fade-appear-active`, and `fade-appear-done`.
   *
   * **Note**: `fade-appear-done` and `fade-enter-done` will _both_ be applied.
   * This allows you to define different behavior for when appearing is done and
   * when regular entering is done, using selectors like
   * `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply an
   * epic entrance animation when element first appears in the DOM using
   * [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
   * simply use `fade-enter-done` for defining both cases.
   *
   * Each individual classNames can also be specified independently like:
   *
   * ```js
   * classNames={{
   *  appear: 'my-appear',
   *  appearActive: 'my-active-appear',
   *  appearDone: 'my-done-appear',
   *  enter: 'my-enter',
   *  enterActive: 'my-active-enter',
   *  enterDone: 'my-done-enter',
   *  exit: 'my-exit',
   *  exitActive: 'my-active-exit',
   *  exitDone: 'my-done-exit',
   * }}
   * ```
   *
   * If you want to set these classes using CSS Modules:
   *
   * ```js
   * import styles from './styles.css';
   * ```
   *
   * you might want to use camelCase in your CSS file, that way could simply
   * spread them instead of listing them one by one:
   *
   * ```js
   * classNames={{ ...styles }}
   * ```
   *
   * @type {string | {
   *  appear?: string,
   *  appearActive?: string,
   *  appearDone?: string,
   *  enter?: string,
   *  enterActive?: string,
   *  enterDone?: string,
   *  exit?: string,
   *  exitActive?: string,
   *  exitDone?: string,
   * }}
   */
  classNames: _PropTypes.classNamesShape,

  /**
   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
   * applied.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEnter: PropTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'enter-active' or
   * 'appear-active' class is applied.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: PropTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'enter' or
   * 'appear' classes are **removed** and the `done` class is added to the DOM node.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntered: PropTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit' class is
   * applied.
   *
   * @type Function(node: HtmlElement)
   */
  onExit: PropTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
   *
   * @type Function(node: HtmlElement)
   */
  onExiting: PropTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit' classes
   * are **removed** and the `exit-done` class is added to the DOM node.
   *
   * @type Function(node: HtmlElement)
   */
  onExited: PropTypes.func
}) : {};
var _default = CSSTransition;
exports.default = _default;
module.exports = exports["default"];
}(CSSTransition, CSSTransition.exports));

var ReplaceTransition = {exports: {}};

var TransitionGroup$2 = {exports: {}};

var ChildMapping = {};

ChildMapping.__esModule = true;
ChildMapping.getChildMapping = getChildMapping$1;
ChildMapping.mergeChildMappings = mergeChildMappings$1;
ChildMapping.getInitialChildMapping = getInitialChildMapping$1;
ChildMapping.getNextChildMapping = getNextChildMapping$1;

var _react$i = React__default;

/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */
function getChildMapping$1(children, mapFn) {
  var mapper = function mapper(child) {
    return mapFn && (0, _react$i.isValidElement)(child) ? mapFn(child) : child;
  };

  var result = Object.create(null);
  if (children) _react$i.Children.map(children, function (c) {
    return c;
  }).forEach(function (child) {
    // run the map function here instead so that the key is the computed one
    result[child.key] = mapper(child);
  });
  return result;
}
/**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */


function mergeChildMappings$1(prev, next) {
  prev = prev || {};
  next = next || {};

  function getValueForKey(key) {
    return key in next ? next[key] : prev[key];
  } // For each key of `next`, the list of keys to insert before that key in
  // the combined list


  var nextKeysPending = Object.create(null);
  var pendingKeys = [];

  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }

  var i;
  var childMapping = {};

  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }

    childMapping[nextKey] = getValueForKey(nextKey);
  } // Finally, add the keys which didn't appear before any key in `next`


  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }

  return childMapping;
}

function getProp$1(child, prop, props) {
  return props[prop] != null ? props[prop] : child.props[prop];
}

function getInitialChildMapping$1(props, onExited) {
  return getChildMapping$1(props.children, function (child) {
    return (0, _react$i.cloneElement)(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp$1(child, 'appear', props),
      enter: getProp$1(child, 'enter', props),
      exit: getProp$1(child, 'exit', props)
    });
  });
}

function getNextChildMapping$1(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping$1(nextProps.children);
  var children = mergeChildMappings$1(prevChildMapping, nextChildMapping);
  Object.keys(children).forEach(function (key) {
    var child = children[key];
    if (!(0, _react$i.isValidElement)(child)) return;
    var hasPrev = key in prevChildMapping;
    var hasNext = key in nextChildMapping;
    var prevChild = prevChildMapping[key];
    var isLeaving = (0, _react$i.isValidElement)(prevChild) && !prevChild.props.in; // item is new (entering)

    if (hasNext && (!hasPrev || isLeaving)) {
      // console.log('entering', key)
      children[key] = (0, _react$i.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp$1(child, 'exit', nextProps),
        enter: getProp$1(child, 'enter', nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      // item is old (exiting)
      // console.log('leaving', key)
      children[key] = (0, _react$i.cloneElement)(child, {
        in: false
      });
    } else if (hasNext && hasPrev && (0, _react$i.isValidElement)(prevChild)) {
      // item hasn't changed transition states
      // copy over the last transition props;
      // console.log('unchanged', key)
      children[key] = (0, _react$i.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp$1(child, 'exit', nextProps),
        enter: getProp$1(child, 'enter', nextProps)
      });
    }
  });
  return children;
}

(function (module, exports) {

exports.__esModule = true;
exports.default = void 0;

var _propTypes = _interopRequireDefault(propTypes$1.exports);

var _react = _interopRequireDefault(React__default);

var _reactLifecyclesCompat = require$$2;

var _ChildMapping = ChildMapping;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var values = Object.values || function (obj) {
  return Object.keys(obj).map(function (k) {
    return obj[k];
  });
};

var defaultProps = {
  component: 'div',
  childFactory: function childFactory(child) {
    return child;
  }
  /**
   * The `<TransitionGroup>` component manages a set of transition components
   * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition
   * components, `<TransitionGroup>` is a state machine for managing the mounting
   * and unmounting of components over time.
   *
   * Consider the example below. As items are removed or added to the TodoList the
   * `in` prop is toggled automatically by the `<TransitionGroup>`.
   *
   * Note that `<TransitionGroup>`  does not define any animation behavior!
   * Exactly _how_ a list item animates is up to the individual transition
   * component. This means you can mix and match animations across different list
   * items.
   */

};

var TransitionGroup =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(TransitionGroup, _React$Component);

  function TransitionGroup(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;

    var handleExited = _this.handleExited.bind(_assertThisInitialized(_assertThisInitialized(_this))); // Initial children should all be entering, dependent on appear


    _this.state = {
      handleExited: handleExited,
      firstRender: true
    };
    return _this;
  }

  var _proto = TransitionGroup.prototype;

  _proto.getChildContext = function getChildContext() {
    return {
      transitionGroup: {
        isMounting: !this.appeared
      }
    };
  };

  _proto.componentDidMount = function componentDidMount() {
    this.appeared = true;
    this.mounted = true;
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mounted = false;
  };

  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
    var prevChildMapping = _ref.children,
        handleExited = _ref.handleExited,
        firstRender = _ref.firstRender;
    return {
      children: firstRender ? (0, _ChildMapping.getInitialChildMapping)(nextProps, handleExited) : (0, _ChildMapping.getNextChildMapping)(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  };

  _proto.handleExited = function handleExited(child, node) {
    var currentChildMapping = (0, _ChildMapping.getChildMapping)(this.props.children);
    if (child.key in currentChildMapping) return;

    if (child.props.onExited) {
      child.props.onExited(node);
    }

    if (this.mounted) {
      this.setState(function (state) {
        var children = _extends({}, state.children);

        delete children[child.key];
        return {
          children: children
        };
      });
    }
  };

  _proto.render = function render() {
    var _this$props = this.props,
        Component = _this$props.component,
        childFactory = _this$props.childFactory,
        props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);

    var children = values(this.state.children).map(childFactory);
    delete props.appear;
    delete props.enter;
    delete props.exit;

    if (Component === null) {
      return children;
    }

    return _react.default.createElement(Component, props, children);
  };

  return TransitionGroup;
}(_react.default.Component);

TransitionGroup.childContextTypes = {
  transitionGroup: _propTypes.default.object.isRequired
};
TransitionGroup.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: _propTypes.default.any,

  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: _propTypes.default.node,

  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: _propTypes.default.bool,

  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: _propTypes.default.bool,

  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: _propTypes.default.bool,

  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: _propTypes.default.func
} : {};
TransitionGroup.defaultProps = defaultProps;

var _default = (0, _reactLifecyclesCompat.polyfill)(TransitionGroup);

exports.default = _default;
module.exports = exports["default"];
}(TransitionGroup$2, TransitionGroup$2.exports));

(function (module, exports) {

exports.__esModule = true;
exports.default = void 0;

var _propTypes = _interopRequireDefault(propTypes$1.exports);

var _react = _interopRequireDefault(React__default);

var _reactDom = reactDom.exports;

var _TransitionGroup = _interopRequireDefault(TransitionGroup$2.exports);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/**
 * The `<ReplaceTransition>` component is a specialized `Transition` component
 * that animates between two children.
 *
 * ```jsx
 * <ReplaceTransition in>
 *   <Fade><div>I appear first</div></Fade>
 *   <Fade><div>I replace the above</div></Fade>
 * </ReplaceTransition>
 * ```
 */
var ReplaceTransition =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(ReplaceTransition, _React$Component);

  function ReplaceTransition() {
    var _this;

    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;

    _this.handleEnter = function () {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return _this.handleLifecycle('onEnter', 0, args);
    };

    _this.handleEntering = function () {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      return _this.handleLifecycle('onEntering', 0, args);
    };

    _this.handleEntered = function () {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      return _this.handleLifecycle('onEntered', 0, args);
    };

    _this.handleExit = function () {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }

      return _this.handleLifecycle('onExit', 1, args);
    };

    _this.handleExiting = function () {
      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }

      return _this.handleLifecycle('onExiting', 1, args);
    };

    _this.handleExited = function () {
      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }

      return _this.handleLifecycle('onExited', 1, args);
    };

    return _this;
  }

  var _proto = ReplaceTransition.prototype;

  _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {
    var _child$props;

    var children = this.props.children;

    var child = _react.default.Children.toArray(children)[idx];

    if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);
    if (this.props[handler]) this.props[handler]((0, _reactDom.findDOMNode)(this));
  };

  _proto.render = function render() {
    var _this$props = this.props,
        children = _this$props.children,
        inProp = _this$props.in,
        props = _objectWithoutPropertiesLoose(_this$props, ["children", "in"]);

    var _React$Children$toArr = _react.default.Children.toArray(children),
        first = _React$Children$toArr[0],
        second = _React$Children$toArr[1];

    delete props.onEnter;
    delete props.onEntering;
    delete props.onEntered;
    delete props.onExit;
    delete props.onExiting;
    delete props.onExited;
    return _react.default.createElement(_TransitionGroup.default, props, inProp ? _react.default.cloneElement(first, {
      key: 'first',
      onEnter: this.handleEnter,
      onEntering: this.handleEntering,
      onEntered: this.handleEntered
    }) : _react.default.cloneElement(second, {
      key: 'second',
      onEnter: this.handleExit,
      onEntering: this.handleExiting,
      onEntered: this.handleExited
    }));
  };

  return ReplaceTransition;
}(_react.default.Component);

ReplaceTransition.propTypes = process.env.NODE_ENV !== "production" ? {
  in: _propTypes.default.bool.isRequired,
  children: function children(props, propName) {
    if (_react.default.Children.count(props[propName]) !== 2) return new Error("\"" + propName + "\" must be exactly two transition components.");
    return null;
  }
} : {};
var _default = ReplaceTransition;
exports.default = _default;
module.exports = exports["default"];
}(ReplaceTransition, ReplaceTransition.exports));

var _CSSTransition = _interopRequireDefault$g(CSSTransition.exports);

var _ReplaceTransition = _interopRequireDefault$g(ReplaceTransition.exports);

var _TransitionGroup = _interopRequireDefault$g(TransitionGroup$2.exports);

var _Transition = _interopRequireDefault$g(Transition$3);

function _interopRequireDefault$g(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var reactTransitionGroup = {
  Transition: _Transition.default,
  TransitionGroup: _TransitionGroup.default,
  ReplaceTransition: _ReplaceTransition.default,
  CSSTransition: _CSSTransition.default
};

var SIZES_MAP = {
  xsmall: 8,
  small: 16,
  medium: 24,
  large: 48,
  xlarge: 96
};
var DEFAULT_SIZE = SIZES_MAP.small;

/* Define keyframes statically to prevent a perfomance issue in styled components v1 where the keyframes function
 * does not cache previous values resulting in each spinner injecting the same keyframe definition
 * in the DOM.
 * This can be reverted to use dynamic keyframes when we upgrade to styled components v2
 */
var keyframeNames$1 = {
  noop: keyframes$1(["\n    from { opacity: 0; }\n    to { opacity: 0; }\n  "]),
  enterRotate: keyframes$1(["\n    from { transform: rotate(50deg); }\n    to { transform: rotate(230deg); }\n  "]),
  leaveRotate: keyframes$1(["\n    from { transform: rotate(230deg); }\n    to { transform: rotate(510deg); }\n  "]),
  leaveOpacity: keyframes$1(["\n    from { opacity: 1; }\n    to { opacity: 0; }\n  "])
};
var getContainerAnimation = function getContainerAnimation(_ref) {
  var delay = _ref.delay,
      phase = _ref.phase;

  if (phase === 'DELAY') {
    /* This hides the spinner and allows us to use animationend events to move to the next phase in
     * the same way we do with the other lifecycle stages */
    return "animation: ".concat(delay, "s ").concat(keyframeNames$1.noop, ";");
  }

  if (phase === 'ENTER' || phase === 'IDLE') {
    return "animation: 1s ease-in-out forwards ".concat(keyframeNames$1.enterRotate, ";");
  }

  if (phase === 'LEAVE') {
    return "animation: 0.53s ease-in-out forwards ".concat(keyframeNames$1.leaveRotate, ",\n      0.2s ease-in-out 0.33s ").concat(keyframeNames$1.leaveOpacity, ";");
  }

  return '';
};

var getSize$2 = function getSize(_ref2) {
  var size = _ref2.size;
  return "".concat(size, "px");
};

var Container$4 = styled$1.span.withConfig({
  displayName: "styledContainer__Container",
  componentId: "sc-1qs8wxp-0"
})(["\n  ", " display: flex;\n  height: ", ";\n  width: ", ";\n\n  /* Rapidly creating and removing spinners will result in multiple spinners being visible while\n   * they complete their exit animations. This rules hides the spinner if another one has been\n   * added. */\n  div + & {\n    display: none;\n  }\n"], getContainerAnimation, getSize$2, getSize$2);
Container$4.displayName = 'SpinnerContainer';
var Container$5 = Container$4;

var getStrokeWidth = function getStrokeWidth(size) {
  return Math.round(size / 10);
};

var getStrokeCircumference = function getStrokeCircumference(size) {
  var strokeWidth = getStrokeWidth(size);
  var strokeRadius = size / 2 - strokeWidth / 2;
  return Math.PI * strokeRadius * 2;
};
/* Define keyframes statically to prevent a perfomance issue in styled components v1 where the keyframes function
 * does not cache previous values resulting in each spinner injecting the same keyframe definition
 * in the DOM.
 * This can be reverted to dynamic keyframes when we upgrade to styled components v2
 */


var keyframeNames = {
  noop: keyframes$1(["\n    from { opacity: 0; }\n    to { opacity: 0; }\n  "]),
  rotate: keyframes$1(["\n    to { transform: rotate(360deg); }\n  "]),
  enterOpacity: keyframes$1(["\n    from { opacity: 0; }\n    to { opacity: 1; }\n  "]),
  smallEnterStroke: keyframes$1(["\n    from { stroke-dashoffset: ", "px; }\n    to { stroke-dashoffset: ", "px; }\n  "], getStrokeCircumference(SIZES_MAP.small), getStrokeCircumference(SIZES_MAP.small) * 0.8),
  mediumEnterStroke: keyframes$1(["\n    from { stroke-dashoffset: ", "px; }\n    to { stroke-dashoffset: ", "px; }\n  "], getStrokeCircumference(SIZES_MAP.medium), getStrokeCircumference(SIZES_MAP.medium) * 0.8),
  largeEnterStroke: keyframes$1(["\n    from { stroke-dashoffset: ", "px; }\n    to { stroke-dashoffset: ", "px; }\n  "], getStrokeCircumference(SIZES_MAP.large), getStrokeCircumference(SIZES_MAP.large) * 0.8),
  xlargeEnterStroke: keyframes$1(["\n    from { stroke-dashoffset: ", "px; }\n    to { stroke-dashoffset: ", "px; }\n  "], getStrokeCircumference(SIZES_MAP.xlarge), getStrokeCircumference(SIZES_MAP.xlarge) * 0.8)
};
/* If a standard size is used, we can use one of our statically defined keyframes, otherwise
 * we're forced to dynamically create the keyframe and incur a performance cost.
 */

var getEnterStrokeKeyframe = function getEnterStrokeKeyframe(size) {
  var standardSizeName = Object.keys(SIZES_MAP).find(function (sizeName) {
    return size === SIZES_MAP[sizeName];
  });

  if (standardSizeName) {
    return keyframeNames["".concat(standardSizeName, "EnterStroke")];
  }

  var circumference = getStrokeCircumference(size);
  return keyframes$1(["\n    from { stroke-dashoffset: ", "px; }\n    to { stroke-dashoffset: ", "px; }\n  "], circumference, circumference * 0.8);
};

var spinnerColor = themed$4({
  light: N500$5,
  dark: N0$8
});
var spinnerColorInverted = themed$4({
  light: N0$8,
  dark: N0$8
});
var getStrokeColor$3 = function getStrokeColor(_ref // $FlowFixMe - theme is not found in props
) {
  var invertColor = _ref.invertColor,
      props = _objectWithoutProperties$3(_ref, ["invertColor"]);

  return invertColor ? spinnerColorInverted(props) : spinnerColor(props);
};
var svgStyles = css$3(["\n  ", ";\n"], function (props) {
  var circumference = getStrokeCircumference(props.size);
  var idleRotation = "0.86s cubic-bezier(0.4, 0.15, 0.6, 0.85) infinite ".concat(keyframeNames.rotate);
  var spinUpStroke = "0.8s ease-in-out ".concat(getEnterStrokeKeyframe(props.size));
  var spinUpOpacity = "0.2s ease-in-out ".concat(keyframeNames.enterOpacity);
  var activeAnimations = [idleRotation];

  if (props.phase === 'ENTER') {
    activeAnimations.push(spinUpStroke, spinUpOpacity);
  }

  return css$3(["\n      animation: ", ";\n      fill: none;\n      stroke: ", ";\n      stroke-dasharray: ", "px;\n      stroke-dashoffset: ", "px;\n      stroke-linecap: round;\n      stroke-width: ", "px;\n      transform-origin: center;\n    "], activeAnimations.join(', '), getStrokeColor$3, circumference, circumference * 0.8, getStrokeWidth(props.size));
});
var Svg$1 = styled$1.svg.withConfig({
  displayName: "styledSvg__Svg",
  componentId: "y2l69q-0"
})(["\n  ", ";\n"], svgStyles);
Svg$1.displayName = 'SpinnerSvg';
var Svg$2 = Svg$1;

var Outer = styled$1.span.withConfig({
  displayName: "Spinner__Outer",
  componentId: "sc-1ejgacn-0"
})(["\n  display: inline-block;\n  vertical-align: middle;\n"]);
Outer.displayName = 'Outer';

var Spinner$4 =
/*#__PURE__*/
function (_Component) {
  _inherits$8(Spinner, _Component);

  function Spinner(props) {
    var _this;

    _classCallCheck$8(this, Spinner);

    _this = _possibleConstructorReturn$8(this, _getPrototypeOf$2(Spinner).call(this, props));

    _defineProperty$3(_assertThisInitialized$4(_this), "transitionNode", void 0);

    _defineProperty$3(_assertThisInitialized$4(_this), "enter", function () {
      var delay = _this.props.delay;

      if (delay) {
        _this.setState({
          phase: 'DELAY'
        });
      } else {
        _this.setState({
          phase: 'ENTER'
        });
      }
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "idle", function () {
      _this.setState({
        phase: 'IDLE'
      });
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "exit", function () {
      _this.setState({
        phase: 'LEAVE'
      });
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "endListener", function (node, done) {
      var executeCallback = function executeCallback(event) {
        // ignore animation events on the glyph
        // $FlowFixMe - tagName does not exist in event.target
        if (event.target.tagName === 'svg') {
          return false;
        }

        if (_this.state.phase === 'DELAY') {
          _this.setState({
            phase: 'ENTER'
          });

          _this.endListener(node, done);
        } else {
          done();
        }

        return node && node.removeEventListener('animationend', executeCallback);
      };

      return node && node.addEventListener('animationend', executeCallback);
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "validateSize", function () {
      var size = _this.props.size;
      var spinnerSize = SIZES_MAP[size] || size;
      return typeof spinnerSize === 'number' ? spinnerSize : DEFAULT_SIZE;
    });

    _this.state = {
      phase: ''
    };
    return _this;
  }

  _createClass$8(Spinner, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var phase = this.state.phase;
      var _this$props = this.props,
          delay = _this$props.delay,
          invertColor = _this$props.invertColor,
          isCompleting = _this$props.isCompleting;
      var size = this.validateSize();
      var strokeWidth = Math.round(size / 10);
      var strokeRadius = size / 2 - strokeWidth / 2;
      return React__default.createElement(Outer, null, React__default.createElement(reactTransitionGroup.Transition, {
        addEndListener: this.endListener,
        appear: true,
        in: !isCompleting,
        mountOnEnter: true,
        unmountOnExit: true,
        onEnter: this.enter,
        onEntered: this.idle,
        onExit: this.exit,
        onExited: function onExited() {
          return _this2.props.onComplete();
        },
        ref: function ref(node) {
          _this2.transitionNode = node;
        }
      }, React__default.createElement(Container$5, {
        delay: delay / 1000,
        phase: phase,
        size: size
      }, React__default.createElement(Svg$2, {
        focusable: "false",
        height: size,
        invertColor: invertColor,
        phase: phase,
        size: size,
        viewBox: "0 0 ".concat(size, " ").concat(size),
        width: size,
        xmlns: "http://www.w3.org/2000/svg"
      }, React__default.createElement("circle", {
        cx: size / 2,
        cy: size / 2,
        r: strokeRadius
      })))));
    }
  }]);

  return Spinner;
}(Component$1);

_defineProperty$3(Spinner$4, "defaultProps", {
  delay: 100,
  isCompleting: false,
  invertColor: false,
  onComplete: function onComplete() {},
  size: 'medium'
});

var LoadingDiv = styled$1.div(templateObject_1$j || (templateObject_1$j = __makeTemplateObject$9(["\n  display: flex;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n"], ["\n  display: flex;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n"])));
var LoadingSpinner$6 = /** @class */ (function (_super) {
    __extends$c(LoadingSpinner, _super);
    function LoadingSpinner() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.invertSpinner = function () {
            var _a = _this.props, appearance = _a.appearance, isSelected = _a.isSelected, isDisabled = _a.isDisabled;
            if (isSelected) {
                return true;
            }
            if (isDisabled) {
                return false;
            }
            if (appearance === 'primary' ||
                appearance === 'danger' ||
                appearance === 'help') {
                return true;
            }
            return false;
        };
        return _this;
    }
    LoadingSpinner.prototype.render = function () {
        var spacing = this.props.spacing;
        var spinnerSize = 'medium';
        if (spacing !== 'default') {
            spinnerSize = 'small';
        }
        return (React$7.createElement(LoadingDiv, null,
            React$7.createElement(Spinner$4, { size: spinnerSize, invertColor: this.invertSpinner() })));
    };
    return LoadingSpinner;
}(React$7.Component));
var LoadingSpinner$7 = LoadingSpinner$6;
var templateObject_1$j;

var name$b="@atlaskit/button";var version$b="11.0.11";

var withDefaultProps = function (defaultProps, Component) {
    Component.defaultProps = defaultProps;
    return Component;
};

var StyledButton = styled$1.button(templateObject_1$i || (templateObject_1$i = __makeTemplateObject$9(["\n  ", ";\n"], ["\n  ", ";\n"])), getButtonStyles$3);
StyledButton.displayName = 'StyledButton';
// Target the <a> here to override a:hover specificity.
var StyledLink = styled$1.a(templateObject_2$d || (templateObject_2$d = __makeTemplateObject$9(["\n  a& {\n    ", ";\n  }\n"], ["\n  a& {\n    ", ";\n  }\n"])), getButtonStyles$3);
StyledLink.displayName = 'StyledLink';
var StyledSpan = styled$1.span(templateObject_3$b || (templateObject_3$b = __makeTemplateObject$9(["\n  ", ";\n"], ["\n  ", ";\n"])), getButtonStyles$3);
StyledSpan.displayName = 'StyledSpan';
var createStyledComponent = function () {
    // Override pseudo-state specificity.
    // This is necessary because we don't know what DOM element the custom component will render.
    var component = styled$1(CustomComponentProxy$1)(templateObject_4$6 || (templateObject_4$6 = __makeTemplateObject$9(["\n    &,\n    a&,\n    &:hover,\n    &:active,\n    &:focus {\n      ", "\n    }\n  "], ["\n    &,\n    a&,\n    &:hover,\n    &:active,\n    &:focus {\n      ", "\n    }\n  "])), getButtonStyles$3);
    component.displayName = 'StyledCustomComponent';
    return component;
};
var defaultProps$4 = {
    appearance: 'default',
    isDisabled: false,
    isSelected: false,
    isLoading: false,
    spacing: 'default',
    type: 'button',
    shouldFitContainer: false,
    autoFocus: false,
};
var Button$7 = /** @class */ (function (_super) {
    __extends$c(Button, _super);
    function Button() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            isActive: false,
            isFocus: false,
            isHover: false,
        };
        _this.customComponent = null;
        _this.isInteractive = function () { return !_this.props.isDisabled && !_this.props.isLoading; };
        _this.onMouseEnter = function (e) {
            _this.setState({ isHover: true });
            if (_this.props.onMouseEnter) {
                _this.props.onMouseEnter(e);
            }
        };
        _this.onMouseLeave = function (e) {
            _this.setState({ isHover: false, isActive: false });
            if (_this.props.onMouseLeave) {
                _this.props.onMouseLeave(e);
            }
        };
        _this.onMouseDown = function (e) {
            e.preventDefault();
            _this.setState({ isActive: true });
            if (_this.props.onMouseDown) {
                _this.props.onMouseDown(e);
            }
        };
        _this.onMouseUp = function (e) {
            _this.setState({ isActive: false });
            if (_this.props.onMouseUp) {
                _this.props.onMouseUp(e);
            }
        };
        _this.onFocus = function (event) {
            _this.setState({ isFocus: true });
            if (_this.props.onFocus) {
                _this.props.onFocus(event);
            }
        };
        _this.onBlur = function (event) {
            _this.setState({ isFocus: false });
            if (_this.props.onBlur) {
                _this.props.onBlur(event);
            }
        };
        /* Swallow click events when the button is disabled to prevent inner child clicks bubbling up */
        _this.onInnerClick = function (e) {
            if (!_this.isInteractive()) {
                e.stopPropagation();
            }
            return true;
        };
        _this.getInnerRef = function (ref) {
            _this.button = ref;
            if (_this.props.innerRef) {
                _this.props.innerRef(ref);
            }
        };
        return _this;
    }
    Button.prototype.componentWillReceiveProps = function (nextProps) {
        if (this.props.component !== nextProps.component) {
            delete this.customComponent;
        }
    };
    Button.prototype.componentDidMount = function () {
        if (this.props.autoFocus && this.button) {
            this.button.focus();
        }
    };
    Button.prototype.getStyledComponent = function () {
        if (this.props.component) {
            if (!this.customComponent) {
                this.customComponent = createStyledComponent();
            }
            return this.customComponent;
        }
        if (this.props.href) {
            return this.props.isDisabled ? StyledSpan : StyledLink;
        }
        return StyledButton;
    };
    Button.prototype.render = function () {
        var _a = this.props, children = _a.children, iconBefore = _a.iconBefore, iconAfter = _a.iconAfter, isLoading = _a.isLoading, shouldFitContainer = _a.shouldFitContainer, spacing = _a.spacing, appearance = _a.appearance, isSelected = _a.isSelected, isDisabled = _a.isDisabled;
        var buttonProps = getButtonProps$1(this);
        var StyledComponent = this.getStyledComponent();
        var iconIsOnlyChild = !!((iconBefore && !iconAfter && !children) ||
            (iconAfter && !iconBefore && !children));
        return (React$7.createElement(StyledComponent, __assign$9({ innerRef: this.getInnerRef }, buttonProps),
            React$7.createElement(ButtonWrapper$1, { onClick: this.onInnerClick, fit: !!shouldFitContainer },
                isLoading ? (React$7.createElement(LoadingSpinner$7, { spacing: spacing, appearance: appearance, isSelected: isSelected, isDisabled: isDisabled })) : null,
                iconBefore ? (React$7.createElement(IconWrapper$4, { isLoading: isLoading, spacing: buttonProps.spacing, isOnlyChild: iconIsOnlyChild }, iconBefore)) : null,
                children ? (React$7.createElement(ButtonContent$1, { isLoading: isLoading, followsIcon: !!iconBefore, spacing: buttonProps.spacing }, children)) : null,
                iconAfter ? (React$7.createElement(IconWrapper$4, { isLoading: isLoading, spacing: buttonProps.spacing, isOnlyChild: iconIsOnlyChild }, iconAfter)) : null)));
    };
    return Button;
}(React$7.Component));
var DefaultedButton = withDefaultProps(defaultProps$4, Button$7);
var ButtonWithoutAnalytics = withDeprecationWarnings$1(DefaultedButton);
var createAndFireEventOnAtlaskit$f = createAndFireEvent$5('atlaskit');
var AkButton = withAnalyticsContext$a({
    componentName: 'button',
    packageName: name$b,
    packageVersion: version$b,
})(withAnalyticsEvents$a({
    onClick: createAndFireEventOnAtlaskit$f({
        action: 'clicked',
        actionSubject: 'button',
        attributes: {
            componentName: 'button',
            packageName: name$b,
            packageVersion: version$b,
        },
    }),
})(ButtonWithoutAnalytics));
var templateObject_1$i, templateObject_2$d, templateObject_3$b, templateObject_4$6;

var classnames$1 = {exports: {}};

/*!
  Copyright (c) 2018 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/

(function (module) {
/* global define */

(function () {

	var hasOwn = {}.hasOwnProperty;

	function classNames() {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				if (arg.length) {
					var inner = classNames.apply(null, arg);
					if (inner) {
						classes.push(inner);
					}
				}
			} else if (argType === 'object') {
				if (arg.toString === Object.prototype.toString) {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				} else {
					classes.push(arg.toString());
				}
			}
		}

		return classes.join(' ');
	}

	if (module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else {
		window.classNames = classNames;
	}
}());
}(classnames$1));

var classNames$1 = classnames$1.exports;

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z$K = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");button.styled-atlaskit-button{border-radius:4px;height:35px;padding:0 10px}button.styled-atlaskit-button span{font-family:Roboto,sans-serif;font-size:14px;font-weight:400;line-height:30px}button.styled-atlaskit-button .icon{margin-right:15px}button.styled-atlaskit-button:not(:disabled).primary{background-color:#0b6cff}button.styled-atlaskit-button:not(:disabled).primary:hover{background-color:#4c93ff}button.styled-atlaskit-button:not(:disabled).primary:active{background-color:#004ec3}button.styled-atlaskit-button:not(:disabled).outline{background-color:transparent;border:1px solid #0b6cff}button.styled-atlaskit-button:not(:disabled).outline span{color:#0b6cff}button.styled-atlaskit-button:not(:disabled).outline:hover{background-color:#eff5ff}button.styled-atlaskit-button:not(:disabled).outline:active{background-color:#8dbaff}button.styled-atlaskit-button:not(:disabled).outline.danger{background-color:transparent;border-color:#e32626}button.styled-atlaskit-button:not(:disabled).outline.danger span{color:#e32626}button.styled-atlaskit-button:not(:disabled).subtle span{color:#0b6cff}button.styled-atlaskit-button:not(:disabled).subtle:hover{background-color:#eff5ff}button.styled-atlaskit-button:not(:disabled).subtle:active{background-color:#8dbaff}button.styled-atlaskit-button:not(:disabled).danger{background-color:#e32626}button.styled-atlaskit-button:not(:disabled).danger span{color:#fff}button.styled-atlaskit-button:disabled.primary{background-color:#b8bfcd}button.styled-atlaskit-button:disabled.primary span{color:#fff}button.styled-atlaskit-button:disabled.outline{background-color:transparent;border:1px solid #b8bfcd}button.styled-atlaskit-button:disabled.outline span{color:#b8bfcd}button.styled-atlaskit-button.link:hover{text-decoration:none}";
styleInject(css_248z$K);

var Button$6 = function (_a) {
    var children = _a.children, _b = _a.isDisabled, isDisabled = _b === void 0 ? false : _b, _c = _a.isLoading, isLoading = _c === void 0 ? false : _c, _d = _a.isSelected, isSelected = _d === void 0 ? false : _d, _e = _a.spacing, spacing = _e === void 0 ? "default" : _e, _f = _a.type, type = _f === void 0 ? "button" : _f, _g = _a.shouldFitContainer, shouldFitContainer = _g === void 0 ? false : _g, _h = _a.autoFocus, autoFocus = _h === void 0 ? false : _h, _j = _a.appearance, appearance = _j === void 0 ? "primary" : _j, _k = _a.className, className = _k === void 0 ? "" : _k, props = __rest$8(_a, ["children", "isDisabled", "isLoading", "isSelected", "spacing", "type", "shouldFitContainer", "autoFocus", "appearance", "className"]);
    return (jsx$1(AkButton, __assign$a({ className: classNames$1("styled-atlaskit-button", appearance, className), isDisabled: isDisabled, isLoading: isLoading, isSelected: isSelected, spacing: spacing, type: type, shouldFitContainer: shouldFitContainer, autoFocus: autoFocus, appearance: appearance !== "outline" ? appearance : undefined }, props, { children: children }), void 0));
};

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics$b = function(d, b) {
    extendStatics$b = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics$b(d, b);
};

function __extends$b(d, b) {
    extendStatics$b(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign$8 = function() {
    __assign$8 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign$8.apply(this, arguments);
};

function __rest$6(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __read$5(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread$5() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read$5(arguments[i]));
    return ar;
}

function __makeTemplateObject$8(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
}

var getPageRows = function (allRows, pageNumber, rowsPerPage) {
    if (!pageNumber || !rowsPerPage || !allRows.length) {
        return [];
    }
    return allRows.slice((pageNumber - 1) * rowsPerPage, pageNumber * rowsPerPage);
};
var assertIsSortable = function (head) {
    if (!head || !head.cells) {
        return;
    }
    head.cells.forEach(function (cell) {
        if (cell.isSortable && !cell.key) {
            try {
                throw Error("isSortable can't be set to true, if the 'key' prop is missing.");
            }
            catch (e) {
                // eslint-disable-next-line no-console
                console.error(e);
            }
        }
    });
};
var validateSortKey = function (sortKey, head) {
    if (!sortKey) {
        return;
    }
    var headHasKey = head && head.cells.map(function (cell) { return cell.key; }).includes(sortKey);
    if (!headHasKey) {
        try {
            throw Error("Cell with " + sortKey + " key not found in head.");
        }
        catch (e) {
            // eslint-disable-next-line no-console
            console.error(e);
        }
    }
};
// creates inline styles if flag ranking is true
var inlineStylesIfRanking = function (isRanking, width, height) {
    if (!isRanking) {
        return {};
    }
    if (height) {
        return { width: width, height: height };
    }
    return { width: width };
};

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics$a = function(d, b) {
    extendStatics$a = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics$a(d, b);
};

function __extends$a(d, b) {
    extendStatics$a(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign$7 = function() {
    __assign$7 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign$7.apply(this, arguments);
};

function __rest$5(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __read$4(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread$4() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read$4(arguments[i]));
    return ar;
}

var AnalyticsEvent$5 = /** @class */ (function () {
    function AnalyticsEvent(props) {
        var _this = this;
        this.clone = function () {
            // We stringify and parse here to get a hacky "deep clone" of the object.
            // This has some limitations in that it wont support functions, regexs, Maps, Sets, etc,
            // but none of those need to be represented in our payload, so we consider this fine
            var payload = JSON.parse(JSON.stringify(_this.payload));
            return new AnalyticsEvent({ payload: payload });
        };
        this.payload = props.payload;
    }
    AnalyticsEvent.prototype.update = function (updater) {
        if (typeof updater === 'function') {
            this.payload = updater(this.payload);
        }
        if (typeof updater === 'object') {
            this.payload = __assign$7(__assign$7({}, this.payload), updater);
        }
        return this;
    };
    return AnalyticsEvent;
}());
var AnalyticsEvent$6 = AnalyticsEvent$5;

var UIAnalyticsEvent$5 = /** @class */ (function (_super) {
    __extends$a(UIAnalyticsEvent, _super);
    function UIAnalyticsEvent(props) {
        var _this = _super.call(this, props) || this;
        _this.clone = function () {
            if (_this.hasFired) {
                // eslint-disable-next-line no-console
                console.warn("Cannot clone an event after it's been fired.");
                return null;
            }
            var context = __spread$4(_this.context);
            var handlers = __spread$4(_this.handlers);
            /**
             * A hacky "deep clone" of the object. This is limited in that it wont
             * support functions, regexs, Maps, Sets, etc, but none of those need to
             * be represented in our payload.
             */
            var payload = JSON.parse(JSON.stringify(_this.payload));
            return new UIAnalyticsEvent({ context: context, handlers: handlers, payload: payload });
        };
        _this.fire = function (channel) {
            if (_this.hasFired) {
                // eslint-disable-next-line no-console
                console.warn('Cannot fire an event twice.');
                return;
            }
            _this.handlers.forEach(function (handler) { return handler(_this, channel); });
            _this.hasFired = true;
        };
        _this.context = props.context || [];
        _this.handlers = props.handlers || [];
        _this.hasFired = false;
        return _this;
    }
    UIAnalyticsEvent.prototype.update = function (updater) {
        if (this.hasFired) {
            // eslint-disable-next-line no-console
            console.warn("Cannot update an event after it's been fired.");
            return this;
        }
        return _super.prototype.update.call(this, updater);
    };
    return UIAnalyticsEvent;
}(AnalyticsEvent$6));
var UIAnalyticsEvent$6 = UIAnalyticsEvent$5;

var AnalyticsNextContext = createContext$1({
    getAtlaskitAnalyticsContext: function () { return []; },
    getAtlaskitAnalyticsEventHandlers: function () { return []; },
});
var AnalyticsNextContext$1 = AnalyticsNextContext;

var ContextTypes$4 = {
    getAtlaskitAnalyticsContext: PropTypes$3.func,
    getAtlaskitAnalyticsEventHandlers: PropTypes$3.func,
};
var AnalyticsContext$g = /** @class */ (function (_super) {
    __extends$a(AnalyticsContext, _super);
    function AnalyticsContext(props) {
        var _this = _super.call(this, props) || this;
        _this.getChildContext = function () { return ({
            getAtlaskitAnalyticsContext: _this.getAnalyticsContext,
        }); };
        _this.getAnalyticsContext = function () {
            var data = _this.props.data;
            var getAtlaskitAnalyticsContext = _this.context.getAtlaskitAnalyticsContext;
            var ancestorData = (typeof getAtlaskitAnalyticsContext === 'function' &&
                getAtlaskitAnalyticsContext()) ||
                [];
            return __spread$4(ancestorData, [data]);
        };
        _this.getAnalyticsEventHandlers = function () {
            var getAtlaskitAnalyticsEventHandlers = _this.context.getAtlaskitAnalyticsEventHandlers;
            var ancestorHandlers = (typeof getAtlaskitAnalyticsEventHandlers === 'function' &&
                getAtlaskitAnalyticsEventHandlers()) ||
                [];
            return ancestorHandlers;
        };
        _this.state = {
            getAtlaskitAnalyticsContext: _this.getAnalyticsContext,
            getAtlaskitAnalyticsEventHandlers: _this.getAnalyticsEventHandlers,
        };
        return _this;
    }
    AnalyticsContext.prototype.render = function () {
        var children = this.props.children;
        return (React__default.createElement(AnalyticsNextContext$1.Provider, { value: this.state }, Children.only(children)));
    };
    AnalyticsContext.contextTypes = ContextTypes$4;
    AnalyticsContext.childContextTypes = ContextTypes$4;
    return AnalyticsContext;
}(Component$1));
var AnalyticsContext$h = AnalyticsContext$g;

var withAnalyticsContext$8 = function (defaultData) { return function (WrappedComponent) {
    var WithAnalyticsContext = React__default.forwardRef(function (props, ref) {
        var _a = props.analyticsContext, analyticsContext = _a === void 0 ? {} : _a, rest = __rest$5(props, ["analyticsContext"]);
        var analyticsData = __assign$7(__assign$7({}, defaultData), analyticsContext);
        return (React__default.createElement(AnalyticsContext$h, { data: analyticsData },
            React__default.createElement(WrappedComponent, __assign$7({}, rest, { ref: ref }))));
    });
    // @ts-ignore
    WithAnalyticsContext.displayName = "WithAnalyticsContext(" + (WrappedComponent.displayName ||
        WrappedComponent.name) + ")";
    return WithAnalyticsContext;
}; };
var withAnalyticsContext$9 = withAnalyticsContext$8;

/**
 * This component is used to grab the analytics functions off context.
 * It uses legacy context, but provides an API similar to 16.3 context.
 * This makes it easier to use with the forward ref API.
 */
var AnalyticsContextConsumer = /** @class */ (function (_super) {
    __extends$a(AnalyticsContextConsumer, _super);
    function AnalyticsContextConsumer(props) {
        var _this = _super.call(this, props) || this;
        /**
         * Store references to the original and patched event props so we can
         * determine when to update the patched props
         */
        _this.originalEventProps = {};
        _this.patchedEventProps = {};
        // Update patched event props only if the original props have changed
        _this.updatePatchedEventProps = function (props) {
            var changedPropCallbacks = Object.keys(_this.props.createEventMap).filter(function (p) { return _this.originalEventProps[p] !== props[p]; });
            if (changedPropCallbacks.length > 0) {
                _this.patchedEventProps = __assign$7(__assign$7({}, _this.patchedEventProps), _this.mapCreateEventsToProps(changedPropCallbacks, props));
                changedPropCallbacks.forEach(function (p) {
                    _this.originalEventProps[p] = props[p];
                });
            }
            return _this.patchedEventProps;
        };
        _this.mapCreateEventsToProps = function (changedPropNames, props) {
            return changedPropNames.reduce(function (modified, propCallbackName) {
                var _a;
                var eventCreator = _this.props.createEventMap[propCallbackName];
                var providedCallback = props[propCallbackName];
                if (!['object', 'function'].includes(typeof eventCreator)) {
                    return modified;
                }
                var modifiedCallback = function () {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    var analyticsEvent = typeof eventCreator === 'function'
                        ? eventCreator(_this.createAnalyticsEvent, props)
                        : _this.createAnalyticsEvent(eventCreator);
                    if (providedCallback) {
                        providedCallback.apply(void 0, __spread$4(args, [analyticsEvent]));
                    }
                };
                return __assign$7(__assign$7({}, modified), (_a = {}, _a[propCallbackName] = modifiedCallback, _a));
            }, {});
        };
        _this.createAnalyticsEvent = function (payload) {
            var _a = _this.context, getAtlaskitAnalyticsEventHandlers = _a.getAtlaskitAnalyticsEventHandlers, getAtlaskitAnalyticsContext = _a.getAtlaskitAnalyticsContext;
            return new UIAnalyticsEvent$6({
                context: (typeof getAtlaskitAnalyticsContext === 'function' &&
                    getAtlaskitAnalyticsContext()) ||
                    [],
                handlers: (typeof getAtlaskitAnalyticsEventHandlers === 'function' &&
                    getAtlaskitAnalyticsEventHandlers()) ||
                    [],
                payload: payload,
            });
        };
        Object.keys(_this.props.createEventMap).forEach(function (p) {
            _this.originalEventProps[p] = props.wrappedComponentProps[p];
        });
        _this.patchedEventProps = _this.mapCreateEventsToProps(Object.keys(_this.props.createEventMap), props.wrappedComponentProps);
        return _this;
    }
    AnalyticsContextConsumer.prototype.render = function () {
        var patchedEventProps = this.updatePatchedEventProps(this.props.wrappedComponentProps);
        return this.props.children({
            createAnalyticsEvent: this.createAnalyticsEvent,
            patchedEventProps: patchedEventProps,
        });
    };
    AnalyticsContextConsumer.contextTypes = {
        getAtlaskitAnalyticsEventHandlers: PropTypes$3.func,
        getAtlaskitAnalyticsContext: PropTypes$3.func,
    };
    AnalyticsContextConsumer.defaultProps = {
        createEventMap: {},
    };
    return AnalyticsContextConsumer;
}(React__default.Component));
var AnalyticsContextConsumer$1 = AnalyticsContextConsumer;

var withAnalyticsEvents$8 = function (createEventMap) { return function (WrappedComponent) {
    var WithAnalyticsEvents = React__default.forwardRef(function (props, ref) { return (React__default.createElement(AnalyticsContextConsumer$1, { createEventMap: createEventMap, wrappedComponentProps: props }, function (_a) {
        var createAnalyticsEvent = _a.createAnalyticsEvent, patchedEventProps = _a.patchedEventProps;
        return (React__default.createElement(WrappedComponent, __assign$7({}, props, patchedEventProps, { createAnalyticsEvent: createAnalyticsEvent, ref: ref })));
    })); });
    // @ts-ignore
    WithAnalyticsEvents.displayName = "WithAnalyticsEvents(" + (WrappedComponent.displayName ||
        WrappedComponent.name) + ")";
    return WithAnalyticsEvents;
}; };
var withAnalyticsEvents$9 = withAnalyticsEvents$8;

function areInputsEqual$1(newInputs, lastInputs) {
  if (newInputs.length !== lastInputs.length) {
    return false;
  }

  for (var i = 0; i < newInputs.length; i++) {
    if (newInputs[i] !== lastInputs[i]) {
      return false;
    }
  }

  return true;
}

function useMemoOne(getResult, inputs) {
  var initial = useState(function () {
    return {
      inputs: inputs,
      result: getResult()
    };
  })[0];
  var isFirstRun = useRef(true);
  var committed = useRef(initial);
  var useCache = isFirstRun.current || Boolean(inputs && committed.current.inputs && areInputsEqual$1(inputs, committed.current.inputs));
  var cache = useCache ? committed.current : {
    inputs: inputs,
    result: getResult()
  };
  useEffect(function () {
    isFirstRun.current = false;
    committed.current = cache;
  }, [cache]);
  return cache.result;
}
function useCallbackOne(callback, inputs) {
  return useMemoOne(function () {
    return callback;
  }, inputs);
}
var useMemo = useMemoOne;
var useCallback = useCallbackOne;

var createAndFireEvent$4 = (function (channel) { return function (payload) { return function (createAnalyticsEvent) {
    var consumerEvent = createAnalyticsEvent(payload);
    var clonedEvent = consumerEvent.clone();
    if (clonedEvent) {
        clonedEvent.fire(channel);
    }
    return consumerEvent;
}; }; });

var ASC = 'ASC';
var DESC = 'DESC';
var SMALL = 'small';
var LARGE = 'large';
var LOADING_CONTENTS_OPACITY = 0.22;

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

function __rest$4(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

// ideally this would be fetched from ../constants but that causes a
// circular dep loop. This will be refactored as part of a breaking
// change in the future.
var DEFAULT_THEME_MODE$3 = 'light';
var THEME_MODES$3 = ['light', 'dark'];
// Resolves the different types of theme objects in the current API
function getTheme$3(props) {
    if (props && props.theme) {
        // Theme is the global Atlaskit theme
        if ('__ATLASKIT_THEME__' in props.theme) {
            return props.theme.__ATLASKIT_THEME__;
        }
        // User has provided alternative modes
        else if ('mode' in props.theme && THEME_MODES$3.includes(props.theme.mode)) {
            return props.theme;
        }
    }
    // If format not supported (or no theme provided), return standard theme
    return { mode: DEFAULT_THEME_MODE$3 };
}

/* eslint-disable prefer-rest-params */
// Unpack custom variants, and get correct value for the current theme
function themedVariants$3(variantProp, variants) {
    return function (props) {
        var theme = getTheme$3(props);
        if (props && props[variantProp] && variants) {
            var modes = variants[props[variantProp]];
            if (modes && modes[theme.mode]) {
                var value = modes[theme.mode];
                if (value)
                    return value; // TS believes value can be undefined
            }
        }
        return '';
    };
}
function themed$3(modesOrVariant, variantModes) {
    if (typeof modesOrVariant === 'string') {
        return themedVariants$3(modesOrVariant, variantModes);
    }
    var modes = modesOrVariant;
    return function (props) {
        // Get theme from the user's props
        var theme = getTheme$3(props);
        // User isn't required to provide both light and dark values
        if (theme.mode in modes) {
            var value = modes[theme.mode]; // TS believes value can be undefined
            if (value)
                return value;
        }
        return '';
    };
}

// Reds
var R50$1 = '#FFEBE6';
var R75$2 = '#FFBDAD';
var R100$1 = '#FF8F73';
var R200$1 = '#FF7452';
var R300$2 = '#FF5630';
var R400$2 = '#DE350B';
var R500$1 = '#BF2600';
// Yellows
var Y50 = '#FFFAE6';
var Y75$1 = '#FFF0B3';
var Y100$1 = '#FFE380';
var Y200$1 = '#FFC400';
var Y300$1 = '#FFAB00';
var Y400 = '#FF991F';
var Y500 = '#FF8B00';
// Greens
var G50 = '#E3FCEF';
var G75$1 = '#ABF5D1';
var G100$1 = '#79F2C0';
var G200$1 = '#57D9A3';
var G300 = '#36B37E';
var G400$1 = '#00875A';
var G500$1 = '#006644';
// Blues
var B50$1 = '#DEEBFF';
var B75$2 = '#B3D4FF';
var B100$3 = '#4C9AFF';
var B200$1 = '#2684FF';
var B300$1 = '#0065FF';
var B400 = '#0052CC';
var B500$1 = '#0747A6';
// Purples
var P50$1 = '#EAE6FF';
var P75$1 = '#C0B6F2';
var P100$1 = '#998DD9';
var P200 = '#8777D9';
var P300 = '#6554C0';
var P400 = '#5243AA';
var P500$1 = '#403294';
// Teals
var T50 = '#E6FCFF';
var T75$1 = '#B3F5FF';
var T100$1 = '#79E2F2';
var T200$1 = '#00C7E6';
var T300 = '#00B8D9';
var T400 = '#00A3BF';
var T500 = '#008DA6';
// Neutrals
var N0$7 = '#FFFFFF';
var N10$1 = '#FAFBFC';
var N20$3 = '#F4F5F7';
var N30$3 = '#EBECF0';
var N40$2 = '#DFE1E6';
var N50$1 = '#C1C7D0';
var N60$1 = '#B3BAC5';
var N70$3 = '#A5ADBA';
var N80 = '#97A0AF';
var N90 = '#8993A4';
var N100$3 = '#7A869A';
var N200$2 = '#6B778C';
var N300 = '#5E6C84';
var N400 = '#505F79';
var N500$4 = '#42526E';
var N600 = '#344563';
var N700$1 = '#253858';
var N800$2 = '#172B4D';
// ATTENTION: update the tints if you update this
var N900$1 = '#091E42';
// Each tint is made of N900 and an alpha channel
var N10A = 'rgba(9, 30, 66, 0.02)';
var N20A = 'rgba(9, 30, 66, 0.04)';
var N30A = 'rgba(9, 30, 66, 0.08)';
var N40A = 'rgba(9, 30, 66, 0.13)';
var N50A$1 = 'rgba(9, 30, 66, 0.25)';
var N60A$1 = 'rgba(9, 30, 66, 0.31)';
var N70A = 'rgba(9, 30, 66, 0.36)';
var N80A = 'rgba(9, 30, 66, 0.42)';
var N90A = 'rgba(9, 30, 66, 0.48)';
var N100A = 'rgba(9, 30, 66, 0.54)';
var N200A = 'rgba(9, 30, 66, 0.60)';
var N300A = 'rgba(9, 30, 66, 0.66)';
var N400A = 'rgba(9, 30, 66, 0.71)';
var N500A = 'rgba(9, 30, 66, 0.77)';
var N600A = 'rgba(9, 30, 66, 0.82)';
var N700A = 'rgba(9, 30, 66, 0.89)';
var N800A = 'rgba(9, 30, 66, 0.95)';
// Dark Mode Neutrals
var DN900$2 = '#E6EDFA';
var DN800 = '#DCE5F5';
var DN700 = '#CED9EB';
var DN600$2 = '#B8C7E0';
var DN500$2 = '#ABBBD6';
var DN400 = '#9FB0CC';
var DN300$1 = '#8C9CB8';
var DN200$1 = '#7988A3';
var DN100 = '#67758F';
var DN90$2 = '#56637A';
var DN80 = '#455166';
var DN70 = '#3B475C';
var DN60$1 = '#313D52';
var DN50$1 = '#283447';
var DN40$1 = '#202B3D';
var DN30$5 = '#1B2638';
var DN20$1 = '#121A29';
var DN10$1 = '#0E1624';
// ATTENTION: update the tints if you update this
var DN0 = '#0D1424';
// Each dark tint is made of DN0 and an alpha channel
var DN800A = 'rgba(13, 20, 36, 0.06)';
var DN700A = 'rgba(13, 20, 36, 0.14)';
var DN600A = 'rgba(13, 20, 36, 0.18)';
var DN500A = 'rgba(13, 20, 36, 0.29)';
var DN400A = 'rgba(13, 20, 36, 0.36)';
var DN300A = 'rgba(13, 20, 36, 0.40)';
var DN200A = 'rgba(13, 20, 36, 0.47)';
var DN100A$1 = 'rgba(13, 20, 36, 0.53)';
var DN90A = 'rgba(13, 20, 36, 0.63)';
var DN80A = 'rgba(13, 20, 36, 0.73)';
var DN70A = 'rgba(13, 20, 36, 0.78)';
var DN60A$1 = 'rgba(13, 20, 36, 0.81)';
var DN50A$1 = 'rgba(13, 20, 36, 0.85)';
var DN40A = 'rgba(13, 20, 36, 0.89)';
var DN30A = 'rgba(13, 20, 36, 0.92)';
var DN20A = 'rgba(13, 20, 36, 0.95)';
var DN10A = 'rgba(13, 20, 36, 0.97)';
// Themed colors
var background = themed$3({ light: N0$7, dark: DN30$5 });
var backgroundActive = themed$3({ light: B50$1, dark: B75$2 });
var backgroundHover = themed$3({ light: N30$3, dark: DN70 });
var backgroundOnLayer = themed$3({ light: N0$7, dark: DN50$1 });
var text$1 = themed$3({ light: N900$1, dark: DN600$2 });
var textHover = themed$3({ light: N800$2, dark: DN600$2 });
var textActive = themed$3({ light: B400, dark: B400 });
var subtleText = themed$3({ light: N200$2, dark: DN300$1 });
var placeholderText$1 = themed$3({ light: N100$3, dark: DN200$1 });
var heading = themed$3({ light: N800$2, dark: DN600$2 });
var subtleHeading = themed$3({ light: N200$2, dark: DN300$1 });
var codeBlock = themed$3({ light: N20$3, dark: DN50$1 });
var link = themed$3({ light: B400, dark: B100$3 });
var linkHover = themed$3({ light: B300$1, dark: B200$1 });
var linkActive = themed$3({ light: B500$1, dark: B100$3 });
var linkOutline = themed$3({ light: B100$3, dark: B200$1 });
var primary = themed$3({ light: B400, dark: B100$3 });
var blue = themed$3({ light: B400, dark: B100$3 });
var teal = themed$3({ light: T300, dark: T200$1 });
var purple = themed$3({ light: P300, dark: P100$1 });
var red$2 = themed$3({ light: R300$2, dark: R300$2 });
var yellow$1 = themed$3({ light: Y300$1, dark: Y300$1 });
var green = themed$3({ light: G300, dark: G300 });
var skeleton = function () { return N20A; };

var colors$1 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    R50: R50$1,
    R75: R75$2,
    R100: R100$1,
    R200: R200$1,
    R300: R300$2,
    R400: R400$2,
    R500: R500$1,
    Y50: Y50,
    Y75: Y75$1,
    Y100: Y100$1,
    Y200: Y200$1,
    Y300: Y300$1,
    Y400: Y400,
    Y500: Y500,
    G50: G50,
    G75: G75$1,
    G100: G100$1,
    G200: G200$1,
    G300: G300,
    G400: G400$1,
    G500: G500$1,
    B50: B50$1,
    B75: B75$2,
    B100: B100$3,
    B200: B200$1,
    B300: B300$1,
    B400: B400,
    B500: B500$1,
    P50: P50$1,
    P75: P75$1,
    P100: P100$1,
    P200: P200,
    P300: P300,
    P400: P400,
    P500: P500$1,
    T50: T50,
    T75: T75$1,
    T100: T100$1,
    T200: T200$1,
    T300: T300,
    T400: T400,
    T500: T500,
    N0: N0$7,
    N10: N10$1,
    N20: N20$3,
    N30: N30$3,
    N40: N40$2,
    N50: N50$1,
    N60: N60$1,
    N70: N70$3,
    N80: N80,
    N90: N90,
    N100: N100$3,
    N200: N200$2,
    N300: N300,
    N400: N400,
    N500: N500$4,
    N600: N600,
    N700: N700$1,
    N800: N800$2,
    N900: N900$1,
    N10A: N10A,
    N20A: N20A,
    N30A: N30A,
    N40A: N40A,
    N50A: N50A$1,
    N60A: N60A$1,
    N70A: N70A,
    N80A: N80A,
    N90A: N90A,
    N100A: N100A,
    N200A: N200A,
    N300A: N300A,
    N400A: N400A,
    N500A: N500A,
    N600A: N600A,
    N700A: N700A,
    N800A: N800A,
    DN900: DN900$2,
    DN800: DN800,
    DN700: DN700,
    DN600: DN600$2,
    DN500: DN500$2,
    DN400: DN400,
    DN300: DN300$1,
    DN200: DN200$1,
    DN100: DN100,
    DN90: DN90$2,
    DN80: DN80,
    DN70: DN70,
    DN60: DN60$1,
    DN50: DN50$1,
    DN40: DN40$1,
    DN30: DN30$5,
    DN20: DN20$1,
    DN10: DN10$1,
    DN0: DN0,
    DN800A: DN800A,
    DN700A: DN700A,
    DN600A: DN600A,
    DN500A: DN500A,
    DN400A: DN400A,
    DN300A: DN300A,
    DN200A: DN200A,
    DN100A: DN100A$1,
    DN90A: DN90A,
    DN80A: DN80A,
    DN70A: DN70A,
    DN60A: DN60A$1,
    DN50A: DN50A$1,
    DN40A: DN40A,
    DN30A: DN30A,
    DN20A: DN20A,
    DN10A: DN10A,
    background: background,
    backgroundActive: backgroundActive,
    backgroundHover: backgroundHover,
    backgroundOnLayer: backgroundOnLayer,
    text: text$1,
    textHover: textHover,
    textActive: textActive,
    subtleText: subtleText,
    placeholderText: placeholderText$1,
    heading: heading,
    subtleHeading: subtleHeading,
    codeBlock: codeBlock,
    link: link,
    linkHover: linkHover,
    linkActive: linkActive,
    linkOutline: linkOutline,
    primary: primary,
    blue: blue,
    teal: teal,
    purple: purple,
    red: red$2,
    yellow: yellow$1,
    green: green,
    skeleton: skeleton
});

/*
  These theme values are expressed as functions so that if we decide to make
  them dependent on props in the future, it wouldn't require a significant
  refactor everywhere they are being used.
*/
var borderRadius$5 = function () { return 3; };
var gridSize$5 = function () { return 8; };
var fontSize$5 = function () { return 14; };
var fontSizeSmall = function () { return 11; };
var layers$1 = {
    card: function () { return 100; },
    dialog: function () { return 300; },
    navigation: function () { return 200; },
    layer: function () { return 400; },
    blanket: function () { return 500; },
    modal: function () { return 510; },
    flag: function () { return 600; },
    spotlight: function () { return 700; },
    tooltip: function () { return 800; },
};

// If a generic is used here, props can be inferred never and passed up (even with defaults)
function multiply(fn, factor) {
    return function (props) { return fn(props) * factor; };
}
function divide(fn, divisor) {
    return function (props) { return fn(props) / divisor; };
}

var Table = styled$1.table(templateObject_2$c || (templateObject_2$c = __makeTemplateObject$8(["\n  ", ";\n  border-collapse: collapse;\n  width: 100%;\n"], ["\n  ",
    ";\n  border-collapse: collapse;\n  width: 100%;\n"])), function (_a) {
    var isFixedSize = _a.isFixedSize;
    return isFixedSize && css$3(templateObject_1$h || (templateObject_1$h = __makeTemplateObject$8(["\n      table-layout: fixed;\n    "], ["\n      table-layout: fixed;\n    "])));
});
var Caption = styled$1.caption(templateObject_3$a || (templateObject_3$a = __makeTemplateObject$8(["\n  font-size: 1.42857143em;\n  /* there is a bug in Safari: if element which creates a new stacking context\n     is a child of a table, table caption re-renders in bad wrong position\n     https://stackoverflow.com/questions/44009186/safari-bug-translating-table-row-group-using-gsap-make-caption-jump-to-bottom\n  */\n  will-change: transform;\n  font-style: inherit;\n  font-weight: 500;\n  letter-spacing: -0.008em;\n  line-height: 1.2;\n  margin-bottom: ", "px;\n  margin-top: ", "px;\n  text-align: left;\n"], ["\n  font-size: 1.42857143em;\n  /* there is a bug in Safari: if element which creates a new stacking context\n     is a child of a table, table caption re-renders in bad wrong position\n     https://stackoverflow.com/questions/44009186/safari-bug-translating-table-row-group-using-gsap-make-caption-jump-to-bottom\n  */\n  will-change: transform;\n  font-style: inherit;\n  font-weight: 500;\n  letter-spacing: -0.008em;\n  line-height: 1.2;\n  margin-bottom: ", "px;\n  margin-top: ", "px;\n  text-align: left;\n"])), gridSize$5, multiply(gridSize$5, 3.5));
var PaginationWrapper = styled$1.div(templateObject_4$5 || (templateObject_4$5 = __makeTemplateObject$8(["\n  display: flex;\n  justify-content: center;\n"], ["\n  display: flex;\n  justify-content: center;\n"])));
var templateObject_1$h, templateObject_2$c, templateObject_3$a, templateObject_4$5;

var EmptyViewWithFixedHeight = styled$1.div(templateObject_1$g || (templateObject_1$g = __makeTemplateObject$8(["\n  height: ", "px;\n"], ["\n  height: ", "px;\n"])), multiply(gridSize$5, 18));
var EmptyViewContainer = styled$1.div(templateObject_2$b || (templateObject_2$b = __makeTemplateObject$8(["\n  margin: auto;\n  padding: 10px;\n  text-align: center;\n  width: 50%;\n"], ["\n  margin: auto;\n  padding: 10px;\n  text-align: center;\n  width: 50%;\n"])));
var templateObject_1$g, templateObject_2$b;

var name$a="@atlaskit/dynamic-table";var version$a="13.7.9";

// sort all rows based on sort key and order
var getSortedRows = function (head, rows, sortKey, sortOrder) {
    if (!sortKey || !head) {
        return rows;
    }
    if (!rows) {
        return [];
    }
    // return value which will be used for sorting
    var getSortingCellValue = function (cells) {
        for (var i = 0; i < cells.length; i++) {
            if (head.cells[i] && head.cells[i].key === sortKey) {
                return cells[i].key;
            }
        }
        return undefined;
    };
    // Get copy of rows to avoid sorting prop in place
    var sortableRows = Array.from(rows);
    // Reorder rows in table based on sorting cell value
    // Algorithm will sort numerics or strings, but not both
    return sortableRows.sort(function (a, b) {
        var valA = getSortingCellValue(a.cells);
        var valB = getSortingCellValue(b.cells);
        // modifier used for sorting type (ascending or descending)
        var modifier = sortOrder === ASC ? 1 : -1;
        if (valA === undefined || valB === undefined) {
            return modifier;
        }
        if (typeof valA !== typeof valB) {
            // numbers are always grouped higher in the sort
            if (typeof valA === 'number') {
                return -1;
            }
            if (typeof valB === 'number') {
                return 1;
            }
            // strings are grouped next
            if (typeof valA === 'string') {
                return -1;
            }
            if (typeof valB === 'string') {
                return 1;
            }
        }
        // Sort strings using localeCompare
        if (typeof valA === 'string' && typeof valB === 'string') {
            return (modifier *
                valA.localeCompare(valB, undefined, {
                    sensitivity: 'accent',
                    numeric: true,
                }));
        }
        if ((!valA && valA !== 0) || valA < valB) {
            return -modifier;
        }
        if ((!valB && valB !== 0) || valA > valB) {
            return modifier;
        }
        if (valA === valB) {
            return 0;
        }
        return 1;
    });
};
// get one page of data in table, sorting all rows previously
function withSortedPageRows(WrappedComponent) {
    return /** @class */ (function (_super) {
        __extends$b(WithSortedPageRows, _super);
        function WithSortedPageRows() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.state = { pageRows: [] };
            return _this;
        }
        WithSortedPageRows.getDerivedStateFromProps = function (props, state) {
            var rows = props.rows, head = props.head, sortKey = props.sortKey, sortOrder = props.sortOrder, page = props.page, rowsPerPage = props.rowsPerPage;
            validateSortKey(sortKey, head);
            var sortedRows = getSortedRows(head, rows, sortKey, sortOrder) || [];
            var pageRows = getPageRows(sortedRows, page, rowsPerPage);
            return __assign$8(__assign$8({}, state), { pageRows: pageRows });
        };
        WithSortedPageRows.prototype.componentDidMount = function () {
            this.props.onPageRowsUpdate &&
                this.props.onPageRowsUpdate(this.state.pageRows);
        };
        WithSortedPageRows.prototype.componentDidUpdate = function (_prevProps, prevState) {
            if (this.props.onPageRowsUpdate &&
                this.state.pageRows !== prevState.pageRows) {
                this.props.onPageRowsUpdate(this.state.pageRows);
            }
        };
        WithSortedPageRows.prototype.render = function () {
            var _a = this.props; _a.rows; var head = _a.head; _a.sortKey; _a.sortOrder; _a.rowsPerPage; _a.page; 
            var // @ts-ignore - Rest types may only be created from object types
            restProps = __rest$6(_a, ["rows", "head", "sortKey", "sortOrder", "rowsPerPage", "page"]);
            return (React__default.createElement(WrappedComponent, __assign$8({ pageRows: this.state.pageRows, head: head }, restProps)));
        };
        return WithSortedPageRows;
    }(React__default.Component));
}

/*
createTheme is used to create a set of Providers and Consumers for theming components.
- Takes a default theme function; this theme function gets a set of props, and returns tokens
   based on those props. An example of this default theme function is one that produces the standard
   appearance of the component
- Returns two things - a Provider that allow for additional themes to be applied, and a Consumer
   that can get the current theme and fetch it.
*/
function createTheme$4(defaultGetTokens) {
    var emptyThemeFn = function (getTokens, props) {
        return getTokens(props);
    };
    /* Internally, Theme uses React Context, with internal providers and consumers.
       The React Context passes only a function that gets props, and turns them into tokens. This
          function gets mixed as more Providers with their own themes are added. This mixed function
          is ultimately picked up by Consumers, which implement a context consumer internally to fetch
          the theme. */
    var ThemeContext = createContext$1(defaultGetTokens);
    // The Theme Consumer takes a function as its child - this function takes tokens, and the
    // return value is generally a set of nodes with the tokens applied appropriately.
    function Consumer(props) {
        var children = props.children, themeProps = __rest$4(props, ["children"]);
        var theme = useContext(ThemeContext);
        var themeFn = theme || emptyThemeFn;
        // @ts-ignore See issue for more info: https://github.com/Microsoft/TypeScript/issues/10727
        // Argument of type 'Pick<ThemeProps & { children: (tokens: ThemeTokens) => ReactNode; }, Exclude<keyof ThemeProps, "children">>' is not assignable to parameter of type 'ThemeProps'.ts(2345)
        var tokens = themeFn(themeProps);
        // We add a fragment to ensure we don't break people upgrading.
        // Previously they may have been able to pass in undefined without things blowing up.
        return React__default.createElement(React__default.Fragment, null, children(tokens));
    }
    /* The Theme Provider takes regular nodes as its child, but also takes a *theme function*
       - The theme function takes a set of props, as well as a function (getTokens) that can
          turn props into tokens.
       - The getTokens function isn't called immediately - instead the props are passed
          through a mix of parent theming functions
       Children of this provider will receive this mixed theme
    */
    function Provider(props) {
        var themeFn = useContext(ThemeContext);
        var valueFn = props.value || emptyThemeFn;
        var mixedFn = useCallback$1(function (themeProps) { return valueFn(themeFn, themeProps); }, [themeFn, valueFn]);
        return (React__default.createElement(ThemeContext.Provider, { value: mixedFn }, props.children));
    }
    return { Consumer: Consumer, Provider: Provider };
}

// Create default global light theme
var GlobalTheme$3 = createTheme$4(function () { return ({
    mode: 'light',
}); });

var arrow$3 = {
    defaultColor: themed$3({ light: N40$2, dark: DN40$1 }),
    selectedColor: themed$3({ light: N300, dark: DN300$1 }),
    hoverColor: themed$3({ light: N60$1, dark: DN60$1 }),
};
var row = {
    focusOutline: themed$3({ light: B100$3, dark: B100$3 }),
    highlightedBackground: themed$3({ light: N20$3, dark: DN50$1 }),
    hoverBackground: themed$3({ light: N10$1, dark: DN40$1 }),
    hoverHighlightedBackground: themed$3({ light: N30$3, dark: DN60$1 }),
};
var head = {
    borderColor: themed$3({ light: N40$2, dark: DN50$1 }),
    textColor: themed$3({ light: N300, dark: DN300$1 }),
};

var truncateStyle = function (_a) {
    var width = _a.width, isFixedSize = _a.isFixedSize, shouldTruncate = _a.shouldTruncate;
    return css$3(templateObject_4$4 || (templateObject_4$4 = __makeTemplateObject$8(["\n  ", " ", ";\n  ", ";\n"], ["\n  ",
        " ",
        ";\n  ",
        ";\n"])), width
        ? css$3(templateObject_1$f || (templateObject_1$f = __makeTemplateObject$8(["\n        width: ", "%;\n      "], ["\n        width: ", "%;\n      "])), width) : '', isFixedSize
        ? css$3(templateObject_2$a || (templateObject_2$a = __makeTemplateObject$8(["\n        overflow: hidden;\n      "], ["\n        overflow: hidden;\n      "]))) : '', isFixedSize && shouldTruncate
        ? css$3(templateObject_3$9 || (templateObject_3$9 = __makeTemplateObject$8(["\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      "], ["\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      "]))) : '');
};
var onClickStyle = function (_a) {
    var onClick = _a.onClick;
    return onClick && css$3(templateObject_5$2 || (templateObject_5$2 = __makeTemplateObject$8(["\n    &:hover {\n      cursor: pointer;\n      background-color: ", ";\n    }\n  "], ["\n    &:hover {\n      cursor: pointer;\n      background-color: ", ";\n    }\n  "])), N30A);
};
var arrowsStyle = function (props) {
    var isSortable = props.isSortable, sortOrder = props.sortOrder;
    if (!isSortable) {
        return '';
    }
    var pseudoBase = css$3(templateObject_6$2 || (templateObject_6$2 = __makeTemplateObject$8(["\n    border: 3px solid transparent;\n    display: block;\n    height: 0;\n    position: absolute;\n    right: -", "px;\n    width: 0;\n  "], ["\n    border: 3px solid transparent;\n    display: block;\n    height: 0;\n    position: absolute;\n    right: -", "px;\n    width: 0;\n  "])), gridSize$5);
    return css$3(templateObject_7$2 || (templateObject_7$2 = __makeTemplateObject$8(["\n    & > span {\n      position: relative;\n      &::before {\n        ", ";\n        border-bottom: 3px solid\n          ", ";\n        bottom: 8px;\n        content: ' ';\n      }\n      &::after {\n        ", ";\n        border-top: 3px solid\n          ", ";\n        bottom: 0;\n        content: ' ';\n      }\n    }\n\n    &:hover > span {\n      &::before {\n        border-bottom: 3px solid\n          ", ";\n      }\n      &::after {\n        border-top: 3px solid\n          ", ";\n      }\n    }\n  "], ["\n    & > span {\n      position: relative;\n      &::before {\n        ", ";\n        border-bottom: 3px solid\n          ",
        ";\n        bottom: 8px;\n        content: ' ';\n      }\n      &::after {\n        ", ";\n        border-top: 3px solid\n          ",
        ";\n        bottom: 0;\n        content: ' ';\n      }\n    }\n\n    &:hover > span {\n      &::before {\n        border-bottom: 3px solid\n          ",
        ";\n      }\n      &::after {\n        border-top: 3px solid\n          ",
        ";\n      }\n    }\n  "])), pseudoBase, sortOrder === ASC
        ? arrow$3.selectedColor(props)
        : arrow$3.defaultColor(props), pseudoBase, sortOrder === DESC
        ? arrow$3.selectedColor(props)
        : arrow$3.defaultColor(props), sortOrder === ASC
        ? arrow$3.selectedColor(props)
        : arrow$3.hoverColor(props), sortOrder === DESC
        ? arrow$3.selectedColor(props)
        : arrow$3.hoverColor(props));
};
var cellStyle = css$3(templateObject_8$1 || (templateObject_8$1 = __makeTemplateObject$8(["\n  border: none;\n  padding: ", "px ", "px;\n  text-align: left;\n\n  &:first-child {\n    padding-left: 0;\n  }\n  &:last-child {\n    padding-right: 0;\n  }\n"], ["\n  border: none;\n  padding: ", "px ", "px;\n  text-align: left;\n\n  &:first-child {\n    padding-left: 0;\n  }\n  &:last-child {\n    padding-right: 0;\n  }\n"])), divide(gridSize$5, 2), gridSize$5);
var templateObject_1$f, templateObject_2$a, templateObject_3$9, templateObject_4$4, templateObject_5$2, templateObject_6$2, templateObject_7$2, templateObject_8$1;

var TableBodyCell = styled$1.td(templateObject_1$e || (templateObject_1$e = __makeTemplateObject$8(["\n  ", " ", ";\n"], ["\n  ", " ", ";\n"])), function (props) { return truncateStyle(props); }, cellStyle);
var templateObject_1$e;

var outlineWidth = '2px';
var TableBodyRow = styled$1.tr(templateObject_3$8 || (templateObject_3$8 = __makeTemplateObject$8(["\n  ", "\n\n  &:hover {\n    ", "\n  }\n\n  &:focus {\n    outline: ", " solid ", ";\n    outline-offset: -", ";\n  }\n"], ["\n  ",
    "\n\n  &:hover {\n    ",
    "\n  }\n\n  &:focus {\n    outline: ", " solid ", ";\n    outline-offset: -", ";\n  }\n"])), function (_a) {
    var isHighlighted = _a.isHighlighted;
    return isHighlighted && css$3(templateObject_1$d || (templateObject_1$d = __makeTemplateObject$8(["\n      background-color: ", ";\n    "], ["\n      background-color: ", ";\n    "])), row.highlightedBackground);
}, function (_a) {
    var isHighlighted = _a.isHighlighted;
    return css$3(templateObject_2$9 || (templateObject_2$9 = __makeTemplateObject$8(["\n        background-color: ", ";\n      "], ["\n        background-color: ",
        ";\n      "])), isHighlighted
        ? row.hoverHighlightedBackground
        : row.hoverBackground);
}, outlineWidth, row.focusOutline, outlineWidth);
var templateObject_1$d, templateObject_2$9, templateObject_3$8;

var Row = function (_a) {
    var row = _a.row, head = _a.head, testId = _a.testId, isFixedSize = _a.isFixedSize, isHighlighted = _a.isHighlighted;
    var cells = row.cells, restRowProps = __rest$6(row, ["cells"]);
    return (React__default.createElement(TableBodyRow, __assign$8({}, restRowProps, { isHighlighted: isHighlighted, "data-testid": testId && testId + "--row-" + restRowProps.key }), cells.map(function (cell, cellIndex) {
        var content = cell.content, restCellProps = __rest$6(cell, ["content"]);
        var _a = (head || { cells: [] }).cells[cellIndex] || {}, shouldTruncate = _a.shouldTruncate, width = _a.width;
        return (React__default.createElement(TableBodyCell, __assign$8({ "data-testid": testId && testId + "--cell-" + cellIndex }, restCellProps, { isFixedSize: isFixedSize, key: cellIndex, shouldTruncate: shouldTruncate, width: width }), content));
    })));
};
var TableRow$1 = Row;

var Body$1 = /** @class */ (function (_super) {
    __extends$b(Body, _super);
    function Body() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Body.prototype.render = function () {
        var _a = this.props, pageRows = _a.pageRows, head = _a.head, isFixedSize = _a.isFixedSize, highlightedRowIndex = _a.highlightedRowIndex, testId = _a.testId;
        return (React__default.createElement("tbody", { "data-testid": testId && testId + "--body" }, pageRows.map(function (row, rowIndex) { return (React__default.createElement(TableRow$1, { head: head, isFixedSize: isFixedSize, key: row.key || rowIndex, row: row, isHighlighted: highlightedRowIndex === rowIndex, testId: testId })); })));
    };
    return Body;
}(React__default.Component));
var Body$2 = withSortedPageRows(Body$1);

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

function __makeTemplateObject$7(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
}

function _setPrototypeOf$5(o, p) {
  _setPrototypeOf$5 = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf$5(o, p);
}

function _inheritsLoose$4(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf$5(subClass, superClass);
}

/*

Based off glamor's StyleSheet, thanks Sunil ❤️

high performance StyleSheet for css-in-js systems

- uses multiple style tags behind the scenes for millions of rules
- uses `insertRule` for appending in production for *much* faster performance

// usage

import { StyleSheet } from '@emotion/sheet'

let styleSheet = new StyleSheet({ key: '', container: document.head })

styleSheet.insert('#box { border: 1px solid red; }')
- appends a css rule into the stylesheet

styleSheet.flush()
- empties the stylesheet of all its contents

*/
// $FlowFixMe
function sheetForTag(tag) {
  if (tag.sheet) {
    // $FlowFixMe
    return tag.sheet;
  } // this weirdness brought to you by firefox

  /* istanbul ignore next */


  for (var i = 0; i < document.styleSheets.length; i++) {
    if (document.styleSheets[i].ownerNode === tag) {
      // $FlowFixMe
      return document.styleSheets[i];
    }
  }
}

function createStyleElement(options) {
  var tag = document.createElement('style');
  tag.setAttribute('data-emotion', options.key);

  if (options.nonce !== undefined) {
    tag.setAttribute('nonce', options.nonce);
  }

  tag.appendChild(document.createTextNode(''));
  return tag;
}

var StyleSheet =
/*#__PURE__*/
function () {
  function StyleSheet(options) {
    this.isSpeedy = options.speedy === undefined ? process.env.NODE_ENV === 'production' : options.speedy;
    this.tags = [];
    this.ctr = 0;
    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets

    this.key = options.key;
    this.container = options.container;
    this.before = null;
  }

  var _proto = StyleSheet.prototype;

  _proto.insert = function insert(rule) {
    // the max length is how many rules we have per style tag, it's 65000 in speedy mode
    // it's 1 in dev because we insert source maps that map a single rule to a location
    // and you can only have one source map per style tag
    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {
      var _tag = createStyleElement(this);

      var before;

      if (this.tags.length === 0) {
        before = this.before;
      } else {
        before = this.tags[this.tags.length - 1].nextSibling;
      }

      this.container.insertBefore(_tag, before);
      this.tags.push(_tag);
    }

    var tag = this.tags[this.tags.length - 1];

    if (this.isSpeedy) {
      var sheet = sheetForTag(tag);

      try {
        // this is a really hot path
        // we check the second character first because having "i"
        // as the second character will happen less often than
        // having "@" as the first character
        var isImportRule = rule.charCodeAt(1) === 105 && rule.charCodeAt(0) === 64; // this is the ultrafast version, works across browsers
        // the big drawback is that the css won't be editable in devtools

        sheet.insertRule(rule, // we need to insert @import rules before anything else
        // otherwise there will be an error
        // technically this means that the @import rules will
        // _usually_(not always since there could be multiple style tags)
        // be the first ones in prod and generally later in dev
        // this shouldn't really matter in the real world though
        // @import is generally only used for font faces from google fonts and etc.
        // so while this could be technically correct then it would be slower and larger
        // for a tiny bit of correctness that won't matter in the real world
        isImportRule ? 0 : sheet.cssRules.length);
      } catch (e) {
        if (process.env.NODE_ENV !== 'production') {
          console.warn("There was a problem inserting the following rule: \"" + rule + "\"", e);
        }
      }
    } else {
      tag.appendChild(document.createTextNode(rule));
    }

    this.ctr++;
  };

  _proto.flush = function flush() {
    // $FlowFixMe
    this.tags.forEach(function (tag) {
      return tag.parentNode.removeChild(tag);
    });
    this.tags = [];
    this.ctr = 0;
  };

  return StyleSheet;
}();

function stylis_min (W) {
  function M(d, c, e, h, a) {
    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {
      g = e.charCodeAt(l);
      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);

      if (0 === b + n + v + m) {
        if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {
          switch (g) {
            case 32:
            case 9:
            case 59:
            case 13:
            case 10:
              break;

            default:
              f += e.charAt(l);
          }

          g = 59;
        }

        switch (g) {
          case 123:
            f = f.trim();
            q = f.charCodeAt(0);
            k = 1;

            for (t = ++l; l < B;) {
              switch (g = e.charCodeAt(l)) {
                case 123:
                  k++;
                  break;

                case 125:
                  k--;
                  break;

                case 47:
                  switch (g = e.charCodeAt(l + 1)) {
                    case 42:
                    case 47:
                      a: {
                        for (u = l + 1; u < J; ++u) {
                          switch (e.charCodeAt(u)) {
                            case 47:
                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {
                                l = u + 1;
                                break a;
                              }

                              break;

                            case 10:
                              if (47 === g) {
                                l = u + 1;
                                break a;
                              }

                          }
                        }

                        l = u;
                      }

                  }

                  break;

                case 91:
                  g++;

                case 40:
                  g++;

                case 34:
                case 39:
                  for (; l++ < J && e.charCodeAt(l) !== g;) {
                  }

              }

              if (0 === k) break;
              l++;
            }

            k = e.substring(t, l);
            0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));

            switch (q) {
              case 64:
                0 < r && (f = f.replace(N, ''));
                g = f.charCodeAt(1);

                switch (g) {
                  case 100:
                  case 109:
                  case 115:
                  case 45:
                    r = c;
                    break;

                  default:
                    r = O;
                }

                k = M(c, r, k, g, a + 1);
                t = k.length;
                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));
                if (0 < t) switch (g) {
                  case 115:
                    f = f.replace(da, ea);

                  case 100:
                  case 109:
                  case 45:
                    k = f + '{' + k + '}';
                    break;

                  case 107:
                    f = f.replace(fa, '$1 $2');
                    k = f + '{' + k + '}';
                    k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;
                    break;

                  default:
                    k = f + k, 112 === h && (k = (p += k, ''));
                } else k = '';
                break;

              default:
                k = M(c, X(c, f, I), k, h, a + 1);
            }

            F += k;
            k = I = r = u = q = 0;
            f = '';
            g = e.charCodeAt(++l);
            break;

          case 125:
          case 59:
            f = (0 < r ? f.replace(N, '') : f).trim();
            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\x00\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {
              case 0:
                break;

              case 64:
                if (105 === g || 99 === g) {
                  G += f + e.charAt(l);
                  break;
                }

              default:
                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));
            }
            I = r = u = q = 0;
            f = '';
            g = e.charCodeAt(++l);
        }
      }

      switch (g) {
        case 13:
        case 10:
          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\x00');
          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);
          z = 1;
          D++;
          break;

        case 59:
        case 125:
          if (0 === b + n + v + m) {
            z++;
            break;
          }

        default:
          z++;
          y = e.charAt(l);

          switch (g) {
            case 9:
            case 32:
              if (0 === n + m + b) switch (x) {
                case 44:
                case 58:
                case 9:
                case 32:
                  y = '';
                  break;

                default:
                  32 !== g && (y = ' ');
              }
              break;

            case 0:
              y = '\\0';
              break;

            case 12:
              y = '\\f';
              break;

            case 11:
              y = '\\v';
              break;

            case 38:
              0 === n + b + m && (r = I = 1, y = '\f' + y);
              break;

            case 108:
              if (0 === n + b + m + E && 0 < u) switch (l - u) {
                case 2:
                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);

                case 8:
                  111 === K && (E = K);
              }
              break;

            case 58:
              0 === n + b + m && (u = l);
              break;

            case 44:
              0 === b + v + n + m && (r = 1, y += '\r');
              break;

            case 34:
            case 39:
              0 === b && (n = n === g ? 0 : 0 === n ? g : n);
              break;

            case 91:
              0 === n + b + v && m++;
              break;

            case 93:
              0 === n + b + v && m--;
              break;

            case 41:
              0 === n + b + m && v--;
              break;

            case 40:
              if (0 === n + b + m) {
                if (0 === q) switch (2 * x + 3 * K) {
                  case 533:
                    break;

                  default:
                    q = 1;
                }
                v++;
              }

              break;

            case 64:
              0 === b + v + n + m + u + k && (k = 1);
              break;

            case 42:
            case 47:
              if (!(0 < n + m + v)) switch (b) {
                case 0:
                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {
                    case 235:
                      b = 47;
                      break;

                    case 220:
                      t = l, b = 42;
                  }

                  break;

                case 42:
                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);
              }
          }

          0 === b && (f += y);
      }

      K = x;
      x = g;
      l++;
    }

    t = p.length;

    if (0 < t) {
      r = c;
      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;
      p = r.join(',') + '{' + p + '}';

      if (0 !== w * E) {
        2 !== w || L(p, 2) || (E = 0);

        switch (E) {
          case 111:
            p = p.replace(ha, ':-moz-$1') + p;
            break;

          case 112:
            p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;
        }

        E = 0;
      }
    }

    return G + p + F;
  }

  function X(d, c, e) {
    var h = c.trim().split(ia);
    c = h;
    var a = h.length,
        m = d.length;

    switch (m) {
      case 0:
      case 1:
        var b = 0;

        for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {
          c[b] = Z(d, c[b], e).trim();
        }

        break;

      default:
        var v = b = 0;

        for (c = []; b < a; ++b) {
          for (var n = 0; n < m; ++n) {
            c[v++] = Z(d[n] + ' ', h[b], e).trim();
          }
        }

    }

    return c;
  }

  function Z(d, c, e) {
    var h = c.charCodeAt(0);
    33 > h && (h = (c = c.trim()).charCodeAt(0));

    switch (h) {
      case 38:
        return c.replace(F, '$1' + d.trim());

      case 58:
        return d.trim() + c.replace(F, '$1' + d.trim());

      default:
        if (0 < 1 * e && 0 < c.indexOf('\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());
    }

    return d + c;
  }

  function P(d, c, e, h) {
    var a = d + ';',
        m = 2 * c + 3 * e + 4 * h;

    if (944 === m) {
      d = a.indexOf(':', 9) + 1;
      var b = a.substring(d, a.length - 1).trim();
      b = a.substring(0, d).trim() + b + ';';
      return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;
    }

    if (0 === w || 2 === w && !L(a, 1)) return a;

    switch (m) {
      case 1015:
        return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;

      case 951:
        return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;

      case 963:
        return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;

      case 1009:
        if (100 !== a.charCodeAt(4)) break;

      case 969:
      case 942:
        return '-webkit-' + a + a;

      case 978:
        return '-webkit-' + a + '-moz-' + a + a;

      case 1019:
      case 983:
        return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;

      case 883:
        if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;
        if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;
        break;

      case 932:
        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {
          case 103:
            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;

          case 115:
            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;

          case 98:
            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;
        }
        return '-webkit-' + a + '-ms-' + a + a;

      case 964:
        return '-webkit-' + a + '-ms-flex-' + a + a;

      case 1023:
        if (99 !== a.charCodeAt(8)) break;
        b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');
        return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;

      case 1005:
        return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;

      case 1e3:
        b = a.substring(13).trim();
        c = b.indexOf('-') + 1;

        switch (b.charCodeAt(0) + b.charCodeAt(c)) {
          case 226:
            b = a.replace(G, 'tb');
            break;

          case 232:
            b = a.replace(G, 'tb-rl');
            break;

          case 220:
            b = a.replace(G, 'lr');
            break;

          default:
            return a;
        }

        return '-webkit-' + a + '-ms-' + b + a;

      case 1017:
        if (-1 === a.indexOf('sticky', 9)) break;

      case 975:
        c = (a = d).length - 10;
        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();

        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {
          case 203:
            if (111 > b.charCodeAt(8)) break;

          case 115:
            a = a.replace(b, '-webkit-' + b) + ';' + a;
            break;

          case 207:
          case 102:
            a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;
        }

        return a + ';';

      case 938:
        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {
          case 105:
            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;

          case 115:
            return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;

          default:
            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;
        }
        break;

      case 973:
      case 989:
        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;

      case 931:
      case 953:
        if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;
        break;

      case 962:
        if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;
    }

    return a;
  }

  function L(d, c) {
    var e = d.indexOf(1 === c ? ':' : '{'),
        h = d.substring(0, 3 !== c ? e : 10);
    e = d.substring(e + 1, d.length - 1);
    return R(2 !== c ? h : h.replace(na, '$1'), e, c);
  }

  function ea(d, c) {
    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));
    return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';
  }

  function H(d, c, e, h, a, m, b, v, n, q) {
    for (var g = 0, x = c, w; g < A; ++g) {
      switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {
        case void 0:
        case !1:
        case !0:
        case null:
          break;

        default:
          x = w;
      }
    }

    if (x !== c) return x;
  }

  function T(d) {
    switch (d) {
      case void 0:
      case null:
        A = S.length = 0;
        break;

      default:
        if ('function' === typeof d) S[A++] = d;else if ('object' === typeof d) for (var c = 0, e = d.length; c < e; ++c) {
          T(d[c]);
        } else Y = !!d | 0;
    }

    return T;
  }

  function U(d) {
    d = d.prefix;
    void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);
    return U;
  }

  function B(d, c) {
    var e = d;
    33 > e.charCodeAt(0) && (e = e.trim());
    V = e;
    e = [V];

    if (0 < A) {
      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);
      void 0 !== h && 'string' === typeof h && (c = h);
    }

    var a = M(O, e, c, 0, 0);
    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));
    V = '';
    E = 0;
    z = D = 1;
    return a;
  }

  var ca = /^\0+/g,
      N = /[\0\r\f]/g,
      aa = /: */g,
      ka = /zoo|gra/,
      ma = /([,: ])(transform)/g,
      ia = /,\r+?/g,
      F = /([\t\r\n ])*\f?&/g,
      fa = /@(k\w+)\s*(\S*)\s*/,
      Q = /::(place)/g,
      ha = /:(read-only)/g,
      G = /[svh]\w+-[tblr]{2}/,
      da = /\(\s*(.*)\s*\)/g,
      oa = /([\s\S]*?);/g,
      ba = /-self|flex-/g,
      na = /[^]*?(:[rp][el]a[\w-]+)[^]*/,
      la = /stretch|:\s*\w+\-(?:conte|avail)/,
      ja = /([^-])(image-set\()/,
      z = 1,
      D = 1,
      E = 0,
      w = 1,
      O = [],
      S = [],
      A = 0,
      R = null,
      Y = 0,
      V = '';
  B.use = T;
  B.set = U;
  void 0 !== W && U(W);
  return B;
}

var weakMemoize = function weakMemoize(func) {
  // $FlowFixMe flow doesn't include all non-primitive types as allowed for weakmaps
  var cache = new WeakMap();
  return function (arg) {
    if (cache.has(arg)) {
      // $FlowFixMe
      return cache.get(arg);
    }

    var ret = func(arg);
    cache.set(arg, ret);
    return ret;
  };
};

// https://github.com/thysultan/stylis.js/tree/master/plugins/rule-sheet
// inlined to avoid umd wrapper and peerDep warnings/installing stylis
// since we use stylis after closure compiler
var delimiter = '/*|*/';
var needle = delimiter + '}';

function toSheet(block) {
  if (block) {
    Sheet.current.insert(block + '}');
  }
}

var Sheet = {
  current: null
};
var ruleSheet = function ruleSheet(context, content, selectors, parents, line, column, length, ns, depth, at) {
  switch (context) {
    // property
    case 1:
      {
        switch (content.charCodeAt(0)) {
          case 64:
            {
              // @import
              Sheet.current.insert(content + ';');
              return '';
            }
          // charcode for l

          case 108:
            {
              // charcode for b
              // this ignores label
              if (content.charCodeAt(2) === 98) {
                return '';
              }
            }
        }

        break;
      }
    // selector

    case 2:
      {
        if (ns === 0) return content + delimiter;
        break;
      }
    // at-rule

    case 3:
      {
        switch (ns) {
          // @font-face, @page
          case 102:
          case 112:
            {
              Sheet.current.insert(selectors[0] + content);
              return '';
            }

          default:
            {
              return content + (at === 0 ? delimiter : '');
            }
        }
      }

    case -2:
      {
        content.split(needle).forEach(toSheet);
      }
  }
};
var removeLabel = function removeLabel(context, content) {
  if (context === 1 && // charcode for l
  content.charCodeAt(0) === 108 && // charcode for b
  content.charCodeAt(2) === 98 // this ignores label
  ) {
      return '';
    }
};

var isBrowser$4 = typeof document !== 'undefined';
var rootServerStylisCache = {};
var getServerStylisCache = isBrowser$4 ? undefined : weakMemoize(function () {
  var getCache = weakMemoize(function () {
    return {};
  });
  var prefixTrueCache = {};
  var prefixFalseCache = {};
  return function (prefix) {
    if (prefix === undefined || prefix === true) {
      return prefixTrueCache;
    }

    if (prefix === false) {
      return prefixFalseCache;
    }

    return getCache(prefix);
  };
});

var createCache = function createCache(options) {
  if (options === undefined) options = {};
  var key = options.key || 'css';
  var stylisOptions;

  if (options.prefix !== undefined) {
    stylisOptions = {
      prefix: options.prefix
    };
  }

  var stylis = new stylis_min(stylisOptions);

  if (process.env.NODE_ENV !== 'production') {
    // $FlowFixMe
    if (/[^a-z-]/.test(key)) {
      throw new Error("Emotion key must only contain lower case alphabetical characters and - but \"" + key + "\" was passed");
    }
  }

  var inserted = {}; // $FlowFixMe

  var container;

  if (isBrowser$4) {
    container = options.container || document.head;
    var nodes = document.querySelectorAll("style[data-emotion-" + key + "]");
    Array.prototype.forEach.call(nodes, function (node) {
      var attrib = node.getAttribute("data-emotion-" + key); // $FlowFixMe

      attrib.split(' ').forEach(function (id) {
        inserted[id] = true;
      });

      if (node.parentNode !== container) {
        container.appendChild(node);
      }
    });
  }

  var _insert;

  if (isBrowser$4) {
    stylis.use(options.stylisPlugins)(ruleSheet);

    _insert = function insert(selector, serialized, sheet, shouldCache) {
      var name = serialized.name;
      Sheet.current = sheet;

      if (process.env.NODE_ENV !== 'production' && serialized.map !== undefined) {
        var map = serialized.map;
        Sheet.current = {
          insert: function insert(rule) {
            sheet.insert(rule + map);
          }
        };
      }

      stylis(selector, serialized.styles);

      if (shouldCache) {
        cache.inserted[name] = true;
      }
    };
  } else {
    stylis.use(removeLabel);
    var serverStylisCache = rootServerStylisCache;

    if (options.stylisPlugins || options.prefix !== undefined) {
      stylis.use(options.stylisPlugins); // $FlowFixMe

      serverStylisCache = getServerStylisCache(options.stylisPlugins || rootServerStylisCache)(options.prefix);
    }

    var getRules = function getRules(selector, serialized) {
      var name = serialized.name;

      if (serverStylisCache[name] === undefined) {
        serverStylisCache[name] = stylis(selector, serialized.styles);
      }

      return serverStylisCache[name];
    };

    _insert = function _insert(selector, serialized, sheet, shouldCache) {
      var name = serialized.name;
      var rules = getRules(selector, serialized);

      if (cache.compat === undefined) {
        // in regular mode, we don't set the styles on the inserted cache
        // since we don't need to and that would be wasting memory
        // we return them so that they are rendered in a style tag
        if (shouldCache) {
          cache.inserted[name] = true;
        }

        if ( // using === development instead of !== production
        // because if people do ssr in tests, the source maps showing up would be annoying
        process.env.NODE_ENV === 'development' && serialized.map !== undefined) {
          return rules + serialized.map;
        }

        return rules;
      } else {
        // in compat mode, we put the styles on the inserted cache so
        // that emotion-server can pull out the styles
        // except when we don't want to cache it which was in Global but now
        // is nowhere but we don't want to do a major right now
        // and just in case we're going to leave the case here
        // it's also not affecting client side bundle size
        // so it's really not a big deal
        if (shouldCache) {
          cache.inserted[name] = rules;
        } else {
          return rules;
        }
      }
    };
  }

  if (process.env.NODE_ENV !== 'production') {
    // https://esbench.com/bench/5bf7371a4cd7e6009ef61d0a
    var commentStart = /\/\*/g;
    var commentEnd = /\*\//g;
    stylis.use(function (context, content) {
      switch (context) {
        case -1:
          {
            while (commentStart.test(content)) {
              commentEnd.lastIndex = commentStart.lastIndex;

              if (commentEnd.test(content)) {
                commentStart.lastIndex = commentEnd.lastIndex;
                continue;
              }

              throw new Error('Your styles have an unterminated comment ("/*" without corresponding "*/").');
            }

            commentStart.lastIndex = 0;
            break;
          }
      }
    });
    stylis.use(function (context, content, selectors) {
      switch (context) {
        case -1:
          {
            var flag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';
            var unsafePseudoClasses = content.match(/(:first|:nth|:nth-last)-child/g);

            if (unsafePseudoClasses && cache.compat !== true) {
              unsafePseudoClasses.forEach(function (unsafePseudoClass) {
                var ignoreRegExp = new RegExp(unsafePseudoClass + ".*\\/\\* " + flag + " \\*\\/");
                var ignore = ignoreRegExp.test(content);

                if (unsafePseudoClass && !ignore) {
                  console.error("The pseudo class \"" + unsafePseudoClass + "\" is potentially unsafe when doing server-side rendering. Try changing it to \"" + unsafePseudoClass.split('-child')[0] + "-of-type\".");
                }
              });
            }

            break;
          }
      }
    });
  }

  var cache = {
    key: key,
    sheet: new StyleSheet({
      key: key,
      container: container,
      nonce: options.nonce,
      speedy: options.speedy
    }),
    nonce: options.nonce,
    inserted: inserted,
    registered: {},
    insert: _insert
  };
  return cache;
};

var isBrowser$3 = typeof document !== 'undefined';
function getRegisteredStyles(registered, registeredStyles, classNames) {
  var rawClassName = '';
  classNames.split(' ').forEach(function (className) {
    if (registered[className] !== undefined) {
      registeredStyles.push(registered[className]);
    } else {
      rawClassName += className + " ";
    }
  });
  return rawClassName;
}
var insertStyles = function insertStyles(cache, serialized, isStringTag) {
  var className = cache.key + "-" + serialized.name;

  if ( // we only need to add the styles to the registered cache if the
  // class name could be used further down
  // the tree but if it's a string tag, we know it won't
  // so we don't have to add it to registered cache.
  // this improves memory usage since we can avoid storing the whole style string
  (isStringTag === false || // we need to always store it if we're in compat mode and
  // in node since emotion-server relies on whether a style is in
  // the registered cache to know whether a style is global or not
  // also, note that this check will be dead code eliminated in the browser
  isBrowser$3 === false && cache.compat !== undefined) && cache.registered[className] === undefined) {
    cache.registered[className] = serialized.styles;
  }

  if (cache.inserted[serialized.name] === undefined) {
    var stylesForSSR = '';
    var current = serialized;

    do {
      var maybeStyles = cache.insert("." + className, current, cache.sheet, true);

      if (!isBrowser$3 && maybeStyles !== undefined) {
        stylesForSSR += maybeStyles;
      }

      current = current.next;
    } while (current !== undefined);

    if (!isBrowser$3 && stylesForSSR.length !== 0) {
      return stylesForSSR;
    }
  }
};

/* eslint-disable */
// Inspired by https://github.com/garycourt/murmurhash-js
// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86
function murmur2(str) {
  // 'm' and 'r' are mixing constants generated offline.
  // They're not really 'magic', they just happen to work well.
  // const m = 0x5bd1e995;
  // const r = 24;
  // Initialize the hash
  var h = 0; // Mix 4 bytes at a time into the hash

  var k,
      i = 0,
      len = str.length;

  for (; len >= 4; ++i, len -= 4) {
    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;
    k =
    /* Math.imul(k, m): */
    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);
    k ^=
    /* k >>> r: */
    k >>> 24;
    h =
    /* Math.imul(k, m): */
    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^
    /* Math.imul(h, m): */
    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
  } // Handle the last few bytes of the input array


  switch (len) {
    case 3:
      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;

    case 2:
      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;

    case 1:
      h ^= str.charCodeAt(i) & 0xff;
      h =
      /* Math.imul(h, m): */
      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
  } // Do a few final mixes of the hash to ensure the last few
  // bytes are well-incorporated.


  h ^= h >>> 13;
  h =
  /* Math.imul(h, m): */
  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
  return ((h ^ h >>> 15) >>> 0).toString(36);
}

var unitlessKeys = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};

function memoize(fn) {
  var cache = {};
  return function (arg) {
    if (cache[arg] === undefined) cache[arg] = fn(arg);
    return cache[arg];
  };
}

var ILLEGAL_ESCAPE_SEQUENCE_ERROR$1 = "You have illegal escape sequence in your template literal, most likely inside content's property value.\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \"content: '\\00d7';\" should become \"content: '\\\\00d7';\".\nYou can read more about this here:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences";
var UNDEFINED_AS_OBJECT_KEY_ERROR = "You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).";
var hyphenateRegex = /[A-Z]|^ms/g;
var animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;

var isCustomProperty = function isCustomProperty(property) {
  return property.charCodeAt(1) === 45;
};

var isProcessableValue = function isProcessableValue(value) {
  return value != null && typeof value !== 'boolean';
};

var processStyleName = memoize(function (styleName) {
  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();
});

var processStyleValue = function processStyleValue(key, value) {
  switch (key) {
    case 'animation':
    case 'animationName':
      {
        if (typeof value === 'string') {
          return value.replace(animationRegex, function (match, p1, p2) {
            cursor = {
              name: p1,
              styles: p2,
              next: cursor
            };
            return p1;
          });
        }
      }
  }

  if (unitlessKeys[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {
    return value + 'px';
  }

  return value;
};

if (process.env.NODE_ENV !== 'production') {
  var contentValuePattern = /(attr|calc|counters?|url)\(/;
  var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit', 'unset'];
  var oldProcessStyleValue = processStyleValue;
  var msPattern = /^-ms-/;
  var hyphenPattern = /-(.)/g;
  var hyphenatedCache = {};

  processStyleValue = function processStyleValue(key, value) {
    if (key === 'content') {
      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '"' && value.charAt(0) !== "'")) {
        console.error("You seem to be using a value for 'content' without quotes, try replacing it with `content: '\"" + value + "\"'`");
      }
    }

    var processed = oldProcessStyleValue(key, value);

    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {
      hyphenatedCache[key] = true;
      console.error("Using kebab-case for css properties in objects is not supported. Did you mean " + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {
        return _char.toUpperCase();
      }) + "?");
    }

    return processed;
  };
}

var shouldWarnAboutInterpolatingClassNameFromCss = true;

function handleInterpolation(mergedProps, registered, interpolation, couldBeSelectorInterpolation) {
  if (interpolation == null) {
    return '';
  }

  if (interpolation.__emotion_styles !== undefined) {
    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {
      throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');
    }

    return interpolation;
  }

  switch (typeof interpolation) {
    case 'boolean':
      {
        return '';
      }

    case 'object':
      {
        if (interpolation.anim === 1) {
          cursor = {
            name: interpolation.name,
            styles: interpolation.styles,
            next: cursor
          };
          return interpolation.name;
        }

        if (interpolation.styles !== undefined) {
          var next = interpolation.next;

          if (next !== undefined) {
            // not the most efficient thing ever but this is a pretty rare case
            // and there will be very few iterations of this generally
            while (next !== undefined) {
              cursor = {
                name: next.name,
                styles: next.styles,
                next: cursor
              };
              next = next.next;
            }
          }

          var styles = interpolation.styles + ";";

          if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {
            styles += interpolation.map;
          }

          return styles;
        }

        return createStringFromObject(mergedProps, registered, interpolation);
      }

    case 'function':
      {
        if (mergedProps !== undefined) {
          var previousCursor = cursor;
          var result = interpolation(mergedProps);
          cursor = previousCursor;
          return handleInterpolation(mergedProps, registered, result, couldBeSelectorInterpolation);
        } else if (process.env.NODE_ENV !== 'production') {
          console.error('Functions that are interpolated in css calls will be stringified.\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\n' + 'It can be called directly with props or interpolated in a styled call like this\n' + "let SomeComponent = styled('div')`${dynamicStyle}`");
        }

        break;
      }

    case 'string':
      if (process.env.NODE_ENV !== 'production') {
        var matched = [];
        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {
          var fakeVarName = "animation" + matched.length;
          matched.push("const " + fakeVarName + " = keyframes`" + p2.replace(/^@keyframes animation-\w+/, '') + "`");
          return "${" + fakeVarName + "}";
        });

        if (matched.length) {
          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\n\n' + 'Instead of doing this:\n\n' + [].concat(matched, ["`" + replaced + "`"]).join('\n') + '\n\nYou should wrap it with `css` like this:\n\n' + ("css`" + replaced + "`"));
        }
      }

      break;
  } // finalize string values (regular strings and functions interpolated into css calls)


  if (registered == null) {
    return interpolation;
  }

  var cached = registered[interpolation];

  if (process.env.NODE_ENV !== 'production' && couldBeSelectorInterpolation && shouldWarnAboutInterpolatingClassNameFromCss && cached !== undefined) {
    console.error('Interpolating a className from css`` is not recommended and will cause problems with composition.\n' + 'Interpolating a className from css`` will be completely unsupported in a future major version of Emotion');
    shouldWarnAboutInterpolatingClassNameFromCss = false;
  }

  return cached !== undefined && !couldBeSelectorInterpolation ? cached : interpolation;
}

function createStringFromObject(mergedProps, registered, obj) {
  var string = '';

  if (Array.isArray(obj)) {
    for (var i = 0; i < obj.length; i++) {
      string += handleInterpolation(mergedProps, registered, obj[i], false);
    }
  } else {
    for (var _key in obj) {
      var value = obj[_key];

      if (typeof value !== 'object') {
        if (registered != null && registered[value] !== undefined) {
          string += _key + "{" + registered[value] + "}";
        } else if (isProcessableValue(value)) {
          string += processStyleName(_key) + ":" + processStyleValue(_key, value) + ";";
        }
      } else {
        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {
          throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');
        }

        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {
          for (var _i = 0; _i < value.length; _i++) {
            if (isProcessableValue(value[_i])) {
              string += processStyleName(_key) + ":" + processStyleValue(_key, value[_i]) + ";";
            }
          }
        } else {
          var interpolated = handleInterpolation(mergedProps, registered, value, false);

          switch (_key) {
            case 'animation':
            case 'animationName':
              {
                string += processStyleName(_key) + ":" + interpolated + ";";
                break;
              }

            default:
              {
                if (process.env.NODE_ENV !== 'production' && _key === 'undefined') {
                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);
                }

                string += _key + "{" + interpolated + "}";
              }
          }
        }
      }
    }
  }

  return string;
}

var labelPattern = /label:\s*([^\s;\n{]+)\s*;/g;
var sourceMapPattern;

if (process.env.NODE_ENV !== 'production') {
  sourceMapPattern = /\/\*#\ssourceMappingURL=data:application\/json;\S+\s+\*\//;
} // this is the cursor for keyframes
// keyframes are stored on the SerializedStyles object as a linked list


var cursor;
var serializeStyles = function serializeStyles(args, registered, mergedProps) {
  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {
    return args[0];
  }

  var stringMode = true;
  var styles = '';
  cursor = undefined;
  var strings = args[0];

  if (strings == null || strings.raw === undefined) {
    stringMode = false;
    styles += handleInterpolation(mergedProps, registered, strings, false);
  } else {
    if (process.env.NODE_ENV !== 'production' && strings[0] === undefined) {
      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR$1);
    }

    styles += strings[0];
  } // we start at 1 since we've already handled the first arg


  for (var i = 1; i < args.length; i++) {
    styles += handleInterpolation(mergedProps, registered, args[i], styles.charCodeAt(styles.length - 1) === 46);

    if (stringMode) {
      if (process.env.NODE_ENV !== 'production' && strings[i] === undefined) {
        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR$1);
      }

      styles += strings[i];
    }
  }

  var sourceMap;

  if (process.env.NODE_ENV !== 'production') {
    styles = styles.replace(sourceMapPattern, function (match) {
      sourceMap = match;
      return '';
    });
  } // using a global regex with .exec is stateful so lastIndex has to be reset each time


  labelPattern.lastIndex = 0;
  var identifierName = '';
  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5

  while ((match = labelPattern.exec(styles)) !== null) {
    identifierName += '-' + // $FlowFixMe we know it's not null
    match[1];
  }

  var name = murmur2(styles) + identifierName;

  if (process.env.NODE_ENV !== 'production') {
    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)
    return {
      name: name,
      styles: styles,
      map: sourceMap,
      next: cursor,
      toString: function toString() {
        return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
      }
    };
  }

  return {
    name: name,
    styles: styles,
    next: cursor
  };
};

var isBrowser$2 = typeof document !== 'undefined';
var hasOwnProperty$3 = Object.prototype.hasOwnProperty;

var EmotionCacheContext = /*#__PURE__*/createContext$1( // we're doing this to avoid preconstruct's dead code elimination in this one case
// because this module is primarily intended for the browser and node
// but it's also required in react native and similar environments sometimes
// and we could have a special build just for that
// but this is much easier and the native packages
// might use a different theme context in the future anyway
typeof HTMLElement !== 'undefined' ? createCache() : null);
var ThemeContext = /*#__PURE__*/createContext$1({});
EmotionCacheContext.Provider;

var withEmotionCache = function withEmotionCache(func) {
  var render = function render(props, ref) {
    return /*#__PURE__*/createElement(EmotionCacheContext.Consumer, null, function (cache) {
      return func(props, cache, ref);
    });
  }; // $FlowFixMe


  return /*#__PURE__*/forwardRef(render);
};

if (!isBrowser$2) {
  var BasicProvider = /*#__PURE__*/function (_React$Component) {
    _inheritsLoose$4(BasicProvider, _React$Component);

    function BasicProvider(props, context, updater) {
      var _this;

      _this = _React$Component.call(this, props, context, updater) || this;
      _this.state = {
        value: createCache()
      };
      return _this;
    }

    var _proto = BasicProvider.prototype;

    _proto.render = function render() {
      return /*#__PURE__*/createElement(EmotionCacheContext.Provider, this.state, this.props.children(this.state.value));
    };

    return BasicProvider;
  }(Component$1);

  withEmotionCache = function withEmotionCache(func) {
    return function (props) {
      return /*#__PURE__*/createElement(EmotionCacheContext.Consumer, null, function (context) {
        if (context === null) {
          return /*#__PURE__*/createElement(BasicProvider, null, function (newContext) {
            return func(props, newContext);
          });
        } else {
          return func(props, context);
        }
      });
    };
  };
}

// thus we only need to replace what is a valid character for JS, but not for CSS

var sanitizeIdentifier = function sanitizeIdentifier(identifier) {
  return identifier.replace(/\$/g, '-');
};

var typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';
var labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';
var createEmotionProps = function createEmotionProps(type, props) {
  if (process.env.NODE_ENV !== 'production' && typeof props.css === 'string' && // check if there is a css declaration
  props.css.indexOf(':') !== -1) {
    throw new Error("Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/css' like this: css`" + props.css + "`");
  }

  var newProps = {};

  for (var key in props) {
    if (hasOwnProperty$3.call(props, key)) {
      newProps[key] = props[key];
    }
  }

  newProps[typePropName] = type; // TODO: check if this still works with all of those different JSX functions

  if (process.env.NODE_ENV !== 'production') {
    var error = new Error();

    if (error.stack) {
      // chrome
      var match = error.stack.match(/at (?:Object\.|Module\.|)(?:jsx|createEmotionProps).*\n\s+at (?:Object\.|)([A-Z][A-Za-z$]+) /);

      if (!match) {
        // safari and firefox
        match = error.stack.match(/.*\n([A-Z][A-Za-z$]+)@/);
      }

      if (match) {
        newProps[labelPropName] = sanitizeIdentifier(match[1]);
      }
    }
  }

  return newProps;
};

var render = function render(cache, props, theme, ref) {
  var cssProp = theme === null ? props.css : props.css(theme); // so that using `css` from `emotion` and passing the result to the css prop works
  // not passing the registered cache to serializeStyles because it would
  // make certain babel optimisations not possible

  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {
    cssProp = cache.registered[cssProp];
  }

  var type = props[typePropName];
  var registeredStyles = [cssProp];
  var className = '';

  if (typeof props.className === 'string') {
    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);
  } else if (props.className != null) {
    className = props.className + " ";
  }

  var serialized = serializeStyles(registeredStyles);

  if (process.env.NODE_ENV !== 'production' && serialized.name.indexOf('-') === -1) {
    var labelFromStack = props[labelPropName];

    if (labelFromStack) {
      serialized = serializeStyles([serialized, 'label:' + labelFromStack + ';']);
    }
  }

  var rules = insertStyles(cache, serialized, typeof type === 'string');
  className += cache.key + "-" + serialized.name;
  var newProps = {};

  for (var key in props) {
    if (hasOwnProperty$3.call(props, key) && key !== 'css' && key !== typePropName && (process.env.NODE_ENV === 'production' || key !== labelPropName)) {
      newProps[key] = props[key];
    }
  }

  newProps.ref = ref;
  newProps.className = className;
  var ele = /*#__PURE__*/createElement(type, newProps);

  if (!isBrowser$2 && rules !== undefined) {
    var _ref;

    var serializedNames = serialized.name;
    var next = serialized.next;

    while (next !== undefined) {
      serializedNames += ' ' + next.name;
      next = next.next;
    }

    return /*#__PURE__*/createElement(Fragment$1, null, /*#__PURE__*/createElement("style", (_ref = {}, _ref["data-emotion-" + cache.key] = serializedNames, _ref.dangerouslySetInnerHTML = {
      __html: rules
    }, _ref.nonce = cache.sheet.nonce, _ref)), ele);
  }

  return ele;
}; // eslint-disable-next-line no-undef


var Emotion = /* #__PURE__ */withEmotionCache(function (props, cache, ref) {
  if (typeof props.css === 'function') {
    return /*#__PURE__*/createElement(ThemeContext.Consumer, null, function (theme) {
      return render(cache, props, theme, ref);
    });
  }

  return render(cache, props, null, ref);
});

if (process.env.NODE_ENV !== 'production') {
  Emotion.displayName = 'EmotionCssPropInternal';
}

function css$2() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return serializeStyles(args);
}

var jsx = function jsx(type, props) {
  var args = arguments;

  if (props == null || !hasOwnProperty$3.call(props, 'css')) {
    // $FlowFixMe
    return createElement.apply(undefined, args);
  }

  var argsLength = args.length;
  var createElementArgArray = new Array(argsLength);
  createElementArgArray[0] = Emotion;
  createElementArgArray[1] = createEmotionProps(type, props);

  for (var i = 2; i < argsLength; i++) {
    createElementArgArray[i] = args[i];
  } // $FlowFixMe


  return createElement.apply(null, createElementArgArray);
};

var keyframes = function keyframes() {
  var insertable = css$2.apply(void 0, arguments);
  var name = "animation-" + insertable.name; // $FlowFixMe

  return {
    name: name,
    styles: "@keyframes " + name + "{" + insertable.styles + "}",
    anim: 1,
    toString: function toString() {
      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
    }
  };
};

var classnames = function classnames(args) {
  var len = args.length;
  var i = 0;
  var cls = '';

  for (; i < len; i++) {
    var arg = args[i];
    if (arg == null) continue;
    var toAdd = void 0;

    switch (typeof arg) {
      case 'boolean':
        break;

      case 'object':
        {
          if (Array.isArray(arg)) {
            toAdd = classnames(arg);
          } else {
            toAdd = '';

            for (var k in arg) {
              if (arg[k] && k) {
                toAdd && (toAdd += ' ');
                toAdd += k;
              }
            }
          }

          break;
        }

      default:
        {
          toAdd = arg;
        }
    }

    if (toAdd) {
      cls && (cls += ' ');
      cls += toAdd;
    }
  }

  return cls;
};

function merge(registered, css, className) {
  var registeredStyles = [];
  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);

  if (registeredStyles.length < 2) {
    return className;
  }

  return rawClassName + css(registeredStyles);
}

var ClassNames = withEmotionCache(function (props, context) {
  return /*#__PURE__*/createElement(ThemeContext.Consumer, null, function (theme) {
    var rules = '';
    var serializedHashes = '';
    var hasRendered = false;

    var css = function css() {
      if (hasRendered && process.env.NODE_ENV !== 'production') {
        throw new Error('css can only be used during render');
      }

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      var serialized = serializeStyles(args, context.registered);

      if (isBrowser$2) {
        insertStyles(context, serialized, false);
      } else {
        var res = insertStyles(context, serialized, false);

        if (res !== undefined) {
          rules += res;
        }
      }

      if (!isBrowser$2) {
        serializedHashes += " " + serialized.name;
      }

      return context.key + "-" + serialized.name;
    };

    var cx = function cx() {
      if (hasRendered && process.env.NODE_ENV !== 'production') {
        throw new Error('cx can only be used during render');
      }

      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return merge(context.registered, css, classnames(args));
    };

    var content = {
      css: css,
      cx: cx,
      theme: theme
    };
    var ele = props.children(content);
    hasRendered = true;

    if (!isBrowser$2 && rules.length !== 0) {
      var _ref;

      return /*#__PURE__*/createElement(Fragment$1, null, /*#__PURE__*/createElement("style", (_ref = {}, _ref["data-emotion-" + context.key] = serializedHashes.substring(1), _ref.dangerouslySetInnerHTML = {
        __html: rules
      }, _ref.nonce = context.sheet.nonce, _ref)), ele);
    }

    return ele;
  });
});

var presetSizes$2 = {
    xsmall: 8,
    small: 16,
    medium: 24,
    large: 48,
    xlarge: 96,
};

var rotate$2 = keyframes(templateObject_1$c || (templateObject_1$c = __makeTemplateObject$7(["\n  to { transform: rotate(360deg); }\n"], ["\n  to { transform: rotate(360deg); }\n"])));
// There are three parts to the load in animation:
// 1. Fade in
// 2. Accelerated spin
// 3. Stretch the spinner line
var loadIn$2 = keyframes(templateObject_2$8 || (templateObject_2$8 = __makeTemplateObject$7(["\n  from {\n    transform: rotate(50deg);\n    opacity: 0;\n    stroke-dashoffset: 60;\n  }\n  to {\n    transform: rotate(230deg);\n    opacity: 1;\n    stroke-dashoffset: 50;\n  }\n"], ["\n  from {\n    transform: rotate(50deg);\n    opacity: 0;\n    stroke-dashoffset: 60;\n  }\n  to {\n    transform: rotate(230deg);\n    opacity: 1;\n    stroke-dashoffset: 50;\n  }\n"])));
function getStrokeColor$2(_a) {
    var mode = _a.mode, appearance = _a.appearance;
    if (mode === 'light') {
        return appearance === 'inherit' ? N500$4 : N0$7;
    }
    // Dark mode: colours provided by Jake Miller
    return appearance === 'inherit' ? DN900$2 : DN500$2;
}
var Spinner$3 = React__default.memo(React__default.forwardRef(function Spinner(_a, ref) {
    var testId = _a.testId, _b = _a.appearance, appearance = _b === void 0 ? 'inherit' : _b, _c = _a.delay, delay = _c === void 0 ? 0 : _c, _d = _a.size, providedSize = _d === void 0 ? 'medium' : _d;
    var size = typeof providedSize === 'number'
        ? providedSize
        : presetSizes$2[providedSize];
    return (jsx(GlobalTheme$3.Consumer, null, function (tokens) {
        var strokeColor = getStrokeColor$2({
            mode: tokens.mode,
            appearance: appearance,
        });
        // The Spinner animation uses a combination of two
        // css animations on two separate elements.
        return (jsx("svg", { focusable: "false", height: size, width: size, viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", "data-testid": testId, ref: ref, css: css$2(templateObject_3$7 || (templateObject_3$7 = __makeTemplateObject$7(["\n                /* align better inline with text */\n                vertical-align: middle;\n                /* We are going to animate this in */\n                opacity: 0;\n\n                animation: ", " 1s ease-in-out;\n                /* When the animation completes, stay at the last frame of the animation */\n                animation-fill-mode: forwards;\n                animation-delay: ", "ms;\n              "], ["\n                /* align better inline with text */\n                vertical-align: middle;\n                /* We are going to animate this in */\n                opacity: 0;\n\n                animation: ", " 1s ease-in-out;\n                /* When the animation completes, stay at the last frame of the animation */\n                animation-fill-mode: forwards;\n                animation-delay: ", "ms;\n              "])), loadIn$2, delay) },
            jsx("circle", { cx: "8", cy: "8", r: "7", css: css$2(templateObject_4$3 || (templateObject_4$3 = __makeTemplateObject$7(["\n                  fill: none;\n                  stroke: ", ";\n                  stroke-width: 1.5;\n                  stroke-linecap: round;\n                  stroke-dasharray: 60;\n                  stroke-dashoffset: inherit;\n                  transform-origin: center;\n                  animation: ", " 0.86s infinite;\n                  animation-delay: ", "ms;\n                  animation-timing-function: cubic-bezier(0.4, 0.15, 0.6, 0.85);\n                "], ["\n                  fill: none;\n                  stroke: ", ";\n                  stroke-width: 1.5;\n                  stroke-linecap: round;\n                  stroke-dasharray: 60;\n                  stroke-dashoffset: inherit;\n                  transform-origin: center;\n                  animation: ", " 0.86s infinite;\n                  animation-delay: ", "ms;\n                  animation-timing-function: cubic-bezier(0.4, 0.15, 0.6, 0.85);\n                "])), strokeColor, rotate$2, delay) })));
    }));
}));
var templateObject_1$c, templateObject_2$8, templateObject_3$7, templateObject_4$3;

var Container$3 = styled$1.div(templateObject_1$b || (templateObject_1$b = __makeTemplateObject$8(["\n  position: relative;\n"], ["\n  position: relative;\n"])));
var ContentsContainer = styled$1.div(templateObject_2$7 || (templateObject_2$7 = __makeTemplateObject$8(["\n  pointer-events: none;\n  opacity: ", ";\n"], ["\n  pointer-events: none;\n  opacity: ", ";\n"])), function (p) { return p.contentsOpacity; });
var SpinnerContainer$2 = styled$1.div(templateObject_3$6 || (templateObject_3$6 = __makeTemplateObject$8(["\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n"], ["\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n"])));
var templateObject_1$b, templateObject_2$7, templateObject_3$6;

var LoadingContainer = /** @class */ (function (_super) {
    __extends$b(LoadingContainer, _super);
    function LoadingContainer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LoadingContainer.prototype.render = function () {
        var _a = this.props, children = _a.children, isLoading = _a.isLoading, spinnerSize = _a.spinnerSize, contentsOpacity = _a.contentsOpacity;
        return (React__default.createElement(Container$3, null,
            !isLoading ? (children) : (React__default.createElement(ContentsContainer, { contentsOpacity: contentsOpacity }, children)),
            isLoading && (React__default.createElement(SpinnerContainer$2, null,
                React__default.createElement(Spinner$3, { size: spinnerSize })))));
    };
    LoadingContainer.defaultProps = {
        isLoading: true,
        spinnerSize: LARGE,
        contentsOpacity: LOADING_CONTENTS_OPACITY,
    };
    return LoadingContainer;
}(React__default.Component));
var LoadingContainer$1 = LoadingContainer;

var Container$2 = styled$1.div(templateObject_1$a || (templateObject_1$a = __makeTemplateObject$8(["\n  margin-bottom: ", "px;\n  position: relative;\n"], ["\n  margin-bottom: ", "px;\n  position: relative;\n"])), gridSize$5() * 3);
var SpinnerBackdrop = styled$1.div(templateObject_2$6 || (templateObject_2$6 = __makeTemplateObject$8(["\n  pointer-events: none;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n"], ["\n  pointer-events: none;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n"])));
var SpinnerContainer$1 = styled$1.div(templateObject_3$5 || (templateObject_3$5 = __makeTemplateObject$8(["\n  position: relative;\n  top: 0;\n"], ["\n  position: relative;\n  top: 0;\n"])));
var templateObject_1$a, templateObject_2$6, templateObject_3$5;

var LoadingContainerAdvanced = /** @class */ (function (_super) {
    __extends$b(LoadingContainerAdvanced, _super);
    function LoadingContainerAdvanced() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.componentDidMount = function () {
            if (_this.props.isLoading && _this.hasTargetNode()) {
                _this.attachListeners();
                _this.updateTargetAppearance();
                _this.updateSpinnerPosition();
            }
        };
        _this.UNSAFE_componentWillReceiveProps = function (nextProps) {
            if (!nextProps.isLoading || !_this.hasTargetNode(nextProps)) {
                _this.detachListeners();
            }
            else if (!_this.props.isLoading) {
                _this.attachListeners();
            }
        };
        _this.componentDidUpdate = function () {
            if (_this.hasTargetNode()) {
                _this.updateTargetAppearance();
                if (_this.props.isLoading) {
                    _this.updateSpinnerPosition();
                }
            }
        };
        _this.componentWillUnmount = function () {
            _this.detachListeners();
        };
        _this.getTargetNode = function (nextProps) {
            if (nextProps === void 0) { nextProps = _this.props; }
            var targetRef = nextProps.targetRef;
            // targetRef prop may be defined but it is not guaranteed it returns an element
            var targetElement = targetRef ? targetRef() : _this.children;
            // @ts-ignore - targetElement is not assignable to type 'ReactInstance'
            var targetNode = reactDom.exports.findDOMNode(targetElement);
            return targetNode;
        };
        _this.getThisNode = function () { return reactDom.exports.findDOMNode(_this); };
        // @ts-ignore - this.spinner is not assignable to type 'ReactInstance'
        _this.getSpinnerNode = function () { return reactDom.exports.findDOMNode(_this.spinner); };
        _this.hasTargetNode = function (nextProps) { return !!_this.getTargetNode(nextProps); };
        _this.isVerticallyVisible = function (elementRect, viewportHeight) {
            var top = elementRect.top, bottom = elementRect.bottom;
            if (bottom <= 0) {
                return false;
            }
            return top < viewportHeight;
        };
        _this.isFullyVerticallyVisible = function (elementRect, viewportHeight) {
            var top = elementRect.top, bottom = elementRect.bottom;
            return top >= 0 && bottom <= viewportHeight;
        };
        _this.handleResize = function () {
            _this.updateSpinnerPosition();
        };
        _this.handleScroll = function () {
            _this.updateSpinnerPosition();
        };
        _this.translateSpinner = function (spinnerNode, transformY, isFixed) {
            spinnerNode.style.position = isFixed ? 'fixed' : '';
            spinnerNode.style.transform =
                transformY !== 0 ? "translate3d(0, " + transformY + "px, 0)" : '';
        };
        _this.updateTargetAppearance = function () {
            var targetNode = _this.getTargetNode();
            var _a = _this.props, isLoading = _a.isLoading, contentsOpacity = _a.contentsOpacity;
            if (targetNode &&
                targetNode.style &&
                typeof targetNode.style === 'object') {
                targetNode.style.pointerEvents = isLoading ? 'none' : '';
                targetNode.style.opacity = isLoading ? contentsOpacity.toString() : '';
            }
        };
        return _this;
    }
    LoadingContainerAdvanced.prototype.attachListeners = function () {
        window.addEventListener('scroll', this.handleScroll);
        window.addEventListener('resize', this.handleResize);
    };
    LoadingContainerAdvanced.prototype.detachListeners = function () {
        window.removeEventListener('scroll', this.handleScroll);
        window.removeEventListener('resize', this.handleResize);
    };
    LoadingContainerAdvanced.prototype.updateSpinnerPosition = function () {
        var viewportHeight = window.innerHeight;
        var targetNode = this.getTargetNode();
        var spinnerNode = this.getSpinnerNode();
        if (!targetNode || !spinnerNode) {
            return;
        }
        var targetRect = targetNode.getBoundingClientRect();
        var spinnerRect = spinnerNode.getBoundingClientRect();
        var spinnerHeight = spinnerRect.height;
        var isInViewport = this.isVerticallyVisible(targetRect, viewportHeight);
        var top = targetRect.top, bottom = targetRect.bottom, height = targetRect.height;
        if (isInViewport) {
            // The spinner may follow the element only if there is enough space:
            // Let's say the element can fit at least three spinners (vertically)
            var canFollow = height >= spinnerHeight * 3;
            if (canFollow &&
                !this.isFullyVerticallyVisible(targetRect, viewportHeight)) {
                if (top >= 0) {
                    // Only the head of the element is visible
                    var viewportSpaceTakenByElement = viewportHeight - top;
                    var diff = viewportSpaceTakenByElement / 2 + top - spinnerHeight / 2;
                    var y = viewportSpaceTakenByElement < spinnerHeight * 3
                        ? top + spinnerHeight
                        : diff;
                    this.translateSpinner(spinnerNode, y, true);
                }
                else if (top < 0 && bottom > viewportHeight) {
                    // The element takes all viewport, nor its head nor tail are visible
                    var y = viewportHeight / 2 - spinnerHeight / 2;
                    this.translateSpinner(spinnerNode, y, true);
                }
                else {
                    // Only the tail of the element is visible
                    var diff = bottom / 2 - spinnerHeight / 2;
                    var y = diff < spinnerHeight ? diff - (spinnerHeight - diff) : diff;
                    this.translateSpinner(spinnerNode, y, true);
                }
                return;
            }
        }
        else {
            // If both the element and the spinner are off screen - quit
            if (!this.isVerticallyVisible(spinnerRect, viewportHeight)) {
                return;
            }
        }
        // Three options here:
        // 1) the element is fully visible
        // 2) the element is too small for the spinner to follow
        // 3) the spinner might still be visible while the element isn't
        var thisNode = this.getThisNode();
        if (thisNode && typeof thisNode.getBoundingClientRect === 'function') {
            var thisTop = thisNode.getBoundingClientRect().top;
            var y = (top - thisTop) / 2;
            this.translateSpinner(spinnerNode, y, false);
        }
    };
    LoadingContainerAdvanced.prototype.render = function () {
        var _this = this;
        var _a = this.props, children = _a.children, isLoading = _a.isLoading, spinnerSize = _a.spinnerSize;
        return (React__default.createElement(Container$2, null,
            React__default.cloneElement(children, {
                ref: function (el) {
                    _this.children = el;
                },
            }),
            isLoading && (React__default.createElement(SpinnerBackdrop, null,
                React__default.createElement(SpinnerContainer$1, { innerRef: function (el) {
                        _this.spinner = el;
                    } },
                    React__default.createElement(Spinner$3, { size: spinnerSize }))))));
    };
    LoadingContainerAdvanced.defaultProps = {
        isLoading: true,
        spinnerSize: LARGE,
        contentsOpacity: LOADING_CONTENTS_OPACITY,
    };
    return LoadingContainerAdvanced;
}(React__default.Component));
var LoadingContainerAdvanced$1 = LoadingContainerAdvanced;

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics$9 = function(d, b) {
    extendStatics$9 = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics$9(d, b);
};

function __extends$9(d, b) {
    extendStatics$9(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign$6 = function() {
    __assign$6 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign$6.apply(this, arguments);
};

function __rest$3(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __read$3(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread$3() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read$3(arguments[i]));
    return ar;
}

function __makeTemplateObject$6(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
}

function collapseRange(pages, current, _a) {
    var max = _a.max, ellipsis = _a.ellipsis;
    var total = pages.length;
    // only need ellipsis if we have more pages than we can display
    var needEllipsis = total > max;
    // show start ellipsis if the current page is further away than max - 3 from the first page
    var hasStartEllipsis = needEllipsis && max - 3 < current;
    // show end ellipsis if the current page is further than total - max + 3 from the last page
    var hasEndEllipsis = needEllipsis && current < total - max + 4;
    if (!needEllipsis) {
        return pages;
    }
    if (hasStartEllipsis && !hasEndEllipsis) {
        var pageCount_1 = max - 2;
        return __spread$3([
            pages[0],
            ellipsis({ key: 'elipses-1' })
        ], pages.slice(total - pageCount_1));
    }
    if (!hasStartEllipsis && hasEndEllipsis) {
        var pageCount_2 = max - 2;
        return __spread$3(pages.slice(0, pageCount_2), [
            ellipsis({ key: 'elipses-1' }),
            pages[total - 1],
        ]);
    }
    // we have both start and end ellipsis
    var pageCount = max - 4;
    return __spread$3([
        pages[0],
        ellipsis({ key: 'elipses-1' })
    ], pages.slice(current - Math.floor(pageCount / 2), current + pageCount - 1), [
        ellipsis({ key: 'elipses-2' }),
        pages[total - 1],
    ]);
}

var name$9="@atlaskit/pagination";var version$9="12.0.21";

var chevronLeftLarge = {};

var Icon$7 = {};

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics$8 = function(d, b) {
    extendStatics$8 = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics$8(d, b);
};

function __extends$8(d, b) {
    extendStatics$8(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign$5 = function() {
    __assign$5 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign$5.apply(this, arguments);
};

function __rest$2(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read$2(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread$2() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read$2(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}
function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject$5(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
}
function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}

var tslib_es6 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    __extends: __extends$8,
    get __assign () { return __assign$5; },
    __rest: __rest$2,
    __decorate: __decorate,
    __param: __param,
    __metadata: __metadata,
    __awaiter: __awaiter,
    __generator: __generator,
    __createBinding: __createBinding,
    __exportStar: __exportStar,
    __values: __values,
    __read: __read$2,
    __spread: __spread$2,
    __spreadArrays: __spreadArrays,
    __await: __await,
    __asyncGenerator: __asyncGenerator,
    __asyncDelegator: __asyncDelegator,
    __asyncValues: __asyncValues,
    __makeTemplateObject: __makeTemplateObject$5,
    __importStar: __importStar,
    __importDefault: __importDefault,
    __classPrivateFieldGet: __classPrivateFieldGet,
    __classPrivateFieldSet: __classPrivateFieldSet
});

var require$$0 = /*@__PURE__*/getAugmentedNamespace(tslib_es6);

// Unique ID creation requires a high quality random # generator.  In node.js
// this is pretty straight-forward - we use the crypto API.

var crypto$1 = require$$0$1;

var rng$2 = function nodeRNG() {
  return crypto$1.randomBytes(16);
};

/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */

var byteToHex = [];
for (var i$1 = 0; i$1 < 256; ++i$1) {
  byteToHex[i$1] = (i$1 + 0x100).toString(16).substr(1);
}

function bytesToUuid$2(buf, offset) {
  var i = offset || 0;
  var bth = byteToHex;
  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4
  return ([
    bth[buf[i++]], bth[buf[i++]],
    bth[buf[i++]], bth[buf[i++]], '-',
    bth[buf[i++]], bth[buf[i++]], '-',
    bth[buf[i++]], bth[buf[i++]], '-',
    bth[buf[i++]], bth[buf[i++]], '-',
    bth[buf[i++]], bth[buf[i++]],
    bth[buf[i++]], bth[buf[i++]],
    bth[buf[i++]], bth[buf[i++]]
  ]).join('');
}

var bytesToUuid_1 = bytesToUuid$2;

var rng$1 = rng$2;
var bytesToUuid$1 = bytesToUuid_1;

// **`v1()` - Generate time-based UUID**
//
// Inspired by https://github.com/LiosK/UUID.js
// and http://docs.python.org/library/uuid.html

var _nodeId;
var _clockseq;

// Previous uuid creation time
var _lastMSecs = 0;
var _lastNSecs = 0;

// See https://github.com/uuidjs/uuid for API details
function v1$1(options, buf, offset) {
  var i = buf && offset || 0;
  var b = buf || [];

  options = options || {};
  var node = options.node || _nodeId;
  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;

  // node and clockseq need to be initialized to random values if they're not
  // specified.  We do this lazily to minimize issues related to insufficient
  // system entropy.  See #189
  if (node == null || clockseq == null) {
    var seedBytes = rng$1();
    if (node == null) {
      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
      node = _nodeId = [
        seedBytes[0] | 0x01,
        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]
      ];
    }
    if (clockseq == null) {
      // Per 4.2.2, randomize (14 bit) clockseq
      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;
    }
  }

  // UUID timestamps are 100 nano-second units since the Gregorian epoch,
  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.
  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();

  // Per 4.2.1.2, use count of uuid's generated during the current clock
  // cycle to simulate higher resolution clock
  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;

  // Time since last uuid creation (in msecs)
  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;

  // Per 4.2.1.2, Bump clockseq on clock regression
  if (dt < 0 && options.clockseq === undefined) {
    clockseq = clockseq + 1 & 0x3fff;
  }

  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
  // time interval
  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
    nsecs = 0;
  }

  // Per 4.2.1.2 Throw error if too many uuids are requested
  if (nsecs >= 10000) {
    throw new Error('uuid.v1(): Can\'t create more than 10M uuids/sec');
  }

  _lastMSecs = msecs;
  _lastNSecs = nsecs;
  _clockseq = clockseq;

  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch
  msecs += 12219292800000;

  // `time_low`
  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
  b[i++] = tl >>> 24 & 0xff;
  b[i++] = tl >>> 16 & 0xff;
  b[i++] = tl >>> 8 & 0xff;
  b[i++] = tl & 0xff;

  // `time_mid`
  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;
  b[i++] = tmh >>> 8 & 0xff;
  b[i++] = tmh & 0xff;

  // `time_high_and_version`
  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version
  b[i++] = tmh >>> 16 & 0xff;

  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)
  b[i++] = clockseq >>> 8 | 0x80;

  // `clock_seq_low`
  b[i++] = clockseq & 0xff;

  // `node`
  for (var n = 0; n < 6; ++n) {
    b[i + n] = node[n];
  }

  return buf ? buf : bytesToUuid$1(b);
}

var v1_1 = v1$1;

var rng = rng$2;
var bytesToUuid = bytesToUuid_1;

function v4$1(options, buf, offset) {
  var i = buf && offset || 0;

  if (typeof(options) == 'string') {
    buf = options === 'binary' ? new Array(16) : null;
    options = null;
  }
  options = options || {};

  var rnds = options.random || (options.rng || rng)();

  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
  rnds[6] = (rnds[6] & 0x0f) | 0x40;
  rnds[8] = (rnds[8] & 0x3f) | 0x80;

  // Copy bytes to buffer, if provided
  if (buf) {
    for (var ii = 0; ii < 16; ++ii) {
      buf[i + ii] = rnds[ii];
    }
  }

  return buf || bytesToUuid(rnds);
}

var v4_1 = v4$1;

var v1 = v1_1;
var v4 = v4_1;

var uuid = v4;
uuid.v1 = v1;
uuid.v4 = v4;

var uuid_1 = uuid;

var require$$4 = /*@__PURE__*/getAugmentedNamespace(colors$1);

var constants = {};

Object.defineProperty(constants, "__esModule", { value: true });
constants.sizes = {
    small: '16px',
    medium: '24px',
    large: '32px',
    xlarge: '48px',
};
constants.sizeMap = {
    small: 'small',
    medium: 'medium',
    large: 'large',
    xlarge: 'xlarge',
};

(function (exports) {
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require$$0;
var react_1 = tslib_1.__importDefault(React__default);
var styled_components_1 = tslib_1.__importDefault(styled$1);
var uuid_1$1 = tslib_1.__importDefault(uuid_1);
var colors_1 = require$$4;
var constants_1 = constants;
var getSize = function (_a) {
    var size = _a.size;
    return size ? "height: " + constants_1.sizes[size] + "; width: " + constants_1.sizes[size] + ";" : null;
};
exports.IconWrapper = styled_components_1.default.span(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["\n  ", ";\n  color: ", ";\n  display: inline-block;\n  fill: ", ";\n  flex-shrink: 0;\n  line-height: 1;\n\n  > svg {\n    ", ";\n    max-height: 100%;\n    max-width: 100%;\n    overflow: hidden;\n    pointer-events: none;\n    vertical-align: bottom;\n  }\n\n  /**\n   * Stop-color doesn't properly apply in chrome when the inherited/current color changes.\n   * We have to initially set stop-color to inherit (either via DOM attribute or an initial CSS\n   * rule) and then override it with currentColor for the color changes to be picked up.\n   */\n  stop {\n    stop-color: currentColor;\n  }\n"], ["\n  ", ";\n  color: ", ";\n  display: inline-block;\n  fill: ", ";\n  flex-shrink: 0;\n  line-height: 1;\n\n  > svg {\n    ", ";\n    max-height: 100%;\n    max-width: 100%;\n    overflow: hidden;\n    pointer-events: none;\n    vertical-align: bottom;\n  }\n\n  /**\n   * Stop-color doesn't properly apply in chrome when the inherited/current color changes.\n   * We have to initially set stop-color to inherit (either via DOM attribute or an initial CSS\n   * rule) and then override it with currentColor for the color changes to be picked up.\n   */\n  stop {\n    stop-color: currentColor;\n  }\n"])), getSize, function (p) { return p.primaryColor || 'currentColor'; }, function (p) { return p.secondaryColor || colors_1.background; }, getSize);
/**
 * Icons need unique gradient IDs across instances for different gradient definitions to work
 * correctly.
 * A step in the icon build process replaces linear gradient IDs and their references in paths
 * to a placeholder string so we can replace them with a dynamic ID here.
 * Replacing the original IDs with placeholders in the build process is more robust than not
 * using placeholders as we do not have to rely on regular expressions to find specific element
 * to replace.
 */
function insertDynamicGradientID(svgStr, label) {
    var id = uuid_1$1.default();
    var replacedSvgStr = svgStr
        .replace(/id="([^"]+)-idPlaceholder"/g, "id=$1-" + id)
        .replace(/fill="url\(#([^"]+)-idPlaceholder\)"/g, "fill=\"url(#$1-" + id + ")\"");
    return replacedSvgStr;
}
var Icon = function (props) {
    var Glyph = props.glyph, dangerouslySetGlyph = props.dangerouslySetGlyph, primaryColor = props.primaryColor, secondaryColor = props.secondaryColor, size = props.size, testId = props.testId, label = props.label;
    var glyphProps = dangerouslySetGlyph
        ? {
            dangerouslySetInnerHTML: {
                __html: insertDynamicGradientID(dangerouslySetGlyph),
            },
        }
        : { children: Glyph ? react_1.default.createElement(Glyph, { role: "presentation" }) : null };
    return (react_1.default.createElement(exports.IconWrapper, tslib_1.__assign({ primaryColor: primaryColor, secondaryColor: secondaryColor, size: size, "data-testid": testId, role: label ? 'img' : 'presentation', "aria-label": label ? label : undefined }, glyphProps)));
};
exports.default = Icon;
var templateObject_1;

}(Icon$7));

Object.defineProperty(chevronLeftLarge, "__esModule", {
  value: true
});
var default_1$a = chevronLeftLarge.default = void 0;

var _react$h = _interopRequireDefault$f(React__default);

var _Icon$6 = _interopRequireDefault$f(Icon$7);

function _interopRequireDefault$f(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends$c() { _extends$c = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$c.apply(this, arguments); }

var ChevronLeftLargeIcon = function ChevronLeftLargeIcon(props) {
  return _react$h.default.createElement(_Icon$6.default, _extends$c({
    dangerouslySetGlyph: "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" focusable=\"false\" role=\"presentation\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M9.005 10.995l4.593-4.593a.99.99 0 1 1 1.4 1.4l-3.9 3.9 3.9 3.9a.99.99 0 0 1-1.4 1.4L9.005 12.41a1 1 0 0 1 0-1.414z\"/></svg>"
  }, props));
};

ChevronLeftLargeIcon.displayName = 'ChevronLeftLargeIcon';
var _default$b = ChevronLeftLargeIcon;
default_1$a = chevronLeftLarge.default = _default$b;

var safeIsNaN = Number.isNaN ||
    function ponyfill(value) {
        return typeof value === 'number' && value !== value;
    };
function isEqual$2(first, second) {
    if (first === second) {
        return true;
    }
    if (safeIsNaN(first) && safeIsNaN(second)) {
        return true;
    }
    return false;
}
function areInputsEqual(newInputs, lastInputs) {
    if (newInputs.length !== lastInputs.length) {
        return false;
    }
    for (var i = 0; i < newInputs.length; i++) {
        if (!isEqual$2(newInputs[i], lastInputs[i])) {
            return false;
        }
    }
    return true;
}

function memoizeOne(resultFn, isEqual) {
    if (isEqual === void 0) { isEqual = areInputsEqual; }
    var lastThis;
    var lastArgs = [];
    var lastResult;
    var calledOnce = false;
    function memoized() {
        var newArgs = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            newArgs[_i] = arguments[_i];
        }
        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {
            return lastResult;
        }
        lastResult = resultFn.apply(this, newArgs);
        calledOnce = true;
        lastThis = this;
        lastArgs = newArgs;
        return lastResult;
    }
    return memoized;
}

var compactButtonHeight$2 = (gridSize$5() * 3) / fontSize$5() + "em";
var buttonHeight$2 = (gridSize$5() * 4) / fontSize$5() + "em";
/** Background */
var getBackground$5 = function (props) {
    return applyPropertyStyle$2('background', props, baseTheme$2);
};
/** Box Shadow */
var getBoxShadow$2 = function (props) {
    var boxShadowColor = applyPropertyStyle$2('boxShadowColor', props, baseTheme$2);
    return "0 0 0 2px " + boxShadowColor;
};
/** Color */
var getColor$4 = function (props) {
    return applyPropertyStyle$2('color', props, baseTheme$2);
};
/** Cursor */
var getCursor$2 = function (_a) {
    var _b = _a.state, state = _b === void 0 ? 'default' : _b;
    return state === 'hover' || state === 'active' || state === 'selected'
        ? 'pointer'
        : state === 'disabled'
            ? 'not-allowed'
            : 'default';
};
/** Height */
var getHeight$2 = function (_a) {
    var _b = _a.spacing, spacing = _b === void 0 ? 'default' : _b;
    return spacing === 'compact'
        ? compactButtonHeight$2
        : spacing === 'none'
            ? 'auto'
            : buttonHeight$2;
};
/** Line Height */
var getLineHeight$3 = function (_a) {
    var _b = _a.spacing, spacing = _b === void 0 ? 'default' : _b;
    return spacing === 'compact'
        ? compactButtonHeight$2
        : spacing === 'none'
            ? 'inherit'
            : buttonHeight$2;
};
/** Padding */
var getPadding$6 = function (_a) {
    var _b = _a.spacing, spacing = _b === void 0 ? 'default' : _b;
    return spacing === 'none' ? 0 : "0 " + gridSize$5() + "px";
};
/** Text Decoration */
var getTextDecoration$2 = function (_a) {
    var _b = _a.appearance, appearance = _b === void 0 ? 'default' : _b, _c = _a.state, state = _c === void 0 ? 'default' : _c;
    return state === 'hover' && (appearance === 'link' || appearance === 'subtle-link')
        ? 'underline'
        : 'inherit';
};
/** Transition */
var getTransition$2 = function (_a) {
    var _b = _a.state, state = _b === void 0 ? 'default' : _b;
    return state === 'hover'
        ? 'background 0s ease-out, box-shadow 0.15s cubic-bezier(0.47, 0.03, 0.49, 1.38)'
        : 'background 0.1s ease-out, box-shadow 0.15s cubic-bezier(0.47, 0.03, 0.49, 1.38)';
};
/** Transition Duration */
var getTransitionDuration$2 = function (_a) {
    var _b = _a.state, state = _b === void 0 ? 'default' : _b;
    return state === 'active' ? '0s' : state === 'focus' ? '0s, 0.2s' : '0.1s, 0.15s';
};
/** Vertical Align */
var getVerticalAlign$2 = function (_a) {
    var _b = _a.spacing, spacing = _b === void 0 ? 'default' : _b;
    return spacing === 'none' ? 'baseline' : 'middle';
};
/** Width */
var getWidth$2 = function (_a) {
    var shouldFitContainer = _a.shouldFitContainer;
    return shouldFitContainer ? '100%' : 'auto';
};
/** Base styles */
var staticStyles$2 = {
    alignItems: 'baseline',
    borderWidth: 0,
    boxSizing: 'border-box',
    display: 'inline-flex',
    fontSize: 'inherit',
    fontStyle: 'normal',
    fontWeight: '500',
    maxWidth: '100%',
    outline: 'none !important',
    textAlign: 'center',
    textDecoration: 'none',
    whiteSpace: 'nowrap',
};
/**
 * BUTTON STYLES
 */
var getButtonStyles$2 = function (props) { return (__assign$6(__assign$6(__assign$6({}, staticStyles$2), { background: getBackground$5(props), borderRadius: borderRadius$5() + "px", boxShadow: getBoxShadow$2(props), color: getColor$4(props) + " !important", cursor: getCursor$2(props), height: getHeight$2(props), lineHeight: getLineHeight$3(props), padding: getPadding$6(props), transition: getTransition$2(props), transitionDuration: getTransitionDuration$2(props), verticalAlign: getVerticalAlign$2(props), width: getWidth$2(props), '&::-moz-focus-inner': {
        border: 0,
        margin: 0,
        padding: 0,
    }, '&:hover': {
        textDecoration: getTextDecoration$2(props),
    } }), (props.isLoading && { pointerEvents: 'none' }))); };
/**
 * SPINNER STYLES
 */
var getSpinnerStyles$2 = function () { return ({
    display: 'flex',
    position: 'absolute',
    left: '50%',
    top: '50%',
    transform: 'translate(-50%, -50%)',
}); };

var mapAttributesToState$2 = function (_a) {
    var _b = _a.isDisabled, isDisabled = _b === void 0 ? false : _b, _c = _a.isActive, isActive = _c === void 0 ? false : _c, _d = _a.isFocus, isFocus = _d === void 0 ? false : _d, _e = _a.isHover, isHover = _e === void 0 ? false : _e, _f = _a.isSelected, isSelected = _f === void 0 ? false : _f;
    if (isDisabled) {
        return 'disabled';
    }
    if (isSelected && isFocus) {
        return 'focusSelected';
    }
    if (isSelected) {
        return 'selected';
    }
    if (isActive) {
        return 'active';
    }
    if (isHover) {
        return 'hover';
    }
    if (isFocus) {
        return 'focus';
    }
    return 'default';
};
var filterProps$2 = function (
// @ts-ignore - createAnalyticsEvent is injected from WithAnalyticsEvents HOC
_a, type) {
    _a.createAnalyticsEvent; var props = __rest$3(_a, 
    // @ts-ignore - createAnalyticsEvent is injected from WithAnalyticsEvents HOC
    ["createAnalyticsEvent"]);
    if (type === 'span') {
        props.target; props.href; var rest = __rest$3(props, ["target", "href"]);
        return rest;
    }
    return props;
};
var getLoadingStyle$2 = function (isLoading) { return ({
    transition: 'opacity 0.3s',
    opacity: isLoading ? 0 : 1,
}); };
var composeRefs$2 = function () {
    var refs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        refs[_i] = arguments[_i];
    }
    return function (x) {
        refs
            .filter(function (r) { return !!r; })
            .forEach(function (ref) {
            if (typeof ref === 'function') {
                ref(x);
            }
            else {
                ref.current = x;
            }
        });
    };
};
/**
 * Convert a hex colour code to RGBA.
 * @param {String} hex Hex colour code.
 * @param {Number} alpha Optional alpha value (defaults to 1).
 */
function hex2rgba$2(hex, alpha) {
    if (alpha === void 0) { alpha = 1; }
    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {
        var colorArr = hex.substring(1).split('');
        if (colorArr.length === 3) {
            colorArr = [
                colorArr[0],
                colorArr[0],
                colorArr[1],
                colorArr[1],
                colorArr[2],
                colorArr[2],
            ];
        }
        var color = "0x" + colorArr.join('');
        // FIXME: `>>` operand can validly take a string value
        var r = (color >> 16) & 255;
        var g = (color >> 8) & 255;
        var b = color & 255;
        return "rgba(" + [r, g, b].join(',') + ", " + alpha + ")";
    }
    throw new Error('Bad Hex');
}

var fallbacks$2 = {
    background: { light: N20A, dark: DN70 },
    color: { light: N400, dark: DN400 },
    textDecoration: { light: 'none', dark: 'none' },
};
var baseTheme$2 = {
    // Default appearance
    background: {
        default: {
            default: { light: N20A, dark: DN70 },
            hover: { light: N30A, dark: DN60$1 },
            active: { light: hex2rgba$2(B75$2, 0.6), dark: B75$2 },
            disabled: { light: N20A, dark: DN70 },
            selected: { light: N700$1, dark: DN0 },
            focusSelected: { light: N700$1, dark: DN0 },
        },
        primary: {
            default: { light: B400, dark: B100$3 },
            hover: { light: B300$1, dark: B75$2 },
            active: { light: B500$1, dark: B200$1 },
            disabled: { light: N20A, dark: DN70 },
            selected: { light: N700$1, dark: DN0 },
            focusSelected: { light: N700$1, dark: DN0 },
        },
        warning: {
            default: { light: Y300$1, dark: Y300$1 },
            hover: { light: Y200$1, dark: Y200$1 },
            active: { light: Y400, dark: Y400 },
            disabled: { light: N20A, dark: DN70 },
            selected: { light: Y400, dark: Y400 },
            focusSelected: { light: Y400, dark: Y400 },
        },
        danger: {
            default: { light: R400$2, dark: R400$2 },
            hover: { light: R300$2, dark: R300$2 },
            active: { light: R500$1, dark: R500$1 },
            disabled: { light: N20A, dark: DN70 },
            selected: { light: R500$1, dark: R500$1 },
            focusSelected: { light: R500$1, dark: R500$1 },
        },
        link: {
            default: { light: 'none', dark: 'none' },
            selected: { light: N700$1, dark: N20$3 },
            focusSelected: { light: N700$1, dark: N20$3 },
        },
        subtle: {
            default: { light: 'none', dark: 'none' },
            hover: { light: N30A, dark: DN60$1 },
            active: { light: hex2rgba$2(B75$2, 0.6), dark: B75$2 },
            disabled: { light: 'none', dark: 'none' },
            selected: { light: N700$1, dark: DN0 },
            focusSelected: { light: N700$1, dark: DN0 },
        },
        'subtle-link': {
            default: { light: 'none', dark: 'none' },
            selected: { light: N700$1, dark: N20$3 },
            focusSelected: { light: N700$1, dark: N20$3 },
        },
    },
    boxShadowColor: {
        default: {
            focus: { light: B100$3, dark: B75$2 },
            focusSelected: {
                light: B100$3,
                dark: B75$2,
            },
        },
        primary: {
            focus: { light: B100$3, dark: B75$2 },
            focusSelected: {
                light: B100$3,
                dark: B75$2,
            },
        },
        warning: {
            focus: { light: Y500, dark: Y500 },
            focusSelected: { light: Y500, dark: Y500 },
        },
        danger: {
            focus: { light: R100$1, dark: R100$1 },
            focusSelected: { light: R100$1, dark: R100$1 },
        },
        link: {
            focus: { light: B100$3, dark: B75$2 },
            focusSelected: {
                light: B100$3,
                dark: B75$2,
            },
        },
        subtle: {
            focus: { light: B100$3, dark: B75$2 },
            focusSelected: {
                light: B100$3,
                dark: B75$2,
            },
        },
        'subtle-link': {
            focus: { light: B100$3, dark: B75$2 },
            focusSelected: {
                light: B100$3,
                dark: B75$2,
            },
        },
    },
    color: {
        default: {
            default: { light: N500$4, dark: DN400 },
            active: { light: B400, dark: B400 },
            disabled: { light: N70$3, dark: DN30$5 },
            selected: { light: N20$3, dark: DN400 },
            focusSelected: { light: N20$3, dark: DN400 },
        },
        primary: {
            default: { light: N0$7, dark: DN30$5 },
            disabled: { light: N70$3, dark: DN30$5 },
            selected: { light: N20$3, dark: DN400 },
            focusSelected: { light: N20$3, dark: DN400 },
        },
        warning: {
            default: { light: N800$2, dark: N800$2 },
            disabled: { light: N70$3, dark: DN30$5 },
            selected: { light: N800$2, dark: N800$2 },
            focusSelected: { light: N800$2, dark: N800$2 },
        },
        danger: {
            default: { light: N0$7, dark: N0$7 },
            disabled: { light: N70$3, dark: DN30$5 },
            selected: { light: N0$7, dark: N0$7 },
            focusSelected: { light: N0$7, dark: N0$7 },
        },
        link: {
            default: { light: B400, dark: B100$3 },
            hover: { light: B300$1, dark: B75$2 },
            active: { light: B500$1, dark: B200$1 },
            disabled: { light: N70$3, dark: DN100 },
            selected: { light: N20$3, dark: N700$1 },
            focusSelected: { light: N20$3, dark: N700$1 },
        },
        subtle: {
            default: { light: N500$4, dark: DN400 },
            active: { light: B400, dark: B400 },
            disabled: { light: N70$3, dark: DN100 },
            selected: { light: N20$3, dark: DN400 },
            focusSelected: { light: N20$3, dark: DN400 },
        },
        'subtle-link': {
            default: { light: N200$2, dark: DN400 },
            hover: { light: N90, dark: B50$1 },
            active: { light: N400, dark: DN300$1 },
            disabled: { light: N70$3, dark: DN100 },
            selected: { light: N20$3, dark: DN400 },
            focusSelected: { light: N20$3, dark: DN400 },
        },
    },
};
function applyPropertyStyle$2(property, _a, theme) {
    var _b = _a.appearance, appearance = _b === void 0 ? 'default' : _b, _c = _a.state, state = _c === void 0 ? 'default' : _c, _d = _a.mode, mode = _d === void 0 ? 'light' : _d;
    var propertyStyles = theme[property];
    if (!propertyStyles) {
        return 'initial';
    }
    // Check for relevant fallbacks
    if (!propertyStyles[appearance]) {
        if (!propertyStyles['default']) {
            return fallbacks$2[property][mode] ? fallbacks$2[property][mode] : 'initial';
        }
        appearance = 'default';
    }
    // If there is no 'state' key (ie, 'hover') defined for a given appearance,
    // return the 'default' state of that appearance.
    if (!propertyStyles[appearance][state]) {
        state = 'default';
    }
    var appearanceStyles = propertyStyles[appearance];
    var stateStyles = appearanceStyles[state];
    if (!stateStyles) {
        return 'inherit';
    }
    return stateStyles[mode] || appearanceStyles.default[mode];
}
var Theme$2 = createTheme$4(function (themeProps) { return ({
    buttonStyles: getButtonStyles$2(themeProps),
    spinnerStyles: getSpinnerStyles$2(),
}); });

var name$8="@atlaskit/button";var version$8="13.4.2";

var Content$a = (function (_a) {
    var children = _a.children, followsIcon = _a.followsIcon, spacing = _a.spacing, isLoading = _a.isLoading, rest = __rest$3(_a, ["children", "followsIcon", "spacing", "isLoading"]);
    return (jsx("span", __assign$6({ css: __assign$6({ alignItems: followsIcon ? 'baseline' : 'center', alignSelf: followsIcon ? 'baseline' : 'center', flex: '1 1 auto', margin: spacing === 'none' ? 0 : "0 " + gridSize$5() / 2 + "px", maxWidth: '100%', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap' }, getLoadingStyle$2(isLoading)) }, rest), children));
});

var IconWrapper$2 = (function (_a) {
    var spacing = _a.spacing, icon = _a.icon, isOnlyChild = _a.isOnlyChild, isLoading = _a.isLoading, rest = __rest$3(_a, ["spacing", "icon", "isOnlyChild", "isLoading"]);
    return (jsx("span", __assign$6({ css: __assign$6({ alignSelf: 'center', display: 'flex', flexShrink: 0, lineHeight: 0, fontSize: 0, userSelect: 'none', margin: spacing === 'none'
                ? 0
                : isOnlyChild
                    ? "0 -" + gridSize$5() / 4 + "px"
                    : "0 " + gridSize$5() / 2 + "px" }, getLoadingStyle$2(isLoading)) }, rest), icon));
});

var InnerWrapper$2 = (function (_a) {
    var fit = _a.fit, children = _a.children, rest = __rest$3(_a, ["fit", "children"]);
    return (jsx("span", __assign$6({ css: __assign$6(__assign$6({ alignSelf: 'center', display: 'inline-flex', flexWrap: 'nowrap', maxWidth: '100%', position: 'relative' }, (fit && { width: '100%' })), (fit && { justifyContent: 'center' })) }, rest), children));
});

var appearances$2 = ['primary', 'danger'];
var LoadingSpinner$4 = /** @class */ (function (_super) {
    __extends$9(LoadingSpinner, _super);
    function LoadingSpinner() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.invertSpinner = function () {
            var _a = _this.props, appearance = _a.appearance, isSelected = _a.isSelected, isDisabled = _a.isDisabled;
            if (isSelected) {
                return true;
            }
            if (isDisabled) {
                return false;
            }
            if (appearance !== undefined) {
                if (appearances$2.indexOf(appearance) !== -1) {
                    return true;
                }
            }
            return false;
        };
        return _this;
    }
    LoadingSpinner.prototype.render = function () {
        var _a = this.props, spacing = _a.spacing, styles = _a.styles;
        var spinnerSize = spacing !== 'default' ? 'small' : 'medium';
        return (jsx("div", { css: styles },
            jsx(Spinner$3, { size: spinnerSize, appearance: this.invertSpinner() ? 'invert' : 'inherit' })));
    };
    return LoadingSpinner;
}(React__default.Component));
var LoadingSpinner$5 = LoadingSpinner$4;

var Button$4 = /** @class */ (function (_super) {
    __extends$9(Button, _super);
    function Button() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // ref can be a range of things because we render button, a, span or other React components
        _this.button = React__default.createRef();
        // Makes sure we don't call ref every render.
        _this.getComposedRefs = memoizeOne(composeRefs$2);
        _this.state = {
            isActive: false,
            isFocus: false,
            isHover: false,
        };
        _this.isInteractive = function () { return !_this.props.isDisabled && !_this.props.isLoading; };
        _this.onMouseEnter = function (e) {
            _this.setState({ isHover: true });
            if (_this.props.onMouseEnter) {
                _this.props.onMouseEnter(e);
            }
        };
        _this.onMouseLeave = function (e) {
            _this.setState({ isHover: false, isActive: false });
            if (_this.props.onMouseLeave) {
                _this.props.onMouseLeave(e);
            }
        };
        _this.onMouseDown = function (e) {
            e.preventDefault();
            _this.setState({ isActive: true });
            if (_this.props.onMouseDown) {
                _this.props.onMouseDown(e);
            }
        };
        _this.onMouseUp = function (e) {
            _this.setState({ isActive: false });
            if (_this.props.onMouseUp) {
                _this.props.onMouseUp(e);
            }
        };
        _this.onFocus = function (event) {
            _this.setState({ isFocus: true });
            if (_this.props.onFocus) {
                _this.props.onFocus(event);
            }
        };
        _this.onBlur = function (event) {
            _this.setState({ isFocus: false });
            if (_this.props.onBlur) {
                _this.props.onBlur(event);
            }
        };
        _this.getElement = function () {
            var _a = _this.props, href = _a.href, isDisabled = _a.isDisabled;
            if (href) {
                return isDisabled ? 'span' : 'a';
            }
            return 'button';
        };
        // Swallow click events when the button is disabled
        // to prevent inner child clicks bubbling up.
        _this.onInnerClick = function (e) {
            if (!_this.isInteractive()) {
                e.stopPropagation();
            }
            return true;
        };
        return _this;
    }
    Button.prototype.componentDidMount = function () {
        if (this.props.autoFocus && this.button instanceof HTMLButtonElement) {
            this.button.focus();
        }
    };
    Button.prototype.render = function () {
        var _this = this;
        var _a = this.props, _b = _a.appearance, appearance = _b === void 0 ? 'default' : _b, children = _a.children, className = _a.className, CustomComponent = _a.component, consumerRef = _a.consumerRef, iconAfter = _a.iconAfter, iconBefore = _a.iconBefore, _c = _a.isDisabled, isDisabled = _c === void 0 ? false : _c, _d = _a.isLoading, isLoading = _d === void 0 ? false : _d, _e = _a.isSelected, isSelected = _e === void 0 ? false : _e, _f = _a.shouldFitContainer, shouldFitContainer = _f === void 0 ? false : _f, _g = _a.spacing, spacing = _g === void 0 ? 'default' : _g, _h = _a.theme, theme = _h === void 0 ? function (current, props) { return current(props); } : _h, testId = _a.testId, rest = __rest$3(_a, ["appearance", "children", "className", "component", "consumerRef", "iconAfter", "iconBefore", "isDisabled", "isLoading", "isSelected", "shouldFitContainer", "spacing", "theme", "testId"]);
        var attributes = __assign$6(__assign$6({}, this.state), { isSelected: isSelected, isDisabled: isDisabled });
        var StyledButton = CustomComponent || this.getElement();
        var iconIsOnlyChild = !!((iconBefore && !iconAfter && !children) ||
            (iconAfter && !iconBefore && !children));
        var specifiers = function (styles) {
            if (StyledButton === 'a') {
                return {
                    'a&': styles,
                };
            }
            else if (StyledButton === CustomComponent) {
                return {
                    '&, a&, &:hover, &:active, &:focus': styles,
                };
            }
            return styles;
        };
        return (jsx(Theme$2.Provider, { value: theme },
            jsx(GlobalTheme$3.Consumer, null, function (_a) {
                var mode = _a.mode;
                return (jsx(Theme$2.Consumer, __assign$6({ mode: mode, state: mapAttributesToState$2(attributes), iconIsOnlyChild: iconIsOnlyChild }, _this.props), function (_a) {
                    var buttonStyles = _a.buttonStyles, spinnerStyles = _a.spinnerStyles;
                    return (jsx(StyledButton, __assign$6({}, filterProps$2(rest, StyledButton), { "data-testid": testId, ref: _this.getComposedRefs(_this.button, consumerRef), onMouseEnter: _this.onMouseEnter, onMouseLeave: _this.onMouseLeave, onMouseDown: _this.onMouseDown, onMouseUp: _this.onMouseUp, onFocus: _this.onFocus, onBlur: _this.onBlur, disabled: isDisabled, className: className, css: specifiers(buttonStyles) }),
                        jsx(InnerWrapper$2, { onClick: _this.onInnerClick, fit: !!shouldFitContainer },
                            isLoading && (jsx(LoadingSpinner$5, { spacing: spacing, appearance: appearance, isSelected: isSelected, isDisabled: isDisabled, styles: spinnerStyles })),
                            iconBefore && (jsx(IconWrapper$2, { isLoading: isLoading, spacing: spacing, isOnlyChild: iconIsOnlyChild, icon: iconBefore })),
                            children && (jsx(Content$a, { isLoading: isLoading, followsIcon: !!iconBefore, spacing: spacing }, children)),
                            iconAfter && (jsx(IconWrapper$2, { isLoading: isLoading, spacing: spacing, isOnlyChild: iconIsOnlyChild, icon: iconAfter })))));
                }));
            })));
    };
    Button.defaultProps = {
        appearance: 'default',
        autoFocus: false,
        isDisabled: false,
        isLoading: false,
        isSelected: false,
        shouldFitContainer: false,
        spacing: 'default',
        type: 'button',
    };
    return Button;
}(React__default.Component));
var createAndFireEventOnAtlaskit$e = createAndFireEvent$4('atlaskit');
var ButtonWithRef$2 = React__default.forwardRef(function (props, ref) { return jsx(Button$4, __assign$6({}, props, { consumerRef: ref })); });
ButtonWithRef$2.displayName = 'Button';
var Button$5 = withAnalyticsContext$9({
    componentName: 'button',
    packageName: name$8,
    packageVersion: version$8,
})(withAnalyticsEvents$9({
    onClick: createAndFireEventOnAtlaskit$e({
        action: 'clicked',
        actionSubject: 'button',
        attributes: {
            componentName: 'button',
            packageName: name$8,
            packageVersion: version$8,
        },
    }),
})(ButtonWithRef$2));

var Navigator = function (props) { return (React__default.createElement(Button$5, __assign$6({}, props, { appearance: "subtle", spacing: "none", theme: function (currentTheme, themeProps) {
        var _a = currentTheme(themeProps), buttonStyles = _a.buttonStyles, rest = __rest$3(_a, ["buttonStyles"]);
        var halfGridSize = gridSize$5() / 2;
        return __assign$6({ buttonStyles: __assign$6(__assign$6({}, buttonStyles), { paddingLeft: halfGridSize + "px", paddingRight: halfGridSize + "px", 'html[dir=rtl] &': {
                    transform: 'rotate(180deg)',
                } }) }, rest);
    } }))); };
var Navigator$1 = Navigator;

var LeftNavigator = /** @class */ (function (_super) {
    __extends$9(LeftNavigator, _super);
    function LeftNavigator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LeftNavigator.prototype.render = function () {
        return React__default.createElement(Navigator$1, __assign$6({}, this.props));
    };
    LeftNavigator.defaultProps = {
        'aria-label': 'previous',
        iconBefore: React__default.createElement(default_1$a, { label: "" }),
        isDisabled: false,
    };
    return LeftNavigator;
}(Component$1));
var LeftNavigator$1 = LeftNavigator;

var chevronRightLarge = {};

Object.defineProperty(chevronRightLarge, "__esModule", {
  value: true
});
var default_1$9 = chevronRightLarge.default = void 0;

var _react$g = _interopRequireDefault$e(React__default);

var _Icon$5 = _interopRequireDefault$e(Icon$7);

function _interopRequireDefault$e(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends$b() { _extends$b = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$b.apply(this, arguments); }

var ChevronRightLargeIcon = function ChevronRightLargeIcon(props) {
  return _react$g.default.createElement(_Icon$5.default, _extends$b({
    dangerouslySetGlyph: "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" focusable=\"false\" role=\"presentation\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M14.995 10.995a1 1 0 0 1 0 1.414l-4.593 4.593a.99.99 0 0 1-1.4-1.4l3.9-3.9-3.9-3.9a.99.99 0 0 1 1.4-1.4l4.593 4.593z\"/></svg>"
  }, props));
};

ChevronRightLargeIcon.displayName = 'ChevronRightLargeIcon';
var _default$a = ChevronRightLargeIcon;
default_1$9 = chevronRightLarge.default = _default$a;

var RightNavigator = /** @class */ (function (_super) {
    __extends$9(RightNavigator, _super);
    function RightNavigator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RightNavigator.prototype.render = function () {
        return React__default.createElement(Navigator$1, __assign$6({}, this.props));
    };
    RightNavigator.defaultProps = {
        'aria-label': 'next',
        iconBefore: React__default.createElement(default_1$9, { label: "" }),
        isDisabled: false,
    };
    return RightNavigator;
}(Component$1));
var RightNavigator$1 = RightNavigator;

var Page$1 = /** @class */ (function (_super) {
    __extends$9(Page, _super);
    function Page() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Page.prototype.render = function () {
        return React__default.createElement(Button$5, __assign$6({}, this.props, { appearance: "subtle" }));
    };
    return Page;
}(Component$1));
var PageComponent = Page$1;

var StyledEllipsis = styled$1.span(templateObject_1$9 || (templateObject_1$9 = __makeTemplateObject$6(["\n  display: inline-flex;\n  text-align: center;\n  align-items: center;\n  padding: 0 8px;\n"], ["\n  display: inline-flex;\n  text-align: center;\n  align-items: center;\n  padding: 0 8px;\n"])));
function renderEllipsis(_a) {
    var key = _a.key;
    return React__default.createElement(StyledEllipsis, { key: key }, "...");
}
var templateObject_1$9;

var Pagination = /** @class */ (function (_super) {
    __extends$9(Pagination, _super);
    function Pagination() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            selectedIndex: _this.props.defaultSelectedIndex || 0,
        };
        _this.createAndFireEventOnAtlaskit = createAndFireEvent$4('atlaskit');
        _this.onChangeAnalyticsCaller = function () {
            var createAnalyticsEvent = _this.props.createAnalyticsEvent;
            if (createAnalyticsEvent) {
                return _this.createAndFireEventOnAtlaskit({
                    action: 'changed',
                    actionSubject: 'pageNumber',
                    attributes: {
                        componentName: 'pagination',
                        packageName: name$9,
                        packageVersion: version$9,
                    },
                })(createAnalyticsEvent);
            }
            return undefined;
        };
        _this.onChange = function (event, newSelectedPage) {
            if (_this.props.selectedIndex === undefined) {
                _this.setState({
                    selectedIndex: newSelectedPage,
                });
            }
            var analyticsEvent = _this.onChangeAnalyticsCaller();
            if (_this.props.onChange) {
                _this.props.onChange(event, _this.props.pages[newSelectedPage], analyticsEvent);
            }
        };
        _this.pagesToComponents = function (pages) {
            var selectedIndex = _this.state.selectedIndex;
            var _a = _this.props, components = _a.components, getPageLabel = _a.getPageLabel;
            return pages.map(function (page, index) {
                return (React__default.createElement(PageComponent, { key: "page-" + (getPageLabel ? getPageLabel(page, index) : index), component: components.Page, onClick: function (event) { return _this.onChange(event, index); }, isSelected: selectedIndex === index, page: page }, getPageLabel ? getPageLabel(page, index) : page));
            });
        };
        _this.renderPages = function () {
            var selectedIndex = _this.state.selectedIndex;
            var _a = _this.props, pages = _a.pages, max = _a.max, collapseRange = _a.collapseRange, renderEllipsis = _a.renderEllipsis;
            var pagesComponents = _this.pagesToComponents(pages);
            // @ts-ignore
            return collapseRange(pagesComponents, selectedIndex, {
                max: max,
                ellipsis: renderEllipsis,
            });
        };
        _this.renderLeftNavigator = function () {
            var _a = _this.props, components = _a.components, pages = _a.pages, i18n = _a.i18n;
            var selectedIndex = _this.state.selectedIndex;
            var props = {
                'aria-label': i18n.prev,
                pages: pages,
            };
            return (React__default.createElement(LeftNavigator$1, __assign$6({ key: "left-navigator", component: components.Previous, onClick: function (event) { return _this.onChange(event, selectedIndex - 1); }, isDisabled: selectedIndex === 0 }, props)));
        };
        _this.renderRightNavigator = function () {
            var _a = _this.props, components = _a.components, pages = _a.pages, i18n = _a.i18n;
            var selectedIndex = _this.state.selectedIndex;
            var props = {
                'aria-label': i18n.next,
                pages: pages,
            };
            return (React__default.createElement(RightNavigator$1, __assign$6({ key: "right-navigator", component: components.Next, onClick: function (event) { return _this.onChange(event, selectedIndex + 1); }, isDisabled: selectedIndex === pages.length - 1 }, props)));
        };
        return _this;
    }
    Pagination.getDerivedStateFromProps = function (props) {
        // selectedIndex is controlled
        if (props.selectedIndex != null) {
            return {
                selectedIndex: props.selectedIndex,
            };
        }
        return null;
    };
    Pagination.prototype.render = function () {
        var innerStyles = this.props.innerStyles;
        return (React__default.createElement("div", { style: __assign$6({ display: 'flex' }, innerStyles) },
            React__default.createElement(Fragment$1, null,
                this.renderLeftNavigator(),
                this.renderPages(),
                this.renderRightNavigator())));
    };
    Pagination.defaultProps = {
        collapseRange: collapseRange,
        components: {},
        defaultSelectedIndex: 0,
        i18n: {
            prev: 'previous',
            next: 'next',
        },
        innerStyles: {},
        max: 7,
        onChange: function () { },
        renderEllipsis: renderEllipsis,
    };
    return Pagination;
}(Component$1));
var Pagination$1 = withAnalyticsContext$9({
    componentName: 'pagination',
    packageName: name$9,
    packageVersion: version$9,
})(withAnalyticsEvents$9()(Pagination));

var ManagedPagination = /** @class */ (function (_super) {
    __extends$b(ManagedPagination, _super);
    function ManagedPagination() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onChange = function (_event, newValue, analyticsEvent) {
            _this.props.onChange(newValue, analyticsEvent);
        };
        return _this;
    }
    ManagedPagination.prototype.render = function () {
        var _a = this.props, total = _a.total, _b = _a.value, value = _b === void 0 ? 1 : _b, i18n = _a.i18n;
        var pages = __spread$5(Array(total)).map(function (_, index) { return index + 1; });
        // Pagination accepts array now thus selectedIndex starts with 0
        // So, we are substracting value by one thus not breaking dynamic table
        var selectedIndex = value - 1;
        return (React__default.createElement(Pagination$1, { selectedIndex: selectedIndex, i18n: i18n, onChange: this.onChange, pages: pages }));
    };
    return ManagedPagination;
}(React__default.Component));
var ManagedPagination$1 = ManagedPagination;

var _global = {exports: {}};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global$3 = _global.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global$3; // eslint-disable-line no-undef

var _core = {exports: {}};

var core$3 = _core.exports = { version: '2.6.12' };
if (typeof __e == 'number') __e = core$3; // eslint-disable-line no-undef

var _aFunction = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};

// optional / simple context binding
var aFunction = _aFunction;
var _ctx = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};

var _objectDp = {};

var _isObject = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

var isObject$4 = _isObject;
var _anObject = function (it) {
  if (!isObject$4(it)) throw TypeError(it + ' is not an object!');
  return it;
};

var _fails = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};

// Thank's IE8 for his funny defineProperty
var _descriptors = !_fails(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});

var isObject$3 = _isObject;
var document$2 = _global.exports.document;
// typeof document.createElement is 'object' in old IE
var is$1 = isObject$3(document$2) && isObject$3(document$2.createElement);
var _domCreate = function (it) {
  return is$1 ? document$2.createElement(it) : {};
};

var _ie8DomDefine = !_descriptors && !_fails(function () {
  return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;
});

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject$2 = _isObject;
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
var _toPrimitive = function (it, S) {
  if (!isObject$2(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject$2(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject$2(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject$2(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};

var anObject$3 = _anObject;
var IE8_DOM_DEFINE$1 = _ie8DomDefine;
var toPrimitive$1 = _toPrimitive;
var dP$2 = Object.defineProperty;

_objectDp.f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject$3(O);
  P = toPrimitive$1(P, true);
  anObject$3(Attributes);
  if (IE8_DOM_DEFINE$1) try {
    return dP$2(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

var _propertyDesc = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

var dP$1 = _objectDp;
var createDesc$1 = _propertyDesc;
var _hide = _descriptors ? function (object, key, value) {
  return dP$1.f(object, key, createDesc$1(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

var hasOwnProperty$2 = {}.hasOwnProperty;
var _has = function (it, key) {
  return hasOwnProperty$2.call(it, key);
};

var global$2 = _global.exports;
var core$2 = _core.exports;
var ctx = _ctx;
var hide$3 = _hide;
var has$2 = _has;
var PROTOTYPE$1 = 'prototype';

var $export$7 = function (type, name, source) {
  var IS_FORCED = type & $export$7.F;
  var IS_GLOBAL = type & $export$7.G;
  var IS_STATIC = type & $export$7.S;
  var IS_PROTO = type & $export$7.P;
  var IS_BIND = type & $export$7.B;
  var IS_WRAP = type & $export$7.W;
  var exports = IS_GLOBAL ? core$2 : core$2[name] || (core$2[name] = {});
  var expProto = exports[PROTOTYPE$1];
  var target = IS_GLOBAL ? global$2 : IS_STATIC ? global$2[name] : (global$2[name] || {})[PROTOTYPE$1];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has$2(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global$2)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE$1] = C[PROTOTYPE$1];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export$7.R && expProto && !expProto[key]) hide$3(expProto, key, out);
    }
  }
};
// type bitmap
$export$7.F = 1;   // forced
$export$7.G = 2;   // global
$export$7.S = 4;   // static
$export$7.P = 8;   // proto
$export$7.B = 16;  // bind
$export$7.W = 32;  // wrap
$export$7.U = 64;  // safe
$export$7.R = 128; // real proto method for `library`
var _export = $export$7;

var toString$1 = {}.toString;

var _cof = function (it) {
  return toString$1.call(it).slice(8, -1);
};

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = _cof;
// eslint-disable-next-line no-prototype-builtins
var _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};

// 7.2.1 RequireObjectCoercible(argument)
var _defined = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject$1 = _iobject;
var defined$1 = _defined;
var _toIobject = function (it) {
  return IObject$1(defined$1(it));
};

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor$1 = Math.floor;
var _toInteger = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor$1 : ceil)(it);
};

// 7.1.15 ToLength
var toInteger$1 = _toInteger;
var min$2 = Math.min;
var _toLength = function (it) {
  return it > 0 ? min$2(toInteger$1(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

var toInteger = _toInteger;
var max$2 = Math.max;
var min$1 = Math.min;
var _toAbsoluteIndex = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max$2(index + length, 0) : min$1(index, length);
};

// false -> Array#indexOf
// true  -> Array#includes
var toIObject$3 = _toIobject;
var toLength = _toLength;
var toAbsoluteIndex = _toAbsoluteIndex;
var _arrayIncludes = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject$3($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

var _shared = {exports: {}};

var core$1 = _core.exports;
var global$1 = _global.exports;
var SHARED = '__core-js_shared__';
var store = global$1[SHARED] || (global$1[SHARED] = {});

(_shared.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core$1.version,
  mode: 'pure' ,
  copyright: '© 2020 Denis Pushkarev (zloirock.ru)'
});

var id = 0;
var px = Math.random();
var _uid = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};

var shared$1 = _shared.exports('keys');
var uid$2 = _uid;
var _sharedKey = function (key) {
  return shared$1[key] || (shared$1[key] = uid$2(key));
};

var has$1 = _has;
var toIObject$2 = _toIobject;
var arrayIndexOf = _arrayIncludes(false);
var IE_PROTO$1 = _sharedKey('IE_PROTO');

var _objectKeysInternal = function (object, names) {
  var O = toIObject$2(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO$1) has$1(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has$1(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};

// IE 8- don't enum bug keys
var _enumBugKeys = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys$1 = _objectKeysInternal;
var enumBugKeys$1 = _enumBugKeys;

var _objectKeys = Object.keys || function keys(O) {
  return $keys$1(O, enumBugKeys$1);
};

var dP = _objectDp;
var anObject$2 = _anObject;
var getKeys$2 = _objectKeys;

var _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject$2(O);
  var keys = getKeys$2(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};

var document$1 = _global.exports.document;
var _html = document$1 && document$1.documentElement;

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject$1 = _anObject;
var dPs = _objectDps;
var enumBugKeys = _enumBugKeys;
var IE_PROTO = _sharedKey('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = _domCreate('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  _html.appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

var _objectCreate = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject$1(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};

var $export$6 = _export;
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export$6($export$6.S, 'Object', { create: _objectCreate });

var $Object = _core.exports.Object;
var create$3 = function create(P, D) {
  return $Object.create(P, D);
};

var create$2 = create$3;

var _objectGopd = {};

var _objectPie = {};

_objectPie.f = {}.propertyIsEnumerable;

var pIE$1 = _objectPie;
var createDesc = _propertyDesc;
var toIObject$1 = _toIobject;
var toPrimitive = _toPrimitive;
var has = _has;
var IE8_DOM_DEFINE = _ie8DomDefine;
var gOPD = Object.getOwnPropertyDescriptor;

_objectGopd.f = _descriptors ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject$1(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE$1.f.call(O, P), O[P]);
};

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject$1 = _isObject;
var anObject = _anObject;
var check = function (O, proto) {
  anObject(O);
  if (!isObject$1(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
var _setProto = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = _ctx(Function.call, _objectGopd.f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};

// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export$5 = _export;
$export$5($export$5.S, 'Object', { setPrototypeOf: _setProto.set });

var setPrototypeOf$2 = _core.exports.Object.setPrototypeOf;

var setPrototypeOf$1 = setPrototypeOf$2;

function _setPrototypeOf$4(o, p) {
  _setPrototypeOf$4 = setPrototypeOf$1 || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf$4(o, p);
}

function _inheritsLoose$3(subClass, superClass) {
  subClass.prototype = create$2(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf$4(subClass, superClass);
}

var _objectGops = {};

_objectGops.f = Object.getOwnPropertySymbols;

// 7.1.13 ToObject(argument)
var defined = _defined;
var _toObject = function (it) {
  return Object(defined(it));
};

// 19.1.2.1 Object.assign(target, source, ...)
var DESCRIPTORS$1 = _descriptors;
var getKeys$1 = _objectKeys;
var gOPS = _objectGops;
var pIE = _objectPie;
var toObject$2 = _toObject;
var IObject = _iobject;
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
var _objectAssign = !$assign || _fails(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject$2(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys$1(S).concat(getSymbols(S)) : getKeys$1(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS$1 || isEnum.call(S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;

// 19.1.3.1 Object.assign(target, source)
var $export$4 = _export;

$export$4($export$4.S + $export$4.F, 'Object', { assign: _objectAssign });

var assign$3 = _core.exports.Object.assign;

var assign$2 = assign$3;

function _extends$a() {
  _extends$a = assign$2 || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$a.apply(this, arguments);
}

function ownKeys$r(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);

    if (enumerableOnly) {
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }

    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2$1(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys$r(Object(source), true).forEach(function (key) {
        _defineProperty$3(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$r(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

/**
 * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js
 *
 * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes
 * during build.
 * @param {number} code
 */
function formatProdErrorMessage(code) {
  return "Minified Redux error #" + code + "; visit https://redux.js.org/Errors?code=" + code + " for the full message or " + 'use the non-minified dev environment for full errors. ';
}

// Inlined version of the `symbol-observable` polyfill
var $$observable = (function () {
  return typeof Symbol === 'function' && Symbol.observable || '@@observable';
})();

/**
 * These are private action types reserved by Redux.
 * For any unknown actions, you must return the current state.
 * If the current state is undefined, you must return the initial state.
 * Do not reference these action types directly in your code.
 */
var randomString = function randomString() {
  return Math.random().toString(36).substring(7).split('').join('.');
};

var ActionTypes = {
  INIT: "@@redux/INIT" + randomString(),
  REPLACE: "@@redux/REPLACE" + randomString(),
  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {
    return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();
  }
};

/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */
function isPlainObject$1(obj) {
  if (typeof obj !== 'object' || obj === null) return false;
  var proto = obj;

  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }

  return Object.getPrototypeOf(obj) === proto;
}

// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of
function miniKindOf(val) {
  if (val === void 0) return 'undefined';
  if (val === null) return 'null';
  var type = typeof val;

  switch (type) {
    case 'boolean':
    case 'string':
    case 'number':
    case 'symbol':
    case 'function':
      {
        return type;
      }
  }

  if (Array.isArray(val)) return 'array';
  if (isDate$1(val)) return 'date';
  if (isError$1(val)) return 'error';
  var constructorName = ctorName$1(val);

  switch (constructorName) {
    case 'Symbol':
    case 'Promise':
    case 'WeakMap':
    case 'WeakSet':
    case 'Map':
    case 'Set':
      return constructorName;
  } // other


  return type.slice(8, -1).toLowerCase().replace(/\s/g, '');
}

function ctorName$1(val) {
  return typeof val.constructor === 'function' ? val.constructor.name : null;
}

function isError$1(val) {
  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';
}

function isDate$1(val) {
  if (val instanceof Date) return true;
  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';
}

function kindOf$1(val) {
  var typeOfVal = typeof val;

  if (process.env.NODE_ENV !== 'production') {
    typeOfVal = miniKindOf(val);
  }

  return typeOfVal;
}

/**
 * Creates a Redux store that holds the state tree.
 * The only way to change the data in the store is to call `dispatch()` on it.
 *
 * There should only be a single store in your app. To specify how different
 * parts of the state tree respond to actions, you may combine several reducers
 * into a single reducer function by using `combineReducers`.
 *
 * @param {Function} reducer A function that returns the next state tree, given
 * the current state tree and the action to handle.
 *
 * @param {any} [preloadedState] The initial state. You may optionally specify it
 * to hydrate the state from the server in universal apps, or to restore a
 * previously serialized user session.
 * If you use `combineReducers` to produce the root reducer function, this must be
 * an object with the same shape as `combineReducers` keys.
 *
 * @param {Function} [enhancer] The store enhancer. You may optionally specify it
 * to enhance the store with third-party capabilities such as middleware,
 * time travel, persistence, etc. The only store enhancer that ships with Redux
 * is `applyMiddleware()`.
 *
 * @returns {Store} A Redux store that lets you read the state, dispatch actions
 * and subscribe to changes.
 */

function createStore$1(reducer, preloadedState, enhancer) {
  var _ref2;

  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {
    throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');
  }

  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
    enhancer = preloadedState;
    preloadedState = undefined;
  }

  if (typeof enhancer !== 'undefined') {
    if (typeof enhancer !== 'function') {
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(1) : "Expected the enhancer to be a function. Instead, received: '" + kindOf$1(enhancer) + "'");
    }

    return enhancer(createStore$1)(reducer, preloadedState);
  }

  if (typeof reducer !== 'function') {
    throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(2) : "Expected the root reducer to be a function. Instead, received: '" + kindOf$1(reducer) + "'");
  }

  var currentReducer = reducer;
  var currentState = preloadedState;
  var currentListeners = [];
  var nextListeners = currentListeners;
  var isDispatching = false;
  /**
   * This makes a shallow copy of currentListeners so we can use
   * nextListeners as a temporary list while dispatching.
   *
   * This prevents any bugs around consumers calling
   * subscribe/unsubscribe in the middle of a dispatch.
   */

  function ensureCanMutateNextListeners() {
    if (nextListeners === currentListeners) {
      nextListeners = currentListeners.slice();
    }
  }
  /**
   * Reads the state tree managed by the store.
   *
   * @returns {any} The current state tree of your application.
   */


  function getState() {
    if (isDispatching) {
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');
    }

    return currentState;
  }
  /**
   * Adds a change listener. It will be called any time an action is dispatched,
   * and some part of the state tree may potentially have changed. You may then
   * call `getState()` to read the current state tree inside the callback.
   *
   * You may call `dispatch()` from a change listener, with the following
   * caveats:
   *
   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
   * If you subscribe or unsubscribe while the listeners are being invoked, this
   * will not have any effect on the `dispatch()` that is currently in progress.
   * However, the next `dispatch()` call, whether nested or not, will use a more
   * recent snapshot of the subscription list.
   *
   * 2. The listener should not expect to see all state changes, as the state
   * might have been updated multiple times during a nested `dispatch()` before
   * the listener is called. It is, however, guaranteed that all subscribers
   * registered before the `dispatch()` started will be called with the latest
   * state by the time it exits.
   *
   * @param {Function} listener A callback to be invoked on every dispatch.
   * @returns {Function} A function to remove this change listener.
   */


  function subscribe(listener) {
    if (typeof listener !== 'function') {
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(4) : "Expected the listener to be a function. Instead, received: '" + kindOf$1(listener) + "'");
    }

    if (isDispatching) {
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');
    }

    var isSubscribed = true;
    ensureCanMutateNextListeners();
    nextListeners.push(listener);
    return function unsubscribe() {
      if (!isSubscribed) {
        return;
      }

      if (isDispatching) {
        throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');
      }

      isSubscribed = false;
      ensureCanMutateNextListeners();
      var index = nextListeners.indexOf(listener);
      nextListeners.splice(index, 1);
      currentListeners = null;
    };
  }
  /**
   * Dispatches an action. It is the only way to trigger a state change.
   *
   * The `reducer` function, used to create the store, will be called with the
   * current state tree and the given `action`. Its return value will
   * be considered the **next** state of the tree, and the change listeners
   * will be notified.
   *
   * The base implementation only supports plain object actions. If you want to
   * dispatch a Promise, an Observable, a thunk, or something else, you need to
   * wrap your store creating function into the corresponding middleware. For
   * example, see the documentation for the `redux-thunk` package. Even the
   * middleware will eventually dispatch plain object actions using this method.
   *
   * @param {Object} action A plain object representing “what changed”. It is
   * a good idea to keep actions serializable so you can record and replay user
   * sessions, or use the time travelling `redux-devtools`. An action must have
   * a `type` property which may not be `undefined`. It is a good idea to use
   * string constants for action types.
   *
   * @returns {Object} For convenience, the same action object you dispatched.
   *
   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
   * return something else (for example, a Promise you can await).
   */


  function dispatch(action) {
    if (!isPlainObject$1(action)) {
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(7) : "Actions must be plain objects. Instead, the actual type was: '" + kindOf$1(action) + "'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.");
    }

    if (typeof action.type === 'undefined') {
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(8) : 'Actions may not have an undefined "type" property. You may have misspelled an action type string constant.');
    }

    if (isDispatching) {
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');
    }

    try {
      isDispatching = true;
      currentState = currentReducer(currentState, action);
    } finally {
      isDispatching = false;
    }

    var listeners = currentListeners = nextListeners;

    for (var i = 0; i < listeners.length; i++) {
      var listener = listeners[i];
      listener();
    }

    return action;
  }
  /**
   * Replaces the reducer currently used by the store to calculate the state.
   *
   * You might need this if your app implements code splitting and you want to
   * load some of the reducers dynamically. You might also need this if you
   * implement a hot reloading mechanism for Redux.
   *
   * @param {Function} nextReducer The reducer for the store to use instead.
   * @returns {void}
   */


  function replaceReducer(nextReducer) {
    if (typeof nextReducer !== 'function') {
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(10) : "Expected the nextReducer to be a function. Instead, received: '" + kindOf$1(nextReducer));
    }

    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.
    // Any reducers that existed in both the new and old rootReducer
    // will receive the previous state. This effectively populates
    // the new state tree with any relevant data from the old one.

    dispatch({
      type: ActionTypes.REPLACE
    });
  }
  /**
   * Interoperability point for observable/reactive libraries.
   * @returns {observable} A minimal observable of state changes.
   * For more information, see the observable proposal:
   * https://github.com/tc39/proposal-observable
   */


  function observable() {
    var _ref;

    var outerSubscribe = subscribe;
    return _ref = {
      /**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */
      subscribe: function subscribe(observer) {
        if (typeof observer !== 'object' || observer === null) {
          throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(11) : "Expected the observer to be an object. Instead, received: '" + kindOf$1(observer) + "'");
        }

        function observeState() {
          if (observer.next) {
            observer.next(getState());
          }
        }

        observeState();
        var unsubscribe = outerSubscribe(observeState);
        return {
          unsubscribe: unsubscribe
        };
      }
    }, _ref[$$observable] = function () {
      return this;
    }, _ref;
  } // When a store is created, an "INIT" action is dispatched so that every
  // reducer returns their initial state. This effectively populates
  // the initial state tree.


  dispatch({
    type: ActionTypes.INIT
  });
  return _ref2 = {
    dispatch: dispatch,
    subscribe: subscribe,
    getState: getState,
    replaceReducer: replaceReducer
  }, _ref2[$$observable] = observable, _ref2;
}

/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */
function warning$7(message) {
  /* eslint-disable no-console */
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }
  /* eslint-enable no-console */


  try {
    // This error was thrown as a convenience so that if you enable
    // "break on all exceptions" in your console,
    // it would pause the execution at this line.
    throw new Error(message);
  } catch (e) {} // eslint-disable-line no-empty

}

function bindActionCreator(actionCreator, dispatch) {
  return function () {
    return dispatch(actionCreator.apply(this, arguments));
  };
}
/**
 * Turns an object whose values are action creators, into an object with the
 * same keys, but with every function wrapped into a `dispatch` call so they
 * may be invoked directly. This is just a convenience method, as you can call
 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
 *
 * For convenience, you can also pass an action creator as the first argument,
 * and get a dispatch wrapped function in return.
 *
 * @param {Function|Object} actionCreators An object whose values are action
 * creator functions. One handy way to obtain it is to use ES6 `import * as`
 * syntax. You may also pass a single function.
 *
 * @param {Function} dispatch The `dispatch` function available on your Redux
 * store.
 *
 * @returns {Function|Object} The object mimicking the original object, but with
 * every action creator wrapped into the `dispatch` call. If you passed a
 * function as `actionCreators`, the return value will also be a single
 * function.
 */


function bindActionCreators$1(actionCreators, dispatch) {
  if (typeof actionCreators === 'function') {
    return bindActionCreator(actionCreators, dispatch);
  }

  if (typeof actionCreators !== 'object' || actionCreators === null) {
    throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(16) : "bindActionCreators expected an object or a function, but instead received: '" + kindOf$1(actionCreators) + "'. " + "Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?");
  }

  var boundActionCreators = {};

  for (var key in actionCreators) {
    var actionCreator = actionCreators[key];

    if (typeof actionCreator === 'function') {
      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
    }
  }

  return boundActionCreators;
}

/**
 * Composes single-argument functions from right to left. The rightmost
 * function can take multiple arguments as it provides the signature for
 * the resulting composite function.
 *
 * @param {...Function} funcs The functions to compose.
 * @returns {Function} A function obtained by composing the argument functions
 * from right to left. For example, compose(f, g, h) is identical to doing
 * (...args) => f(g(h(...args))).
 */
function compose$1() {
  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  if (funcs.length === 0) {
    return function (arg) {
      return arg;
    };
  }

  if (funcs.length === 1) {
    return funcs[0];
  }

  return funcs.reduce(function (a, b) {
    return function () {
      return a(b.apply(void 0, arguments));
    };
  });
}

/**
 * Creates a store enhancer that applies middleware to the dispatch method
 * of the Redux store. This is handy for a variety of tasks, such as expressing
 * asynchronous actions in a concise manner, or logging every action payload.
 *
 * See `redux-thunk` package as an example of the Redux middleware.
 *
 * Because middleware is potentially asynchronous, this should be the first
 * store enhancer in the composition chain.
 *
 * Note that each middleware will be given the `dispatch` and `getState` functions
 * as named arguments.
 *
 * @param {...Function} middlewares The middleware chain to be applied.
 * @returns {Function} A store enhancer applying the middleware.
 */

function applyMiddleware() {
  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {
    middlewares[_key] = arguments[_key];
  }

  return function (createStore) {
    return function () {
      var store = createStore.apply(void 0, arguments);

      var _dispatch = function dispatch() {
        throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');
      };

      var middlewareAPI = {
        getState: store.getState,
        dispatch: function dispatch() {
          return _dispatch.apply(void 0, arguments);
        }
      };
      var chain = middlewares.map(function (middleware) {
        return middleware(middlewareAPI);
      });
      _dispatch = compose$1.apply(void 0, chain)(store.dispatch);
      return _objectSpread2$1(_objectSpread2$1({}, store), {}, {
        dispatch: _dispatch
      });
    };
  };
}

/*
 * This is a dummy function to check if the function name has been altered by minification.
 * If the function has been minified and NODE_ENV !== 'production', warn the user.
 */

function isCrushed() {}

if (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {
  warning$7('You are currently using minified code outside of NODE_ENV === "production". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');
}

var ReactReduxContext = /*#__PURE__*/React__default.createContext(null);

if (process.env.NODE_ENV !== 'production') {
  ReactReduxContext.displayName = 'ReactRedux';
}

// Default to a dummy "batch" implementation that just runs the callback
function defaultNoopBatch(callback) {
  callback();
}

var batch = defaultNoopBatch; // Allow injecting another batching function later

var setBatch = function setBatch(newBatch) {
  return batch = newBatch;
}; // Supply a getter just to skip dealing with ESM bindings

var getBatch = function getBatch() {
  return batch;
};

// well as nesting subscriptions of descendant components, so that we can ensure the
// ancestor components re-render before descendants

var nullListeners = {
  notify: function notify() {}
};

function createListenerCollection() {
  var batch = getBatch();
  var first = null;
  var last = null;
  return {
    clear: function clear() {
      first = null;
      last = null;
    },
    notify: function notify() {
      batch(function () {
        var listener = first;

        while (listener) {
          listener.callback();
          listener = listener.next;
        }
      });
    },
    get: function get() {
      var listeners = [];
      var listener = first;

      while (listener) {
        listeners.push(listener);
        listener = listener.next;
      }

      return listeners;
    },
    subscribe: function subscribe(callback) {
      var isSubscribed = true;
      var listener = last = {
        callback: callback,
        next: null,
        prev: last
      };

      if (listener.prev) {
        listener.prev.next = listener;
      } else {
        first = listener;
      }

      return function unsubscribe() {
        if (!isSubscribed || first === null) return;
        isSubscribed = false;

        if (listener.next) {
          listener.next.prev = listener.prev;
        } else {
          last = listener.prev;
        }

        if (listener.prev) {
          listener.prev.next = listener.next;
        } else {
          first = listener.next;
        }
      };
    }
  };
}

var Subscription = /*#__PURE__*/function () {
  function Subscription(store, parentSub) {
    this.store = store;
    this.parentSub = parentSub;
    this.unsubscribe = null;
    this.listeners = nullListeners;
    this.handleChangeWrapper = this.handleChangeWrapper.bind(this);
  }

  var _proto = Subscription.prototype;

  _proto.addNestedSub = function addNestedSub(listener) {
    this.trySubscribe();
    return this.listeners.subscribe(listener);
  };

  _proto.notifyNestedSubs = function notifyNestedSubs() {
    this.listeners.notify();
  };

  _proto.handleChangeWrapper = function handleChangeWrapper() {
    if (this.onStateChange) {
      this.onStateChange();
    }
  };

  _proto.isSubscribed = function isSubscribed() {
    return Boolean(this.unsubscribe);
  };

  _proto.trySubscribe = function trySubscribe() {
    if (!this.unsubscribe) {
      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.handleChangeWrapper) : this.store.subscribe(this.handleChangeWrapper);
      this.listeners = createListenerCollection();
    }
  };

  _proto.tryUnsubscribe = function tryUnsubscribe() {
    if (this.unsubscribe) {
      this.unsubscribe();
      this.unsubscribe = null;
      this.listeners.clear();
      this.listeners = nullListeners;
    }
  };

  return Subscription;
}();

// To get around it, we can conditionally useEffect on the server (no-op) and
// useLayoutEffect in the browser. We need useLayoutEffect to ensure the store
// subscription callback always has the selector from the latest render commit
// available, otherwise a store update may happen between render and the effect,
// which may cause missed updates; we also must ensure the store subscription
// is created synchronously, otherwise a store update may occur before the
// subscription is created and an inconsistent state may be observed

var useIsomorphicLayoutEffect$2 = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? useLayoutEffect$1 : useEffect;

function Provider$4(_ref) {
  var store = _ref.store,
      context = _ref.context,
      children = _ref.children;
  var contextValue = useMemo$1(function () {
    var subscription = new Subscription(store);
    subscription.onStateChange = subscription.notifyNestedSubs;
    return {
      store: store,
      subscription: subscription
    };
  }, [store]);
  var previousState = useMemo$1(function () {
    return store.getState();
  }, [store]);
  useIsomorphicLayoutEffect$2(function () {
    var subscription = contextValue.subscription;
    subscription.trySubscribe();

    if (previousState !== store.getState()) {
      subscription.notifyNestedSubs();
    }

    return function () {
      subscription.tryUnsubscribe();
      subscription.onStateChange = null;
    };
  }, [contextValue, previousState]);
  var Context = context || ReactReduxContext;
  return /*#__PURE__*/React__default.createElement(Context.Provider, {
    value: contextValue
  }, children);
}

if (process.env.NODE_ENV !== 'production') {
  Provider$4.propTypes = {
    store: PropTypes$3.shape({
      subscribe: PropTypes$3.func.isRequired,
      dispatch: PropTypes$3.func.isRequired,
      getState: PropTypes$3.func.isRequired
    }),
    context: PropTypes$3.object,
    children: PropTypes$3.any
  };
}

var reactIs = reactIs$1.exports;

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
var REACT_STATICS = {
  childContextTypes: true,
  contextType: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDefaultProps: true,
  getDerivedStateFromError: true,
  getDerivedStateFromProps: true,
  mixins: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var FORWARD_REF_STATICS = {
  '$$typeof': true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  '$$typeof': true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;

function getStatics(component) {
  // React v16.11 and below
  if (reactIs.isMemo(component)) {
    return MEMO_STATICS;
  } // React v16.12 and above


  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
}

var defineProperty$2 = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols$1 = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;
var getPrototypeOf$1 = Object.getPrototypeOf;
var objectPrototype = Object.prototype;
function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== 'string') {
    // don't hoist over string (html) components
    if (objectPrototype) {
      var inheritedComponent = getPrototypeOf$1(sourceComponent);

      if (inheritedComponent && inheritedComponent !== objectPrototype) {
        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
      }
    }

    var keys = getOwnPropertyNames(sourceComponent);

    if (getOwnPropertySymbols$1) {
      keys = keys.concat(getOwnPropertySymbols$1(sourceComponent));
    }

    var targetStatics = getStatics(targetComponent);
    var sourceStatics = getStatics(sourceComponent);

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
        var descriptor = getOwnPropertyDescriptor$1(sourceComponent, key);

        try {
          // Avoid failures from read-only properties
          defineProperty$2(targetComponent, key, descriptor);
        } catch (e) {}
      }
    }
  }

  return targetComponent;
}

var hoistNonReactStatics_cjs = hoistNonReactStatics;

var EMPTY_ARRAY = [];
var NO_SUBSCRIPTION_ARRAY = [null, null];

var stringifyComponent = function stringifyComponent(Comp) {
  try {
    return JSON.stringify(Comp);
  } catch (err) {
    return String(Comp);
  }
};

function storeStateUpdatesReducer(state, action) {
  var updateCount = state[1];
  return [action.payload, updateCount + 1];
}

function useIsomorphicLayoutEffectWithArgs(effectFunc, effectArgs, dependencies) {
  useIsomorphicLayoutEffect$2(function () {
    return effectFunc.apply(void 0, effectArgs);
  }, dependencies);
}

function captureWrapperProps(lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, actualChildProps, childPropsFromStoreUpdate, notifyNestedSubs) {
  // We want to capture the wrapper props and child props we used for later comparisons
  lastWrapperProps.current = wrapperProps;
  lastChildProps.current = actualChildProps;
  renderIsScheduled.current = false; // If the render was from a store update, clear out that reference and cascade the subscriber update

  if (childPropsFromStoreUpdate.current) {
    childPropsFromStoreUpdate.current = null;
    notifyNestedSubs();
  }
}

function subscribeUpdates(shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, childPropsFromStoreUpdate, notifyNestedSubs, forceComponentUpdateDispatch) {
  // If we're not subscribed to the store, nothing to do here
  if (!shouldHandleStateChanges) return; // Capture values for checking if and when this component unmounts

  var didUnsubscribe = false;
  var lastThrownError = null; // We'll run this callback every time a store subscription update propagates to this component

  var checkForUpdates = function checkForUpdates() {
    if (didUnsubscribe) {
      // Don't run stale listeners.
      // Redux doesn't guarantee unsubscriptions happen until next dispatch.
      return;
    }

    var latestStoreState = store.getState();
    var newChildProps, error;

    try {
      // Actually run the selector with the most recent store state and wrapper props
      // to determine what the child props should be
      newChildProps = childPropsSelector(latestStoreState, lastWrapperProps.current);
    } catch (e) {
      error = e;
      lastThrownError = e;
    }

    if (!error) {
      lastThrownError = null;
    } // If the child props haven't changed, nothing to do here - cascade the subscription update


    if (newChildProps === lastChildProps.current) {
      if (!renderIsScheduled.current) {
        notifyNestedSubs();
      }
    } else {
      // Save references to the new child props.  Note that we track the "child props from store update"
      // as a ref instead of a useState/useReducer because we need a way to determine if that value has
      // been processed.  If this went into useState/useReducer, we couldn't clear out the value without
      // forcing another re-render, which we don't want.
      lastChildProps.current = newChildProps;
      childPropsFromStoreUpdate.current = newChildProps;
      renderIsScheduled.current = true; // If the child props _did_ change (or we caught an error), this wrapper component needs to re-render

      forceComponentUpdateDispatch({
        type: 'STORE_UPDATED',
        payload: {
          error: error
        }
      });
    }
  }; // Actually subscribe to the nearest connected ancestor (or store)


  subscription.onStateChange = checkForUpdates;
  subscription.trySubscribe(); // Pull data from the store after first render in case the store has
  // changed since we began.

  checkForUpdates();

  var unsubscribeWrapper = function unsubscribeWrapper() {
    didUnsubscribe = true;
    subscription.tryUnsubscribe();
    subscription.onStateChange = null;

    if (lastThrownError) {
      // It's possible that we caught an error due to a bad mapState function, but the
      // parent re-rendered without this component and we're about to unmount.
      // This shouldn't happen as long as we do top-down subscriptions correctly, but
      // if we ever do those wrong, this throw will surface the error in our tests.
      // In that case, throw the error from here so it doesn't get lost.
      throw lastThrownError;
    }
  };

  return unsubscribeWrapper;
}

var initStateUpdates = function initStateUpdates() {
  return [null, 0];
};

function connectAdvanced(
/*
  selectorFactory is a func that is responsible for returning the selector function used to
  compute new props from state, props, and dispatch. For example:
      export default connectAdvanced((dispatch, options) => (state, props) => ({
      thing: state.things[props.thingId],
      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),
    }))(YourComponent)
    Access to dispatch is provided to the factory so selectorFactories can bind actionCreators
  outside of their selector as an optimization. Options passed to connectAdvanced are passed to
  the selectorFactory, along with displayName and WrappedComponent, as the second argument.
    Note that selectorFactory is responsible for all caching/memoization of inbound and outbound
  props. Do not use connectAdvanced directly without memoizing results between calls to your
  selector, otherwise the Connect component will re-render on every state or props change.
*/
selectorFactory, // options object:
_ref) {
  if (_ref === void 0) {
    _ref = {};
  }

  var _ref2 = _ref,
      _ref2$getDisplayName = _ref2.getDisplayName,
      getDisplayName = _ref2$getDisplayName === void 0 ? function (name) {
    return "ConnectAdvanced(" + name + ")";
  } : _ref2$getDisplayName,
      _ref2$methodName = _ref2.methodName,
      methodName = _ref2$methodName === void 0 ? 'connectAdvanced' : _ref2$methodName,
      _ref2$renderCountProp = _ref2.renderCountProp,
      renderCountProp = _ref2$renderCountProp === void 0 ? undefined : _ref2$renderCountProp,
      _ref2$shouldHandleSta = _ref2.shouldHandleStateChanges,
      shouldHandleStateChanges = _ref2$shouldHandleSta === void 0 ? true : _ref2$shouldHandleSta,
      _ref2$storeKey = _ref2.storeKey,
      storeKey = _ref2$storeKey === void 0 ? 'store' : _ref2$storeKey,
      _ref2$withRef = _ref2.withRef,
      withRef = _ref2$withRef === void 0 ? false : _ref2$withRef,
      _ref2$forwardRef = _ref2.forwardRef,
      forwardRef = _ref2$forwardRef === void 0 ? false : _ref2$forwardRef,
      _ref2$context = _ref2.context,
      context = _ref2$context === void 0 ? ReactReduxContext : _ref2$context,
      connectOptions = _objectWithoutPropertiesLoose$4(_ref2, ["getDisplayName", "methodName", "renderCountProp", "shouldHandleStateChanges", "storeKey", "withRef", "forwardRef", "context"]);

  if (process.env.NODE_ENV !== 'production') {
    if (renderCountProp !== undefined) {
      throw new Error("renderCountProp is removed. render counting is built into the latest React Dev Tools profiling extension");
    }

    if (withRef) {
      throw new Error('withRef is removed. To access the wrapped instance, use a ref on the connected component');
    }

    var customStoreWarningMessage = 'To use a custom Redux store for specific components, create a custom React context with ' + "React.createContext(), and pass the context object to React Redux's Provider and specific components" + ' like: <Provider context={MyContext}><ConnectedComponent context={MyContext} /></Provider>. ' + 'You may also pass a {context : MyContext} option to connect';

    if (storeKey !== 'store') {
      throw new Error('storeKey has been removed and does not do anything. ' + customStoreWarningMessage);
    }
  }

  var Context = context;
  return function wrapWithConnect(WrappedComponent) {
    if (process.env.NODE_ENV !== 'production' && !reactIs$1.exports.isValidElementType(WrappedComponent)) {
      throw new Error("You must pass a component to the function returned by " + (methodName + ". Instead received " + stringifyComponent(WrappedComponent)));
    }

    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';
    var displayName = getDisplayName(wrappedComponentName);

    var selectorFactoryOptions = _extends$d({}, connectOptions, {
      getDisplayName: getDisplayName,
      methodName: methodName,
      renderCountProp: renderCountProp,
      shouldHandleStateChanges: shouldHandleStateChanges,
      storeKey: storeKey,
      displayName: displayName,
      wrappedComponentName: wrappedComponentName,
      WrappedComponent: WrappedComponent
    });

    var pure = connectOptions.pure;

    function createChildSelector(store) {
      return selectorFactory(store.dispatch, selectorFactoryOptions);
    } // If we aren't running in "pure" mode, we don't want to memoize values.
    // To avoid conditionally calling hooks, we fall back to a tiny wrapper
    // that just executes the given callback immediately.


    var usePureOnlyMemo = pure ? useMemo$1 : function (callback) {
      return callback();
    };

    function ConnectFunction(props) {
      var _useMemo = useMemo$1(function () {
        // Distinguish between actual "data" props that were passed to the wrapper component,
        // and values needed to control behavior (forwarded refs, alternate context instances).
        // To maintain the wrapperProps object reference, memoize this destructuring.
        var reactReduxForwardedRef = props.reactReduxForwardedRef,
            wrapperProps = _objectWithoutPropertiesLoose$4(props, ["reactReduxForwardedRef"]);

        return [props.context, reactReduxForwardedRef, wrapperProps];
      }, [props]),
          propsContext = _useMemo[0],
          reactReduxForwardedRef = _useMemo[1],
          wrapperProps = _useMemo[2];

      var ContextToUse = useMemo$1(function () {
        // Users may optionally pass in a custom context instance to use instead of our ReactReduxContext.
        // Memoize the check that determines which context instance we should use.
        return propsContext && propsContext.Consumer && reactIs$1.exports.isContextConsumer( /*#__PURE__*/React__default.createElement(propsContext.Consumer, null)) ? propsContext : Context;
      }, [propsContext, Context]); // Retrieve the store and ancestor subscription via context, if available

      var contextValue = useContext(ContextToUse); // The store _must_ exist as either a prop or in context.
      // We'll check to see if it _looks_ like a Redux store first.
      // This allows us to pass through a `store` prop that is just a plain value.

      var didStoreComeFromProps = Boolean(props.store) && Boolean(props.store.getState) && Boolean(props.store.dispatch);
      var didStoreComeFromContext = Boolean(contextValue) && Boolean(contextValue.store);

      if (process.env.NODE_ENV !== 'production' && !didStoreComeFromProps && !didStoreComeFromContext) {
        throw new Error("Could not find \"store\" in the context of " + ("\"" + displayName + "\". Either wrap the root component in a <Provider>, ") + "or pass a custom React context provider to <Provider> and the corresponding " + ("React context consumer to " + displayName + " in connect options."));
      } // Based on the previous check, one of these must be true


      var store = didStoreComeFromProps ? props.store : contextValue.store;
      var childPropsSelector = useMemo$1(function () {
        // The child props selector needs the store reference as an input.
        // Re-create this selector whenever the store changes.
        return createChildSelector(store);
      }, [store]);

      var _useMemo2 = useMemo$1(function () {
        if (!shouldHandleStateChanges) return NO_SUBSCRIPTION_ARRAY; // This Subscription's source should match where store came from: props vs. context. A component
        // connected to the store via props shouldn't use subscription from context, or vice versa.

        var subscription = new Subscription(store, didStoreComeFromProps ? null : contextValue.subscription); // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in
        // the middle of the notification loop, where `subscription` will then be null. This can
        // probably be avoided if Subscription's listeners logic is changed to not call listeners
        // that have been unsubscribed in the  middle of the notification loop.

        var notifyNestedSubs = subscription.notifyNestedSubs.bind(subscription);
        return [subscription, notifyNestedSubs];
      }, [store, didStoreComeFromProps, contextValue]),
          subscription = _useMemo2[0],
          notifyNestedSubs = _useMemo2[1]; // Determine what {store, subscription} value should be put into nested context, if necessary,
      // and memoize that value to avoid unnecessary context updates.


      var overriddenContextValue = useMemo$1(function () {
        if (didStoreComeFromProps) {
          // This component is directly subscribed to a store from props.
          // We don't want descendants reading from this store - pass down whatever
          // the existing context value is from the nearest connected ancestor.
          return contextValue;
        } // Otherwise, put this component's subscription instance into context, so that
        // connected descendants won't update until after this component is done


        return _extends$d({}, contextValue, {
          subscription: subscription
        });
      }, [didStoreComeFromProps, contextValue, subscription]); // We need to force this wrapper component to re-render whenever a Redux store update
      // causes a change to the calculated child component props (or we caught an error in mapState)

      var _useReducer = useReducer(storeStateUpdatesReducer, EMPTY_ARRAY, initStateUpdates),
          _useReducer$ = _useReducer[0],
          previousStateUpdateResult = _useReducer$[0],
          forceComponentUpdateDispatch = _useReducer[1]; // Propagate any mapState/mapDispatch errors upwards


      if (previousStateUpdateResult && previousStateUpdateResult.error) {
        throw previousStateUpdateResult.error;
      } // Set up refs to coordinate values between the subscription effect and the render logic


      var lastChildProps = useRef();
      var lastWrapperProps = useRef(wrapperProps);
      var childPropsFromStoreUpdate = useRef();
      var renderIsScheduled = useRef(false);
      var actualChildProps = usePureOnlyMemo(function () {
        // Tricky logic here:
        // - This render may have been triggered by a Redux store update that produced new child props
        // - However, we may have gotten new wrapper props after that
        // If we have new child props, and the same wrapper props, we know we should use the new child props as-is.
        // But, if we have new wrapper props, those might change the child props, so we have to recalculate things.
        // So, we'll use the child props from store update only if the wrapper props are the same as last time.
        if (childPropsFromStoreUpdate.current && wrapperProps === lastWrapperProps.current) {
          return childPropsFromStoreUpdate.current;
        } // TODO We're reading the store directly in render() here. Bad idea?
        // This will likely cause Bad Things (TM) to happen in Concurrent Mode.
        // Note that we do this because on renders _not_ caused by store updates, we need the latest store state
        // to determine what the child props should be.


        return childPropsSelector(store.getState(), wrapperProps);
      }, [store, previousStateUpdateResult, wrapperProps]); // We need this to execute synchronously every time we re-render. However, React warns
      // about useLayoutEffect in SSR, so we try to detect environment and fall back to
      // just useEffect instead to avoid the warning, since neither will run anyway.

      useIsomorphicLayoutEffectWithArgs(captureWrapperProps, [lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, actualChildProps, childPropsFromStoreUpdate, notifyNestedSubs]); // Our re-subscribe logic only runs when the store/subscription setup changes

      useIsomorphicLayoutEffectWithArgs(subscribeUpdates, [shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, childPropsFromStoreUpdate, notifyNestedSubs, forceComponentUpdateDispatch], [store, subscription, childPropsSelector]); // Now that all that's done, we can finally try to actually render the child component.
      // We memoize the elements for the rendered child component as an optimization.

      var renderedWrappedComponent = useMemo$1(function () {
        return /*#__PURE__*/React__default.createElement(WrappedComponent, _extends$d({}, actualChildProps, {
          ref: reactReduxForwardedRef
        }));
      }, [reactReduxForwardedRef, WrappedComponent, actualChildProps]); // If React sees the exact same element reference as last time, it bails out of re-rendering
      // that child, same as if it was wrapped in React.memo() or returned false from shouldComponentUpdate.

      var renderedChild = useMemo$1(function () {
        if (shouldHandleStateChanges) {
          // If this component is subscribed to store updates, we need to pass its own
          // subscription instance down to our descendants. That means rendering the same
          // Context instance, and putting a different value into the context.
          return /*#__PURE__*/React__default.createElement(ContextToUse.Provider, {
            value: overriddenContextValue
          }, renderedWrappedComponent);
        }

        return renderedWrappedComponent;
      }, [ContextToUse, renderedWrappedComponent, overriddenContextValue]);
      return renderedChild;
    } // If we're in "pure" mode, ensure our wrapper component only re-renders when incoming props have changed.


    var Connect = pure ? React__default.memo(ConnectFunction) : ConnectFunction;
    Connect.WrappedComponent = WrappedComponent;
    Connect.displayName = ConnectFunction.displayName = displayName;

    if (forwardRef) {
      var forwarded = React__default.forwardRef(function forwardConnectRef(props, ref) {
        return /*#__PURE__*/React__default.createElement(Connect, _extends$d({}, props, {
          reactReduxForwardedRef: ref
        }));
      });
      forwarded.displayName = displayName;
      forwarded.WrappedComponent = WrappedComponent;
      return hoistNonReactStatics_cjs(forwarded, WrappedComponent);
    }

    return hoistNonReactStatics_cjs(Connect, WrappedComponent);
  };
}

function is(x, y) {
  if (x === y) {
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function shallowEqual$1(objA, objB) {
  if (is(objA, objB)) return true;

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);
  if (keysA.length !== keysB.length) return false;

  for (var i = 0; i < keysA.length; i++) {
    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

function bindActionCreators(actionCreators, dispatch) {
  var boundActionCreators = {};

  var _loop = function _loop(key) {
    var actionCreator = actionCreators[key];

    if (typeof actionCreator === 'function') {
      boundActionCreators[key] = function () {
        return dispatch(actionCreator.apply(void 0, arguments));
      };
    }
  };

  for (var key in actionCreators) {
    _loop(key);
  }

  return boundActionCreators;
}

/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */
function isPlainObject(obj) {
  if (typeof obj !== 'object' || obj === null) return false;
  var proto = Object.getPrototypeOf(obj);
  if (proto === null) return true;
  var baseProto = proto;

  while (Object.getPrototypeOf(baseProto) !== null) {
    baseProto = Object.getPrototypeOf(baseProto);
  }

  return proto === baseProto;
}

/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */
function warning$6(message) {
  /* eslint-disable no-console */
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }
  /* eslint-enable no-console */


  try {
    // This error was thrown as a convenience so that if you enable
    // "break on all exceptions" in your console,
    // it would pause the execution at this line.
    throw new Error(message);
    /* eslint-disable no-empty */
  } catch (e) {}
  /* eslint-enable no-empty */

}

function verifyPlainObject(value, displayName, methodName) {
  if (!isPlainObject(value)) {
    warning$6(methodName + "() in " + displayName + " must return a plain object. Instead received " + value + ".");
  }
}

function wrapMapToPropsConstant(getConstant) {
  return function initConstantSelector(dispatch, options) {
    var constant = getConstant(dispatch, options);

    function constantSelector() {
      return constant;
    }

    constantSelector.dependsOnOwnProps = false;
    return constantSelector;
  };
} // dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args
// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine
// whether mapToProps needs to be invoked when props have changed.
//
// A length of one signals that mapToProps does not depend on props from the parent component.
// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and
// therefore not reporting its length accurately..

function getDependsOnOwnProps(mapToProps) {
  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
} // Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,
// this function wraps mapToProps in a proxy function which does several things:
//
//  * Detects whether the mapToProps function being called depends on props, which
//    is used by selectorFactory to decide if it should reinvoke on props changes.
//
//  * On first call, handles mapToProps if returns another function, and treats that
//    new function as the true mapToProps for subsequent calls.
//
//  * On first call, verifies the first result is a plain object, in order to warn
//    the developer that their mapToProps function is not returning a valid result.
//

function wrapMapToPropsFunc(mapToProps, methodName) {
  return function initProxySelector(dispatch, _ref) {
    var displayName = _ref.displayName;

    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
    }; // allow detectFactoryAndVerify to get ownProps


    proxy.dependsOnOwnProps = true;

    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
      proxy.mapToProps = mapToProps;
      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
      var props = proxy(stateOrDispatch, ownProps);

      if (typeof props === 'function') {
        proxy.mapToProps = props;
        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
        props = proxy(stateOrDispatch, ownProps);
      }

      if (process.env.NODE_ENV !== 'production') verifyPlainObject(props, displayName, methodName);
      return props;
    };

    return proxy;
  };
}

function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
  return typeof mapDispatchToProps === 'function' ? wrapMapToPropsFunc(mapDispatchToProps, 'mapDispatchToProps') : undefined;
}
function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
  return !mapDispatchToProps ? wrapMapToPropsConstant(function (dispatch) {
    return {
      dispatch: dispatch
    };
  }) : undefined;
}
function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? wrapMapToPropsConstant(function (dispatch) {
    return bindActionCreators(mapDispatchToProps, dispatch);
  }) : undefined;
}
var defaultMapDispatchToPropsFactories = [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];

function whenMapStateToPropsIsFunction(mapStateToProps) {
  return typeof mapStateToProps === 'function' ? wrapMapToPropsFunc(mapStateToProps, 'mapStateToProps') : undefined;
}
function whenMapStateToPropsIsMissing(mapStateToProps) {
  return !mapStateToProps ? wrapMapToPropsConstant(function () {
    return {};
  }) : undefined;
}
var defaultMapStateToPropsFactories = [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];

function defaultMergeProps(stateProps, dispatchProps, ownProps) {
  return _extends$d({}, ownProps, stateProps, dispatchProps);
}
function wrapMergePropsFunc(mergeProps) {
  return function initMergePropsProxy(dispatch, _ref) {
    var displayName = _ref.displayName,
        pure = _ref.pure,
        areMergedPropsEqual = _ref.areMergedPropsEqual;
    var hasRunOnce = false;
    var mergedProps;
    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);

      if (hasRunOnce) {
        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
      } else {
        hasRunOnce = true;
        mergedProps = nextMergedProps;
        if (process.env.NODE_ENV !== 'production') verifyPlainObject(mergedProps, displayName, 'mergeProps');
      }

      return mergedProps;
    };
  };
}
function whenMergePropsIsFunction(mergeProps) {
  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;
}
function whenMergePropsIsOmitted(mergeProps) {
  return !mergeProps ? function () {
    return defaultMergeProps;
  } : undefined;
}
var defaultMergePropsFactories = [whenMergePropsIsFunction, whenMergePropsIsOmitted];

function verify(selector, methodName, displayName) {
  if (!selector) {
    throw new Error("Unexpected value for " + methodName + " in " + displayName + ".");
  } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {
    if (!Object.prototype.hasOwnProperty.call(selector, 'dependsOnOwnProps')) {
      warning$6("The selector for " + methodName + " of " + displayName + " did not specify a value for dependsOnOwnProps.");
    }
  }
}

function verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {
  verify(mapStateToProps, 'mapStateToProps', displayName);
  verify(mapDispatchToProps, 'mapDispatchToProps', displayName);
  verify(mergeProps, 'mergeProps', displayName);
}

function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {
  return function impureFinalPropsSelector(state, ownProps) {
    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);
  };
}
function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
  var areStatesEqual = _ref.areStatesEqual,
      areOwnPropsEqual = _ref.areOwnPropsEqual,
      areStatePropsEqual = _ref.areStatePropsEqual;
  var hasRunAtLeastOnce = false;
  var state;
  var ownProps;
  var stateProps;
  var dispatchProps;
  var mergedProps;

  function handleFirstCall(firstState, firstOwnProps) {
    state = firstState;
    ownProps = firstOwnProps;
    stateProps = mapStateToProps(state, ownProps);
    dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    hasRunAtLeastOnce = true;
    return mergedProps;
  }

  function handleNewPropsAndNewState() {
    stateProps = mapStateToProps(state, ownProps);
    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleNewProps() {
    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);
    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleNewState() {
    var nextStateProps = mapStateToProps(state, ownProps);
    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
    stateProps = nextStateProps;
    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleSubsequentCalls(nextState, nextOwnProps) {
    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
    var stateChanged = !areStatesEqual(nextState, state);
    state = nextState;
    ownProps = nextOwnProps;
    if (propsChanged && stateChanged) return handleNewPropsAndNewState();
    if (propsChanged) return handleNewProps();
    if (stateChanged) return handleNewState();
    return mergedProps;
  }

  return function pureFinalPropsSelector(nextState, nextOwnProps) {
    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
  };
} // TODO: Add more comments
// If pure is true, the selector returned by selectorFactory will memoize its results,
// allowing connectAdvanced's shouldComponentUpdate to return false if final
// props have not changed. If false, the selector will always return a new
// object and shouldComponentUpdate will always return true.

function finalPropsSelectorFactory(dispatch, _ref2) {
  var initMapStateToProps = _ref2.initMapStateToProps,
      initMapDispatchToProps = _ref2.initMapDispatchToProps,
      initMergeProps = _ref2.initMergeProps,
      options = _objectWithoutPropertiesLoose$4(_ref2, ["initMapStateToProps", "initMapDispatchToProps", "initMergeProps"]);

  var mapStateToProps = initMapStateToProps(dispatch, options);
  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
  var mergeProps = initMergeProps(dispatch, options);

  if (process.env.NODE_ENV !== 'production') {
    verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);
  }

  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;
  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
}

/*
  connect is a facade over connectAdvanced. It turns its args into a compatible
  selectorFactory, which has the signature:

    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps
  
  connect passes its args to connectAdvanced as options, which will in turn pass them to
  selectorFactory each time a Connect component instance is instantiated or hot reloaded.

  selectorFactory returns a final props selector from its mapStateToProps,
  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,
  mergePropsFactories, and pure args.

  The resulting final props selector is called by the Connect component instance whenever
  it receives new props or store state.
 */

function match(arg, factories, name) {
  for (var i = factories.length - 1; i >= 0; i--) {
    var result = factories[i](arg);
    if (result) return result;
  }

  return function (dispatch, options) {
    throw new Error("Invalid value of type " + typeof arg + " for " + name + " argument when connecting component " + options.wrappedComponentName + ".");
  };
}

function strictEqual(a, b) {
  return a === b;
} // createConnect with default args builds the 'official' connect behavior. Calling it with
// different options opens up some testing and extensibility scenarios


function createConnect(_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$connectHOC = _ref.connectHOC,
      connectHOC = _ref$connectHOC === void 0 ? connectAdvanced : _ref$connectHOC,
      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,
      mapStateToPropsFactories = _ref$mapStateToPropsF === void 0 ? defaultMapStateToPropsFactories : _ref$mapStateToPropsF,
      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,
      mapDispatchToPropsFactories = _ref$mapDispatchToPro === void 0 ? defaultMapDispatchToPropsFactories : _ref$mapDispatchToPro,
      _ref$mergePropsFactor = _ref.mergePropsFactories,
      mergePropsFactories = _ref$mergePropsFactor === void 0 ? defaultMergePropsFactories : _ref$mergePropsFactor,
      _ref$selectorFactory = _ref.selectorFactory,
      selectorFactory = _ref$selectorFactory === void 0 ? finalPropsSelectorFactory : _ref$selectorFactory;

  return function connect(mapStateToProps, mapDispatchToProps, mergeProps, _ref2) {
    if (_ref2 === void 0) {
      _ref2 = {};
    }

    var _ref3 = _ref2,
        _ref3$pure = _ref3.pure,
        pure = _ref3$pure === void 0 ? true : _ref3$pure,
        _ref3$areStatesEqual = _ref3.areStatesEqual,
        areStatesEqual = _ref3$areStatesEqual === void 0 ? strictEqual : _ref3$areStatesEqual,
        _ref3$areOwnPropsEqua = _ref3.areOwnPropsEqual,
        areOwnPropsEqual = _ref3$areOwnPropsEqua === void 0 ? shallowEqual$1 : _ref3$areOwnPropsEqua,
        _ref3$areStatePropsEq = _ref3.areStatePropsEqual,
        areStatePropsEqual = _ref3$areStatePropsEq === void 0 ? shallowEqual$1 : _ref3$areStatePropsEq,
        _ref3$areMergedPropsE = _ref3.areMergedPropsEqual,
        areMergedPropsEqual = _ref3$areMergedPropsE === void 0 ? shallowEqual$1 : _ref3$areMergedPropsE,
        extraOptions = _objectWithoutPropertiesLoose$4(_ref3, ["pure", "areStatesEqual", "areOwnPropsEqual", "areStatePropsEqual", "areMergedPropsEqual"]);

    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');
    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');
    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');
    return connectHOC(selectorFactory, _extends$d({
      // used in error messages
      methodName: 'connect',
      // used to compute Connect's displayName from the wrapped component's displayName.
      getDisplayName: function getDisplayName(name) {
        return "Connect(" + name + ")";
      },
      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes
      shouldHandleStateChanges: Boolean(mapStateToProps),
      // passed through to selectorFactory
      initMapStateToProps: initMapStateToProps,
      initMapDispatchToProps: initMapDispatchToProps,
      initMergeProps: initMergeProps,
      pure: pure,
      areStatesEqual: areStatesEqual,
      areOwnPropsEqual: areOwnPropsEqual,
      areStatePropsEqual: areStatePropsEqual,
      areMergedPropsEqual: areMergedPropsEqual
    }, extraOptions));
  };
}
var connect = /*#__PURE__*/createConnect();

setBatch(reactDom.exports.unstable_batchedUpdates);

var isProduction$2 = process.env.NODE_ENV === 'production';
var prefix$4 = 'Invariant failed';
function invariant$4(condition, message) {
    if (condition) {
        return;
    }
    if (isProduction$2) {
        throw new Error(prefix$4);
    }
    throw new Error(prefix$4 + ": " + (message || ''));
}

var getRect = function getRect(_ref) {
  var top = _ref.top,
      right = _ref.right,
      bottom = _ref.bottom,
      left = _ref.left;
  var width = right - left;
  var height = bottom - top;
  var rect = {
    top: top,
    right: right,
    bottom: bottom,
    left: left,
    width: width,
    height: height,
    x: left,
    y: top,
    center: {
      x: (right + left) / 2,
      y: (bottom + top) / 2
    }
  };
  return rect;
};
var expand = function expand(target, expandBy) {
  return {
    top: target.top - expandBy.top,
    left: target.left - expandBy.left,
    bottom: target.bottom + expandBy.bottom,
    right: target.right + expandBy.right
  };
};
var shrink = function shrink(target, shrinkBy) {
  return {
    top: target.top + shrinkBy.top,
    left: target.left + shrinkBy.left,
    bottom: target.bottom - shrinkBy.bottom,
    right: target.right - shrinkBy.right
  };
};

var shift$1 = function shift(target, shiftBy) {
  return {
    top: target.top + shiftBy.y,
    left: target.left + shiftBy.x,
    bottom: target.bottom + shiftBy.y,
    right: target.right + shiftBy.x
  };
};

var noSpacing$1 = {
  top: 0,
  right: 0,
  bottom: 0,
  left: 0
};
var createBox = function createBox(_ref2) {
  var borderBox = _ref2.borderBox,
      _ref2$margin = _ref2.margin,
      margin = _ref2$margin === void 0 ? noSpacing$1 : _ref2$margin,
      _ref2$border = _ref2.border,
      border = _ref2$border === void 0 ? noSpacing$1 : _ref2$border,
      _ref2$padding = _ref2.padding,
      padding = _ref2$padding === void 0 ? noSpacing$1 : _ref2$padding;
  var marginBox = getRect(expand(borderBox, margin));
  var paddingBox = getRect(shrink(borderBox, border));
  var contentBox = getRect(shrink(paddingBox, padding));
  return {
    marginBox: marginBox,
    borderBox: getRect(borderBox),
    paddingBox: paddingBox,
    contentBox: contentBox,
    margin: margin,
    border: border,
    padding: padding
  };
};

var parse$1 = function parse(raw) {
  var value = raw.slice(0, -2);
  var suffix = raw.slice(-2);

  if (suffix !== 'px') {
    return 0;
  }

  var result = Number(value);
  !!isNaN(result) ? process.env.NODE_ENV !== "production" ? invariant$4(false, "Could not parse value [raw: " + raw + ", without suffix: " + value + "]") : invariant$4(false) : void 0;
  return result;
};

var getWindowScroll$2 = function getWindowScroll() {
  return {
    x: window.pageXOffset,
    y: window.pageYOffset
  };
};

var offset$3 = function offset(original, change) {
  var borderBox = original.borderBox,
      border = original.border,
      margin = original.margin,
      padding = original.padding;
  var shifted = shift$1(borderBox, change);
  return createBox({
    borderBox: shifted,
    border: border,
    margin: margin,
    padding: padding
  });
};
var withScroll = function withScroll(original, scroll) {
  if (scroll === void 0) {
    scroll = getWindowScroll$2();
  }

  return offset$3(original, scroll);
};
var calculateBox = function calculateBox(borderBox, styles) {
  var margin = {
    top: parse$1(styles.marginTop),
    right: parse$1(styles.marginRight),
    bottom: parse$1(styles.marginBottom),
    left: parse$1(styles.marginLeft)
  };
  var padding = {
    top: parse$1(styles.paddingTop),
    right: parse$1(styles.paddingRight),
    bottom: parse$1(styles.paddingBottom),
    left: parse$1(styles.paddingLeft)
  };
  var border = {
    top: parse$1(styles.borderTopWidth),
    right: parse$1(styles.borderRightWidth),
    bottom: parse$1(styles.borderBottomWidth),
    left: parse$1(styles.borderLeftWidth)
  };
  return createBox({
    borderBox: borderBox,
    margin: margin,
    padding: padding,
    border: border
  });
};
var getBox = function getBox(el) {
  var borderBox = el.getBoundingClientRect();
  var styles = window.getComputedStyle(el);
  return calculateBox(borderBox, styles);
};

var DESCRIPTORS = _descriptors;
var getKeys = _objectKeys;
var toIObject = _toIobject;
var isEnum = _objectPie.f;
var _objectToArray = function (isEntries) {
  return function (it) {
    var O = toIObject(it);
    var keys = getKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) {
      key = keys[i++];
      if (!DESCRIPTORS || isEnum.call(O, key)) {
        result.push(isEntries ? [key, O[key]] : O[key]);
      }
    }
    return result;
  };
};

// https://github.com/tc39/proposal-object-values-entries
var $export$3 = _export;
var $values = _objectToArray(false);

$export$3($export$3.S, 'Object', {
  values: function values(it) {
    return $values(it);
  }
});

var values$3 = _core.exports.Object.values;

var values$2 = values$3;

// most Object methods by ES6 should accept primitives
var $export$2 = _export;
var core = _core.exports;
var fails = _fails;
var _objectSap = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export$2($export$2.S + $export$2.F * fails(function () { fn(1); }), 'Object', exp);
};

// 19.1.2.14 Object.keys(O)
var toObject$1 = _toObject;
var $keys = _objectKeys;

_objectSap('keys', function () {
  return function keys(it) {
    return $keys(toObject$1(it));
  };
});

var keys$1 = _core.exports.Object.keys;

var keys = keys$1;

var rafSchd = function rafSchd(fn) {
  var lastArgs = [];
  var frameId = null;

  var wrapperFn = function wrapperFn() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    lastArgs = args;

    if (frameId) {
      return;
    }

    frameId = requestAnimationFrame(function () {
      frameId = null;
      fn.apply(void 0, lastArgs);
    });
  };

  wrapperFn.cancel = function () {
    if (!frameId) {
      return;
    }

    cancelAnimationFrame(frameId);
    frameId = null;
  };

  return wrapperFn;
};

var rafSchd$1 = rafSchd;

// 20.3.3.1 / 15.9.4.4 Date.now()
var $export$1 = _export;

$export$1($export$1.S, 'Date', { now: function () { return new Date().getTime(); } });

var now$1 = _core.exports.Date.now;

var now = now$1;

// 20.1.2.3 Number.isInteger(number)
var isObject = _isObject;
var floor = Math.floor;
var _isInteger = function isInteger(it) {
  return !isObject(it) && isFinite(it) && floor(it) === it;
};

// 20.1.2.3 Number.isInteger(number)
var $export = _export;

$export($export.S, 'Number', { isInteger: _isInteger });

var isInteger$1 = _core.exports.Number.isInteger;

var isInteger = isInteger$1;

var isProduction$1 = process.env.NODE_ENV === 'production';
var spacesAndTabs = /[ \t]{2,}/g;
var lineStartWithSpaces = /^[ \t]*/gm;

var clean = function clean(value) {
  return value.replace(spacesAndTabs, ' ').replace(lineStartWithSpaces, '').trim();
};

var getDevMessage = function getDevMessage(message) {
  return clean("\n  %creact-beautiful-dnd\n\n  %c" + clean(message) + "\n\n  %c\uD83D\uDC77\u200D This is a development only message. It will be removed in production builds.\n");
};

var getFormattedMessage = function getFormattedMessage(message) {
  return [getDevMessage(message), 'color: #00C584; font-size: 1.2em; font-weight: bold;', 'line-height: 1.5', 'color: #723874;'];
};
var isDisabledFlag = '__react-beautiful-dnd-disable-dev-warnings';
function log(type, message) {
  var _console;

  if (isProduction$1) {
    return;
  }

  if (typeof window !== 'undefined' && window[isDisabledFlag]) {
    return;
  }

  (_console = console)[type].apply(_console, getFormattedMessage(message));
}
var warning$5 = log.bind(null, 'warn');
var error$1 = log.bind(null, 'error');

function noop$7() {}

function getOptions(shared, fromBinding) {
  return _extends$a({}, shared, fromBinding);
}

function bindEvents(el, bindings, sharedOptions) {
  var unbindings = bindings.map(function (binding) {
    var options = getOptions(sharedOptions, binding.options);
    el.addEventListener(binding.eventName, binding.fn, options);
    return function unbind() {
      el.removeEventListener(binding.eventName, binding.fn, options);
    };
  });
  return function unbindAll() {
    unbindings.forEach(function (unbind) {
      unbind();
    });
  };
}

var isProduction$1$1 = process.env.NODE_ENV === 'production';
var prefix$3 = 'Invariant failed';
function RbdInvariant(message) {
  this.message = message;
}

RbdInvariant.prototype.toString = function toString() {
  return this.message;
};

function invariant$3(condition, message) {
  if (condition) {
    return;
  }

  if (isProduction$1$1) {
    throw new RbdInvariant(prefix$3);
  } else {
    throw new RbdInvariant(prefix$3 + ": " + (message || ''));
  }
}

var ErrorBoundary = function (_React$Component) {
  _inheritsLoose$3(ErrorBoundary, _React$Component);

  function ErrorBoundary() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.callbacks = null;
    _this.unbind = noop$7;

    _this.onWindowError = function (event) {
      var callbacks = _this.getCallbacks();

      if (callbacks.isDragging()) {
        callbacks.tryAbort();
        process.env.NODE_ENV !== "production" ? warning$5("\n        An error was caught by our window 'error' event listener while a drag was occurring.\n        The active drag has been aborted.\n      ") : void 0;
      }

      var err = event.error;

      if (err instanceof RbdInvariant) {
        event.preventDefault();

        if (process.env.NODE_ENV !== 'production') {
          error$1(err.message);
        }
      }
    };

    _this.getCallbacks = function () {
      if (!_this.callbacks) {
        throw new Error('Unable to find AppCallbacks in <ErrorBoundary/>');
      }

      return _this.callbacks;
    };

    _this.setCallbacks = function (callbacks) {
      _this.callbacks = callbacks;
    };

    return _this;
  }

  var _proto = ErrorBoundary.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.unbind = bindEvents(window, [{
      eventName: 'error',
      fn: this.onWindowError
    }]);
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.unbind();
  };

  _proto.componentDidCatch = function componentDidCatch(err) {
    if (err instanceof RbdInvariant) {
      if (process.env.NODE_ENV !== 'production') {
        error$1(err.message);
      }

      this.setState({});
      return;
    }

    throw err;
  };

  _proto.render = function render() {
    return this.props.children(this.setCallbacks);
  };

  return ErrorBoundary;
}(React__default.Component);

var liftInstruction = "Draggable item. Ensure your screen reader is not in browse mode and then press space bar to lift.";

var position = function position(index) {
  return index + 1;
};

var onDragStart = function onDragStart(start) {
  return "\n  You have lifted an item in position " + position(start.source.index) + ".\n  Use the arrow keys to move, space bar to drop, and escape to cancel.\n";
};

var withLocation = function withLocation(source, destination) {
  var isInHomeList = source.droppableId === destination.droppableId;
  var startPosition = position(source.index);
  var endPosition = position(destination.index);

  if (isInHomeList) {
    return "\n      You have moved the item from position " + startPosition + "\n      to position " + endPosition + "\n    ";
  }

  return "\n    You have moved the item from position " + startPosition + "\n    in list " + source.droppableId + "\n    to list " + destination.droppableId + "\n    in position " + endPosition + "\n  ";
};

var withCombine = function withCombine(id, source, combine) {
  var inHomeList = source.droppableId === combine.droppableId;

  if (inHomeList) {
    return "\n      The item " + id + "\n      has been combined with " + combine.draggableId;
  }

  return "\n      The item " + id + "\n      in list " + source.droppableId + "\n      has been combined with " + combine.draggableId + "\n      in list " + combine.droppableId + "\n    ";
};

var onDragUpdate = function onDragUpdate(update) {
  var location = update.destination;

  if (location) {
    return withLocation(update.source, location);
  }

  var combine = update.combine;

  if (combine) {
    return withCombine(update.draggableId, update.source, combine);
  }

  return 'You are over an area that cannot be dropped on';
};

var returnedToStart = function returnedToStart(source) {
  return "\n  The item has returned to its starting position\n  of " + position(source.index) + "\n";
};

var onDragEnd = function onDragEnd(result) {
  if (result.reason === 'CANCEL') {
    return "\n      Movement cancelled.\n      " + returnedToStart(result.source) + "\n    ";
  }

  var location = result.destination;
  var combine = result.combine;

  if (location) {
    return "\n      You have dropped the item.\n      " + withLocation(result.source, location) + "\n    ";
  }

  if (combine) {
    return "\n      You have dropped the item.\n      " + withCombine(result.draggableId, result.source, combine) + "\n    ";
  }

  return "\n    The item has been dropped while not over a drop area.\n    " + returnedToStart(result.source) + "\n  ";
};

var preset = {
  liftInstruction: liftInstruction,
  onDragStart: onDragStart,
  onDragUpdate: onDragUpdate,
  onDragEnd: onDragEnd
};

var origin = {
  x: 0,
  y: 0
};
var add = function add(point1, point2) {
  return {
    x: point1.x + point2.x,
    y: point1.y + point2.y
  };
};
var subtract = function subtract(point1, point2) {
  return {
    x: point1.x - point2.x,
    y: point1.y - point2.y
  };
};
var isEqual = function isEqual(point1, point2) {
  return point1.x === point2.x && point1.y === point2.y;
};
var negate = function negate(point) {
  return {
    x: point.x !== 0 ? -point.x : 0,
    y: point.y !== 0 ? -point.y : 0
  };
};
var patch = function patch(line, value, otherValue) {
  var _ref;

  if (otherValue === void 0) {
    otherValue = 0;
  }

  return _ref = {}, _ref[line] = value, _ref[line === 'x' ? 'y' : 'x'] = otherValue, _ref;
};
var distance = function distance(point1, point2) {
  return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));
};
var closest = function closest(target, points) {
  return Math.min.apply(Math, points.map(function (point) {
    return distance(target, point);
  }));
};
var apply$1 = function apply(fn) {
  return function (point) {
    return {
      x: fn(point.x),
      y: fn(point.y)
    };
  };
};

var executeClip = (function (frame, subject) {
  var result = getRect({
    top: Math.max(subject.top, frame.top),
    right: Math.min(subject.right, frame.right),
    bottom: Math.min(subject.bottom, frame.bottom),
    left: Math.max(subject.left, frame.left)
  });

  if (result.width <= 0 || result.height <= 0) {
    return null;
  }

  return result;
});

var offsetByPosition = function offsetByPosition(spacing, point) {
  return {
    top: spacing.top + point.y,
    left: spacing.left + point.x,
    bottom: spacing.bottom + point.y,
    right: spacing.right + point.x
  };
};
var getCorners = function getCorners(spacing) {
  return [{
    x: spacing.left,
    y: spacing.top
  }, {
    x: spacing.right,
    y: spacing.top
  }, {
    x: spacing.left,
    y: spacing.bottom
  }, {
    x: spacing.right,
    y: spacing.bottom
  }];
};
var noSpacing = {
  top: 0,
  right: 0,
  bottom: 0,
  left: 0
};

var scroll = function scroll(target, frame) {
  if (!frame) {
    return target;
  }

  return offsetByPosition(target, frame.scroll.diff.displacement);
};

var increase = function increase(target, axis, withPlaceholder) {
  if (withPlaceholder && withPlaceholder.increasedBy) {
    var _extends2;

    return _extends$a({}, target, (_extends2 = {}, _extends2[axis.end] = target[axis.end] + withPlaceholder.increasedBy[axis.line], _extends2));
  }

  return target;
};

var clip = function clip(target, frame) {
  if (frame && frame.shouldClipSubject) {
    return executeClip(frame.pageMarginBox, target);
  }

  return getRect(target);
};

var getSubject = (function (_ref) {
  var page = _ref.page,
      withPlaceholder = _ref.withPlaceholder,
      axis = _ref.axis,
      frame = _ref.frame;
  var scrolled = scroll(page.marginBox, frame);
  var increased = increase(scrolled, axis, withPlaceholder);
  var clipped = clip(increased, frame);
  return {
    page: page,
    withPlaceholder: withPlaceholder,
    active: clipped
  };
});

var scrollDroppable = (function (droppable, newScroll) {
  !droppable.frame ? process.env.NODE_ENV !== "production" ? invariant$3(false) : invariant$3(false) : void 0;
  var scrollable = droppable.frame;
  var scrollDiff = subtract(newScroll, scrollable.scroll.initial);
  var scrollDisplacement = negate(scrollDiff);

  var frame = _extends$a({}, scrollable, {
    scroll: {
      initial: scrollable.scroll.initial,
      current: newScroll,
      diff: {
        value: scrollDiff,
        displacement: scrollDisplacement
      },
      max: scrollable.scroll.max
    }
  });

  var subject = getSubject({
    page: droppable.subject.page,
    withPlaceholder: droppable.subject.withPlaceholder,
    axis: droppable.axis,
    frame: frame
  });

  var result = _extends$a({}, droppable, {
    frame: frame,
    subject: subject
  });

  return result;
});

function values$1(map) {
  return values$2(map);
}
function findIndex$1(list, predicate) {
  if (list.findIndex) {
    return list.findIndex(predicate);
  }

  for (var i = 0; i < list.length; i++) {
    if (predicate(list[i])) {
      return i;
    }
  }

  return -1;
}
function find$2(list, predicate) {
  if (list.find) {
    return list.find(predicate);
  }

  var index = findIndex$1(list, predicate);

  if (index !== -1) {
    return list[index];
  }

  return undefined;
}
function toArray$1(list) {
  return Array.prototype.slice.call(list);
}

var toDroppableMap = memoizeOne(function (droppables) {
  return droppables.reduce(function (previous, current) {
    previous[current.descriptor.id] = current;
    return previous;
  }, {});
});
var toDraggableMap = memoizeOne(function (draggables) {
  return draggables.reduce(function (previous, current) {
    previous[current.descriptor.id] = current;
    return previous;
  }, {});
});
var toDroppableList = memoizeOne(function (droppables) {
  return values$1(droppables);
});
var toDraggableList = memoizeOne(function (draggables) {
  return values$1(draggables);
});

var getDraggablesInsideDroppable = memoizeOne(function (droppableId, draggables) {
  var result = toDraggableList(draggables).filter(function (draggable) {
    return droppableId === draggable.descriptor.droppableId;
  }).sort(function (a, b) {
    return a.descriptor.index - b.descriptor.index;
  });
  return result;
});

function tryGetDestination(impact) {
  if (impact.at && impact.at.type === 'REORDER') {
    return impact.at.destination;
  }

  return null;
}
function tryGetCombine(impact) {
  if (impact.at && impact.at.type === 'COMBINE') {
    return impact.at.combine;
  }

  return null;
}

var removeDraggableFromList = memoizeOne(function (remove, list) {
  return list.filter(function (item) {
    return item.descriptor.id !== remove.descriptor.id;
  });
});

var moveToNextCombine = (function (_ref) {
  var isMovingForward = _ref.isMovingForward,
      draggable = _ref.draggable,
      destination = _ref.destination,
      insideDestination = _ref.insideDestination,
      previousImpact = _ref.previousImpact;

  if (!destination.isCombineEnabled) {
    return null;
  }

  var location = tryGetDestination(previousImpact);

  if (!location) {
    return null;
  }

  function getImpact(target) {
    var at = {
      type: 'COMBINE',
      combine: {
        draggableId: target,
        droppableId: destination.descriptor.id
      }
    };
    return _extends$a({}, previousImpact, {
      at: at
    });
  }

  var all = previousImpact.displaced.all;
  var closestId = all.length ? all[0] : null;

  if (isMovingForward) {
    return closestId ? getImpact(closestId) : null;
  }

  var withoutDraggable = removeDraggableFromList(draggable, insideDestination);

  if (!closestId) {
    if (!withoutDraggable.length) {
      return null;
    }

    var last = withoutDraggable[withoutDraggable.length - 1];
    return getImpact(last.descriptor.id);
  }

  var indexOfClosest = findIndex$1(withoutDraggable, function (d) {
    return d.descriptor.id === closestId;
  });
  !(indexOfClosest !== -1) ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Could not find displaced item in set') : invariant$3(false) : void 0;
  var proposedIndex = indexOfClosest - 1;

  if (proposedIndex < 0) {
    return null;
  }

  var before = withoutDraggable[proposedIndex];
  return getImpact(before.descriptor.id);
});

var isHomeOf = (function (draggable, destination) {
  return draggable.descriptor.droppableId === destination.descriptor.id;
});

var noDisplacedBy = {
  point: origin,
  value: 0
};
var emptyGroups = {
  invisible: {},
  visible: {},
  all: []
};
var noImpact = {
  displaced: emptyGroups,
  displacedBy: noDisplacedBy,
  at: null
};

var isWithin = (function (lowerBound, upperBound) {
  return function (value) {
    return lowerBound <= value && value <= upperBound;
  };
});

var isPartiallyVisibleThroughFrame = (function (frame) {
  var isWithinVertical = isWithin(frame.top, frame.bottom);
  var isWithinHorizontal = isWithin(frame.left, frame.right);
  return function (subject) {
    var isContained = isWithinVertical(subject.top) && isWithinVertical(subject.bottom) && isWithinHorizontal(subject.left) && isWithinHorizontal(subject.right);

    if (isContained) {
      return true;
    }

    var isPartiallyVisibleVertically = isWithinVertical(subject.top) || isWithinVertical(subject.bottom);
    var isPartiallyVisibleHorizontally = isWithinHorizontal(subject.left) || isWithinHorizontal(subject.right);
    var isPartiallyContained = isPartiallyVisibleVertically && isPartiallyVisibleHorizontally;

    if (isPartiallyContained) {
      return true;
    }

    var isBiggerVertically = subject.top < frame.top && subject.bottom > frame.bottom;
    var isBiggerHorizontally = subject.left < frame.left && subject.right > frame.right;
    var isTargetBiggerThanFrame = isBiggerVertically && isBiggerHorizontally;

    if (isTargetBiggerThanFrame) {
      return true;
    }

    var isTargetBiggerOnOneAxis = isBiggerVertically && isPartiallyVisibleHorizontally || isBiggerHorizontally && isPartiallyVisibleVertically;
    return isTargetBiggerOnOneAxis;
  };
});

var isTotallyVisibleThroughFrame = (function (frame) {
  var isWithinVertical = isWithin(frame.top, frame.bottom);
  var isWithinHorizontal = isWithin(frame.left, frame.right);
  return function (subject) {
    var isContained = isWithinVertical(subject.top) && isWithinVertical(subject.bottom) && isWithinHorizontal(subject.left) && isWithinHorizontal(subject.right);
    return isContained;
  };
});

var vertical = {
  direction: 'vertical',
  line: 'y',
  crossAxisLine: 'x',
  start: 'top',
  end: 'bottom',
  size: 'height',
  crossAxisStart: 'left',
  crossAxisEnd: 'right',
  crossAxisSize: 'width'
};
var horizontal = {
  direction: 'horizontal',
  line: 'x',
  crossAxisLine: 'y',
  start: 'left',
  end: 'right',
  size: 'width',
  crossAxisStart: 'top',
  crossAxisEnd: 'bottom',
  crossAxisSize: 'height'
};

var isTotallyVisibleThroughFrameOnAxis = (function (axis) {
  return function (frame) {
    var isWithinVertical = isWithin(frame.top, frame.bottom);
    var isWithinHorizontal = isWithin(frame.left, frame.right);
    return function (subject) {
      if (axis === vertical) {
        return isWithinVertical(subject.top) && isWithinVertical(subject.bottom);
      }

      return isWithinHorizontal(subject.left) && isWithinHorizontal(subject.right);
    };
  };
});

var getDroppableDisplaced = function getDroppableDisplaced(target, destination) {
  var displacement = destination.frame ? destination.frame.scroll.diff.displacement : origin;
  return offsetByPosition(target, displacement);
};

var isVisibleInDroppable = function isVisibleInDroppable(target, destination, isVisibleThroughFrameFn) {
  if (!destination.subject.active) {
    return false;
  }

  return isVisibleThroughFrameFn(destination.subject.active)(target);
};

var isVisibleInViewport = function isVisibleInViewport(target, viewport, isVisibleThroughFrameFn) {
  return isVisibleThroughFrameFn(viewport)(target);
};

var isVisible$1 = function isVisible(_ref) {
  var toBeDisplaced = _ref.target,
      destination = _ref.destination,
      viewport = _ref.viewport,
      withDroppableDisplacement = _ref.withDroppableDisplacement,
      isVisibleThroughFrameFn = _ref.isVisibleThroughFrameFn;
  var displacedTarget = withDroppableDisplacement ? getDroppableDisplaced(toBeDisplaced, destination) : toBeDisplaced;
  return isVisibleInDroppable(displacedTarget, destination, isVisibleThroughFrameFn) && isVisibleInViewport(displacedTarget, viewport, isVisibleThroughFrameFn);
};

var isPartiallyVisible = function isPartiallyVisible(args) {
  return isVisible$1(_extends$a({}, args, {
    isVisibleThroughFrameFn: isPartiallyVisibleThroughFrame
  }));
};
var isTotallyVisible = function isTotallyVisible(args) {
  return isVisible$1(_extends$a({}, args, {
    isVisibleThroughFrameFn: isTotallyVisibleThroughFrame
  }));
};
var isTotallyVisibleOnAxis = function isTotallyVisibleOnAxis(args) {
  return isVisible$1(_extends$a({}, args, {
    isVisibleThroughFrameFn: isTotallyVisibleThroughFrameOnAxis(args.destination.axis)
  }));
};

var getShouldAnimate = function getShouldAnimate(id, last, forceShouldAnimate) {
  if (typeof forceShouldAnimate === 'boolean') {
    return forceShouldAnimate;
  }

  if (!last) {
    return true;
  }

  var invisible = last.invisible,
      visible = last.visible;

  if (invisible[id]) {
    return false;
  }

  var previous = visible[id];
  return previous ? previous.shouldAnimate : true;
};

function getTarget(draggable, displacedBy) {
  var marginBox = draggable.page.marginBox;
  var expandBy = {
    top: displacedBy.point.y,
    right: 0,
    bottom: 0,
    left: displacedBy.point.x
  };
  return getRect(expand(marginBox, expandBy));
}

function getDisplacementGroups(_ref) {
  var afterDragging = _ref.afterDragging,
      destination = _ref.destination,
      displacedBy = _ref.displacedBy,
      viewport = _ref.viewport,
      forceShouldAnimate = _ref.forceShouldAnimate,
      last = _ref.last;
  return afterDragging.reduce(function process(groups, draggable) {
    var target = getTarget(draggable, displacedBy);
    var id = draggable.descriptor.id;
    groups.all.push(id);
    var isVisible = isPartiallyVisible({
      target: target,
      destination: destination,
      viewport: viewport,
      withDroppableDisplacement: true
    });

    if (!isVisible) {
      groups.invisible[draggable.descriptor.id] = true;
      return groups;
    }

    var shouldAnimate = getShouldAnimate(id, last, forceShouldAnimate);
    var displacement = {
      draggableId: id,
      shouldAnimate: shouldAnimate
    };
    groups.visible[id] = displacement;
    return groups;
  }, {
    all: [],
    visible: {},
    invisible: {}
  });
}

function getIndexOfLastItem(draggables, options) {
  if (!draggables.length) {
    return 0;
  }

  var indexOfLastItem = draggables[draggables.length - 1].descriptor.index;
  return options.inHomeList ? indexOfLastItem : indexOfLastItem + 1;
}

function goAtEnd(_ref) {
  var insideDestination = _ref.insideDestination,
      inHomeList = _ref.inHomeList,
      displacedBy = _ref.displacedBy,
      destination = _ref.destination;
  var newIndex = getIndexOfLastItem(insideDestination, {
    inHomeList: inHomeList
  });
  return {
    displaced: emptyGroups,
    displacedBy: displacedBy,
    at: {
      type: 'REORDER',
      destination: {
        droppableId: destination.descriptor.id,
        index: newIndex
      }
    }
  };
}

function calculateReorderImpact(_ref2) {
  var draggable = _ref2.draggable,
      insideDestination = _ref2.insideDestination,
      destination = _ref2.destination,
      viewport = _ref2.viewport,
      displacedBy = _ref2.displacedBy,
      last = _ref2.last,
      index = _ref2.index,
      forceShouldAnimate = _ref2.forceShouldAnimate;
  var inHomeList = isHomeOf(draggable, destination);

  if (index == null) {
    return goAtEnd({
      insideDestination: insideDestination,
      inHomeList: inHomeList,
      displacedBy: displacedBy,
      destination: destination
    });
  }

  var match = find$2(insideDestination, function (item) {
    return item.descriptor.index === index;
  });

  if (!match) {
    return goAtEnd({
      insideDestination: insideDestination,
      inHomeList: inHomeList,
      displacedBy: displacedBy,
      destination: destination
    });
  }

  var withoutDragging = removeDraggableFromList(draggable, insideDestination);
  var sliceFrom = insideDestination.indexOf(match);
  var impacted = withoutDragging.slice(sliceFrom);
  var displaced = getDisplacementGroups({
    afterDragging: impacted,
    destination: destination,
    displacedBy: displacedBy,
    last: last,
    viewport: viewport.frame,
    forceShouldAnimate: forceShouldAnimate
  });
  return {
    displaced: displaced,
    displacedBy: displacedBy,
    at: {
      type: 'REORDER',
      destination: {
        droppableId: destination.descriptor.id,
        index: index
      }
    }
  };
}

function didStartAfterCritical(draggableId, afterCritical) {
  return Boolean(afterCritical.effected[draggableId]);
}

var fromCombine = (function (_ref) {
  var isMovingForward = _ref.isMovingForward,
      destination = _ref.destination,
      draggables = _ref.draggables,
      combine = _ref.combine,
      afterCritical = _ref.afterCritical;

  if (!destination.isCombineEnabled) {
    return null;
  }

  var combineId = combine.draggableId;
  var combineWith = draggables[combineId];
  var combineWithIndex = combineWith.descriptor.index;
  var didCombineWithStartAfterCritical = didStartAfterCritical(combineId, afterCritical);

  if (didCombineWithStartAfterCritical) {
    if (isMovingForward) {
      return combineWithIndex;
    }

    return combineWithIndex - 1;
  }

  if (isMovingForward) {
    return combineWithIndex + 1;
  }

  return combineWithIndex;
});

var fromReorder = (function (_ref) {
  var isMovingForward = _ref.isMovingForward,
      isInHomeList = _ref.isInHomeList,
      insideDestination = _ref.insideDestination,
      location = _ref.location;

  if (!insideDestination.length) {
    return null;
  }

  var currentIndex = location.index;
  var proposedIndex = isMovingForward ? currentIndex + 1 : currentIndex - 1;
  var firstIndex = insideDestination[0].descriptor.index;
  var lastIndex = insideDestination[insideDestination.length - 1].descriptor.index;
  var upperBound = isInHomeList ? lastIndex : lastIndex + 1;

  if (proposedIndex < firstIndex) {
    return null;
  }

  if (proposedIndex > upperBound) {
    return null;
  }

  return proposedIndex;
});

var moveToNextIndex = (function (_ref) {
  var isMovingForward = _ref.isMovingForward,
      isInHomeList = _ref.isInHomeList,
      draggable = _ref.draggable,
      draggables = _ref.draggables,
      destination = _ref.destination,
      insideDestination = _ref.insideDestination,
      previousImpact = _ref.previousImpact,
      viewport = _ref.viewport,
      afterCritical = _ref.afterCritical;
  var wasAt = previousImpact.at;
  !wasAt ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot move in direction without previous impact location') : invariant$3(false) : void 0;

  if (wasAt.type === 'REORDER') {
    var _newIndex = fromReorder({
      isMovingForward: isMovingForward,
      isInHomeList: isInHomeList,
      location: wasAt.destination,
      insideDestination: insideDestination
    });

    if (_newIndex == null) {
      return null;
    }

    return calculateReorderImpact({
      draggable: draggable,
      insideDestination: insideDestination,
      destination: destination,
      viewport: viewport,
      last: previousImpact.displaced,
      displacedBy: previousImpact.displacedBy,
      index: _newIndex
    });
  }

  var newIndex = fromCombine({
    isMovingForward: isMovingForward,
    destination: destination,
    displaced: previousImpact.displaced,
    draggables: draggables,
    combine: wasAt.combine,
    afterCritical: afterCritical
  });

  if (newIndex == null) {
    return null;
  }

  return calculateReorderImpact({
    draggable: draggable,
    insideDestination: insideDestination,
    destination: destination,
    viewport: viewport,
    last: previousImpact.displaced,
    displacedBy: previousImpact.displacedBy,
    index: newIndex
  });
});

var getCombinedItemDisplacement = (function (_ref) {
  var displaced = _ref.displaced,
      afterCritical = _ref.afterCritical,
      combineWith = _ref.combineWith,
      displacedBy = _ref.displacedBy;
  var isDisplaced = Boolean(displaced.visible[combineWith] || displaced.invisible[combineWith]);

  if (didStartAfterCritical(combineWith, afterCritical)) {
    return isDisplaced ? origin : negate(displacedBy.point);
  }

  return isDisplaced ? displacedBy.point : origin;
});

var whenCombining = (function (_ref) {
  var afterCritical = _ref.afterCritical,
      impact = _ref.impact,
      draggables = _ref.draggables;
  var combine = tryGetCombine(impact);
  !combine ? process.env.NODE_ENV !== "production" ? invariant$3(false) : invariant$3(false) : void 0;
  var combineWith = combine.draggableId;
  var center = draggables[combineWith].page.borderBox.center;
  var displaceBy = getCombinedItemDisplacement({
    displaced: impact.displaced,
    afterCritical: afterCritical,
    combineWith: combineWith,
    displacedBy: impact.displacedBy
  });
  return add(center, displaceBy);
});

var distanceFromStartToBorderBoxCenter = function distanceFromStartToBorderBoxCenter(axis, box) {
  return box.margin[axis.start] + box.borderBox[axis.size] / 2;
};

var distanceFromEndToBorderBoxCenter = function distanceFromEndToBorderBoxCenter(axis, box) {
  return box.margin[axis.end] + box.borderBox[axis.size] / 2;
};

var getCrossAxisBorderBoxCenter = function getCrossAxisBorderBoxCenter(axis, target, isMoving) {
  return target[axis.crossAxisStart] + isMoving.margin[axis.crossAxisStart] + isMoving.borderBox[axis.crossAxisSize] / 2;
};

var goAfter = function goAfter(_ref) {
  var axis = _ref.axis,
      moveRelativeTo = _ref.moveRelativeTo,
      isMoving = _ref.isMoving;
  return patch(axis.line, moveRelativeTo.marginBox[axis.end] + distanceFromStartToBorderBoxCenter(axis, isMoving), getCrossAxisBorderBoxCenter(axis, moveRelativeTo.marginBox, isMoving));
};
var goBefore = function goBefore(_ref2) {
  var axis = _ref2.axis,
      moveRelativeTo = _ref2.moveRelativeTo,
      isMoving = _ref2.isMoving;
  return patch(axis.line, moveRelativeTo.marginBox[axis.start] - distanceFromEndToBorderBoxCenter(axis, isMoving), getCrossAxisBorderBoxCenter(axis, moveRelativeTo.marginBox, isMoving));
};
var goIntoStart = function goIntoStart(_ref3) {
  var axis = _ref3.axis,
      moveInto = _ref3.moveInto,
      isMoving = _ref3.isMoving;
  return patch(axis.line, moveInto.contentBox[axis.start] + distanceFromStartToBorderBoxCenter(axis, isMoving), getCrossAxisBorderBoxCenter(axis, moveInto.contentBox, isMoving));
};

var whenReordering = (function (_ref) {
  var impact = _ref.impact,
      draggable = _ref.draggable,
      draggables = _ref.draggables,
      droppable = _ref.droppable,
      afterCritical = _ref.afterCritical;
  var insideDestination = getDraggablesInsideDroppable(droppable.descriptor.id, draggables);
  var draggablePage = draggable.page;
  var axis = droppable.axis;

  if (!insideDestination.length) {
    return goIntoStart({
      axis: axis,
      moveInto: droppable.page,
      isMoving: draggablePage
    });
  }

  var displaced = impact.displaced,
      displacedBy = impact.displacedBy;
  var closestAfter = displaced.all[0];

  if (closestAfter) {
    var closest = draggables[closestAfter];

    if (didStartAfterCritical(closestAfter, afterCritical)) {
      return goBefore({
        axis: axis,
        moveRelativeTo: closest.page,
        isMoving: draggablePage
      });
    }

    var withDisplacement = offset$3(closest.page, displacedBy.point);
    return goBefore({
      axis: axis,
      moveRelativeTo: withDisplacement,
      isMoving: draggablePage
    });
  }

  var last = insideDestination[insideDestination.length - 1];

  if (last.descriptor.id === draggable.descriptor.id) {
    return draggablePage.borderBox.center;
  }

  if (didStartAfterCritical(last.descriptor.id, afterCritical)) {
    var page = offset$3(last.page, negate(afterCritical.displacedBy.point));
    return goAfter({
      axis: axis,
      moveRelativeTo: page,
      isMoving: draggablePage
    });
  }

  return goAfter({
    axis: axis,
    moveRelativeTo: last.page,
    isMoving: draggablePage
  });
});

var withDroppableDisplacement = (function (droppable, point) {
  var frame = droppable.frame;

  if (!frame) {
    return point;
  }

  return add(point, frame.scroll.diff.displacement);
});

var getResultWithoutDroppableDisplacement = function getResultWithoutDroppableDisplacement(_ref) {
  var impact = _ref.impact,
      draggable = _ref.draggable,
      droppable = _ref.droppable,
      draggables = _ref.draggables,
      afterCritical = _ref.afterCritical;
  var original = draggable.page.borderBox.center;
  var at = impact.at;

  if (!droppable) {
    return original;
  }

  if (!at) {
    return original;
  }

  if (at.type === 'REORDER') {
    return whenReordering({
      impact: impact,
      draggable: draggable,
      draggables: draggables,
      droppable: droppable,
      afterCritical: afterCritical
    });
  }

  return whenCombining({
    impact: impact,
    draggables: draggables,
    afterCritical: afterCritical
  });
};

var getPageBorderBoxCenterFromImpact = (function (args) {
  var withoutDisplacement = getResultWithoutDroppableDisplacement(args);
  var droppable = args.droppable;
  var withDisplacement = droppable ? withDroppableDisplacement(droppable, withoutDisplacement) : withoutDisplacement;
  return withDisplacement;
});

var scrollViewport = (function (viewport, newScroll) {
  var diff = subtract(newScroll, viewport.scroll.initial);
  var displacement = negate(diff);
  var frame = getRect({
    top: newScroll.y,
    bottom: newScroll.y + viewport.frame.height,
    left: newScroll.x,
    right: newScroll.x + viewport.frame.width
  });
  var updated = {
    frame: frame,
    scroll: {
      initial: viewport.scroll.initial,
      max: viewport.scroll.max,
      current: newScroll,
      diff: {
        value: diff,
        displacement: displacement
      }
    }
  };
  return updated;
});

function getDraggables(ids, draggables) {
  return ids.map(function (id) {
    return draggables[id];
  });
}

function tryGetVisible(id, groups) {
  for (var i = 0; i < groups.length; i++) {
    var displacement = groups[i].visible[id];

    if (displacement) {
      return displacement;
    }
  }

  return null;
}

var speculativelyIncrease = (function (_ref) {
  var impact = _ref.impact,
      viewport = _ref.viewport,
      destination = _ref.destination,
      draggables = _ref.draggables,
      maxScrollChange = _ref.maxScrollChange;
  var scrolledViewport = scrollViewport(viewport, add(viewport.scroll.current, maxScrollChange));
  var scrolledDroppable = destination.frame ? scrollDroppable(destination, add(destination.frame.scroll.current, maxScrollChange)) : destination;
  var last = impact.displaced;
  var withViewportScroll = getDisplacementGroups({
    afterDragging: getDraggables(last.all, draggables),
    destination: destination,
    displacedBy: impact.displacedBy,
    viewport: scrolledViewport.frame,
    last: last,
    forceShouldAnimate: false
  });
  var withDroppableScroll = getDisplacementGroups({
    afterDragging: getDraggables(last.all, draggables),
    destination: scrolledDroppable,
    displacedBy: impact.displacedBy,
    viewport: viewport.frame,
    last: last,
    forceShouldAnimate: false
  });
  var invisible = {};
  var visible = {};
  var groups = [last, withViewportScroll, withDroppableScroll];
  last.all.forEach(function (id) {
    var displacement = tryGetVisible(id, groups);

    if (displacement) {
      visible[id] = displacement;
      return;
    }

    invisible[id] = true;
  });

  var newImpact = _extends$a({}, impact, {
    displaced: {
      all: last.all,
      invisible: invisible,
      visible: visible
    }
  });

  return newImpact;
});

var withViewportDisplacement = (function (viewport, point) {
  return add(viewport.scroll.diff.displacement, point);
});

var getClientFromPageBorderBoxCenter = (function (_ref) {
  var pageBorderBoxCenter = _ref.pageBorderBoxCenter,
      draggable = _ref.draggable,
      viewport = _ref.viewport;
  var withoutPageScrollChange = withViewportDisplacement(viewport, pageBorderBoxCenter);
  var offset = subtract(withoutPageScrollChange, draggable.page.borderBox.center);
  return add(draggable.client.borderBox.center, offset);
});

var isTotallyVisibleInNewLocation = (function (_ref) {
  var draggable = _ref.draggable,
      destination = _ref.destination,
      newPageBorderBoxCenter = _ref.newPageBorderBoxCenter,
      viewport = _ref.viewport,
      withDroppableDisplacement = _ref.withDroppableDisplacement,
      _ref$onlyOnMainAxis = _ref.onlyOnMainAxis,
      onlyOnMainAxis = _ref$onlyOnMainAxis === void 0 ? false : _ref$onlyOnMainAxis;
  var changeNeeded = subtract(newPageBorderBoxCenter, draggable.page.borderBox.center);
  var shifted = offsetByPosition(draggable.page.borderBox, changeNeeded);
  var args = {
    target: shifted,
    destination: destination,
    withDroppableDisplacement: withDroppableDisplacement,
    viewport: viewport
  };
  return onlyOnMainAxis ? isTotallyVisibleOnAxis(args) : isTotallyVisible(args);
});

var moveToNextPlace = (function (_ref) {
  var isMovingForward = _ref.isMovingForward,
      draggable = _ref.draggable,
      destination = _ref.destination,
      draggables = _ref.draggables,
      previousImpact = _ref.previousImpact,
      viewport = _ref.viewport,
      previousPageBorderBoxCenter = _ref.previousPageBorderBoxCenter,
      previousClientSelection = _ref.previousClientSelection,
      afterCritical = _ref.afterCritical;

  if (!destination.isEnabled) {
    return null;
  }

  var insideDestination = getDraggablesInsideDroppable(destination.descriptor.id, draggables);
  var isInHomeList = isHomeOf(draggable, destination);
  var impact = moveToNextCombine({
    isMovingForward: isMovingForward,
    draggable: draggable,
    destination: destination,
    insideDestination: insideDestination,
    previousImpact: previousImpact
  }) || moveToNextIndex({
    isMovingForward: isMovingForward,
    isInHomeList: isInHomeList,
    draggable: draggable,
    draggables: draggables,
    destination: destination,
    insideDestination: insideDestination,
    previousImpact: previousImpact,
    viewport: viewport,
    afterCritical: afterCritical
  });

  if (!impact) {
    return null;
  }

  var pageBorderBoxCenter = getPageBorderBoxCenterFromImpact({
    impact: impact,
    draggable: draggable,
    droppable: destination,
    draggables: draggables,
    afterCritical: afterCritical
  });
  var isVisibleInNewLocation = isTotallyVisibleInNewLocation({
    draggable: draggable,
    destination: destination,
    newPageBorderBoxCenter: pageBorderBoxCenter,
    viewport: viewport.frame,
    withDroppableDisplacement: false,
    onlyOnMainAxis: true
  });

  if (isVisibleInNewLocation) {
    var clientSelection = getClientFromPageBorderBoxCenter({
      pageBorderBoxCenter: pageBorderBoxCenter,
      draggable: draggable,
      viewport: viewport
    });
    return {
      clientSelection: clientSelection,
      impact: impact,
      scrollJumpRequest: null
    };
  }

  var distance = subtract(pageBorderBoxCenter, previousPageBorderBoxCenter);
  var cautious = speculativelyIncrease({
    impact: impact,
    viewport: viewport,
    destination: destination,
    draggables: draggables,
    maxScrollChange: distance
  });
  return {
    clientSelection: previousClientSelection,
    impact: cautious,
    scrollJumpRequest: distance
  };
});

var getKnownActive = function getKnownActive(droppable) {
  var rect = droppable.subject.active;
  !rect ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot get clipped area from droppable') : invariant$3(false) : void 0;
  return rect;
};

var getBestCrossAxisDroppable = (function (_ref) {
  var isMovingForward = _ref.isMovingForward,
      pageBorderBoxCenter = _ref.pageBorderBoxCenter,
      source = _ref.source,
      droppables = _ref.droppables,
      viewport = _ref.viewport;
  var active = source.subject.active;

  if (!active) {
    return null;
  }

  var axis = source.axis;
  var isBetweenSourceClipped = isWithin(active[axis.start], active[axis.end]);
  var candidates = toDroppableList(droppables).filter(function (droppable) {
    return droppable !== source;
  }).filter(function (droppable) {
    return droppable.isEnabled;
  }).filter(function (droppable) {
    return Boolean(droppable.subject.active);
  }).filter(function (droppable) {
    return isPartiallyVisibleThroughFrame(viewport.frame)(getKnownActive(droppable));
  }).filter(function (droppable) {
    var activeOfTarget = getKnownActive(droppable);

    if (isMovingForward) {
      return active[axis.crossAxisEnd] < activeOfTarget[axis.crossAxisEnd];
    }

    return activeOfTarget[axis.crossAxisStart] < active[axis.crossAxisStart];
  }).filter(function (droppable) {
    var activeOfTarget = getKnownActive(droppable);
    var isBetweenDestinationClipped = isWithin(activeOfTarget[axis.start], activeOfTarget[axis.end]);
    return isBetweenSourceClipped(activeOfTarget[axis.start]) || isBetweenSourceClipped(activeOfTarget[axis.end]) || isBetweenDestinationClipped(active[axis.start]) || isBetweenDestinationClipped(active[axis.end]);
  }).sort(function (a, b) {
    var first = getKnownActive(a)[axis.crossAxisStart];
    var second = getKnownActive(b)[axis.crossAxisStart];

    if (isMovingForward) {
      return first - second;
    }

    return second - first;
  }).filter(function (droppable, index, array) {
    return getKnownActive(droppable)[axis.crossAxisStart] === getKnownActive(array[0])[axis.crossAxisStart];
  });

  if (!candidates.length) {
    return null;
  }

  if (candidates.length === 1) {
    return candidates[0];
  }

  var contains = candidates.filter(function (droppable) {
    var isWithinDroppable = isWithin(getKnownActive(droppable)[axis.start], getKnownActive(droppable)[axis.end]);
    return isWithinDroppable(pageBorderBoxCenter[axis.line]);
  });

  if (contains.length === 1) {
    return contains[0];
  }

  if (contains.length > 1) {
    return contains.sort(function (a, b) {
      return getKnownActive(a)[axis.start] - getKnownActive(b)[axis.start];
    })[0];
  }

  return candidates.sort(function (a, b) {
    var first = closest(pageBorderBoxCenter, getCorners(getKnownActive(a)));
    var second = closest(pageBorderBoxCenter, getCorners(getKnownActive(b)));

    if (first !== second) {
      return first - second;
    }

    return getKnownActive(a)[axis.start] - getKnownActive(b)[axis.start];
  })[0];
});

var getCurrentPageBorderBoxCenter = function getCurrentPageBorderBoxCenter(draggable, afterCritical) {
  var original = draggable.page.borderBox.center;
  return didStartAfterCritical(draggable.descriptor.id, afterCritical) ? subtract(original, afterCritical.displacedBy.point) : original;
};
var getCurrentPageBorderBox = function getCurrentPageBorderBox(draggable, afterCritical) {
  var original = draggable.page.borderBox;
  return didStartAfterCritical(draggable.descriptor.id, afterCritical) ? offsetByPosition(original, negate(afterCritical.displacedBy.point)) : original;
};

var getClosestDraggable = (function (_ref) {
  var pageBorderBoxCenter = _ref.pageBorderBoxCenter,
      viewport = _ref.viewport,
      destination = _ref.destination,
      insideDestination = _ref.insideDestination,
      afterCritical = _ref.afterCritical;
  var sorted = insideDestination.filter(function (draggable) {
    return isTotallyVisible({
      target: getCurrentPageBorderBox(draggable, afterCritical),
      destination: destination,
      viewport: viewport.frame,
      withDroppableDisplacement: true
    });
  }).sort(function (a, b) {
    var distanceToA = distance(pageBorderBoxCenter, withDroppableDisplacement(destination, getCurrentPageBorderBoxCenter(a, afterCritical)));
    var distanceToB = distance(pageBorderBoxCenter, withDroppableDisplacement(destination, getCurrentPageBorderBoxCenter(b, afterCritical)));

    if (distanceToA < distanceToB) {
      return -1;
    }

    if (distanceToB < distanceToA) {
      return 1;
    }

    return a.descriptor.index - b.descriptor.index;
  });
  return sorted[0] || null;
});

var getDisplacedBy = memoizeOne(function getDisplacedBy(axis, displaceBy) {
  var displacement = displaceBy[axis.line];
  return {
    value: displacement,
    point: patch(axis.line, displacement)
  };
});

var getRequiredGrowthForPlaceholder = function getRequiredGrowthForPlaceholder(droppable, placeholderSize, draggables) {
  var axis = droppable.axis;

  if (droppable.descriptor.mode === 'virtual') {
    return patch(axis.line, placeholderSize[axis.line]);
  }

  var availableSpace = droppable.subject.page.contentBox[axis.size];
  var insideDroppable = getDraggablesInsideDroppable(droppable.descriptor.id, draggables);
  var spaceUsed = insideDroppable.reduce(function (sum, dimension) {
    return sum + dimension.client.marginBox[axis.size];
  }, 0);
  var requiredSpace = spaceUsed + placeholderSize[axis.line];
  var needsToGrowBy = requiredSpace - availableSpace;

  if (needsToGrowBy <= 0) {
    return null;
  }

  return patch(axis.line, needsToGrowBy);
};

var withMaxScroll = function withMaxScroll(frame, max) {
  return _extends$a({}, frame, {
    scroll: _extends$a({}, frame.scroll, {
      max: max
    })
  });
};

var addPlaceholder = function addPlaceholder(droppable, draggable, draggables) {
  var frame = droppable.frame;
  !!isHomeOf(draggable, droppable) ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Should not add placeholder space to home list') : invariant$3(false) : void 0;
  !!droppable.subject.withPlaceholder ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot add placeholder size to a subject when it already has one') : invariant$3(false) : void 0;
  var placeholderSize = getDisplacedBy(droppable.axis, draggable.displaceBy).point;
  var requiredGrowth = getRequiredGrowthForPlaceholder(droppable, placeholderSize, draggables);
  var added = {
    placeholderSize: placeholderSize,
    increasedBy: requiredGrowth,
    oldFrameMaxScroll: droppable.frame ? droppable.frame.scroll.max : null
  };

  if (!frame) {
    var _subject = getSubject({
      page: droppable.subject.page,
      withPlaceholder: added,
      axis: droppable.axis,
      frame: droppable.frame
    });

    return _extends$a({}, droppable, {
      subject: _subject
    });
  }

  var maxScroll = requiredGrowth ? add(frame.scroll.max, requiredGrowth) : frame.scroll.max;
  var newFrame = withMaxScroll(frame, maxScroll);
  var subject = getSubject({
    page: droppable.subject.page,
    withPlaceholder: added,
    axis: droppable.axis,
    frame: newFrame
  });
  return _extends$a({}, droppable, {
    subject: subject,
    frame: newFrame
  });
};
var removePlaceholder = function removePlaceholder(droppable) {
  var added = droppable.subject.withPlaceholder;
  !added ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot remove placeholder form subject when there was none') : invariant$3(false) : void 0;
  var frame = droppable.frame;

  if (!frame) {
    var _subject2 = getSubject({
      page: droppable.subject.page,
      axis: droppable.axis,
      frame: null,
      withPlaceholder: null
    });

    return _extends$a({}, droppable, {
      subject: _subject2
    });
  }

  var oldMaxScroll = added.oldFrameMaxScroll;
  !oldMaxScroll ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Expected droppable with frame to have old max frame scroll when removing placeholder') : invariant$3(false) : void 0;
  var newFrame = withMaxScroll(frame, oldMaxScroll);
  var subject = getSubject({
    page: droppable.subject.page,
    axis: droppable.axis,
    frame: newFrame,
    withPlaceholder: null
  });
  return _extends$a({}, droppable, {
    subject: subject,
    frame: newFrame
  });
};

var moveToNewDroppable = (function (_ref) {
  var previousPageBorderBoxCenter = _ref.previousPageBorderBoxCenter,
      moveRelativeTo = _ref.moveRelativeTo,
      insideDestination = _ref.insideDestination,
      draggable = _ref.draggable,
      draggables = _ref.draggables,
      destination = _ref.destination,
      viewport = _ref.viewport,
      afterCritical = _ref.afterCritical;

  if (!moveRelativeTo) {
    if (insideDestination.length) {
      return null;
    }

    var proposed = {
      displaced: emptyGroups,
      displacedBy: noDisplacedBy,
      at: {
        type: 'REORDER',
        destination: {
          droppableId: destination.descriptor.id,
          index: 0
        }
      }
    };
    var proposedPageBorderBoxCenter = getPageBorderBoxCenterFromImpact({
      impact: proposed,
      draggable: draggable,
      droppable: destination,
      draggables: draggables,
      afterCritical: afterCritical
    });
    var withPlaceholder = isHomeOf(draggable, destination) ? destination : addPlaceholder(destination, draggable, draggables);
    var isVisibleInNewLocation = isTotallyVisibleInNewLocation({
      draggable: draggable,
      destination: withPlaceholder,
      newPageBorderBoxCenter: proposedPageBorderBoxCenter,
      viewport: viewport.frame,
      withDroppableDisplacement: false,
      onlyOnMainAxis: true
    });
    return isVisibleInNewLocation ? proposed : null;
  }

  var isGoingBeforeTarget = Boolean(previousPageBorderBoxCenter[destination.axis.line] <= moveRelativeTo.page.borderBox.center[destination.axis.line]);

  var proposedIndex = function () {
    var relativeTo = moveRelativeTo.descriptor.index;

    if (moveRelativeTo.descriptor.id === draggable.descriptor.id) {
      return relativeTo;
    }

    if (isGoingBeforeTarget) {
      return relativeTo;
    }

    return relativeTo + 1;
  }();

  var displacedBy = getDisplacedBy(destination.axis, draggable.displaceBy);
  return calculateReorderImpact({
    draggable: draggable,
    insideDestination: insideDestination,
    destination: destination,
    viewport: viewport,
    displacedBy: displacedBy,
    last: emptyGroups,
    index: proposedIndex
  });
});

var moveCrossAxis = (function (_ref) {
  var isMovingForward = _ref.isMovingForward,
      previousPageBorderBoxCenter = _ref.previousPageBorderBoxCenter,
      draggable = _ref.draggable,
      isOver = _ref.isOver,
      draggables = _ref.draggables,
      droppables = _ref.droppables,
      viewport = _ref.viewport,
      afterCritical = _ref.afterCritical;
  var destination = getBestCrossAxisDroppable({
    isMovingForward: isMovingForward,
    pageBorderBoxCenter: previousPageBorderBoxCenter,
    source: isOver,
    droppables: droppables,
    viewport: viewport
  });

  if (!destination) {
    return null;
  }

  var insideDestination = getDraggablesInsideDroppable(destination.descriptor.id, draggables);
  var moveRelativeTo = getClosestDraggable({
    pageBorderBoxCenter: previousPageBorderBoxCenter,
    viewport: viewport,
    destination: destination,
    insideDestination: insideDestination,
    afterCritical: afterCritical
  });
  var impact = moveToNewDroppable({
    previousPageBorderBoxCenter: previousPageBorderBoxCenter,
    destination: destination,
    draggable: draggable,
    draggables: draggables,
    moveRelativeTo: moveRelativeTo,
    insideDestination: insideDestination,
    viewport: viewport,
    afterCritical: afterCritical
  });

  if (!impact) {
    return null;
  }

  var pageBorderBoxCenter = getPageBorderBoxCenterFromImpact({
    impact: impact,
    draggable: draggable,
    droppable: destination,
    draggables: draggables,
    afterCritical: afterCritical
  });
  var clientSelection = getClientFromPageBorderBoxCenter({
    pageBorderBoxCenter: pageBorderBoxCenter,
    draggable: draggable,
    viewport: viewport
  });
  return {
    clientSelection: clientSelection,
    impact: impact,
    scrollJumpRequest: null
  };
});

var whatIsDraggedOver = (function (impact) {
  var at = impact.at;

  if (!at) {
    return null;
  }

  if (at.type === 'REORDER') {
    return at.destination.droppableId;
  }

  return at.combine.droppableId;
});

var getDroppableOver = function getDroppableOver(impact, droppables) {
  var id = whatIsDraggedOver(impact);
  return id ? droppables[id] : null;
};

var moveInDirection = (function (_ref) {
  var state = _ref.state,
      type = _ref.type;
  var isActuallyOver = getDroppableOver(state.impact, state.dimensions.droppables);
  var isMainAxisMovementAllowed = Boolean(isActuallyOver);
  var home = state.dimensions.droppables[state.critical.droppable.id];
  var isOver = isActuallyOver || home;
  var direction = isOver.axis.direction;
  var isMovingOnMainAxis = direction === 'vertical' && (type === 'MOVE_UP' || type === 'MOVE_DOWN') || direction === 'horizontal' && (type === 'MOVE_LEFT' || type === 'MOVE_RIGHT');

  if (isMovingOnMainAxis && !isMainAxisMovementAllowed) {
    return null;
  }

  var isMovingForward = type === 'MOVE_DOWN' || type === 'MOVE_RIGHT';
  var draggable = state.dimensions.draggables[state.critical.draggable.id];
  var previousPageBorderBoxCenter = state.current.page.borderBoxCenter;
  var _state$dimensions = state.dimensions,
      draggables = _state$dimensions.draggables,
      droppables = _state$dimensions.droppables;
  return isMovingOnMainAxis ? moveToNextPlace({
    isMovingForward: isMovingForward,
    previousPageBorderBoxCenter: previousPageBorderBoxCenter,
    draggable: draggable,
    destination: isOver,
    draggables: draggables,
    viewport: state.viewport,
    previousClientSelection: state.current.client.selection,
    previousImpact: state.impact,
    afterCritical: state.afterCritical
  }) : moveCrossAxis({
    isMovingForward: isMovingForward,
    previousPageBorderBoxCenter: previousPageBorderBoxCenter,
    draggable: draggable,
    isOver: isOver,
    draggables: draggables,
    droppables: droppables,
    viewport: state.viewport,
    afterCritical: state.afterCritical
  });
});

function isMovementAllowed(state) {
  return state.phase === 'DRAGGING' || state.phase === 'COLLECTING';
}

function isPositionInFrame(frame) {
  var isWithinVertical = isWithin(frame.top, frame.bottom);
  var isWithinHorizontal = isWithin(frame.left, frame.right);
  return function run(point) {
    return isWithinVertical(point.y) && isWithinHorizontal(point.x);
  };
}

function getHasOverlap(first, second) {
  return first.left < second.right && first.right > second.left && first.top < second.bottom && first.bottom > second.top;
}

function getFurthestAway(_ref) {
  var pageBorderBox = _ref.pageBorderBox,
      draggable = _ref.draggable,
      candidates = _ref.candidates;
  var startCenter = draggable.page.borderBox.center;
  var sorted = candidates.map(function (candidate) {
    var axis = candidate.axis;
    var target = patch(candidate.axis.line, pageBorderBox.center[axis.line], candidate.page.borderBox.center[axis.crossAxisLine]);
    return {
      id: candidate.descriptor.id,
      distance: distance(startCenter, target)
    };
  }).sort(function (a, b) {
    return b.distance - a.distance;
  });
  return sorted[0] ? sorted[0].id : null;
}

function getDroppableOver$1(_ref2) {
  var pageBorderBox = _ref2.pageBorderBox,
      draggable = _ref2.draggable,
      droppables = _ref2.droppables;
  var candidates = toDroppableList(droppables).filter(function (item) {
    if (!item.isEnabled) {
      return false;
    }

    var active = item.subject.active;

    if (!active) {
      return false;
    }

    if (!getHasOverlap(pageBorderBox, active)) {
      return false;
    }

    if (isPositionInFrame(active)(pageBorderBox.center)) {
      return true;
    }

    var axis = item.axis;
    var childCenter = active.center[axis.crossAxisLine];
    var crossAxisStart = pageBorderBox[axis.crossAxisStart];
    var crossAxisEnd = pageBorderBox[axis.crossAxisEnd];
    var isContained = isWithin(active[axis.crossAxisStart], active[axis.crossAxisEnd]);
    var isStartContained = isContained(crossAxisStart);
    var isEndContained = isContained(crossAxisEnd);

    if (!isStartContained && !isEndContained) {
      return true;
    }

    if (isStartContained) {
      return crossAxisStart < childCenter;
    }

    return crossAxisEnd > childCenter;
  });

  if (!candidates.length) {
    return null;
  }

  if (candidates.length === 1) {
    return candidates[0].descriptor.id;
  }

  return getFurthestAway({
    pageBorderBox: pageBorderBox,
    draggable: draggable,
    candidates: candidates
  });
}

var offsetRectByPosition = function offsetRectByPosition(rect, point) {
  return getRect(offsetByPosition(rect, point));
};

var withDroppableScroll = (function (droppable, area) {
  var frame = droppable.frame;

  if (!frame) {
    return area;
  }

  return offsetRectByPosition(area, frame.scroll.diff.value);
});

function getIsDisplaced(_ref) {
  var displaced = _ref.displaced,
      id = _ref.id;
  return Boolean(displaced.visible[id] || displaced.invisible[id]);
}

function atIndex(_ref) {
  var draggable = _ref.draggable,
      closest = _ref.closest,
      inHomeList = _ref.inHomeList;

  if (!closest) {
    return null;
  }

  if (!inHomeList) {
    return closest.descriptor.index;
  }

  if (closest.descriptor.index > draggable.descriptor.index) {
    return closest.descriptor.index - 1;
  }

  return closest.descriptor.index;
}

var getReorderImpact = (function (_ref2) {
  var targetRect = _ref2.pageBorderBoxWithDroppableScroll,
      draggable = _ref2.draggable,
      destination = _ref2.destination,
      insideDestination = _ref2.insideDestination,
      last = _ref2.last,
      viewport = _ref2.viewport,
      afterCritical = _ref2.afterCritical;
  var axis = destination.axis;
  var displacedBy = getDisplacedBy(destination.axis, draggable.displaceBy);
  var displacement = displacedBy.value;
  var targetStart = targetRect[axis.start];
  var targetEnd = targetRect[axis.end];
  var withoutDragging = removeDraggableFromList(draggable, insideDestination);
  var closest = find$2(withoutDragging, function (child) {
    var id = child.descriptor.id;
    var childCenter = child.page.borderBox.center[axis.line];
    var didStartAfterCritical$1 = didStartAfterCritical(id, afterCritical);
    var isDisplaced = getIsDisplaced({
      displaced: last,
      id: id
    });

    if (didStartAfterCritical$1) {
      if (isDisplaced) {
        return targetEnd <= childCenter;
      }

      return targetStart < childCenter - displacement;
    }

    if (isDisplaced) {
      return targetEnd <= childCenter + displacement;
    }

    return targetStart < childCenter;
  });
  var newIndex = atIndex({
    draggable: draggable,
    closest: closest,
    inHomeList: isHomeOf(draggable, destination)
  });
  return calculateReorderImpact({
    draggable: draggable,
    insideDestination: insideDestination,
    destination: destination,
    viewport: viewport,
    last: last,
    displacedBy: displacedBy,
    index: newIndex
  });
});

var combineThresholdDivisor = 4;
var getCombineImpact = (function (_ref) {
  var draggable = _ref.draggable,
      targetRect = _ref.pageBorderBoxWithDroppableScroll,
      previousImpact = _ref.previousImpact,
      destination = _ref.destination,
      insideDestination = _ref.insideDestination,
      afterCritical = _ref.afterCritical;

  if (!destination.isCombineEnabled) {
    return null;
  }

  var axis = destination.axis;
  var displacedBy = getDisplacedBy(destination.axis, draggable.displaceBy);
  var displacement = displacedBy.value;
  var targetStart = targetRect[axis.start];
  var targetEnd = targetRect[axis.end];
  var withoutDragging = removeDraggableFromList(draggable, insideDestination);
  var combineWith = find$2(withoutDragging, function (child) {
    var id = child.descriptor.id;
    var childRect = child.page.borderBox;
    var childSize = childRect[axis.size];
    var threshold = childSize / combineThresholdDivisor;
    var didStartAfterCritical$1 = didStartAfterCritical(id, afterCritical);
    var isDisplaced = getIsDisplaced({
      displaced: previousImpact.displaced,
      id: id
    });

    if (didStartAfterCritical$1) {
      if (isDisplaced) {
        return targetEnd > childRect[axis.start] + threshold && targetEnd < childRect[axis.end] - threshold;
      }

      return targetStart > childRect[axis.start] - displacement + threshold && targetStart < childRect[axis.end] - displacement - threshold;
    }

    if (isDisplaced) {
      return targetEnd > childRect[axis.start] + displacement + threshold && targetEnd < childRect[axis.end] + displacement - threshold;
    }

    return targetStart > childRect[axis.start] + threshold && targetStart < childRect[axis.end] - threshold;
  });

  if (!combineWith) {
    return null;
  }

  var impact = {
    displacedBy: displacedBy,
    displaced: previousImpact.displaced,
    at: {
      type: 'COMBINE',
      combine: {
        draggableId: combineWith.descriptor.id,
        droppableId: destination.descriptor.id
      }
    }
  };
  return impact;
});

var getDragImpact = (function (_ref) {
  var pageOffset = _ref.pageOffset,
      draggable = _ref.draggable,
      draggables = _ref.draggables,
      droppables = _ref.droppables,
      previousImpact = _ref.previousImpact,
      viewport = _ref.viewport,
      afterCritical = _ref.afterCritical;
  var pageBorderBox = offsetRectByPosition(draggable.page.borderBox, pageOffset);
  var destinationId = getDroppableOver$1({
    pageBorderBox: pageBorderBox,
    draggable: draggable,
    droppables: droppables
  });

  if (!destinationId) {
    return noImpact;
  }

  var destination = droppables[destinationId];
  var insideDestination = getDraggablesInsideDroppable(destination.descriptor.id, draggables);
  var pageBorderBoxWithDroppableScroll = withDroppableScroll(destination, pageBorderBox);
  return getCombineImpact({
    pageBorderBoxWithDroppableScroll: pageBorderBoxWithDroppableScroll,
    draggable: draggable,
    previousImpact: previousImpact,
    destination: destination,
    insideDestination: insideDestination,
    afterCritical: afterCritical
  }) || getReorderImpact({
    pageBorderBoxWithDroppableScroll: pageBorderBoxWithDroppableScroll,
    draggable: draggable,
    destination: destination,
    insideDestination: insideDestination,
    last: previousImpact.displaced,
    viewport: viewport,
    afterCritical: afterCritical
  });
});

var patchDroppableMap = (function (droppables, updated) {
  var _extends2;

  return _extends$a({}, droppables, (_extends2 = {}, _extends2[updated.descriptor.id] = updated, _extends2));
});

var clearUnusedPlaceholder = function clearUnusedPlaceholder(_ref) {
  var previousImpact = _ref.previousImpact,
      impact = _ref.impact,
      droppables = _ref.droppables;
  var last = whatIsDraggedOver(previousImpact);
  var now = whatIsDraggedOver(impact);

  if (!last) {
    return droppables;
  }

  if (last === now) {
    return droppables;
  }

  var lastDroppable = droppables[last];

  if (!lastDroppable.subject.withPlaceholder) {
    return droppables;
  }

  var updated = removePlaceholder(lastDroppable);
  return patchDroppableMap(droppables, updated);
};

var recomputePlaceholders = (function (_ref2) {
  var draggable = _ref2.draggable,
      draggables = _ref2.draggables,
      droppables = _ref2.droppables,
      previousImpact = _ref2.previousImpact,
      impact = _ref2.impact;
  var cleaned = clearUnusedPlaceholder({
    previousImpact: previousImpact,
    impact: impact,
    droppables: droppables
  });
  var isOver = whatIsDraggedOver(impact);

  if (!isOver) {
    return cleaned;
  }

  var droppable = droppables[isOver];

  if (isHomeOf(draggable, droppable)) {
    return cleaned;
  }

  if (droppable.subject.withPlaceholder) {
    return cleaned;
  }

  var patched = addPlaceholder(droppable, draggable, draggables);
  return patchDroppableMap(cleaned, patched);
});

var update$1 = (function (_ref) {
  var state = _ref.state,
      forcedClientSelection = _ref.clientSelection,
      forcedDimensions = _ref.dimensions,
      forcedViewport = _ref.viewport,
      forcedImpact = _ref.impact,
      scrollJumpRequest = _ref.scrollJumpRequest;
  var viewport = forcedViewport || state.viewport;
  var dimensions = forcedDimensions || state.dimensions;
  var clientSelection = forcedClientSelection || state.current.client.selection;
  var offset = subtract(clientSelection, state.initial.client.selection);
  var client = {
    offset: offset,
    selection: clientSelection,
    borderBoxCenter: add(state.initial.client.borderBoxCenter, offset)
  };
  var page = {
    selection: add(client.selection, viewport.scroll.current),
    borderBoxCenter: add(client.borderBoxCenter, viewport.scroll.current),
    offset: add(client.offset, viewport.scroll.diff.value)
  };
  var current = {
    client: client,
    page: page
  };

  if (state.phase === 'COLLECTING') {
    return _extends$a({
      phase: 'COLLECTING'
    }, state, {
      dimensions: dimensions,
      viewport: viewport,
      current: current
    });
  }

  var draggable = dimensions.draggables[state.critical.draggable.id];
  var newImpact = forcedImpact || getDragImpact({
    pageOffset: page.offset,
    draggable: draggable,
    draggables: dimensions.draggables,
    droppables: dimensions.droppables,
    previousImpact: state.impact,
    viewport: viewport,
    afterCritical: state.afterCritical
  });
  var withUpdatedPlaceholders = recomputePlaceholders({
    draggable: draggable,
    impact: newImpact,
    previousImpact: state.impact,
    draggables: dimensions.draggables,
    droppables: dimensions.droppables
  });

  var result = _extends$a({}, state, {
    current: current,
    dimensions: {
      draggables: dimensions.draggables,
      droppables: withUpdatedPlaceholders
    },
    impact: newImpact,
    viewport: viewport,
    scrollJumpRequest: scrollJumpRequest || null,
    forceShouldAnimate: scrollJumpRequest ? false : null
  });

  return result;
});

function getDraggables$1(ids, draggables) {
  return ids.map(function (id) {
    return draggables[id];
  });
}

var recompute = (function (_ref) {
  var impact = _ref.impact,
      viewport = _ref.viewport,
      draggables = _ref.draggables,
      destination = _ref.destination,
      forceShouldAnimate = _ref.forceShouldAnimate;
  var last = impact.displaced;
  var afterDragging = getDraggables$1(last.all, draggables);
  var displaced = getDisplacementGroups({
    afterDragging: afterDragging,
    destination: destination,
    displacedBy: impact.displacedBy,
    viewport: viewport.frame,
    forceShouldAnimate: forceShouldAnimate,
    last: last
  });
  return _extends$a({}, impact, {
    displaced: displaced
  });
});

var getClientBorderBoxCenter = (function (_ref) {
  var impact = _ref.impact,
      draggable = _ref.draggable,
      droppable = _ref.droppable,
      draggables = _ref.draggables,
      viewport = _ref.viewport,
      afterCritical = _ref.afterCritical;
  var pageBorderBoxCenter = getPageBorderBoxCenterFromImpact({
    impact: impact,
    draggable: draggable,
    draggables: draggables,
    droppable: droppable,
    afterCritical: afterCritical
  });
  return getClientFromPageBorderBoxCenter({
    pageBorderBoxCenter: pageBorderBoxCenter,
    draggable: draggable,
    viewport: viewport
  });
});

var refreshSnap = (function (_ref) {
  var state = _ref.state,
      forcedDimensions = _ref.dimensions,
      forcedViewport = _ref.viewport;
  !(state.movementMode === 'SNAP') ? process.env.NODE_ENV !== "production" ? invariant$3(false) : invariant$3(false) : void 0;
  var needsVisibilityCheck = state.impact;
  var viewport = forcedViewport || state.viewport;
  var dimensions = forcedDimensions || state.dimensions;
  var draggables = dimensions.draggables,
      droppables = dimensions.droppables;
  var draggable = draggables[state.critical.draggable.id];
  var isOver = whatIsDraggedOver(needsVisibilityCheck);
  !isOver ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Must be over a destination in SNAP movement mode') : invariant$3(false) : void 0;
  var destination = droppables[isOver];
  var impact = recompute({
    impact: needsVisibilityCheck,
    viewport: viewport,
    destination: destination,
    draggables: draggables
  });
  var clientSelection = getClientBorderBoxCenter({
    impact: impact,
    draggable: draggable,
    droppable: destination,
    draggables: draggables,
    viewport: viewport,
    afterCritical: state.afterCritical
  });
  return update$1({
    impact: impact,
    clientSelection: clientSelection,
    state: state,
    dimensions: dimensions,
    viewport: viewport
  });
});

var getHomeLocation = (function (descriptor) {
  return {
    index: descriptor.index,
    droppableId: descriptor.droppableId
  };
});

var getLiftEffect = (function (_ref) {
  var draggable = _ref.draggable,
      home = _ref.home,
      draggables = _ref.draggables,
      viewport = _ref.viewport;
  var displacedBy = getDisplacedBy(home.axis, draggable.displaceBy);
  var insideHome = getDraggablesInsideDroppable(home.descriptor.id, draggables);
  var rawIndex = insideHome.indexOf(draggable);
  !(rawIndex !== -1) ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Expected draggable to be inside home list') : invariant$3(false) : void 0;
  var afterDragging = insideHome.slice(rawIndex + 1);
  var effected = afterDragging.reduce(function (previous, item) {
    previous[item.descriptor.id] = true;
    return previous;
  }, {});
  var afterCritical = {
    inVirtualList: home.descriptor.mode === 'virtual',
    displacedBy: displacedBy,
    effected: effected
  };
  var displaced = getDisplacementGroups({
    afterDragging: afterDragging,
    destination: home,
    displacedBy: displacedBy,
    last: null,
    viewport: viewport.frame,
    forceShouldAnimate: false
  });
  var impact = {
    displaced: displaced,
    displacedBy: displacedBy,
    at: {
      type: 'REORDER',
      destination: getHomeLocation(draggable.descriptor)
    }
  };
  return {
    impact: impact,
    afterCritical: afterCritical
  };
});

var patchDimensionMap = (function (dimensions, updated) {
  return {
    draggables: dimensions.draggables,
    droppables: patchDroppableMap(dimensions.droppables, updated)
  };
});
var start$1 = function start(key) {
  if (process.env.NODE_ENV !== 'production') {
    {
      return;
    }
  }
};
var finish = function finish(key) {
  if (process.env.NODE_ENV !== 'production') {
    {
      return;
    }
  }
};

var offsetDraggable = (function (_ref) {
  var draggable = _ref.draggable,
      offset$1 = _ref.offset,
      initialWindowScroll = _ref.initialWindowScroll;
  var client = offset$3(draggable.client, offset$1);
  var page = withScroll(client, initialWindowScroll);

  var moved = _extends$a({}, draggable, {
    placeholder: _extends$a({}, draggable.placeholder, {
      client: client
    }),
    client: client,
    page: page
  });

  return moved;
});

var getFrame = (function (droppable) {
  var frame = droppable.frame;
  !frame ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Expected Droppable to have a frame') : invariant$3(false) : void 0;
  return frame;
});

var adjustAdditionsForScrollChanges = (function (_ref) {
  var additions = _ref.additions,
      updatedDroppables = _ref.updatedDroppables,
      viewport = _ref.viewport;
  var windowScrollChange = viewport.scroll.diff.value;
  return additions.map(function (draggable) {
    var droppableId = draggable.descriptor.droppableId;
    var modified = updatedDroppables[droppableId];
    var frame = getFrame(modified);
    var droppableScrollChange = frame.scroll.diff.value;
    var totalChange = add(windowScrollChange, droppableScrollChange);
    var moved = offsetDraggable({
      draggable: draggable,
      offset: totalChange,
      initialWindowScroll: viewport.scroll.initial
    });
    return moved;
  });
});
var publishWhileDraggingInVirtual = (function (_ref) {
  var _extends2, _extends3;

  var state = _ref.state,
      published = _ref.published;
  start$1();
  var withScrollChange = published.modified.map(function (update) {
    var existing = state.dimensions.droppables[update.droppableId];
    var scrolled = scrollDroppable(existing, update.scroll);
    return scrolled;
  });

  var droppables = _extends$a({}, state.dimensions.droppables, toDroppableMap(withScrollChange));

  var updatedAdditions = toDraggableMap(adjustAdditionsForScrollChanges({
    additions: published.additions,
    updatedDroppables: droppables,
    viewport: state.viewport
  }));

  var draggables = _extends$a({}, state.dimensions.draggables, updatedAdditions);

  published.removals.forEach(function (id) {
    delete draggables[id];
  });
  var dimensions = {
    droppables: droppables,
    draggables: draggables
  };
  var wasOverId = whatIsDraggedOver(state.impact);
  var wasOver = wasOverId ? dimensions.droppables[wasOverId] : null;
  var draggable = dimensions.draggables[state.critical.draggable.id];
  var home = dimensions.droppables[state.critical.droppable.id];

  var _getLiftEffect = getLiftEffect({
    draggable: draggable,
    home: home,
    draggables: draggables,
    viewport: state.viewport
  }),
      onLiftImpact = _getLiftEffect.impact,
      afterCritical = _getLiftEffect.afterCritical;

  var previousImpact = wasOver && wasOver.isCombineEnabled ? state.impact : onLiftImpact;
  var impact = getDragImpact({
    pageOffset: state.current.page.offset,
    draggable: dimensions.draggables[state.critical.draggable.id],
    draggables: dimensions.draggables,
    droppables: dimensions.droppables,
    previousImpact: previousImpact,
    viewport: state.viewport,
    afterCritical: afterCritical
  });
  finish();

  var draggingState = _extends$a({
    phase: 'DRAGGING'
  }, state, (_extends2 = {}, _extends2["phase"] = 'DRAGGING', _extends2.impact = impact, _extends2.onLiftImpact = onLiftImpact, _extends2.dimensions = dimensions, _extends2.afterCritical = afterCritical, _extends2.forceShouldAnimate = false, _extends2));

  if (state.phase === 'COLLECTING') {
    return draggingState;
  }

  var dropPending = _extends$a({
    phase: 'DROP_PENDING'
  }, draggingState, (_extends3 = {}, _extends3["phase"] = 'DROP_PENDING', _extends3.reason = state.reason, _extends3.isWaiting = false, _extends3));

  return dropPending;
});

var isSnapping = function isSnapping(state) {
  return state.movementMode === 'SNAP';
};

var postDroppableChange = function postDroppableChange(state, updated, isEnabledChanging) {
  var dimensions = patchDimensionMap(state.dimensions, updated);

  if (!isSnapping(state) || isEnabledChanging) {
    return update$1({
      state: state,
      dimensions: dimensions
    });
  }

  return refreshSnap({
    state: state,
    dimensions: dimensions
  });
};

function removeScrollJumpRequest(state) {
  if (state.isDragging && state.movementMode === 'SNAP') {
    return _extends$a({
      phase: 'DRAGGING'
    }, state, {
      scrollJumpRequest: null
    });
  }

  return state;
}

var idle = {
  phase: 'IDLE',
  completed: null,
  shouldFlush: false
};
var reducer = (function (state, action) {
  if (state === void 0) {
    state = idle;
  }

  if (action.type === 'FLUSH') {
    return _extends$a({}, idle, {
      shouldFlush: true
    });
  }

  if (action.type === 'INITIAL_PUBLISH') {
    !(state.phase === 'IDLE') ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'INITIAL_PUBLISH must come after a IDLE phase') : invariant$3(false) : void 0;
    var _action$payload = action.payload,
        critical = _action$payload.critical,
        clientSelection = _action$payload.clientSelection,
        viewport = _action$payload.viewport,
        dimensions = _action$payload.dimensions,
        movementMode = _action$payload.movementMode;
    var draggable = dimensions.draggables[critical.draggable.id];
    var home = dimensions.droppables[critical.droppable.id];
    var client = {
      selection: clientSelection,
      borderBoxCenter: draggable.client.borderBox.center,
      offset: origin
    };
    var initial = {
      client: client,
      page: {
        selection: add(client.selection, viewport.scroll.initial),
        borderBoxCenter: add(client.selection, viewport.scroll.initial),
        offset: add(client.selection, viewport.scroll.diff.value)
      }
    };
    var isWindowScrollAllowed = toDroppableList(dimensions.droppables).every(function (item) {
      return !item.isFixedOnPage;
    });

    var _getLiftEffect = getLiftEffect({
      draggable: draggable,
      home: home,
      draggables: dimensions.draggables,
      viewport: viewport
    }),
        impact = _getLiftEffect.impact,
        afterCritical = _getLiftEffect.afterCritical;

    var result = {
      phase: 'DRAGGING',
      isDragging: true,
      critical: critical,
      movementMode: movementMode,
      dimensions: dimensions,
      initial: initial,
      current: initial,
      isWindowScrollAllowed: isWindowScrollAllowed,
      impact: impact,
      afterCritical: afterCritical,
      onLiftImpact: impact,
      viewport: viewport,
      scrollJumpRequest: null,
      forceShouldAnimate: null
    };
    return result;
  }

  if (action.type === 'COLLECTION_STARTING') {
    var _extends2;

    if (state.phase === 'COLLECTING' || state.phase === 'DROP_PENDING') {
      return state;
    }

    !(state.phase === 'DRAGGING') ? process.env.NODE_ENV !== "production" ? invariant$3(false, "Collection cannot start from phase " + state.phase) : invariant$3(false) : void 0;

    var _result = _extends$a({
      phase: 'COLLECTING'
    }, state, (_extends2 = {}, _extends2["phase"] = 'COLLECTING', _extends2));

    return _result;
  }

  if (action.type === 'PUBLISH_WHILE_DRAGGING') {
    !(state.phase === 'COLLECTING' || state.phase === 'DROP_PENDING') ? process.env.NODE_ENV !== "production" ? invariant$3(false, "Unexpected " + action.type + " received in phase " + state.phase) : invariant$3(false) : void 0;
    return publishWhileDraggingInVirtual({
      state: state,
      published: action.payload
    });
  }

  if (action.type === 'MOVE') {
    if (state.phase === 'DROP_PENDING') {
      return state;
    }

    !isMovementAllowed(state) ? process.env.NODE_ENV !== "production" ? invariant$3(false, action.type + " not permitted in phase " + state.phase) : invariant$3(false) : void 0;
    var _clientSelection = action.payload.client;

    if (isEqual(_clientSelection, state.current.client.selection)) {
      return state;
    }

    return update$1({
      state: state,
      clientSelection: _clientSelection,
      impact: isSnapping(state) ? state.impact : null
    });
  }

  if (action.type === 'UPDATE_DROPPABLE_SCROLL') {
    if (state.phase === 'DROP_PENDING') {
      return removeScrollJumpRequest(state);
    }

    if (state.phase === 'COLLECTING') {
      return removeScrollJumpRequest(state);
    }

    !isMovementAllowed(state) ? process.env.NODE_ENV !== "production" ? invariant$3(false, action.type + " not permitted in phase " + state.phase) : invariant$3(false) : void 0;
    var _action$payload2 = action.payload,
        id = _action$payload2.id,
        newScroll = _action$payload2.newScroll;
    var target = state.dimensions.droppables[id];

    if (!target) {
      return state;
    }

    var scrolled = scrollDroppable(target, newScroll);
    return postDroppableChange(state, scrolled, false);
  }

  if (action.type === 'UPDATE_DROPPABLE_IS_ENABLED') {
    if (state.phase === 'DROP_PENDING') {
      return state;
    }

    !isMovementAllowed(state) ? process.env.NODE_ENV !== "production" ? invariant$3(false, "Attempting to move in an unsupported phase " + state.phase) : invariant$3(false) : void 0;
    var _action$payload3 = action.payload,
        _id = _action$payload3.id,
        isEnabled = _action$payload3.isEnabled;
    var _target = state.dimensions.droppables[_id];
    !_target ? process.env.NODE_ENV !== "production" ? invariant$3(false, "Cannot find Droppable[id: " + _id + "] to toggle its enabled state") : invariant$3(false) : void 0;
    !(_target.isEnabled !== isEnabled) ? process.env.NODE_ENV !== "production" ? invariant$3(false, "Trying to set droppable isEnabled to " + String(isEnabled) + "\n      but it is already " + String(_target.isEnabled)) : invariant$3(false) : void 0;

    var updated = _extends$a({}, _target, {
      isEnabled: isEnabled
    });

    return postDroppableChange(state, updated, true);
  }

  if (action.type === 'UPDATE_DROPPABLE_IS_COMBINE_ENABLED') {
    if (state.phase === 'DROP_PENDING') {
      return state;
    }

    !isMovementAllowed(state) ? process.env.NODE_ENV !== "production" ? invariant$3(false, "Attempting to move in an unsupported phase " + state.phase) : invariant$3(false) : void 0;
    var _action$payload4 = action.payload,
        _id2 = _action$payload4.id,
        isCombineEnabled = _action$payload4.isCombineEnabled;
    var _target2 = state.dimensions.droppables[_id2];
    !_target2 ? process.env.NODE_ENV !== "production" ? invariant$3(false, "Cannot find Droppable[id: " + _id2 + "] to toggle its isCombineEnabled state") : invariant$3(false) : void 0;
    !(_target2.isCombineEnabled !== isCombineEnabled) ? process.env.NODE_ENV !== "production" ? invariant$3(false, "Trying to set droppable isCombineEnabled to " + String(isCombineEnabled) + "\n      but it is already " + String(_target2.isCombineEnabled)) : invariant$3(false) : void 0;

    var _updated = _extends$a({}, _target2, {
      isCombineEnabled: isCombineEnabled
    });

    return postDroppableChange(state, _updated, true);
  }

  if (action.type === 'MOVE_BY_WINDOW_SCROLL') {
    if (state.phase === 'DROP_PENDING' || state.phase === 'DROP_ANIMATING') {
      return state;
    }

    !isMovementAllowed(state) ? process.env.NODE_ENV !== "production" ? invariant$3(false, "Cannot move by window in phase " + state.phase) : invariant$3(false) : void 0;
    !state.isWindowScrollAllowed ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Window scrolling is currently not supported for fixed lists') : invariant$3(false) : void 0;
    var _newScroll = action.payload.newScroll;

    if (isEqual(state.viewport.scroll.current, _newScroll)) {
      return removeScrollJumpRequest(state);
    }

    var _viewport = scrollViewport(state.viewport, _newScroll);

    if (isSnapping(state)) {
      return refreshSnap({
        state: state,
        viewport: _viewport
      });
    }

    return update$1({
      state: state,
      viewport: _viewport
    });
  }

  if (action.type === 'UPDATE_VIEWPORT_MAX_SCROLL') {
    if (!isMovementAllowed(state)) {
      return state;
    }

    var maxScroll = action.payload.maxScroll;

    if (isEqual(maxScroll, state.viewport.scroll.max)) {
      return state;
    }

    var withMaxScroll = _extends$a({}, state.viewport, {
      scroll: _extends$a({}, state.viewport.scroll, {
        max: maxScroll
      })
    });

    return _extends$a({
      phase: 'DRAGGING'
    }, state, {
      viewport: withMaxScroll
    });
  }

  if (action.type === 'MOVE_UP' || action.type === 'MOVE_DOWN' || action.type === 'MOVE_LEFT' || action.type === 'MOVE_RIGHT') {
    if (state.phase === 'COLLECTING' || state.phase === 'DROP_PENDING') {
      return state;
    }

    !(state.phase === 'DRAGGING') ? process.env.NODE_ENV !== "production" ? invariant$3(false, action.type + " received while not in DRAGGING phase") : invariant$3(false) : void 0;

    var _result2 = moveInDirection({
      state: state,
      type: action.type
    });

    if (!_result2) {
      return state;
    }

    return update$1({
      state: state,
      impact: _result2.impact,
      clientSelection: _result2.clientSelection,
      scrollJumpRequest: _result2.scrollJumpRequest
    });
  }

  if (action.type === 'DROP_PENDING') {
    var _extends3;

    var reason = action.payload.reason;
    !(state.phase === 'COLLECTING') ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Can only move into the DROP_PENDING phase from the COLLECTING phase') : invariant$3(false) : void 0;

    var newState = _extends$a({
      phase: 'DROP_PENDING'
    }, state, (_extends3 = {}, _extends3["phase"] = 'DROP_PENDING', _extends3.isWaiting = true, _extends3.reason = reason, _extends3));

    return newState;
  }

  if (action.type === 'DROP_ANIMATE') {
    var _action$payload5 = action.payload,
        completed = _action$payload5.completed,
        dropDuration = _action$payload5.dropDuration,
        newHomeClientOffset = _action$payload5.newHomeClientOffset;
    !(state.phase === 'DRAGGING' || state.phase === 'DROP_PENDING') ? process.env.NODE_ENV !== "production" ? invariant$3(false, "Cannot animate drop from phase " + state.phase) : invariant$3(false) : void 0;
    var _result3 = {
      phase: 'DROP_ANIMATING',
      completed: completed,
      dropDuration: dropDuration,
      newHomeClientOffset: newHomeClientOffset,
      dimensions: state.dimensions
    };
    return _result3;
  }

  if (action.type === 'DROP_COMPLETE') {
    var _completed = action.payload.completed;
    return {
      phase: 'IDLE',
      completed: _completed,
      shouldFlush: false
    };
  }

  return state;
});

var beforeInitialCapture = function beforeInitialCapture(args) {
  return {
    type: 'BEFORE_INITIAL_CAPTURE',
    payload: args
  };
};
var lift = function lift(args) {
  return {
    type: 'LIFT',
    payload: args
  };
};
var initialPublish = function initialPublish(args) {
  return {
    type: 'INITIAL_PUBLISH',
    payload: args
  };
};
var publishWhileDragging = function publishWhileDragging(args) {
  return {
    type: 'PUBLISH_WHILE_DRAGGING',
    payload: args
  };
};
var collectionStarting = function collectionStarting() {
  return {
    type: 'COLLECTION_STARTING',
    payload: null
  };
};
var updateDroppableScroll = function updateDroppableScroll(args) {
  return {
    type: 'UPDATE_DROPPABLE_SCROLL',
    payload: args
  };
};
var updateDroppableIsEnabled = function updateDroppableIsEnabled(args) {
  return {
    type: 'UPDATE_DROPPABLE_IS_ENABLED',
    payload: args
  };
};
var updateDroppableIsCombineEnabled = function updateDroppableIsCombineEnabled(args) {
  return {
    type: 'UPDATE_DROPPABLE_IS_COMBINE_ENABLED',
    payload: args
  };
};
var move = function move(args) {
  return {
    type: 'MOVE',
    payload: args
  };
};
var moveByWindowScroll = function moveByWindowScroll(args) {
  return {
    type: 'MOVE_BY_WINDOW_SCROLL',
    payload: args
  };
};
var updateViewportMaxScroll = function updateViewportMaxScroll(args) {
  return {
    type: 'UPDATE_VIEWPORT_MAX_SCROLL',
    payload: args
  };
};
var moveUp = function moveUp() {
  return {
    type: 'MOVE_UP',
    payload: null
  };
};
var moveDown = function moveDown() {
  return {
    type: 'MOVE_DOWN',
    payload: null
  };
};
var moveRight = function moveRight() {
  return {
    type: 'MOVE_RIGHT',
    payload: null
  };
};
var moveLeft = function moveLeft() {
  return {
    type: 'MOVE_LEFT',
    payload: null
  };
};
var flush = function flush() {
  return {
    type: 'FLUSH',
    payload: null
  };
};
var animateDrop = function animateDrop(args) {
  return {
    type: 'DROP_ANIMATE',
    payload: args
  };
};
var completeDrop = function completeDrop(args) {
  return {
    type: 'DROP_COMPLETE',
    payload: args
  };
};
var drop = function drop(args) {
  return {
    type: 'DROP',
    payload: args
  };
};
var dropPending = function dropPending(args) {
  return {
    type: 'DROP_PENDING',
    payload: args
  };
};
var dropAnimationFinished = function dropAnimationFinished() {
  return {
    type: 'DROP_ANIMATION_FINISHED',
    payload: null
  };
};

function checkIndexes(insideDestination) {
  if (insideDestination.length <= 1) {
    return;
  }

  var indexes = insideDestination.map(function (d) {
    return d.descriptor.index;
  });
  var errors = {};

  for (var i = 1; i < indexes.length; i++) {
    var current = indexes[i];
    var previous = indexes[i - 1];

    if (current !== previous + 1) {
      errors[current] = true;
    }
  }

  if (!keys(errors).length) {
    return;
  }

  var formatted = indexes.map(function (index) {
    var hasError = Boolean(errors[index]);
    return hasError ? "[\uD83D\uDD25" + index + "]" : "" + index;
  }).join(', ');
  process.env.NODE_ENV !== "production" ? warning$5("\n    Detected non-consecutive <Draggable /> indexes.\n\n    (This can cause unexpected bugs)\n\n    " + formatted + "\n  ") : void 0;
}

function validateDimensions(critical, dimensions) {
  if (process.env.NODE_ENV !== 'production') {
    var insideDestination = getDraggablesInsideDroppable(critical.droppable.id, dimensions.draggables);
    checkIndexes(insideDestination);
  }
}

var lift$1 = (function (marshal) {
  return function (_ref) {
    var getState = _ref.getState,
        dispatch = _ref.dispatch;
    return function (next) {
      return function (action) {
        if (action.type !== 'LIFT') {
          next(action);
          return;
        }

        var _action$payload = action.payload,
            id = _action$payload.id,
            clientSelection = _action$payload.clientSelection,
            movementMode = _action$payload.movementMode;
        var initial = getState();

        if (initial.phase === 'DROP_ANIMATING') {
          dispatch(completeDrop({
            completed: initial.completed
          }));
        }

        !(getState().phase === 'IDLE') ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Unexpected phase to start a drag') : invariant$3(false) : void 0;
        dispatch(flush());
        dispatch(beforeInitialCapture({
          draggableId: id,
          movementMode: movementMode
        }));
        var scrollOptions = {
          shouldPublishImmediately: movementMode === 'SNAP'
        };
        var request = {
          draggableId: id,
          scrollOptions: scrollOptions
        };

        var _marshal$startPublish = marshal.startPublishing(request),
            critical = _marshal$startPublish.critical,
            dimensions = _marshal$startPublish.dimensions,
            viewport = _marshal$startPublish.viewport;

        validateDimensions(critical, dimensions);
        dispatch(initialPublish({
          critical: critical,
          dimensions: dimensions,
          clientSelection: clientSelection,
          movementMode: movementMode,
          viewport: viewport
        }));
      };
    };
  };
});

var style = (function (marshal) {
  return function () {
    return function (next) {
      return function (action) {
        if (action.type === 'INITIAL_PUBLISH') {
          marshal.dragging();
        }

        if (action.type === 'DROP_ANIMATE') {
          marshal.dropping(action.payload.completed.result.reason);
        }

        if (action.type === 'FLUSH' || action.type === 'DROP_COMPLETE') {
          marshal.resting();
        }

        next(action);
      };
    };
  };
});

var curves = {
  outOfTheWay: 'cubic-bezier(0.2, 0, 0, 1)',
  drop: 'cubic-bezier(.2,1,.1,1)'
};
var combine = {
  opacity: {
    drop: 0,
    combining: 0.7
  },
  scale: {
    drop: 0.75
  }
};
var timings = {
  outOfTheWay: 0.2,
  minDropTime: 0.33,
  maxDropTime: 0.55
};
var outOfTheWayTiming = timings.outOfTheWay + "s " + curves.outOfTheWay;
var transitions = {
  fluid: "opacity " + outOfTheWayTiming,
  snap: "transform " + outOfTheWayTiming + ", opacity " + outOfTheWayTiming,
  drop: function drop(duration) {
    var timing = duration + "s " + curves.drop;
    return "transform " + timing + ", opacity " + timing;
  },
  outOfTheWay: "transform " + outOfTheWayTiming,
  placeholder: "height " + outOfTheWayTiming + ", width " + outOfTheWayTiming + ", margin " + outOfTheWayTiming
};

var moveTo = function moveTo(offset) {
  return isEqual(offset, origin) ? null : "translate(" + offset.x + "px, " + offset.y + "px)";
};

var transforms = {
  moveTo: moveTo,
  drop: function drop(offset, isCombining) {
    var translate = moveTo(offset);

    if (!translate) {
      return null;
    }

    if (!isCombining) {
      return translate;
    }

    return translate + " scale(" + combine.scale.drop + ")";
  }
};

var minDropTime = timings.minDropTime,
    maxDropTime = timings.maxDropTime;
var dropTimeRange = maxDropTime - minDropTime;
var maxDropTimeAtDistance = 1500;
var cancelDropModifier = 0.6;
var getDropDuration = (function (_ref) {
  var current = _ref.current,
      destination = _ref.destination,
      reason = _ref.reason;
  var distance$1 = distance(current, destination);

  if (distance$1 <= 0) {
    return minDropTime;
  }

  if (distance$1 >= maxDropTimeAtDistance) {
    return maxDropTime;
  }

  var percentage = distance$1 / maxDropTimeAtDistance;
  var duration = minDropTime + dropTimeRange * percentage;
  var withDuration = reason === 'CANCEL' ? duration * cancelDropModifier : duration;
  return Number(withDuration.toFixed(2));
});

var getNewHomeClientOffset = (function (_ref) {
  var impact = _ref.impact,
      draggable = _ref.draggable,
      dimensions = _ref.dimensions,
      viewport = _ref.viewport,
      afterCritical = _ref.afterCritical;
  var draggables = dimensions.draggables,
      droppables = dimensions.droppables;
  var droppableId = whatIsDraggedOver(impact);
  var destination = droppableId ? droppables[droppableId] : null;
  var home = droppables[draggable.descriptor.droppableId];
  var newClientCenter = getClientBorderBoxCenter({
    impact: impact,
    draggable: draggable,
    draggables: draggables,
    afterCritical: afterCritical,
    droppable: destination || home,
    viewport: viewport
  });
  var offset = subtract(newClientCenter, draggable.client.borderBox.center);
  return offset;
});

var getDropImpact = (function (_ref) {
  var draggables = _ref.draggables,
      reason = _ref.reason,
      lastImpact = _ref.lastImpact,
      home = _ref.home,
      viewport = _ref.viewport,
      onLiftImpact = _ref.onLiftImpact;

  if (!lastImpact.at || reason !== 'DROP') {
    var recomputedHomeImpact = recompute({
      draggables: draggables,
      impact: onLiftImpact,
      destination: home,
      viewport: viewport,
      forceShouldAnimate: true
    });
    return {
      impact: recomputedHomeImpact,
      didDropInsideDroppable: false
    };
  }

  if (lastImpact.at.type === 'REORDER') {
    return {
      impact: lastImpact,
      didDropInsideDroppable: true
    };
  }

  var withoutMovement = _extends$a({}, lastImpact, {
    displaced: emptyGroups
  });

  return {
    impact: withoutMovement,
    didDropInsideDroppable: true
  };
});

var drop$1 = (function (_ref) {
  var getState = _ref.getState,
      dispatch = _ref.dispatch;
  return function (next) {
    return function (action) {
      if (action.type !== 'DROP') {
        next(action);
        return;
      }

      var state = getState();
      var reason = action.payload.reason;

      if (state.phase === 'COLLECTING') {
        dispatch(dropPending({
          reason: reason
        }));
        return;
      }

      if (state.phase === 'IDLE') {
        return;
      }

      var isWaitingForDrop = state.phase === 'DROP_PENDING' && state.isWaiting;
      !!isWaitingForDrop ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'A DROP action occurred while DROP_PENDING and still waiting') : invariant$3(false) : void 0;
      !(state.phase === 'DRAGGING' || state.phase === 'DROP_PENDING') ? process.env.NODE_ENV !== "production" ? invariant$3(false, "Cannot drop in phase: " + state.phase) : invariant$3(false) : void 0;
      var critical = state.critical;
      var dimensions = state.dimensions;
      var draggable = dimensions.draggables[state.critical.draggable.id];

      var _getDropImpact = getDropImpact({
        reason: reason,
        lastImpact: state.impact,
        afterCritical: state.afterCritical,
        onLiftImpact: state.onLiftImpact,
        home: state.dimensions.droppables[state.critical.droppable.id],
        viewport: state.viewport,
        draggables: state.dimensions.draggables
      }),
          impact = _getDropImpact.impact,
          didDropInsideDroppable = _getDropImpact.didDropInsideDroppable;

      var destination = didDropInsideDroppable ? tryGetDestination(impact) : null;
      var combine = didDropInsideDroppable ? tryGetCombine(impact) : null;
      var source = {
        index: critical.draggable.index,
        droppableId: critical.droppable.id
      };
      var result = {
        draggableId: draggable.descriptor.id,
        type: draggable.descriptor.type,
        source: source,
        reason: reason,
        mode: state.movementMode,
        destination: destination,
        combine: combine
      };
      var newHomeClientOffset = getNewHomeClientOffset({
        impact: impact,
        draggable: draggable,
        dimensions: dimensions,
        viewport: state.viewport,
        afterCritical: state.afterCritical
      });
      var completed = {
        critical: state.critical,
        afterCritical: state.afterCritical,
        result: result,
        impact: impact
      };
      var isAnimationRequired = !isEqual(state.current.client.offset, newHomeClientOffset) || Boolean(result.combine);

      if (!isAnimationRequired) {
        dispatch(completeDrop({
          completed: completed
        }));
        return;
      }

      var dropDuration = getDropDuration({
        current: state.current.client.offset,
        destination: newHomeClientOffset,
        reason: reason
      });
      var args = {
        newHomeClientOffset: newHomeClientOffset,
        dropDuration: dropDuration,
        completed: completed
      };
      dispatch(animateDrop(args));
    };
  };
});

var getWindowScroll$1 = (function () {
  return {
    x: window.pageXOffset,
    y: window.pageYOffset
  };
});

function getWindowScrollBinding(update) {
  return {
    eventName: 'scroll',
    options: {
      passive: true,
      capture: false
    },
    fn: function fn(event) {
      if (event.target !== window && event.target !== window.document) {
        return;
      }

      update();
    }
  };
}

function getScrollListener(_ref) {
  var onWindowScroll = _ref.onWindowScroll;

  function updateScroll() {
    onWindowScroll(getWindowScroll$1());
  }

  var scheduled = rafSchd$1(updateScroll);
  var binding = getWindowScrollBinding(scheduled);
  var unbind = noop$7;

  function isActive() {
    return unbind !== noop$7;
  }

  function start() {
    !!isActive() ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot start scroll listener when already active') : invariant$3(false) : void 0;
    unbind = bindEvents(window, [binding]);
  }

  function stop() {
    !isActive() ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot stop scroll listener when not active') : invariant$3(false) : void 0;
    scheduled.cancel();
    unbind();
    unbind = noop$7;
  }

  return {
    start: start,
    stop: stop,
    isActive: isActive
  };
}

var shouldEnd = function shouldEnd(action) {
  return action.type === 'DROP_COMPLETE' || action.type === 'DROP_ANIMATE' || action.type === 'FLUSH';
};

var scrollListener = (function (store) {
  var listener = getScrollListener({
    onWindowScroll: function onWindowScroll(newScroll) {
      store.dispatch(moveByWindowScroll({
        newScroll: newScroll
      }));
    }
  });
  return function (next) {
    return function (action) {
      if (!listener.isActive() && action.type === 'INITIAL_PUBLISH') {
        listener.start();
      }

      if (listener.isActive() && shouldEnd(action)) {
        listener.stop();
      }

      next(action);
    };
  };
});

var getExpiringAnnounce = (function (announce) {
  var wasCalled = false;
  var isExpired = false;
  var timeoutId = setTimeout(function () {
    isExpired = true;
  });

  var result = function result(message) {
    if (wasCalled) {
      process.env.NODE_ENV !== "production" ? warning$5('Announcement already made. Not making a second announcement') : void 0;
      return;
    }

    if (isExpired) {
      process.env.NODE_ENV !== "production" ? warning$5("\n        Announcements cannot be made asynchronously.\n        Default message has already been announced.\n      ") : void 0;
      return;
    }

    wasCalled = true;
    announce(message);
    clearTimeout(timeoutId);
  };

  result.wasCalled = function () {
    return wasCalled;
  };

  return result;
});

var getAsyncMarshal = (function () {
  var entries = [];

  var execute = function execute(timerId) {
    var index = findIndex$1(entries, function (item) {
      return item.timerId === timerId;
    });
    !(index !== -1) ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Could not find timer') : invariant$3(false) : void 0;

    var _entries$splice = entries.splice(index, 1),
        entry = _entries$splice[0];

    entry.callback();
  };

  var add = function add(fn) {
    var timerId = setTimeout(function () {
      return execute(timerId);
    });
    var entry = {
      timerId: timerId,
      callback: fn
    };
    entries.push(entry);
  };

  var flush = function flush() {
    if (!entries.length) {
      return;
    }

    var shallow = [].concat(entries);
    entries.length = 0;
    shallow.forEach(function (entry) {
      clearTimeout(entry.timerId);
      entry.callback();
    });
  };

  return {
    add: add,
    flush: flush
  };
});

var areLocationsEqual = function areLocationsEqual(first, second) {
  if (first == null && second == null) {
    return true;
  }

  if (first == null || second == null) {
    return false;
  }

  return first.droppableId === second.droppableId && first.index === second.index;
};
var isCombineEqual = function isCombineEqual(first, second) {
  if (first == null && second == null) {
    return true;
  }

  if (first == null || second == null) {
    return false;
  }

  return first.draggableId === second.draggableId && first.droppableId === second.droppableId;
};
var isCriticalEqual = function isCriticalEqual(first, second) {
  if (first === second) {
    return true;
  }

  var isDraggableEqual = first.draggable.id === second.draggable.id && first.draggable.droppableId === second.draggable.droppableId && first.draggable.type === second.draggable.type && first.draggable.index === second.draggable.index;
  var isDroppableEqual = first.droppable.id === second.droppable.id && first.droppable.type === second.droppable.type;
  return isDraggableEqual && isDroppableEqual;
};

var withTimings = function withTimings(key, fn) {
  start$1();
  fn();
  finish();
};

var getDragStart = function getDragStart(critical, mode) {
  return {
    draggableId: critical.draggable.id,
    type: critical.droppable.type,
    source: {
      droppableId: critical.droppable.id,
      index: critical.draggable.index
    },
    mode: mode
  };
};

var execute = function execute(responder, data, announce, getDefaultMessage) {
  if (!responder) {
    announce(getDefaultMessage(data));
    return;
  }

  var willExpire = getExpiringAnnounce(announce);
  var provided = {
    announce: willExpire
  };
  responder(data, provided);

  if (!willExpire.wasCalled()) {
    announce(getDefaultMessage(data));
  }
};

var getPublisher = (function (getResponders, announce) {
  var asyncMarshal = getAsyncMarshal();
  var dragging = null;

  var beforeCapture = function beforeCapture(draggableId, mode) {
    !!dragging ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot fire onBeforeCapture as a drag start has already been published') : invariant$3(false) : void 0;
    withTimings('onBeforeCapture', function () {
      var fn = getResponders().onBeforeCapture;

      if (fn) {
        var before = {
          draggableId: draggableId,
          mode: mode
        };
        fn(before);
      }
    });
  };

  var beforeStart = function beforeStart(critical, mode) {
    !!dragging ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot fire onBeforeDragStart as a drag start has already been published') : invariant$3(false) : void 0;
    withTimings('onBeforeDragStart', function () {
      var fn = getResponders().onBeforeDragStart;

      if (fn) {
        fn(getDragStart(critical, mode));
      }
    });
  };

  var start = function start(critical, mode) {
    !!dragging ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot fire onBeforeDragStart as a drag start has already been published') : invariant$3(false) : void 0;
    var data = getDragStart(critical, mode);
    dragging = {
      mode: mode,
      lastCritical: critical,
      lastLocation: data.source,
      lastCombine: null
    };
    asyncMarshal.add(function () {
      withTimings('onDragStart', function () {
        return execute(getResponders().onDragStart, data, announce, preset.onDragStart);
      });
    });
  };

  var update = function update(critical, impact) {
    var location = tryGetDestination(impact);
    var combine = tryGetCombine(impact);
    !dragging ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot fire onDragMove when onDragStart has not been called') : invariant$3(false) : void 0;
    var hasCriticalChanged = !isCriticalEqual(critical, dragging.lastCritical);

    if (hasCriticalChanged) {
      dragging.lastCritical = critical;
    }

    var hasLocationChanged = !areLocationsEqual(dragging.lastLocation, location);

    if (hasLocationChanged) {
      dragging.lastLocation = location;
    }

    var hasGroupingChanged = !isCombineEqual(dragging.lastCombine, combine);

    if (hasGroupingChanged) {
      dragging.lastCombine = combine;
    }

    if (!hasCriticalChanged && !hasLocationChanged && !hasGroupingChanged) {
      return;
    }

    var data = _extends$a({}, getDragStart(critical, dragging.mode), {
      combine: combine,
      destination: location
    });

    asyncMarshal.add(function () {
      withTimings('onDragUpdate', function () {
        return execute(getResponders().onDragUpdate, data, announce, preset.onDragUpdate);
      });
    });
  };

  var flush = function flush() {
    !dragging ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Can only flush responders while dragging') : invariant$3(false) : void 0;
    asyncMarshal.flush();
  };

  var drop = function drop(result) {
    !dragging ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot fire onDragEnd when there is no matching onDragStart') : invariant$3(false) : void 0;
    dragging = null;
    withTimings('onDragEnd', function () {
      return execute(getResponders().onDragEnd, result, announce, preset.onDragEnd);
    });
  };

  var abort = function abort() {
    if (!dragging) {
      return;
    }

    var result = _extends$a({}, getDragStart(dragging.lastCritical, dragging.mode), {
      combine: null,
      destination: null,
      reason: 'CANCEL'
    });

    drop(result);
  };

  return {
    beforeCapture: beforeCapture,
    beforeStart: beforeStart,
    start: start,
    update: update,
    flush: flush,
    drop: drop,
    abort: abort
  };
});

var responders = (function (getResponders, announce) {
  var publisher = getPublisher(getResponders, announce);
  return function (store) {
    return function (next) {
      return function (action) {
        if (action.type === 'BEFORE_INITIAL_CAPTURE') {
          publisher.beforeCapture(action.payload.draggableId, action.payload.movementMode);
          return;
        }

        if (action.type === 'INITIAL_PUBLISH') {
          var critical = action.payload.critical;
          publisher.beforeStart(critical, action.payload.movementMode);
          next(action);
          publisher.start(critical, action.payload.movementMode);
          return;
        }

        if (action.type === 'DROP_COMPLETE') {
          var result = action.payload.completed.result;
          publisher.flush();
          next(action);
          publisher.drop(result);
          return;
        }

        next(action);

        if (action.type === 'FLUSH') {
          publisher.abort();
          return;
        }

        var state = store.getState();

        if (state.phase === 'DRAGGING') {
          publisher.update(state.critical, state.impact);
        }
      };
    };
  };
});

var dropAnimationFinish = (function (store) {
  return function (next) {
    return function (action) {
      if (action.type !== 'DROP_ANIMATION_FINISHED') {
        next(action);
        return;
      }

      var state = store.getState();
      !(state.phase === 'DROP_ANIMATING') ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot finish a drop animating when no drop is occurring') : invariant$3(false) : void 0;
      store.dispatch(completeDrop({
        completed: state.completed
      }));
    };
  };
});

var dropAnimationFlushOnScroll = (function (store) {
  var unbind = null;
  var frameId = null;

  function clear() {
    if (frameId) {
      cancelAnimationFrame(frameId);
      frameId = null;
    }

    if (unbind) {
      unbind();
      unbind = null;
    }
  }

  return function (next) {
    return function (action) {
      if (action.type === 'FLUSH' || action.type === 'DROP_COMPLETE' || action.type === 'DROP_ANIMATION_FINISHED') {
        clear();
      }

      next(action);

      if (action.type !== 'DROP_ANIMATE') {
        return;
      }

      var binding = {
        eventName: 'scroll',
        options: {
          capture: true,
          passive: false,
          once: true
        },
        fn: function flushDropAnimation() {
          var state = store.getState();

          if (state.phase === 'DROP_ANIMATING') {
            store.dispatch(dropAnimationFinished());
          }
        }
      };
      frameId = requestAnimationFrame(function () {
        frameId = null;
        unbind = bindEvents(window, [binding]);
      });
    };
  };
});

var dimensionMarshalStopper = (function (marshal) {
  return function () {
    return function (next) {
      return function (action) {
        if (action.type === 'DROP_COMPLETE' || action.type === 'FLUSH' || action.type === 'DROP_ANIMATE') {
          marshal.stopPublishing();
        }

        next(action);
      };
    };
  };
});

var focus = (function (marshal) {
  var isWatching = false;
  return function () {
    return function (next) {
      return function (action) {
        if (action.type === 'INITIAL_PUBLISH') {
          isWatching = true;
          marshal.tryRecordFocus(action.payload.critical.draggable.id);
          next(action);
          marshal.tryRestoreFocusRecorded();
          return;
        }

        next(action);

        if (!isWatching) {
          return;
        }

        if (action.type === 'FLUSH') {
          isWatching = false;
          marshal.tryRestoreFocusRecorded();
          return;
        }

        if (action.type === 'DROP_COMPLETE') {
          isWatching = false;
          var result = action.payload.completed.result;

          if (result.combine) {
            marshal.tryShiftRecord(result.draggableId, result.combine.draggableId);
          }

          marshal.tryRestoreFocusRecorded();
        }
      };
    };
  };
});

var shouldStop = function shouldStop(action) {
  return action.type === 'DROP_COMPLETE' || action.type === 'DROP_ANIMATE' || action.type === 'FLUSH';
};

var autoScroll = (function (autoScroller) {
  return function (store) {
    return function (next) {
      return function (action) {
        if (shouldStop(action)) {
          autoScroller.stop();
          next(action);
          return;
        }

        if (action.type === 'INITIAL_PUBLISH') {
          next(action);
          var state = store.getState();
          !(state.phase === 'DRAGGING') ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Expected phase to be DRAGGING after INITIAL_PUBLISH') : invariant$3(false) : void 0;
          autoScroller.start(state);
          return;
        }

        next(action);
        autoScroller.scroll(store.getState());
      };
    };
  };
});

var pendingDrop = (function (store) {
  return function (next) {
    return function (action) {
      next(action);

      if (action.type !== 'PUBLISH_WHILE_DRAGGING') {
        return;
      }

      var postActionState = store.getState();

      if (postActionState.phase !== 'DROP_PENDING') {
        return;
      }

      if (postActionState.isWaiting) {
        return;
      }

      store.dispatch(drop({
        reason: postActionState.reason
      }));
    };
  };
});

var composeEnhancers = process.env.NODE_ENV !== 'production' && typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose$1;
var createStore = (function (_ref) {
  var dimensionMarshal = _ref.dimensionMarshal,
      focusMarshal = _ref.focusMarshal,
      styleMarshal = _ref.styleMarshal,
      getResponders = _ref.getResponders,
      announce = _ref.announce,
      autoScroller = _ref.autoScroller;
  return createStore$1(reducer, composeEnhancers(applyMiddleware(style(styleMarshal), dimensionMarshalStopper(dimensionMarshal), lift$1(dimensionMarshal), drop$1, dropAnimationFinish, dropAnimationFlushOnScroll, pendingDrop, autoScroll(autoScroller), scrollListener, focus(focusMarshal), responders(getResponders, announce))));
});

var clean$1 = function clean() {
  return {
    additions: {},
    removals: {},
    modified: {}
  };
};
function createPublisher(_ref) {
  var registry = _ref.registry,
      callbacks = _ref.callbacks;
  var staging = clean$1();
  var frameId = null;

  var collect = function collect() {
    if (frameId) {
      return;
    }

    callbacks.collectionStarting();
    frameId = requestAnimationFrame(function () {
      frameId = null;
      start$1();
      var _staging = staging,
          additions = _staging.additions,
          removals = _staging.removals,
          modified = _staging.modified;

      var added = keys(additions).map(function (id) {
        return registry.draggable.getById(id).getDimension(origin);
      }).sort(function (a, b) {
        return a.descriptor.index - b.descriptor.index;
      });

      var updated = keys(modified).map(function (id) {
        var entry = registry.droppable.getById(id);
        var scroll = entry.callbacks.getScrollWhileDragging();
        return {
          droppableId: id,
          scroll: scroll
        };
      });

      var result = {
        additions: added,
        removals: keys(removals),
        modified: updated
      };
      staging = clean$1();
      finish();
      callbacks.publish(result);
    });
  };

  var add = function add(entry) {
    var id = entry.descriptor.id;
    staging.additions[id] = entry;
    staging.modified[entry.descriptor.droppableId] = true;

    if (staging.removals[id]) {
      delete staging.removals[id];
    }

    collect();
  };

  var remove = function remove(entry) {
    var descriptor = entry.descriptor;
    staging.removals[descriptor.id] = true;
    staging.modified[descriptor.droppableId] = true;

    if (staging.additions[descriptor.id]) {
      delete staging.additions[descriptor.id];
    }

    collect();
  };

  var stop = function stop() {
    if (!frameId) {
      return;
    }

    cancelAnimationFrame(frameId);
    frameId = null;
    staging = clean$1();
  };

  return {
    add: add,
    remove: remove,
    stop: stop
  };
}

var getMaxScroll = (function (_ref) {
  var scrollHeight = _ref.scrollHeight,
      scrollWidth = _ref.scrollWidth,
      height = _ref.height,
      width = _ref.width;
  var maxScroll = subtract({
    x: scrollWidth,
    y: scrollHeight
  }, {
    x: width,
    y: height
  });
  var adjustedMaxScroll = {
    x: Math.max(0, maxScroll.x),
    y: Math.max(0, maxScroll.y)
  };
  return adjustedMaxScroll;
});

var getDocumentElement$1 = (function () {
  var doc = document.documentElement;
  !doc ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot find document.documentElement') : invariant$3(false) : void 0;
  return doc;
});

var getMaxWindowScroll = (function () {
  var doc = getDocumentElement$1();
  var maxScroll = getMaxScroll({
    scrollHeight: doc.scrollHeight,
    scrollWidth: doc.scrollWidth,
    width: doc.clientWidth,
    height: doc.clientHeight
  });
  return maxScroll;
});

var getViewport = (function () {
  var scroll = getWindowScroll$1();
  var maxScroll = getMaxWindowScroll();
  var top = scroll.y;
  var left = scroll.x;
  var doc = getDocumentElement$1();
  var width = doc.clientWidth;
  var height = doc.clientHeight;
  var right = left + width;
  var bottom = top + height;
  var frame = getRect({
    top: top,
    left: left,
    right: right,
    bottom: bottom
  });
  var viewport = {
    frame: frame,
    scroll: {
      initial: scroll,
      current: scroll,
      max: maxScroll,
      diff: {
        value: origin,
        displacement: origin
      }
    }
  };
  return viewport;
});

var getInitialPublish = (function (_ref) {
  var critical = _ref.critical,
      scrollOptions = _ref.scrollOptions,
      registry = _ref.registry;
  start$1();
  var viewport = getViewport();
  var windowScroll = viewport.scroll.current;
  var home = critical.droppable;
  var droppables = registry.droppable.getAllByType(home.type).map(function (entry) {
    return entry.callbacks.getDimensionAndWatchScroll(windowScroll, scrollOptions);
  });
  var draggables = registry.draggable.getAllByType(critical.draggable.type).map(function (entry) {
    return entry.getDimension(windowScroll);
  });
  var dimensions = {
    draggables: toDraggableMap(draggables),
    droppables: toDroppableMap(droppables)
  };
  finish();
  var result = {
    dimensions: dimensions,
    critical: critical,
    viewport: viewport
  };
  return result;
});

function shouldPublishUpdate(registry, dragging, entry) {
  if (entry.descriptor.id === dragging.id) {
    return false;
  }

  if (entry.descriptor.type !== dragging.type) {
    return false;
  }

  var home = registry.droppable.getById(entry.descriptor.droppableId);

  if (home.descriptor.mode !== 'virtual') {
    process.env.NODE_ENV !== "production" ? warning$5("\n      You are attempting to add or remove a Draggable [id: " + entry.descriptor.id + "]\n      while a drag is occurring. This is only supported for virtual lists.\n\n      See https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/patterns/virtual-lists.md\n    ") : void 0;
    return false;
  }

  return true;
}

var createDimensionMarshal = (function (registry, callbacks) {
  var collection = null;
  var publisher = createPublisher({
    callbacks: {
      publish: callbacks.publishWhileDragging,
      collectionStarting: callbacks.collectionStarting
    },
    registry: registry
  });

  var updateDroppableIsEnabled = function updateDroppableIsEnabled(id, isEnabled) {
    !registry.droppable.exists(id) ? process.env.NODE_ENV !== "production" ? invariant$3(false, "Cannot update is enabled flag of Droppable " + id + " as it is not registered") : invariant$3(false) : void 0;

    if (!collection) {
      return;
    }

    callbacks.updateDroppableIsEnabled({
      id: id,
      isEnabled: isEnabled
    });
  };

  var updateDroppableIsCombineEnabled = function updateDroppableIsCombineEnabled(id, isCombineEnabled) {
    if (!collection) {
      return;
    }

    !registry.droppable.exists(id) ? process.env.NODE_ENV !== "production" ? invariant$3(false, "Cannot update isCombineEnabled flag of Droppable " + id + " as it is not registered") : invariant$3(false) : void 0;
    callbacks.updateDroppableIsCombineEnabled({
      id: id,
      isCombineEnabled: isCombineEnabled
    });
  };

  var updateDroppableScroll = function updateDroppableScroll(id, newScroll) {
    if (!collection) {
      return;
    }

    !registry.droppable.exists(id) ? process.env.NODE_ENV !== "production" ? invariant$3(false, "Cannot update the scroll on Droppable " + id + " as it is not registered") : invariant$3(false) : void 0;
    callbacks.updateDroppableScroll({
      id: id,
      newScroll: newScroll
    });
  };

  var scrollDroppable = function scrollDroppable(id, change) {
    if (!collection) {
      return;
    }

    registry.droppable.getById(id).callbacks.scroll(change);
  };

  var stopPublishing = function stopPublishing() {
    if (!collection) {
      return;
    }

    publisher.stop();
    var home = collection.critical.droppable;
    registry.droppable.getAllByType(home.type).forEach(function (entry) {
      return entry.callbacks.dragStopped();
    });
    collection.unsubscribe();
    collection = null;
  };

  var subscriber = function subscriber(event) {
    !collection ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Should only be subscribed when a collection is occurring') : invariant$3(false) : void 0;
    var dragging = collection.critical.draggable;

    if (event.type === 'ADDITION') {
      if (shouldPublishUpdate(registry, dragging, event.value)) {
        publisher.add(event.value);
      }
    }

    if (event.type === 'REMOVAL') {
      if (shouldPublishUpdate(registry, dragging, event.value)) {
        publisher.remove(event.value);
      }
    }
  };

  var startPublishing = function startPublishing(request) {
    !!collection ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot start capturing critical dimensions as there is already a collection') : invariant$3(false) : void 0;
    var entry = registry.draggable.getById(request.draggableId);
    var home = registry.droppable.getById(entry.descriptor.droppableId);
    var critical = {
      draggable: entry.descriptor,
      droppable: home.descriptor
    };
    var unsubscribe = registry.subscribe(subscriber);
    collection = {
      critical: critical,
      unsubscribe: unsubscribe
    };
    return getInitialPublish({
      critical: critical,
      registry: registry,
      scrollOptions: request.scrollOptions
    });
  };

  var marshal = {
    updateDroppableIsEnabled: updateDroppableIsEnabled,
    updateDroppableIsCombineEnabled: updateDroppableIsCombineEnabled,
    scrollDroppable: scrollDroppable,
    updateDroppableScroll: updateDroppableScroll,
    startPublishing: startPublishing,
    stopPublishing: stopPublishing
  };
  return marshal;
});

var canStartDrag = (function (state, id) {
  if (state.phase === 'IDLE') {
    return true;
  }

  if (state.phase !== 'DROP_ANIMATING') {
    return false;
  }

  if (state.completed.result.draggableId === id) {
    return false;
  }

  return state.completed.result.reason === 'DROP';
});

var scrollWindow = (function (change) {
  window.scrollBy(change.x, change.y);
});

var getScrollableDroppables = memoizeOne(function (droppables) {
  return toDroppableList(droppables).filter(function (droppable) {
    if (!droppable.isEnabled) {
      return false;
    }

    if (!droppable.frame) {
      return false;
    }

    return true;
  });
});

var getScrollableDroppableOver = function getScrollableDroppableOver(target, droppables) {
  var maybe = find$2(getScrollableDroppables(droppables), function (droppable) {
    !droppable.frame ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Invalid result') : invariant$3(false) : void 0;
    return isPositionInFrame(droppable.frame.pageMarginBox)(target);
  });
  return maybe;
};

var getBestScrollableDroppable = (function (_ref) {
  var center = _ref.center,
      destination = _ref.destination,
      droppables = _ref.droppables;

  if (destination) {
    var _dimension = droppables[destination];

    if (!_dimension.frame) {
      return null;
    }

    return _dimension;
  }

  var dimension = getScrollableDroppableOver(center, droppables);
  return dimension;
});

var config$1 = {
  startFromPercentage: 0.25,
  maxScrollAtPercentage: 0.05,
  maxPixelScroll: 28,
  ease: function ease(percentage) {
    return Math.pow(percentage, 2);
  },
  durationDampening: {
    stopDampeningAt: 1200,
    accelerateAt: 360
  }
};

var getDistanceThresholds = (function (container, axis) {
  var startScrollingFrom = container[axis.size] * config$1.startFromPercentage;
  var maxScrollValueAt = container[axis.size] * config$1.maxScrollAtPercentage;
  var thresholds = {
    startScrollingFrom: startScrollingFrom,
    maxScrollValueAt: maxScrollValueAt
  };
  return thresholds;
});

var getPercentage = (function (_ref) {
  var startOfRange = _ref.startOfRange,
      endOfRange = _ref.endOfRange,
      current = _ref.current;
  var range = endOfRange - startOfRange;

  if (range === 0) {
    process.env.NODE_ENV !== "production" ? warning$5("\n      Detected distance range of 0 in the fluid auto scroller\n      This is unexpected and would cause a divide by 0 issue.\n      Not allowing an auto scroll\n    ") : void 0;
    return 0;
  }

  var currentInRange = current - startOfRange;
  var percentage = currentInRange / range;
  return percentage;
});

var minScroll = 1;

var getValueFromDistance = (function (distanceToEdge, thresholds) {
  if (distanceToEdge > thresholds.startScrollingFrom) {
    return 0;
  }

  if (distanceToEdge <= thresholds.maxScrollValueAt) {
    return config$1.maxPixelScroll;
  }

  if (distanceToEdge === thresholds.startScrollingFrom) {
    return minScroll;
  }

  var percentageFromMaxScrollValueAt = getPercentage({
    startOfRange: thresholds.maxScrollValueAt,
    endOfRange: thresholds.startScrollingFrom,
    current: distanceToEdge
  });
  var percentageFromStartScrollingFrom = 1 - percentageFromMaxScrollValueAt;
  var scroll = config$1.maxPixelScroll * config$1.ease(percentageFromStartScrollingFrom);
  return Math.ceil(scroll);
});

var accelerateAt = config$1.durationDampening.accelerateAt;
var stopAt = config$1.durationDampening.stopDampeningAt;
var dampenValueByTime = (function (proposedScroll, dragStartTime) {
  var startOfRange = dragStartTime;
  var endOfRange = stopAt;

  var now$1 = now();

  var runTime = now$1 - startOfRange;

  if (runTime >= stopAt) {
    return proposedScroll;
  }

  if (runTime < accelerateAt) {
    return minScroll;
  }

  var betweenAccelerateAtAndStopAtPercentage = getPercentage({
    startOfRange: accelerateAt,
    endOfRange: endOfRange,
    current: runTime
  });
  var scroll = proposedScroll * config$1.ease(betweenAccelerateAtAndStopAtPercentage);
  return Math.ceil(scroll);
});

var getValue = (function (_ref) {
  var distanceToEdge = _ref.distanceToEdge,
      thresholds = _ref.thresholds,
      dragStartTime = _ref.dragStartTime,
      shouldUseTimeDampening = _ref.shouldUseTimeDampening;
  var scroll = getValueFromDistance(distanceToEdge, thresholds);

  if (scroll === 0) {
    return 0;
  }

  if (!shouldUseTimeDampening) {
    return scroll;
  }

  return Math.max(dampenValueByTime(scroll, dragStartTime), minScroll);
});

var getScrollOnAxis = (function (_ref) {
  var container = _ref.container,
      distanceToEdges = _ref.distanceToEdges,
      dragStartTime = _ref.dragStartTime,
      axis = _ref.axis,
      shouldUseTimeDampening = _ref.shouldUseTimeDampening;
  var thresholds = getDistanceThresholds(container, axis);
  var isCloserToEnd = distanceToEdges[axis.end] < distanceToEdges[axis.start];

  if (isCloserToEnd) {
    return getValue({
      distanceToEdge: distanceToEdges[axis.end],
      thresholds: thresholds,
      dragStartTime: dragStartTime,
      shouldUseTimeDampening: shouldUseTimeDampening
    });
  }

  return -1 * getValue({
    distanceToEdge: distanceToEdges[axis.start],
    thresholds: thresholds,
    dragStartTime: dragStartTime,
    shouldUseTimeDampening: shouldUseTimeDampening
  });
});

var adjustForSizeLimits = (function (_ref) {
  var container = _ref.container,
      subject = _ref.subject,
      proposedScroll = _ref.proposedScroll;
  var isTooBigVertically = subject.height > container.height;
  var isTooBigHorizontally = subject.width > container.width;

  if (!isTooBigHorizontally && !isTooBigVertically) {
    return proposedScroll;
  }

  if (isTooBigHorizontally && isTooBigVertically) {
    return null;
  }

  return {
    x: isTooBigHorizontally ? 0 : proposedScroll.x,
    y: isTooBigVertically ? 0 : proposedScroll.y
  };
});

var clean$2 = apply$1(function (value) {
  return value === 0 ? 0 : value;
});
var getScroll$1 = (function (_ref) {
  var dragStartTime = _ref.dragStartTime,
      container = _ref.container,
      subject = _ref.subject,
      center = _ref.center,
      shouldUseTimeDampening = _ref.shouldUseTimeDampening;
  var distanceToEdges = {
    top: center.y - container.top,
    right: container.right - center.x,
    bottom: container.bottom - center.y,
    left: center.x - container.left
  };
  var y = getScrollOnAxis({
    container: container,
    distanceToEdges: distanceToEdges,
    dragStartTime: dragStartTime,
    axis: vertical,
    shouldUseTimeDampening: shouldUseTimeDampening
  });
  var x = getScrollOnAxis({
    container: container,
    distanceToEdges: distanceToEdges,
    dragStartTime: dragStartTime,
    axis: horizontal,
    shouldUseTimeDampening: shouldUseTimeDampening
  });
  var required = clean$2({
    x: x,
    y: y
  });

  if (isEqual(required, origin)) {
    return null;
  }

  var limited = adjustForSizeLimits({
    container: container,
    subject: subject,
    proposedScroll: required
  });

  if (!limited) {
    return null;
  }

  return isEqual(limited, origin) ? null : limited;
});

var smallestSigned = apply$1(function (value) {
  if (value === 0) {
    return 0;
  }

  return value > 0 ? 1 : -1;
});
var getOverlap = function () {
  var getRemainder = function getRemainder(target, max) {
    if (target < 0) {
      return target;
    }

    if (target > max) {
      return target - max;
    }

    return 0;
  };

  return function (_ref) {
    var current = _ref.current,
        max = _ref.max,
        change = _ref.change;
    var targetScroll = add(current, change);
    var overlap = {
      x: getRemainder(targetScroll.x, max.x),
      y: getRemainder(targetScroll.y, max.y)
    };

    if (isEqual(overlap, origin)) {
      return null;
    }

    return overlap;
  };
}();
var canPartiallyScroll = function canPartiallyScroll(_ref2) {
  var rawMax = _ref2.max,
      current = _ref2.current,
      change = _ref2.change;
  var max = {
    x: Math.max(current.x, rawMax.x),
    y: Math.max(current.y, rawMax.y)
  };
  var smallestChange = smallestSigned(change);
  var overlap = getOverlap({
    max: max,
    current: current,
    change: smallestChange
  });

  if (!overlap) {
    return true;
  }

  if (smallestChange.x !== 0 && overlap.x === 0) {
    return true;
  }

  if (smallestChange.y !== 0 && overlap.y === 0) {
    return true;
  }

  return false;
};
var canScrollWindow = function canScrollWindow(viewport, change) {
  return canPartiallyScroll({
    current: viewport.scroll.current,
    max: viewport.scroll.max,
    change: change
  });
};
var getWindowOverlap = function getWindowOverlap(viewport, change) {
  if (!canScrollWindow(viewport, change)) {
    return null;
  }

  var max = viewport.scroll.max;
  var current = viewport.scroll.current;
  return getOverlap({
    current: current,
    max: max,
    change: change
  });
};
var canScrollDroppable = function canScrollDroppable(droppable, change) {
  var frame = droppable.frame;

  if (!frame) {
    return false;
  }

  return canPartiallyScroll({
    current: frame.scroll.current,
    max: frame.scroll.max,
    change: change
  });
};
var getDroppableOverlap = function getDroppableOverlap(droppable, change) {
  var frame = droppable.frame;

  if (!frame) {
    return null;
  }

  if (!canScrollDroppable(droppable, change)) {
    return null;
  }

  return getOverlap({
    current: frame.scroll.current,
    max: frame.scroll.max,
    change: change
  });
};

var getWindowScrollChange = (function (_ref) {
  var viewport = _ref.viewport,
      subject = _ref.subject,
      center = _ref.center,
      dragStartTime = _ref.dragStartTime,
      shouldUseTimeDampening = _ref.shouldUseTimeDampening;
  var scroll = getScroll$1({
    dragStartTime: dragStartTime,
    container: viewport.frame,
    subject: subject,
    center: center,
    shouldUseTimeDampening: shouldUseTimeDampening
  });
  return scroll && canScrollWindow(viewport, scroll) ? scroll : null;
});

var getDroppableScrollChange = (function (_ref) {
  var droppable = _ref.droppable,
      subject = _ref.subject,
      center = _ref.center,
      dragStartTime = _ref.dragStartTime,
      shouldUseTimeDampening = _ref.shouldUseTimeDampening;
  var frame = droppable.frame;

  if (!frame) {
    return null;
  }

  var scroll = getScroll$1({
    dragStartTime: dragStartTime,
    container: frame.pageMarginBox,
    subject: subject,
    center: center,
    shouldUseTimeDampening: shouldUseTimeDampening
  });
  return scroll && canScrollDroppable(droppable, scroll) ? scroll : null;
});

var scroll$1 = (function (_ref) {
  var state = _ref.state,
      dragStartTime = _ref.dragStartTime,
      shouldUseTimeDampening = _ref.shouldUseTimeDampening,
      scrollWindow = _ref.scrollWindow,
      scrollDroppable = _ref.scrollDroppable;
  var center = state.current.page.borderBoxCenter;
  var draggable = state.dimensions.draggables[state.critical.draggable.id];
  var subject = draggable.page.marginBox;

  if (state.isWindowScrollAllowed) {
    var viewport = state.viewport;

    var _change = getWindowScrollChange({
      dragStartTime: dragStartTime,
      viewport: viewport,
      subject: subject,
      center: center,
      shouldUseTimeDampening: shouldUseTimeDampening
    });

    if (_change) {
      scrollWindow(_change);
      return;
    }
  }

  var droppable = getBestScrollableDroppable({
    center: center,
    destination: whatIsDraggedOver(state.impact),
    droppables: state.dimensions.droppables
  });

  if (!droppable) {
    return;
  }

  var change = getDroppableScrollChange({
    dragStartTime: dragStartTime,
    droppable: droppable,
    subject: subject,
    center: center,
    shouldUseTimeDampening: shouldUseTimeDampening
  });

  if (change) {
    scrollDroppable(droppable.descriptor.id, change);
  }
});

var createFluidScroller = (function (_ref) {
  var scrollWindow = _ref.scrollWindow,
      scrollDroppable = _ref.scrollDroppable;
  var scheduleWindowScroll = rafSchd$1(scrollWindow);
  var scheduleDroppableScroll = rafSchd$1(scrollDroppable);
  var dragging = null;

  var tryScroll = function tryScroll(state) {
    !dragging ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot fluid scroll if not dragging') : invariant$3(false) : void 0;
    var _dragging = dragging,
        shouldUseTimeDampening = _dragging.shouldUseTimeDampening,
        dragStartTime = _dragging.dragStartTime;
    scroll$1({
      state: state,
      scrollWindow: scheduleWindowScroll,
      scrollDroppable: scheduleDroppableScroll,
      dragStartTime: dragStartTime,
      shouldUseTimeDampening: shouldUseTimeDampening
    });
  };

  var start$1$1 = function start$1$1(state) {
    start$1();
    !!dragging ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot start auto scrolling when already started') : invariant$3(false) : void 0;

    var dragStartTime = now();

    var wasScrollNeeded = false;

    var fakeScrollCallback = function fakeScrollCallback() {
      wasScrollNeeded = true;
    };

    scroll$1({
      state: state,
      dragStartTime: 0,
      shouldUseTimeDampening: false,
      scrollWindow: fakeScrollCallback,
      scrollDroppable: fakeScrollCallback
    });
    dragging = {
      dragStartTime: dragStartTime,
      shouldUseTimeDampening: wasScrollNeeded
    };
    finish();

    if (wasScrollNeeded) {
      tryScroll(state);
    }
  };

  var stop = function stop() {
    if (!dragging) {
      return;
    }

    scheduleWindowScroll.cancel();
    scheduleDroppableScroll.cancel();
    dragging = null;
  };

  return {
    start: start$1$1,
    stop: stop,
    scroll: tryScroll
  };
});

var createJumpScroller = (function (_ref) {
  var move = _ref.move,
      scrollDroppable = _ref.scrollDroppable,
      scrollWindow = _ref.scrollWindow;

  var moveByOffset = function moveByOffset(state, offset) {
    var client = add(state.current.client.selection, offset);
    move({
      client: client
    });
  };

  var scrollDroppableAsMuchAsItCan = function scrollDroppableAsMuchAsItCan(droppable, change) {
    if (!canScrollDroppable(droppable, change)) {
      return change;
    }

    var overlap = getDroppableOverlap(droppable, change);

    if (!overlap) {
      scrollDroppable(droppable.descriptor.id, change);
      return null;
    }

    var whatTheDroppableCanScroll = subtract(change, overlap);
    scrollDroppable(droppable.descriptor.id, whatTheDroppableCanScroll);
    var remainder = subtract(change, whatTheDroppableCanScroll);
    return remainder;
  };

  var scrollWindowAsMuchAsItCan = function scrollWindowAsMuchAsItCan(isWindowScrollAllowed, viewport, change) {
    if (!isWindowScrollAllowed) {
      return change;
    }

    if (!canScrollWindow(viewport, change)) {
      return change;
    }

    var overlap = getWindowOverlap(viewport, change);

    if (!overlap) {
      scrollWindow(change);
      return null;
    }

    var whatTheWindowCanScroll = subtract(change, overlap);
    scrollWindow(whatTheWindowCanScroll);
    var remainder = subtract(change, whatTheWindowCanScroll);
    return remainder;
  };

  var jumpScroller = function jumpScroller(state) {
    var request = state.scrollJumpRequest;

    if (!request) {
      return;
    }

    var destination = whatIsDraggedOver(state.impact);
    !destination ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot perform a jump scroll when there is no destination') : invariant$3(false) : void 0;
    var droppableRemainder = scrollDroppableAsMuchAsItCan(state.dimensions.droppables[destination], request);

    if (!droppableRemainder) {
      return;
    }

    var viewport = state.viewport;
    var windowRemainder = scrollWindowAsMuchAsItCan(state.isWindowScrollAllowed, viewport, droppableRemainder);

    if (!windowRemainder) {
      return;
    }

    moveByOffset(state, windowRemainder);
  };

  return jumpScroller;
});

var createAutoScroller = (function (_ref) {
  var scrollDroppable = _ref.scrollDroppable,
      scrollWindow = _ref.scrollWindow,
      move = _ref.move;
  var fluidScroller = createFluidScroller({
    scrollWindow: scrollWindow,
    scrollDroppable: scrollDroppable
  });
  var jumpScroll = createJumpScroller({
    move: move,
    scrollWindow: scrollWindow,
    scrollDroppable: scrollDroppable
  });

  var scroll = function scroll(state) {
    if (state.phase !== 'DRAGGING') {
      return;
    }

    if (state.movementMode === 'FLUID') {
      fluidScroller.scroll(state);
      return;
    }

    if (!state.scrollJumpRequest) {
      return;
    }

    jumpScroll(state);
  };

  var scroller = {
    scroll: scroll,
    start: fluidScroller.start,
    stop: fluidScroller.stop
  };
  return scroller;
});

var prefix$1$1 = 'data-rbd';
var dragHandle = function () {
  var base = prefix$1$1 + "-drag-handle";
  return {
    base: base,
    draggableId: base + "-draggable-id",
    contextId: base + "-context-id"
  };
}();
var draggable = function () {
  var base = prefix$1$1 + "-draggable";
  return {
    base: base,
    contextId: base + "-context-id",
    id: base + "-id"
  };
}();
var droppable = function () {
  var base = prefix$1$1 + "-droppable";
  return {
    base: base,
    contextId: base + "-context-id",
    id: base + "-id"
  };
}();
var scrollContainer = {
  contextId: prefix$1$1 + "-scroll-container-context-id"
};

var makeGetSelector = function makeGetSelector(context) {
  return function (attribute) {
    return "[" + attribute + "=\"" + context + "\"]";
  };
};

var getStyles = function getStyles(rules, property) {
  return rules.map(function (rule) {
    var value = rule.styles[property];

    if (!value) {
      return '';
    }

    return rule.selector + " { " + value + " }";
  }).join(' ');
};

var noPointerEvents = 'pointer-events: none;';
var getStyles$1 = (function (contextId) {
  var getSelector = makeGetSelector(contextId);

  var dragHandle$1 = function () {
    var grabCursor = "\n      cursor: -webkit-grab;\n      cursor: grab;\n    ";
    return {
      selector: getSelector(dragHandle.contextId),
      styles: {
        always: "\n          -webkit-touch-callout: none;\n          -webkit-tap-highlight-color: rgba(0,0,0,0);\n          touch-action: manipulation;\n        ",
        resting: grabCursor,
        dragging: noPointerEvents,
        dropAnimating: grabCursor
      }
    };
  }();

  var draggable$1 = function () {
    var transition = "\n      transition: " + transitions.outOfTheWay + ";\n    ";
    return {
      selector: getSelector(draggable.contextId),
      styles: {
        dragging: transition,
        dropAnimating: transition,
        userCancel: transition
      }
    };
  }();

  var droppable$1 = {
    selector: getSelector(droppable.contextId),
    styles: {
      always: "overflow-anchor: none;"
    }
  };
  var body = {
    selector: 'body',
    styles: {
      dragging: "\n        cursor: grabbing;\n        cursor: -webkit-grabbing;\n        user-select: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        overflow-anchor: none;\n      "
    }
  };
  var rules = [draggable$1, dragHandle$1, droppable$1, body];
  return {
    always: getStyles(rules, 'always'),
    resting: getStyles(rules, 'resting'),
    dragging: getStyles(rules, 'dragging'),
    dropAnimating: getStyles(rules, 'dropAnimating'),
    userCancel: getStyles(rules, 'userCancel')
  };
});

var useIsomorphicLayoutEffect$1 = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? useLayoutEffect$1 : useEffect;

var getHead = function getHead() {
  var head = document.querySelector('head');
  !head ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot find the head to append a style to') : invariant$3(false) : void 0;
  return head;
};

var createStyleEl = function createStyleEl(nonce) {
  var el = document.createElement('style');

  if (nonce) {
    el.setAttribute('nonce', nonce);
  }

  el.type = 'text/css';
  return el;
};

function useStyleMarshal(contextId, nonce) {
  var styles = useMemo(function () {
    return getStyles$1(contextId);
  }, [contextId]);
  var alwaysRef = useRef(null);
  var dynamicRef = useRef(null);
  var setDynamicStyle = useCallback(memoizeOne(function (proposed) {
    var el = dynamicRef.current;
    !el ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot set dynamic style element if it is not set') : invariant$3(false) : void 0;
    el.textContent = proposed;
  }), []);
  var setAlwaysStyle = useCallback(function (proposed) {
    var el = alwaysRef.current;
    !el ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot set dynamic style element if it is not set') : invariant$3(false) : void 0;
    el.textContent = proposed;
  }, []);
  useIsomorphicLayoutEffect$1(function () {
    !(!alwaysRef.current && !dynamicRef.current) ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'style elements already mounted') : invariant$3(false) : void 0;
    var always = createStyleEl(nonce);
    var dynamic = createStyleEl(nonce);
    alwaysRef.current = always;
    dynamicRef.current = dynamic;
    always.setAttribute(prefix$1$1 + "-always", contextId);
    dynamic.setAttribute(prefix$1$1 + "-dynamic", contextId);
    getHead().appendChild(always);
    getHead().appendChild(dynamic);
    setAlwaysStyle(styles.always);
    setDynamicStyle(styles.resting);
    return function () {
      var remove = function remove(ref) {
        var current = ref.current;
        !current ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot unmount ref as it is not set') : invariant$3(false) : void 0;
        getHead().removeChild(current);
        ref.current = null;
      };

      remove(alwaysRef);
      remove(dynamicRef);
    };
  }, [nonce, setAlwaysStyle, setDynamicStyle, styles.always, styles.resting, contextId]);
  var dragging = useCallback(function () {
    return setDynamicStyle(styles.dragging);
  }, [setDynamicStyle, styles.dragging]);
  var dropping = useCallback(function (reason) {
    if (reason === 'DROP') {
      setDynamicStyle(styles.dropAnimating);
      return;
    }

    setDynamicStyle(styles.userCancel);
  }, [setDynamicStyle, styles.dropAnimating, styles.userCancel]);
  var resting = useCallback(function () {
    if (!dynamicRef.current) {
      return;
    }

    setDynamicStyle(styles.resting);
  }, [setDynamicStyle, styles.resting]);
  var marshal = useMemo(function () {
    return {
      dragging: dragging,
      dropping: dropping,
      resting: resting
    };
  }, [dragging, dropping, resting]);
  return marshal;
}

var getWindowFromEl = (function (el) {
  return el && el.ownerDocument ? el.ownerDocument.defaultView : window;
});

function isHtmlElement(el) {
  return el instanceof getWindowFromEl(el).HTMLElement;
}

function findDragHandle(contextId, draggableId) {
  var selector = "[" + dragHandle.contextId + "=\"" + contextId + "\"]";
  var possible = toArray$1(document.querySelectorAll(selector));

  if (!possible.length) {
    process.env.NODE_ENV !== "production" ? warning$5("Unable to find any drag handles in the context \"" + contextId + "\"") : void 0;
    return null;
  }

  var handle = find$2(possible, function (el) {
    return el.getAttribute(dragHandle.draggableId) === draggableId;
  });

  if (!handle) {
    process.env.NODE_ENV !== "production" ? warning$5("Unable to find drag handle with id \"" + draggableId + "\" as no handle with a matching id was found") : void 0;
    return null;
  }

  if (!isHtmlElement(handle)) {
    process.env.NODE_ENV !== "production" ? warning$5('drag handle needs to be a HTMLElement') : void 0;
    return null;
  }

  return handle;
}

function useFocusMarshal(contextId) {
  var entriesRef = useRef({});
  var recordRef = useRef(null);
  var restoreFocusFrameRef = useRef(null);
  var isMountedRef = useRef(false);
  var register = useCallback(function register(id, focus) {
    var entry = {
      id: id,
      focus: focus
    };
    entriesRef.current[id] = entry;
    return function unregister() {
      var entries = entriesRef.current;
      var current = entries[id];

      if (current !== entry) {
        delete entries[id];
      }
    };
  }, []);
  var tryGiveFocus = useCallback(function tryGiveFocus(tryGiveFocusTo) {
    var handle = findDragHandle(contextId, tryGiveFocusTo);

    if (handle && handle !== document.activeElement) {
      handle.focus();
    }
  }, [contextId]);
  var tryShiftRecord = useCallback(function tryShiftRecord(previous, redirectTo) {
    if (recordRef.current === previous) {
      recordRef.current = redirectTo;
    }
  }, []);
  var tryRestoreFocusRecorded = useCallback(function tryRestoreFocusRecorded() {
    if (restoreFocusFrameRef.current) {
      return;
    }

    if (!isMountedRef.current) {
      return;
    }

    restoreFocusFrameRef.current = requestAnimationFrame(function () {
      restoreFocusFrameRef.current = null;
      var record = recordRef.current;

      if (record) {
        tryGiveFocus(record);
      }
    });
  }, [tryGiveFocus]);
  var tryRecordFocus = useCallback(function tryRecordFocus(id) {
    recordRef.current = null;
    var focused = document.activeElement;

    if (!focused) {
      return;
    }

    if (focused.getAttribute(dragHandle.draggableId) !== id) {
      return;
    }

    recordRef.current = id;
  }, []);
  useIsomorphicLayoutEffect$1(function () {
    isMountedRef.current = true;
    return function clearFrameOnUnmount() {
      isMountedRef.current = false;
      var frameId = restoreFocusFrameRef.current;

      if (frameId) {
        cancelAnimationFrame(frameId);
      }
    };
  }, []);
  var marshal = useMemo(function () {
    return {
      register: register,
      tryRecordFocus: tryRecordFocus,
      tryRestoreFocusRecorded: tryRestoreFocusRecorded,
      tryShiftRecord: tryShiftRecord
    };
  }, [register, tryRecordFocus, tryRestoreFocusRecorded, tryShiftRecord]);
  return marshal;
}

function createRegistry() {
  var entries = {
    draggables: {},
    droppables: {}
  };
  var subscribers = [];

  function subscribe(cb) {
    subscribers.push(cb);
    return function unsubscribe() {
      var index = subscribers.indexOf(cb);

      if (index === -1) {
        return;
      }

      subscribers.splice(index, 1);
    };
  }

  function notify(event) {
    if (subscribers.length) {
      subscribers.forEach(function (cb) {
        return cb(event);
      });
    }
  }

  function findDraggableById(id) {
    return entries.draggables[id] || null;
  }

  function getDraggableById(id) {
    var entry = findDraggableById(id);
    !entry ? process.env.NODE_ENV !== "production" ? invariant$3(false, "Cannot find draggable entry with id [" + id + "]") : invariant$3(false) : void 0;
    return entry;
  }

  var draggableAPI = {
    register: function register(entry) {
      entries.draggables[entry.descriptor.id] = entry;
      notify({
        type: 'ADDITION',
        value: entry
      });
    },
    update: function update(entry, last) {
      var current = entries.draggables[last.descriptor.id];

      if (!current) {
        return;
      }

      if (current.uniqueId !== entry.uniqueId) {
        return;
      }

      delete entries.draggables[last.descriptor.id];
      entries.draggables[entry.descriptor.id] = entry;
    },
    unregister: function unregister(entry) {
      var draggableId = entry.descriptor.id;
      var current = findDraggableById(draggableId);

      if (!current) {
        return;
      }

      if (entry.uniqueId !== current.uniqueId) {
        return;
      }

      delete entries.draggables[draggableId];
      notify({
        type: 'REMOVAL',
        value: entry
      });
    },
    getById: getDraggableById,
    findById: findDraggableById,
    exists: function exists(id) {
      return Boolean(findDraggableById(id));
    },
    getAllByType: function getAllByType(type) {
      return values$1(entries.draggables).filter(function (entry) {
        return entry.descriptor.type === type;
      });
    }
  };

  function findDroppableById(id) {
    return entries.droppables[id] || null;
  }

  function getDroppableById(id) {
    var entry = findDroppableById(id);
    !entry ? process.env.NODE_ENV !== "production" ? invariant$3(false, "Cannot find droppable entry with id [" + id + "]") : invariant$3(false) : void 0;
    return entry;
  }

  var droppableAPI = {
    register: function register(entry) {
      entries.droppables[entry.descriptor.id] = entry;
    },
    unregister: function unregister(entry) {
      var current = findDroppableById(entry.descriptor.id);

      if (!current) {
        return;
      }

      if (entry.uniqueId !== current.uniqueId) {
        return;
      }

      delete entries.droppables[entry.descriptor.id];
    },
    getById: getDroppableById,
    findById: findDroppableById,
    exists: function exists(id) {
      return Boolean(findDroppableById(id));
    },
    getAllByType: function getAllByType(type) {
      return values$1(entries.droppables).filter(function (entry) {
        return entry.descriptor.type === type;
      });
    }
  };

  function clean() {
    entries.draggables = {};
    entries.droppables = {};
    subscribers.length = 0;
  }

  return {
    draggable: draggableAPI,
    droppable: droppableAPI,
    subscribe: subscribe,
    clean: clean
  };
}

function useRegistry() {
  var registry = useMemo(createRegistry, []);
  useEffect(function () {
    return function unmount() {
      requestAnimationFrame(registry.clean);
    };
  }, [registry]);
  return registry;
}

var StoreContext = React__default.createContext(null);

var getBodyElement = (function () {
  var body = document.body;
  !body ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot find document.body') : invariant$3(false) : void 0;
  return body;
});

var visuallyHidden = {
  position: 'absolute',
  width: '1px',
  height: '1px',
  margin: '-1px',
  border: '0',
  padding: '0',
  overflow: 'hidden',
  clip: 'rect(0 0 0 0)',
  'clip-path': 'inset(100%)'
};

var getId$1 = function getId(contextId) {
  return "rbd-announcement-" + contextId;
};
function useAnnouncer(contextId) {
  var id = useMemo(function () {
    return getId$1(contextId);
  }, [contextId]);
  var ref = useRef(null);
  useEffect(function setup() {
    var el = document.createElement('div');
    ref.current = el;
    el.id = id;
    el.setAttribute('aria-live', 'assertive');
    el.setAttribute('role', 'log');
    el.setAttribute('aria-atomic', 'true');

    assign$2(el.style, visuallyHidden);

    getBodyElement().appendChild(el);
    return function cleanup() {
      setTimeout(function remove() {
        getBodyElement().removeChild(el);

        if (el === ref.current) {
          ref.current = null;
        }
      });
    };
  }, [id]);
  var announce = useCallback(function (message) {
    var el = ref.current;

    if (el) {
      el.textContent = message;
      return;
    }

    process.env.NODE_ENV !== "production" ? warning$5("\n      A screen reader message was trying to be announced but it was unable to do so.\n      This can occur if you unmount your <DragDropContext /> in your onDragEnd.\n      Consider calling provided.announce() before the unmount so that the instruction will\n      not be lost for users relying on a screen reader.\n\n      Message not passed to screen reader:\n\n      \"" + message + "\"\n    ") : void 0;
  }, []);
  return announce;
}

var getId$1$1 = function getId(contextId) {
  return "rbd-lift-instruction-" + contextId;
};
function useLiftInstruction(contextId, liftInstruction) {
  var id = useMemo(function () {
    return getId$1$1(contextId);
  }, [contextId]);
  useEffect(function mount() {
    var el = document.createElement('div');
    el.id = id;
    el.textContent = liftInstruction;

    assign$2(el.style, {
      display: 'none'
    });

    getBodyElement().appendChild(el);
    return function unmount() {
      getBodyElement().removeChild(el);
    };
  }, [id, liftInstruction]);
  return id;
}

var AppContext = React__default.createContext(null);

var peerDependencies = {
	react: "^16.8.5",
	"react-dom": "^16.8.5"
};

var semver = /(\d+)\.(\d+)\.(\d+)/;

var getVersion = function getVersion(value) {
  var result = semver.exec(value);
  !(result != null) ? process.env.NODE_ENV !== "production" ? invariant$3(false, "Unable to parse React version " + value) : invariant$3(false) : void 0;
  var major = Number(result[1]);
  var minor = Number(result[2]);
  var patch = Number(result[3]);
  return {
    major: major,
    minor: minor,
    patch: patch,
    raw: value
  };
};

var isSatisfied = function isSatisfied(expected, actual) {
  if (actual.major > expected.major) {
    return true;
  }

  if (actual.major < expected.major) {
    return false;
  }

  if (actual.minor > expected.minor) {
    return true;
  }

  if (actual.minor < expected.minor) {
    return false;
  }

  return actual.patch >= expected.patch;
};

var checkReactVersion = (function (peerDepValue, actualValue) {
  var peerDep = getVersion(peerDepValue);
  var actual = getVersion(actualValue);

  if (isSatisfied(peerDep, actual)) {
    return;
  }

  process.env.NODE_ENV !== "production" ? warning$5("\n    React version: [" + actual.raw + "]\n    does not satisfy expected peer dependency version: [" + peerDep.raw + "]\n\n    This can result in run time bugs, and even fatal crashes\n  ") : void 0;
});

var suffix = "\n  We expect a html5 doctype: <!doctype html>\n  This is to ensure consistent browser layout and measurement\n\n  More information: https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/guides/doctype.md\n";
var checkDoctype = (function (doc) {
  var doctype = doc.doctype;

  if (!doctype) {
    process.env.NODE_ENV !== "production" ? warning$5("\n      No <!doctype html> found.\n\n      " + suffix + "\n    ") : void 0;
    return;
  }

  if (doctype.name.toLowerCase() !== 'html') {
    process.env.NODE_ENV !== "production" ? warning$5("\n      Unexpected <!doctype> found: (" + doctype.name + ")\n\n      " + suffix + "\n    ") : void 0;
  }

  if (doctype.publicId !== '') {
    process.env.NODE_ENV !== "production" ? warning$5("\n      Unexpected <!doctype> publicId found: (" + doctype.publicId + ")\n      A html5 doctype does not have a publicId\n\n      " + suffix + "\n    ") : void 0;
  }
});

function useDev(useHook) {
  if (process.env.NODE_ENV !== 'production') {
    useHook();
  }
}

function useDevSetupWarning(fn, inputs) {
  useDev(function () {
    useEffect(function () {
      try {
        fn();
      } catch (e) {
        error$1("\n          A setup problem was encountered.\n\n          > " + e.message + "\n        ");
      }
    }, inputs);
  });
}

function useStartupValidation() {
  useDevSetupWarning(function () {
    checkReactVersion(peerDependencies.react, React__default.version);
    checkDoctype(document);
  }, []);
}

function usePrevious(current) {
  var ref = useRef(current);
  useEffect(function () {
    ref.current = current;
  });
  return ref;
}

function create$1() {
  var lock = null;

  function isClaimed() {
    return Boolean(lock);
  }

  function isActive(value) {
    return value === lock;
  }

  function claim(abandon) {
    !!lock ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot claim lock as it is already claimed') : invariant$3(false) : void 0;
    var newLock = {
      abandon: abandon
    };
    lock = newLock;
    return newLock;
  }

  function release() {
    !lock ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot release lock when there is no lock') : invariant$3(false) : void 0;
    lock = null;
  }

  function tryAbandon() {
    if (lock) {
      lock.abandon();
      release();
    }
  }

  return {
    isClaimed: isClaimed,
    isActive: isActive,
    claim: claim,
    release: release,
    tryAbandon: tryAbandon
  };
}

var tab = 9;
var enter = 13;
var escape = 27;
var space = 32;
var pageUp = 33;
var pageDown = 34;
var end$1 = 35;
var home = 36;
var arrowLeft = 37;
var arrowUp = 38;
var arrowRight = 39;
var arrowDown = 40;

var _preventedKeys;
var preventedKeys = (_preventedKeys = {}, _preventedKeys[enter] = true, _preventedKeys[tab] = true, _preventedKeys);
var preventStandardKeyEvents = (function (event) {
  if (preventedKeys[event.keyCode]) {
    event.preventDefault();
  }
});

var supportedEventName = function () {
  var base = 'visibilitychange';

  if (typeof document === 'undefined') {
    return base;
  }

  var candidates = [base, "ms" + base, "webkit" + base, "moz" + base, "o" + base];
  var supported = find$2(candidates, function (eventName) {
    return "on" + eventName in document;
  });
  return supported || base;
}();

var primaryButton = 0;
var sloppyClickThreshold = 5;

function isSloppyClickThresholdExceeded(original, current) {
  return Math.abs(current.x - original.x) >= sloppyClickThreshold || Math.abs(current.y - original.y) >= sloppyClickThreshold;
}

var idle$1 = {
  type: 'IDLE'
};

function getCaptureBindings(_ref) {
  var cancel = _ref.cancel,
      completed = _ref.completed,
      getPhase = _ref.getPhase,
      setPhase = _ref.setPhase;
  return [{
    eventName: 'mousemove',
    fn: function fn(event) {
      var button = event.button,
          clientX = event.clientX,
          clientY = event.clientY;

      if (button !== primaryButton) {
        return;
      }

      var point = {
        x: clientX,
        y: clientY
      };
      var phase = getPhase();

      if (phase.type === 'DRAGGING') {
        event.preventDefault();
        phase.actions.move(point);
        return;
      }

      !(phase.type === 'PENDING') ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot be IDLE') : invariant$3(false) : void 0;
      var pending = phase.point;

      if (!isSloppyClickThresholdExceeded(pending, point)) {
        return;
      }

      event.preventDefault();
      var actions = phase.actions.fluidLift(point);
      setPhase({
        type: 'DRAGGING',
        actions: actions
      });
    }
  }, {
    eventName: 'mouseup',
    fn: function fn(event) {
      var phase = getPhase();

      if (phase.type !== 'DRAGGING') {
        cancel();
        return;
      }

      event.preventDefault();
      phase.actions.drop({
        shouldBlockNextClick: true
      });
      completed();
    }
  }, {
    eventName: 'mousedown',
    fn: function fn(event) {
      if (getPhase().type === 'DRAGGING') {
        event.preventDefault();
      }

      cancel();
    }
  }, {
    eventName: 'keydown',
    fn: function fn(event) {
      var phase = getPhase();

      if (phase.type === 'PENDING') {
        cancel();
        return;
      }

      if (event.keyCode === escape) {
        event.preventDefault();
        cancel();
        return;
      }

      preventStandardKeyEvents(event);
    }
  }, {
    eventName: 'resize',
    fn: cancel
  }, {
    eventName: 'scroll',
    options: {
      passive: true,
      capture: false
    },
    fn: function fn() {
      if (getPhase().type === 'PENDING') {
        cancel();
      }
    }
  }, {
    eventName: 'webkitmouseforcedown',
    fn: function fn(event) {
      var phase = getPhase();
      !(phase.type !== 'IDLE') ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Unexpected phase') : invariant$3(false) : void 0;

      if (phase.actions.shouldRespectForcePress()) {
        cancel();
        return;
      }

      event.preventDefault();
    }
  }, {
    eventName: supportedEventName,
    fn: cancel
  }];
}

function useMouseSensor(api) {
  var phaseRef = useRef(idle$1);
  var unbindEventsRef = useRef(noop$7);
  var startCaptureBinding = useMemo(function () {
    return {
      eventName: 'mousedown',
      fn: function onMouseDown(event) {
        if (event.defaultPrevented) {
          return;
        }

        if (event.button !== primaryButton) {
          return;
        }

        if (event.ctrlKey || event.metaKey || event.shiftKey || event.altKey) {
          return;
        }

        var draggableId = api.findClosestDraggableId(event);

        if (!draggableId) {
          return;
        }

        var actions = api.tryGetLock(draggableId, stop, {
          sourceEvent: event
        });

        if (!actions) {
          return;
        }

        event.preventDefault();
        var point = {
          x: event.clientX,
          y: event.clientY
        };
        unbindEventsRef.current();
        startPendingDrag(actions, point);
      }
    };
  }, [api]);
  var preventForcePressBinding = useMemo(function () {
    return {
      eventName: 'webkitmouseforcewillbegin',
      fn: function fn(event) {
        if (event.defaultPrevented) {
          return;
        }

        var id = api.findClosestDraggableId(event);

        if (!id) {
          return;
        }

        var options = api.findOptionsForDraggable(id);

        if (!options) {
          return;
        }

        if (options.shouldRespectForcePress) {
          return;
        }

        if (!api.canGetLock(id)) {
          return;
        }

        event.preventDefault();
      }
    };
  }, [api]);
  var listenForCapture = useCallback(function listenForCapture() {
    var options = {
      passive: false,
      capture: true
    };
    unbindEventsRef.current = bindEvents(window, [preventForcePressBinding, startCaptureBinding], options);
  }, [preventForcePressBinding, startCaptureBinding]);
  var stop = useCallback(function () {
    var current = phaseRef.current;

    if (current.type === 'IDLE') {
      return;
    }

    phaseRef.current = idle$1;
    unbindEventsRef.current();
    listenForCapture();
  }, [listenForCapture]);
  var cancel = useCallback(function () {
    var phase = phaseRef.current;
    stop();

    if (phase.type === 'DRAGGING') {
      phase.actions.cancel({
        shouldBlockNextClick: true
      });
    }

    if (phase.type === 'PENDING') {
      phase.actions.abort();
    }
  }, [stop]);
  var bindCapturingEvents = useCallback(function bindCapturingEvents() {
    var options = {
      capture: true,
      passive: false
    };
    var bindings = getCaptureBindings({
      cancel: cancel,
      completed: stop,
      getPhase: function getPhase() {
        return phaseRef.current;
      },
      setPhase: function setPhase(phase) {
        phaseRef.current = phase;
      }
    });
    unbindEventsRef.current = bindEvents(window, bindings, options);
  }, [cancel, stop]);
  var startPendingDrag = useCallback(function startPendingDrag(actions, point) {
    !(phaseRef.current.type === 'IDLE') ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Expected to move from IDLE to PENDING drag') : invariant$3(false) : void 0;
    phaseRef.current = {
      type: 'PENDING',
      point: point,
      actions: actions
    };
    bindCapturingEvents();
  }, [bindCapturingEvents]);
  useIsomorphicLayoutEffect$1(function mount() {
    listenForCapture();
    return function unmount() {
      unbindEventsRef.current();
    };
  }, [listenForCapture]);
}

var _scrollJumpKeys;

function noop$1$1() {}

var scrollJumpKeys = (_scrollJumpKeys = {}, _scrollJumpKeys[pageDown] = true, _scrollJumpKeys[pageUp] = true, _scrollJumpKeys[home] = true, _scrollJumpKeys[end$1] = true, _scrollJumpKeys);

function getDraggingBindings(actions, stop) {
  function cancel() {
    stop();
    actions.cancel();
  }

  function drop() {
    stop();
    actions.drop();
  }

  return [{
    eventName: 'keydown',
    fn: function fn(event) {
      if (event.keyCode === escape) {
        event.preventDefault();
        cancel();
        return;
      }

      if (event.keyCode === space) {
        event.preventDefault();
        drop();
        return;
      }

      if (event.keyCode === arrowDown) {
        event.preventDefault();
        actions.moveDown();
        return;
      }

      if (event.keyCode === arrowUp) {
        event.preventDefault();
        actions.moveUp();
        return;
      }

      if (event.keyCode === arrowRight) {
        event.preventDefault();
        actions.moveRight();
        return;
      }

      if (event.keyCode === arrowLeft) {
        event.preventDefault();
        actions.moveLeft();
        return;
      }

      if (scrollJumpKeys[event.keyCode]) {
        event.preventDefault();
        return;
      }

      preventStandardKeyEvents(event);
    }
  }, {
    eventName: 'mousedown',
    fn: cancel
  }, {
    eventName: 'mouseup',
    fn: cancel
  }, {
    eventName: 'click',
    fn: cancel
  }, {
    eventName: 'touchstart',
    fn: cancel
  }, {
    eventName: 'resize',
    fn: cancel
  }, {
    eventName: 'wheel',
    fn: cancel,
    options: {
      passive: true
    }
  }, {
    eventName: supportedEventName,
    fn: cancel
  }];
}

function useKeyboardSensor(api) {
  var unbindEventsRef = useRef(noop$1$1);
  var startCaptureBinding = useMemo(function () {
    return {
      eventName: 'keydown',
      fn: function onKeyDown(event) {
        if (event.defaultPrevented) {
          return;
        }

        if (event.keyCode !== space) {
          return;
        }

        var draggableId = api.findClosestDraggableId(event);

        if (!draggableId) {
          return;
        }

        var preDrag = api.tryGetLock(draggableId, stop, {
          sourceEvent: event
        });

        if (!preDrag) {
          return;
        }

        event.preventDefault();
        var isCapturing = true;
        var actions = preDrag.snapLift();
        unbindEventsRef.current();

        function stop() {
          !isCapturing ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot stop capturing a keyboard drag when not capturing') : invariant$3(false) : void 0;
          isCapturing = false;
          unbindEventsRef.current();
          listenForCapture();
        }

        unbindEventsRef.current = bindEvents(window, getDraggingBindings(actions, stop), {
          capture: true,
          passive: false
        });
      }
    };
  }, [api]);
  var listenForCapture = useCallback(function tryStartCapture() {
    var options = {
      passive: false,
      capture: true
    };
    unbindEventsRef.current = bindEvents(window, [startCaptureBinding], options);
  }, [startCaptureBinding]);
  useIsomorphicLayoutEffect$1(function mount() {
    listenForCapture();
    return function unmount() {
      unbindEventsRef.current();
    };
  }, [listenForCapture]);
}

var idle$2 = {
  type: 'IDLE'
};
var timeForLongPress = 120;
var forcePressThreshold = 0.15;

function getWindowBindings(_ref) {
  var cancel = _ref.cancel,
      getPhase = _ref.getPhase;
  return [{
    eventName: 'orientationchange',
    fn: cancel
  }, {
    eventName: 'resize',
    fn: cancel
  }, {
    eventName: 'contextmenu',
    fn: function fn(event) {
      event.preventDefault();
    }
  }, {
    eventName: 'keydown',
    fn: function fn(event) {
      if (getPhase().type !== 'DRAGGING') {
        cancel();
        return;
      }

      if (event.keyCode === escape) {
        event.preventDefault();
      }

      cancel();
    }
  }, {
    eventName: supportedEventName,
    fn: cancel
  }];
}

function getHandleBindings(_ref2) {
  var cancel = _ref2.cancel,
      completed = _ref2.completed,
      getPhase = _ref2.getPhase;
  return [{
    eventName: 'touchmove',
    options: {
      capture: false
    },
    fn: function fn(event) {
      var phase = getPhase();

      if (phase.type !== 'DRAGGING') {
        cancel();
        return;
      }

      phase.hasMoved = true;
      var _event$touches$ = event.touches[0],
          clientX = _event$touches$.clientX,
          clientY = _event$touches$.clientY;
      var point = {
        x: clientX,
        y: clientY
      };
      event.preventDefault();
      phase.actions.move(point);
    }
  }, {
    eventName: 'touchend',
    fn: function fn(event) {
      var phase = getPhase();

      if (phase.type !== 'DRAGGING') {
        cancel();
        return;
      }

      event.preventDefault();
      phase.actions.drop({
        shouldBlockNextClick: true
      });
      completed();
    }
  }, {
    eventName: 'touchcancel',
    fn: function fn(event) {
      if (getPhase().type !== 'DRAGGING') {
        cancel();
        return;
      }

      event.preventDefault();
      cancel();
    }
  }, {
    eventName: 'touchforcechange',
    fn: function fn(event) {
      var phase = getPhase();
      !(phase.type !== 'IDLE') ? process.env.NODE_ENV !== "production" ? invariant$3(false) : invariant$3(false) : void 0;
      var touch = event.touches[0];

      if (!touch) {
        return;
      }

      var isForcePress = touch.force >= forcePressThreshold;

      if (!isForcePress) {
        return;
      }

      var shouldRespect = phase.actions.shouldRespectForcePress();

      if (phase.type === 'PENDING') {
        if (shouldRespect) {
          cancel();
        }

        return;
      }

      if (shouldRespect) {
        if (phase.hasMoved) {
          event.preventDefault();
          return;
        }

        cancel();
        return;
      }

      event.preventDefault();
    }
  }, {
    eventName: supportedEventName,
    fn: cancel
  }];
}

function useMouseSensor$1(api) {
  var phaseRef = useRef(idle$2);
  var unbindEventsRef = useRef(noop$7);
  var getPhase = useCallback(function getPhase() {
    return phaseRef.current;
  }, []);
  var setPhase = useCallback(function setPhase(phase) {
    phaseRef.current = phase;
  }, []);
  var startCaptureBinding = useMemo(function () {
    return {
      eventName: 'touchstart',
      fn: function onTouchStart(event) {
        if (event.defaultPrevented) {
          return;
        }

        var draggableId = api.findClosestDraggableId(event);

        if (!draggableId) {
          return;
        }

        var actions = api.tryGetLock(draggableId, stop, {
          sourceEvent: event
        });

        if (!actions) {
          return;
        }

        var touch = event.touches[0];
        var clientX = touch.clientX,
            clientY = touch.clientY;
        var point = {
          x: clientX,
          y: clientY
        };
        unbindEventsRef.current();
        startPendingDrag(actions, point);
      }
    };
  }, [api]);
  var listenForCapture = useCallback(function listenForCapture() {
    var options = {
      capture: true,
      passive: false
    };
    unbindEventsRef.current = bindEvents(window, [startCaptureBinding], options);
  }, [startCaptureBinding]);
  var stop = useCallback(function () {
    var current = phaseRef.current;

    if (current.type === 'IDLE') {
      return;
    }

    if (current.type === 'PENDING') {
      clearTimeout(current.longPressTimerId);
    }

    setPhase(idle$2);
    unbindEventsRef.current();
    listenForCapture();
  }, [listenForCapture, setPhase]);
  var cancel = useCallback(function () {
    var phase = phaseRef.current;
    stop();

    if (phase.type === 'DRAGGING') {
      phase.actions.cancel({
        shouldBlockNextClick: true
      });
    }

    if (phase.type === 'PENDING') {
      phase.actions.abort();
    }
  }, [stop]);
  var bindCapturingEvents = useCallback(function bindCapturingEvents() {
    var options = {
      capture: true,
      passive: false
    };
    var args = {
      cancel: cancel,
      completed: stop,
      getPhase: getPhase
    };
    var unbindTarget = bindEvents(window, getHandleBindings(args), options);
    var unbindWindow = bindEvents(window, getWindowBindings(args), options);

    unbindEventsRef.current = function unbindAll() {
      unbindTarget();
      unbindWindow();
    };
  }, [cancel, getPhase, stop]);
  var startDragging = useCallback(function startDragging() {
    var phase = getPhase();
    !(phase.type === 'PENDING') ? process.env.NODE_ENV !== "production" ? invariant$3(false, "Cannot start dragging from phase " + phase.type) : invariant$3(false) : void 0;
    var actions = phase.actions.fluidLift(phase.point);
    setPhase({
      type: 'DRAGGING',
      actions: actions,
      hasMoved: false
    });
  }, [getPhase, setPhase]);
  var startPendingDrag = useCallback(function startPendingDrag(actions, point) {
    !(getPhase().type === 'IDLE') ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Expected to move from IDLE to PENDING drag') : invariant$3(false) : void 0;
    var longPressTimerId = setTimeout(startDragging, timeForLongPress);
    setPhase({
      type: 'PENDING',
      point: point,
      actions: actions,
      longPressTimerId: longPressTimerId
    });
    bindCapturingEvents();
  }, [bindCapturingEvents, getPhase, setPhase, startDragging]);
  useIsomorphicLayoutEffect$1(function mount() {
    listenForCapture();
    return function unmount() {
      unbindEventsRef.current();
      var phase = getPhase();

      if (phase.type === 'PENDING') {
        clearTimeout(phase.longPressTimerId);
        setPhase(idle$2);
      }
    };
  }, [getPhase, listenForCapture, setPhase]);
  useIsomorphicLayoutEffect$1(function webkitHack() {
    var unbind = bindEvents(window, [{
      eventName: 'touchmove',
      fn: function fn() {},
      options: {
        capture: false,
        passive: false
      }
    }]);
    return unbind;
  }, []);
}

function useValidateSensorHooks(sensorHooks) {
  useDev(function () {
    var previousRef = usePrevious(sensorHooks);
    useDevSetupWarning(function () {
      !(previousRef.current.length === sensorHooks.length) ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot change the amount of sensor hooks after mounting') : invariant$3(false) : void 0;
    });
  });
}

var interactiveTagNames = {
  input: true,
  button: true,
  textarea: true,
  select: true,
  option: true,
  optgroup: true,
  video: true,
  audio: true
};

function isAnInteractiveElement(parent, current) {
  if (current == null) {
    return false;
  }

  var hasAnInteractiveTag = Boolean(interactiveTagNames[current.tagName.toLowerCase()]);

  if (hasAnInteractiveTag) {
    return true;
  }

  var attribute = current.getAttribute('contenteditable');

  if (attribute === 'true' || attribute === '') {
    return true;
  }

  if (current === parent) {
    return false;
  }

  return isAnInteractiveElement(parent, current.parentElement);
}

function isEventInInteractiveElement(draggable, event) {
  var target = event.target;

  if (!isHtmlElement(target)) {
    return false;
  }

  return isAnInteractiveElement(draggable, target);
}

var getBorderBoxCenterPosition = (function (el) {
  return getRect(el.getBoundingClientRect()).center;
});

function isElement$1(el) {
  return el instanceof getWindowFromEl(el).Element;
}

var supportedMatchesName = function () {
  var base = 'matches';

  if (typeof document === 'undefined') {
    return base;
  }

  var candidates = [base, 'msMatchesSelector', 'webkitMatchesSelector'];
  var value = find$2(candidates, function (name) {
    return name in Element.prototype;
  });
  return value || base;
}();

function closestPonyfill(el, selector) {
  if (el == null) {
    return null;
  }

  if (el[supportedMatchesName](selector)) {
    return el;
  }

  return closestPonyfill(el.parentElement, selector);
}

function closest$1(el, selector) {
  if (el.closest) {
    return el.closest(selector);
  }

  return closestPonyfill(el, selector);
}

function getSelector(contextId) {
  return "[" + dragHandle.contextId + "=\"" + contextId + "\"]";
}

function findClosestDragHandleFromEvent(contextId, event) {
  var target = event.target;

  if (!isElement$1(target)) {
    process.env.NODE_ENV !== "production" ? warning$5('event.target must be a Element') : void 0;
    return null;
  }

  var selector = getSelector(contextId);
  var handle = closest$1(target, selector);

  if (!handle) {
    return null;
  }

  if (!isHtmlElement(handle)) {
    process.env.NODE_ENV !== "production" ? warning$5('drag handle must be a HTMLElement') : void 0;
    return null;
  }

  return handle;
}

function tryGetClosestDraggableIdFromEvent(contextId, event) {
  var handle = findClosestDragHandleFromEvent(contextId, event);

  if (!handle) {
    return null;
  }

  return handle.getAttribute(dragHandle.draggableId);
}

function findDraggable(contextId, draggableId) {
  var selector = "[" + draggable.contextId + "=\"" + contextId + "\"]";
  var possible = toArray$1(document.querySelectorAll(selector));
  var draggable$1 = find$2(possible, function (el) {
    return el.getAttribute(draggable.id) === draggableId;
  });

  if (!draggable$1) {
    return null;
  }

  if (!isHtmlElement(draggable$1)) {
    process.env.NODE_ENV !== "production" ? warning$5('Draggable element is not a HTMLElement') : void 0;
    return null;
  }

  return draggable$1;
}

function preventDefault(event) {
  event.preventDefault();
}

function _isActive(_ref) {
  var expected = _ref.expected,
      phase = _ref.phase,
      isLockActive = _ref.isLockActive,
      shouldWarn = _ref.shouldWarn;

  if (!isLockActive()) {
    if (shouldWarn) {
      process.env.NODE_ENV !== "production" ? warning$5("\n        Cannot perform action.\n        The sensor no longer has an action lock.\n\n        Tips:\n\n        - Throw away your action handlers when forceStop() is called\n        - Check actions.isActive() if you really need to\n      ") : void 0;
    }

    return false;
  }

  if (expected !== phase) {
    if (shouldWarn) {
      process.env.NODE_ENV !== "production" ? warning$5("\n        Cannot perform action.\n        The actions you used belong to an outdated phase\n\n        Current phase: " + expected + "\n        You called an action from outdated phase: " + phase + "\n\n        Tips:\n\n        - Do not use preDragActions actions after calling preDragActions.lift()\n      ") : void 0;
    }

    return false;
  }

  return true;
}

function canStart(_ref2) {
  var lockAPI = _ref2.lockAPI,
      store = _ref2.store,
      registry = _ref2.registry,
      draggableId = _ref2.draggableId;

  if (lockAPI.isClaimed()) {
    return false;
  }

  var entry = registry.draggable.findById(draggableId);

  if (!entry) {
    process.env.NODE_ENV !== "production" ? warning$5("Unable to find draggable with id: " + draggableId) : void 0;
    return false;
  }

  if (!entry.options.isEnabled) {
    return false;
  }

  if (!canStartDrag(store.getState(), draggableId)) {
    return false;
  }

  return true;
}

function tryStart(_ref3) {
  var lockAPI = _ref3.lockAPI,
      contextId = _ref3.contextId,
      store = _ref3.store,
      registry = _ref3.registry,
      draggableId = _ref3.draggableId,
      forceSensorStop = _ref3.forceSensorStop,
      sourceEvent = _ref3.sourceEvent;
  var shouldStart = canStart({
    lockAPI: lockAPI,
    store: store,
    registry: registry,
    draggableId: draggableId
  });

  if (!shouldStart) {
    return null;
  }

  var entry = registry.draggable.getById(draggableId);
  var el = findDraggable(contextId, entry.descriptor.id);

  if (!el) {
    process.env.NODE_ENV !== "production" ? warning$5("Unable to find draggable element with id: " + draggableId) : void 0;
    return null;
  }

  if (sourceEvent && !entry.options.canDragInteractiveElements && isEventInInteractiveElement(el, sourceEvent)) {
    return null;
  }

  var lock = lockAPI.claim(forceSensorStop || noop$7);
  var phase = 'PRE_DRAG';

  function getShouldRespectForcePress() {
    return entry.options.shouldRespectForcePress;
  }

  function isLockActive() {
    return lockAPI.isActive(lock);
  }

  function tryDispatch(expected, getAction) {
    if (_isActive({
      expected: expected,
      phase: phase,
      isLockActive: isLockActive,
      shouldWarn: true
    })) {
      store.dispatch(getAction());
    }
  }

  var tryDispatchWhenDragging = tryDispatch.bind(this, 'DRAGGING');

  function lift$1(args) {
    function completed() {
      lockAPI.release();
      phase = 'COMPLETED';
    }

    if (phase !== 'PRE_DRAG') {
      completed();
      !(phase === 'PRE_DRAG') ? process.env.NODE_ENV !== "production" ? invariant$3(false, "Cannot lift in phase " + phase) : invariant$3(false) : void 0;
    }

    store.dispatch(lift(args.liftActionArgs));
    phase = 'DRAGGING';

    function finish(reason, options) {
      if (options === void 0) {
        options = {
          shouldBlockNextClick: false
        };
      }

      args.cleanup();

      if (options.shouldBlockNextClick) {
        var unbind = bindEvents(window, [{
          eventName: 'click',
          fn: preventDefault,
          options: {
            once: true,
            passive: false,
            capture: true
          }
        }]);
        setTimeout(unbind);
      }

      completed();
      store.dispatch(drop({
        reason: reason
      }));
    }

    return _extends$a({
      isActive: function isActive() {
        return _isActive({
          expected: 'DRAGGING',
          phase: phase,
          isLockActive: isLockActive,
          shouldWarn: false
        });
      },
      shouldRespectForcePress: getShouldRespectForcePress,
      drop: function drop(options) {
        return finish('DROP', options);
      },
      cancel: function cancel(options) {
        return finish('CANCEL', options);
      }
    }, args.actions);
  }

  function fluidLift(clientSelection) {
    var move$1 = rafSchd$1(function (client) {
      tryDispatchWhenDragging(function () {
        return move({
          client: client
        });
      });
    });
    var api = lift$1({
      liftActionArgs: {
        id: draggableId,
        clientSelection: clientSelection,
        movementMode: 'FLUID'
      },
      cleanup: function cleanup() {
        return move$1.cancel();
      },
      actions: {
        move: move$1
      }
    });
    return _extends$a({}, api, {
      move: move$1
    });
  }

  function snapLift() {
    var actions = {
      moveUp: function moveUp$1() {
        return tryDispatchWhenDragging(moveUp);
      },
      moveRight: function moveRight$1() {
        return tryDispatchWhenDragging(moveRight);
      },
      moveDown: function moveDown$1() {
        return tryDispatchWhenDragging(moveDown);
      },
      moveLeft: function moveLeft$1() {
        return tryDispatchWhenDragging(moveLeft);
      }
    };
    return lift$1({
      liftActionArgs: {
        id: draggableId,
        clientSelection: getBorderBoxCenterPosition(el),
        movementMode: 'SNAP'
      },
      cleanup: noop$7,
      actions: actions
    });
  }

  function abortPreDrag() {
    var shouldRelease = _isActive({
      expected: 'PRE_DRAG',
      phase: phase,
      isLockActive: isLockActive,
      shouldWarn: true
    });

    if (shouldRelease) {
      lockAPI.release();
    }
  }

  var preDrag = {
    isActive: function isActive() {
      return _isActive({
        expected: 'PRE_DRAG',
        phase: phase,
        isLockActive: isLockActive,
        shouldWarn: false
      });
    },
    shouldRespectForcePress: getShouldRespectForcePress,
    fluidLift: fluidLift,
    snapLift: snapLift,
    abort: abortPreDrag
  };
  return preDrag;
}

var defaultSensors = [useMouseSensor, useKeyboardSensor, useMouseSensor$1];
function useSensorMarshal(_ref4) {
  var contextId = _ref4.contextId,
      store = _ref4.store,
      registry = _ref4.registry,
      customSensors = _ref4.customSensors,
      enableDefaultSensors = _ref4.enableDefaultSensors;
  var useSensors = [].concat(enableDefaultSensors ? defaultSensors : [], customSensors || []);
  var lockAPI = useState(function () {
    return create$1();
  })[0];
  var tryAbandonLock = useCallback(function tryAbandonLock(previous, current) {
    if (previous.isDragging && !current.isDragging) {
      lockAPI.tryAbandon();
    }
  }, [lockAPI]);
  useIsomorphicLayoutEffect$1(function listenToStore() {
    var previous = store.getState();
    var unsubscribe = store.subscribe(function () {
      var current = store.getState();
      tryAbandonLock(previous, current);
      previous = current;
    });
    return unsubscribe;
  }, [lockAPI, store, tryAbandonLock]);
  useIsomorphicLayoutEffect$1(function () {
    return lockAPI.tryAbandon;
  }, [lockAPI.tryAbandon]);
  var canGetLock = useCallback(function (draggableId) {
    return canStart({
      lockAPI: lockAPI,
      registry: registry,
      store: store,
      draggableId: draggableId
    });
  }, [lockAPI, registry, store]);
  var tryGetLock = useCallback(function (draggableId, forceStop, options) {
    return tryStart({
      lockAPI: lockAPI,
      registry: registry,
      contextId: contextId,
      store: store,
      draggableId: draggableId,
      forceSensorStop: forceStop,
      sourceEvent: options && options.sourceEvent ? options.sourceEvent : null
    });
  }, [contextId, lockAPI, registry, store]);
  var findClosestDraggableId = useCallback(function (event) {
    return tryGetClosestDraggableIdFromEvent(contextId, event);
  }, [contextId]);
  var findOptionsForDraggable = useCallback(function (id) {
    var entry = registry.draggable.findById(id);
    return entry ? entry.options : null;
  }, [registry.draggable]);
  var tryReleaseLock = useCallback(lockAPI.tryAbandon, [lockAPI]);
  var isLockClaimed = useCallback(lockAPI.isClaimed, [lockAPI]);
  var api = useMemo(function () {
    return {
      canGetLock: canGetLock,
      tryGetLock: tryGetLock,
      findClosestDraggableId: findClosestDraggableId,
      findOptionsForDraggable: findOptionsForDraggable,
      tryReleaseLock: tryReleaseLock,
      isLockClaimed: isLockClaimed
    };
  }, [canGetLock, tryGetLock, findClosestDraggableId, findOptionsForDraggable, tryReleaseLock, isLockClaimed]);
  useValidateSensorHooks(useSensors);

  for (var i = 0; i < useSensors.length; i++) {
    useSensors[i](api);
  }
}

var createResponders = function createResponders(props) {
  return {
    onBeforeCapture: props.onBeforeCapture,
    onBeforeDragStart: props.onBeforeDragStart,
    onDragStart: props.onDragStart,
    onDragEnd: props.onDragEnd,
    onDragUpdate: props.onDragUpdate
  };
};

function getStore(lazyRef) {
  !lazyRef.current ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Could not find store from lazy ref') : invariant$3(false) : void 0;
  return lazyRef.current;
}

function App(props) {
  var contextId = props.contextId,
      setCallbacks = props.setCallbacks,
      sensors = props.sensors,
      nonce = props.nonce,
      liftInstruction = props.liftInstruction;
  var lazyStoreRef = useRef(null);
  useStartupValidation();
  var lastPropsRef = usePrevious(props);
  var getResponders = useCallback(function () {
    return createResponders(lastPropsRef.current);
  }, [lastPropsRef]);
  var announce = useAnnouncer(contextId);
  var liftInstructionId = useLiftInstruction(contextId, liftInstruction);
  var styleMarshal = useStyleMarshal(contextId, nonce);
  var lazyDispatch = useCallback(function (action) {
    getStore(lazyStoreRef).dispatch(action);
  }, []);
  var marshalCallbacks = useMemo(function () {
    return bindActionCreators$1({
      publishWhileDragging: publishWhileDragging,
      updateDroppableScroll: updateDroppableScroll,
      updateDroppableIsEnabled: updateDroppableIsEnabled,
      updateDroppableIsCombineEnabled: updateDroppableIsCombineEnabled,
      collectionStarting: collectionStarting
    }, lazyDispatch);
  }, [lazyDispatch]);
  var registry = useRegistry();
  var dimensionMarshal = useMemo(function () {
    return createDimensionMarshal(registry, marshalCallbacks);
  }, [registry, marshalCallbacks]);
  var autoScroller = useMemo(function () {
    return createAutoScroller(_extends$a({
      scrollWindow: scrollWindow,
      scrollDroppable: dimensionMarshal.scrollDroppable
    }, bindActionCreators$1({
      move: move
    }, lazyDispatch)));
  }, [dimensionMarshal.scrollDroppable, lazyDispatch]);
  var focusMarshal = useFocusMarshal(contextId);
  var store = useMemo(function () {
    return createStore({
      announce: announce,
      autoScroller: autoScroller,
      dimensionMarshal: dimensionMarshal,
      focusMarshal: focusMarshal,
      getResponders: getResponders,
      styleMarshal: styleMarshal
    });
  }, [announce, autoScroller, dimensionMarshal, focusMarshal, getResponders, styleMarshal]);

  if (process.env.NODE_ENV !== 'production') {
    if (lazyStoreRef.current && lazyStoreRef.current !== store) {
      process.env.NODE_ENV !== "production" ? warning$5('unexpected store change') : void 0;
    }
  }

  lazyStoreRef.current = store;
  var tryResetStore = useCallback(function () {
    var current = getStore(lazyStoreRef);
    var state = current.getState();

    if (state.phase !== 'IDLE') {
      current.dispatch(flush());
    }
  }, []);
  var isDragging = useCallback(function () {
    var state = getStore(lazyStoreRef).getState();
    return state.isDragging || state.phase === 'DROP_ANIMATING';
  }, []);
  var appCallbacks = useMemo(function () {
    return {
      isDragging: isDragging,
      tryAbort: tryResetStore
    };
  }, [isDragging, tryResetStore]);
  setCallbacks(appCallbacks);
  var getCanLift = useCallback(function (id) {
    return canStartDrag(getStore(lazyStoreRef).getState(), id);
  }, []);
  var getIsMovementAllowed = useCallback(function () {
    return isMovementAllowed(getStore(lazyStoreRef).getState());
  }, []);
  var appContext = useMemo(function () {
    return {
      marshal: dimensionMarshal,
      focus: focusMarshal,
      contextId: contextId,
      canLift: getCanLift,
      isMovementAllowed: getIsMovementAllowed,
      liftInstructionId: liftInstructionId,
      registry: registry
    };
  }, [contextId, dimensionMarshal, focusMarshal, getCanLift, getIsMovementAllowed, liftInstructionId, registry]);
  useSensorMarshal({
    contextId: contextId,
    store: store,
    registry: registry,
    customSensors: sensors,
    enableDefaultSensors: props.enableDefaultSensors !== false
  });
  useEffect(function () {
    return tryResetStore;
  }, [tryResetStore]);
  return React__default.createElement(AppContext.Provider, {
    value: appContext
  }, React__default.createElement(Provider$4, {
    context: StoreContext,
    store: store
  }, props.children));
}

var instanceCount = 0;
function DragDropContext(props) {
  var contextId = useMemo(function () {
    return "" + instanceCount++;
  }, []);
  var liftInstruction = props.liftInstruction || preset.liftInstruction;
  return React__default.createElement(ErrorBoundary, null, function (setCallbacks) {
    return React__default.createElement(App, {
      nonce: props.nonce,
      contextId: contextId,
      setCallbacks: setCallbacks,
      liftInstruction: liftInstruction,
      enableDefaultSensors: props.enableDefaultSensors,
      sensors: props.sensors,
      onBeforeCapture: props.onBeforeCapture,
      onBeforeDragStart: props.onBeforeDragStart,
      onDragStart: props.onDragStart,
      onDragUpdate: props.onDragUpdate,
      onDragEnd: props.onDragEnd
    }, props.children);
  });
}

var isEqual$1 = function isEqual(base) {
  return function (value) {
    return base === value;
  };
};

var isScroll = isEqual$1('scroll');
var isAuto = isEqual$1('auto');
var isVisible$1$1 = isEqual$1('visible');

var isEither = function isEither(overflow, fn) {
  return fn(overflow.overflowX) || fn(overflow.overflowY);
};

var isBoth = function isBoth(overflow, fn) {
  return fn(overflow.overflowX) && fn(overflow.overflowY);
};

var isElementScrollable = function isElementScrollable(el) {
  var style = window.getComputedStyle(el);
  var overflow = {
    overflowX: style.overflowX,
    overflowY: style.overflowY
  };
  return isEither(overflow, isScroll) || isEither(overflow, isAuto);
};

var isBodyScrollable = function isBodyScrollable() {
  if (process.env.NODE_ENV === 'production') {
    return false;
  }

  var body = getBodyElement();
  var html = document.documentElement;
  !html ? process.env.NODE_ENV !== "production" ? invariant$3(false) : invariant$3(false) : void 0;

  if (!isElementScrollable(body)) {
    return false;
  }

  var htmlStyle = window.getComputedStyle(html);
  var htmlOverflow = {
    overflowX: htmlStyle.overflowX,
    overflowY: htmlStyle.overflowY
  };

  if (isBoth(htmlOverflow, isVisible$1$1)) {
    return false;
  }

  process.env.NODE_ENV !== "production" ? warning$5("\n    We have detected that your <body> element might be a scroll container.\n    We have found no reliable way of detecting whether the <body> element is a scroll container.\n    Under most circumstances a <body> scroll bar will be on the <html> element (document.documentElement)\n\n    Because we cannot determine if the <body> is a scroll container, and generally it is not one,\n    we will be treating the <body> as *not* a scroll container\n\n    More information: https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/guides/how-we-detect-scroll-containers.md\n  ") : void 0;
  return false;
};

var getClosestScrollable = function getClosestScrollable(el) {
  if (el == null) {
    return null;
  }

  if (el === document.body) {
    return isBodyScrollable() ? el : null;
  }

  if (el === document.documentElement) {
    return null;
  }

  if (!isElementScrollable(el)) {
    return getClosestScrollable(el.parentElement);
  }

  return el;
};

var checkForNestedScrollContainers = (function (scrollable) {
  if (!scrollable) {
    return;
  }

  var anotherScrollParent = getClosestScrollable(scrollable.parentElement);

  if (!anotherScrollParent) {
    return;
  }

  process.env.NODE_ENV !== "production" ? warning$5("\n    Droppable: unsupported nested scroll container detected.\n    A Droppable can only have one scroll parent (which can be itself)\n    Nested scroll containers are currently not supported.\n\n    We hope to support nested scroll containers soon: https://github.com/atlassian/react-beautiful-dnd/issues/131\n  ") : void 0;
});

var getScroll$1$1 = (function (el) {
  return {
    x: el.scrollLeft,
    y: el.scrollTop
  };
});

var getIsFixed = function getIsFixed(el) {
  if (!el) {
    return false;
  }

  var style = window.getComputedStyle(el);

  if (style.position === 'fixed') {
    return true;
  }

  return getIsFixed(el.parentElement);
};

var getEnv = (function (start) {
  var closestScrollable = getClosestScrollable(start);
  var isFixedOnPage = getIsFixed(start);
  return {
    closestScrollable: closestScrollable,
    isFixedOnPage: isFixedOnPage
  };
});

var getDroppableDimension = (function (_ref) {
  var descriptor = _ref.descriptor,
      isEnabled = _ref.isEnabled,
      isCombineEnabled = _ref.isCombineEnabled,
      isFixedOnPage = _ref.isFixedOnPage,
      direction = _ref.direction,
      client = _ref.client,
      page = _ref.page,
      closest = _ref.closest;

  var frame = function () {
    if (!closest) {
      return null;
    }

    var scrollSize = closest.scrollSize,
        frameClient = closest.client;
    var maxScroll = getMaxScroll({
      scrollHeight: scrollSize.scrollHeight,
      scrollWidth: scrollSize.scrollWidth,
      height: frameClient.paddingBox.height,
      width: frameClient.paddingBox.width
    });
    return {
      pageMarginBox: closest.page.marginBox,
      frameClient: frameClient,
      scrollSize: scrollSize,
      shouldClipSubject: closest.shouldClipSubject,
      scroll: {
        initial: closest.scroll,
        current: closest.scroll,
        max: maxScroll,
        diff: {
          value: origin,
          displacement: origin
        }
      }
    };
  }();

  var axis = direction === 'vertical' ? vertical : horizontal;
  var subject = getSubject({
    page: page,
    withPlaceholder: null,
    axis: axis,
    frame: frame
  });
  var dimension = {
    descriptor: descriptor,
    isCombineEnabled: isCombineEnabled,
    isFixedOnPage: isFixedOnPage,
    axis: axis,
    isEnabled: isEnabled,
    client: client,
    page: page,
    frame: frame,
    subject: subject
  };
  return dimension;
});

var getClient = function getClient(targetRef, closestScrollable) {
  var base = getBox(targetRef);

  if (!closestScrollable) {
    return base;
  }

  if (targetRef !== closestScrollable) {
    return base;
  }

  var top = base.paddingBox.top - closestScrollable.scrollTop;
  var left = base.paddingBox.left - closestScrollable.scrollLeft;
  var bottom = top + closestScrollable.scrollHeight;
  var right = left + closestScrollable.scrollWidth;
  var paddingBox = {
    top: top,
    right: right,
    bottom: bottom,
    left: left
  };
  var borderBox = expand(paddingBox, base.border);
  var client = createBox({
    borderBox: borderBox,
    margin: base.margin,
    border: base.border,
    padding: base.padding
  });
  return client;
};

var getDimension = (function (_ref) {
  var ref = _ref.ref,
      descriptor = _ref.descriptor,
      env = _ref.env,
      windowScroll = _ref.windowScroll,
      direction = _ref.direction,
      isDropDisabled = _ref.isDropDisabled,
      isCombineEnabled = _ref.isCombineEnabled,
      shouldClipSubject = _ref.shouldClipSubject;
  var closestScrollable = env.closestScrollable;
  var client = getClient(ref, closestScrollable);
  var page = withScroll(client, windowScroll);

  var closest = function () {
    if (!closestScrollable) {
      return null;
    }

    var frameClient = getBox(closestScrollable);
    var scrollSize = {
      scrollHeight: closestScrollable.scrollHeight,
      scrollWidth: closestScrollable.scrollWidth
    };
    return {
      client: frameClient,
      page: withScroll(frameClient, windowScroll),
      scroll: getScroll$1$1(closestScrollable),
      scrollSize: scrollSize,
      shouldClipSubject: shouldClipSubject
    };
  }();

  var dimension = getDroppableDimension({
    descriptor: descriptor,
    isEnabled: !isDropDisabled,
    isCombineEnabled: isCombineEnabled,
    isFixedOnPage: env.isFixedOnPage,
    direction: direction,
    client: client,
    page: page,
    closest: closest
  });
  return dimension;
});

var immediate = {
  passive: false
};
var delayed = {
  passive: true
};
var getListenerOptions = (function (options) {
  return options.shouldPublishImmediately ? immediate : delayed;
});

function useRequiredContext(Context) {
  var result = useContext(Context);
  !result ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Could not find required context') : invariant$3(false) : void 0;
  return result;
}

var count = 0;
function useUniqueId(prefix) {
  var countRef = useRef(count++);
  return prefix + "::" + countRef.current;
}

var getClosestScrollableFromDrag = function getClosestScrollableFromDrag(dragging) {
  return dragging && dragging.env.closestScrollable || null;
};

function useDroppablePublisher(args) {
  var whileDraggingRef = useRef(null);
  var appContext = useRequiredContext(AppContext);
  var uniqueId = useUniqueId('droppable');
  var registry = appContext.registry,
      marshal = appContext.marshal;
  var previousRef = usePrevious(args);
  var descriptor = useMemo(function () {
    return {
      id: args.droppableId,
      type: args.type,
      mode: args.mode
    };
  }, [args.droppableId, args.mode, args.type]);
  var publishedDescriptorRef = useRef(descriptor);
  var memoizedUpdateScroll = useMemo(function () {
    return memoizeOne(function (x, y) {
      !whileDraggingRef.current ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Can only update scroll when dragging') : invariant$3(false) : void 0;
      var scroll = {
        x: x,
        y: y
      };
      marshal.updateDroppableScroll(descriptor.id, scroll);
    });
  }, [descriptor.id, marshal]);
  var getClosestScroll = useCallback(function () {
    var dragging = whileDraggingRef.current;

    if (!dragging || !dragging.env.closestScrollable) {
      return origin;
    }

    return getScroll$1$1(dragging.env.closestScrollable);
  }, []);
  var updateScroll = useCallback(function () {
    var scroll = getClosestScroll();
    memoizedUpdateScroll(scroll.x, scroll.y);
  }, [getClosestScroll, memoizedUpdateScroll]);
  var scheduleScrollUpdate = useMemo(function () {
    return rafSchd$1(updateScroll);
  }, [updateScroll]);
  var onClosestScroll = useCallback(function () {
    var dragging = whileDraggingRef.current;
    var closest = getClosestScrollableFromDrag(dragging);
    !(dragging && closest) ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Could not find scroll options while scrolling') : invariant$3(false) : void 0;
    var options = dragging.scrollOptions;

    if (options.shouldPublishImmediately) {
      updateScroll();
      return;
    }

    scheduleScrollUpdate();
  }, [scheduleScrollUpdate, updateScroll]);
  var getDimensionAndWatchScroll = useCallback(function (windowScroll, options) {
    !!whileDraggingRef.current ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot collect a droppable while a drag is occurring') : invariant$3(false) : void 0;
    var previous = previousRef.current;
    var ref = previous.getDroppableRef();
    !ref ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot collect without a droppable ref') : invariant$3(false) : void 0;
    var env = getEnv(ref);
    var dragging = {
      ref: ref,
      descriptor: descriptor,
      env: env,
      scrollOptions: options
    };
    whileDraggingRef.current = dragging;
    var dimension = getDimension({
      ref: ref,
      descriptor: descriptor,
      env: env,
      windowScroll: windowScroll,
      direction: previous.direction,
      isDropDisabled: previous.isDropDisabled,
      isCombineEnabled: previous.isCombineEnabled,
      shouldClipSubject: !previous.ignoreContainerClipping
    });
    var scrollable = env.closestScrollable;

    if (scrollable) {
      scrollable.setAttribute(scrollContainer.contextId, appContext.contextId);
      scrollable.addEventListener('scroll', onClosestScroll, getListenerOptions(dragging.scrollOptions));

      if (process.env.NODE_ENV !== 'production') {
        checkForNestedScrollContainers(scrollable);
      }
    }

    return dimension;
  }, [appContext.contextId, descriptor, onClosestScroll, previousRef]);
  var getScrollWhileDragging = useCallback(function () {
    var dragging = whileDraggingRef.current;
    var closest = getClosestScrollableFromDrag(dragging);
    !(dragging && closest) ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Can only recollect Droppable client for Droppables that have a scroll container') : invariant$3(false) : void 0;
    return getScroll$1$1(closest);
  }, []);
  var dragStopped = useCallback(function () {
    var dragging = whileDraggingRef.current;
    !dragging ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot stop drag when no active drag') : invariant$3(false) : void 0;
    var closest = getClosestScrollableFromDrag(dragging);
    whileDraggingRef.current = null;

    if (!closest) {
      return;
    }

    scheduleScrollUpdate.cancel();
    closest.removeAttribute(scrollContainer.contextId);
    closest.removeEventListener('scroll', onClosestScroll, getListenerOptions(dragging.scrollOptions));
  }, [onClosestScroll, scheduleScrollUpdate]);
  var scroll = useCallback(function (change) {
    var dragging = whileDraggingRef.current;
    !dragging ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot scroll when there is no drag') : invariant$3(false) : void 0;
    var closest = getClosestScrollableFromDrag(dragging);
    !closest ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot scroll a droppable with no closest scrollable') : invariant$3(false) : void 0;
    closest.scrollTop += change.y;
    closest.scrollLeft += change.x;
  }, []);
  var callbacks = useMemo(function () {
    return {
      getDimensionAndWatchScroll: getDimensionAndWatchScroll,
      getScrollWhileDragging: getScrollWhileDragging,
      dragStopped: dragStopped,
      scroll: scroll
    };
  }, [dragStopped, getDimensionAndWatchScroll, getScrollWhileDragging, scroll]);
  var entry = useMemo(function () {
    return {
      uniqueId: uniqueId,
      descriptor: descriptor,
      callbacks: callbacks
    };
  }, [callbacks, descriptor, uniqueId]);
  useIsomorphicLayoutEffect$1(function () {
    publishedDescriptorRef.current = entry.descriptor;
    registry.droppable.register(entry);
    return function () {
      if (whileDraggingRef.current) {
        process.env.NODE_ENV !== "production" ? warning$5('Unsupported: changing the droppableId or type of a Droppable during a drag') : void 0;
        dragStopped();
      }

      registry.droppable.unregister(entry);
    };
  }, [callbacks, descriptor, dragStopped, entry, marshal, registry.droppable]);
  useIsomorphicLayoutEffect$1(function () {
    if (!whileDraggingRef.current) {
      return;
    }

    marshal.updateDroppableIsEnabled(publishedDescriptorRef.current.id, !args.isDropDisabled);
  }, [args.isDropDisabled, marshal]);
  useIsomorphicLayoutEffect$1(function () {
    if (!whileDraggingRef.current) {
      return;
    }

    marshal.updateDroppableIsCombineEnabled(publishedDescriptorRef.current.id, args.isCombineEnabled);
  }, [args.isCombineEnabled, marshal]);
}

function noop$2$1() {}

var empty = {
  width: 0,
  height: 0,
  margin: noSpacing
};

var getSize$1 = function getSize(_ref) {
  var isAnimatingOpenOnMount = _ref.isAnimatingOpenOnMount,
      placeholder = _ref.placeholder,
      animate = _ref.animate;

  if (isAnimatingOpenOnMount) {
    return empty;
  }

  if (animate === 'close') {
    return empty;
  }

  return {
    height: placeholder.client.borderBox.height,
    width: placeholder.client.borderBox.width,
    margin: placeholder.client.margin
  };
};

var getStyle$1 = function getStyle(_ref2) {
  var isAnimatingOpenOnMount = _ref2.isAnimatingOpenOnMount,
      placeholder = _ref2.placeholder,
      animate = _ref2.animate;
  var size = getSize$1({
    isAnimatingOpenOnMount: isAnimatingOpenOnMount,
    placeholder: placeholder,
    animate: animate
  });
  return {
    display: placeholder.display,
    boxSizing: 'border-box',
    width: size.width,
    height: size.height,
    marginTop: size.margin.top,
    marginRight: size.margin.right,
    marginBottom: size.margin.bottom,
    marginLeft: size.margin.left,
    flexShrink: '0',
    flexGrow: '0',
    pointerEvents: 'none',
    transition: animate !== 'none' ? transitions.placeholder : null
  };
};

function Placeholder$1(props) {
  var animateOpenTimerRef = useRef(null);
  var tryClearAnimateOpenTimer = useCallback(function () {
    if (!animateOpenTimerRef.current) {
      return;
    }

    clearTimeout(animateOpenTimerRef.current);
    animateOpenTimerRef.current = null;
  }, []);
  var animate = props.animate,
      onTransitionEnd = props.onTransitionEnd,
      onClose = props.onClose,
      contextId = props.contextId;

  var _useState = useState(props.animate === 'open'),
      isAnimatingOpenOnMount = _useState[0],
      setIsAnimatingOpenOnMount = _useState[1];

  useEffect(function () {
    if (!isAnimatingOpenOnMount) {
      return noop$2$1;
    }

    if (animate !== 'open') {
      tryClearAnimateOpenTimer();
      setIsAnimatingOpenOnMount(false);
      return noop$2$1;
    }

    if (animateOpenTimerRef.current) {
      return noop$2$1;
    }

    animateOpenTimerRef.current = setTimeout(function () {
      animateOpenTimerRef.current = null;
      setIsAnimatingOpenOnMount(false);
    });
    return tryClearAnimateOpenTimer;
  }, [animate, isAnimatingOpenOnMount, tryClearAnimateOpenTimer]);
  var onSizeChangeEnd = useCallback(function (event) {
    if (event.propertyName !== 'height') {
      return;
    }

    onTransitionEnd();

    if (animate === 'close') {
      onClose();
    }
  }, [animate, onClose, onTransitionEnd]);
  var style = getStyle$1({
    isAnimatingOpenOnMount: isAnimatingOpenOnMount,
    animate: props.animate,
    placeholder: props.placeholder
  });
  return React__default.createElement(props.placeholder.tagName, {
    style: style,
    'data-rbd-placeholder-context-id': contextId,
    onTransitionEnd: onSizeChangeEnd,
    ref: props.innerRef
  });
}

var Placeholder$1$1 = React__default.memo(Placeholder$1);

var DroppableContext = React__default.createContext(null);

function checkIsValidInnerRef(el) {
  !(el && isHtmlElement(el)) ? process.env.NODE_ENV !== "production" ? invariant$3(false, "\n    provided.innerRef has not been provided with a HTMLElement.\n\n    You can find a guide on using the innerRef callback functions at:\n    https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/guides/using-inner-ref.md\n  ") : invariant$3(false) : void 0;
}

function isBoolean(value) {
  return typeof value === 'boolean';
}

function runChecks(args, checks) {
  checks.forEach(function (check) {
    return check(args);
  });
}

var shared = [function required(_ref) {
  var props = _ref.props;
  !props.droppableId ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'A Droppable requires a droppableId prop') : invariant$3(false) : void 0;
  !(typeof props.droppableId === 'string') ? process.env.NODE_ENV !== "production" ? invariant$3(false, "A Droppable requires a [string] droppableId. Provided: [" + typeof props.droppableId + "]") : invariant$3(false) : void 0;
}, function _boolean(_ref2) {
  var props = _ref2.props;
  !isBoolean(props.isDropDisabled) ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'isDropDisabled must be a boolean') : invariant$3(false) : void 0;
  !isBoolean(props.isCombineEnabled) ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'isCombineEnabled must be a boolean') : invariant$3(false) : void 0;
  !isBoolean(props.ignoreContainerClipping) ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'ignoreContainerClipping must be a boolean') : invariant$3(false) : void 0;
}, function ref(_ref3) {
  var getDroppableRef = _ref3.getDroppableRef;
  checkIsValidInnerRef(getDroppableRef());
}];
var standard = [function placeholder(_ref4) {
  var props = _ref4.props,
      getPlaceholderRef = _ref4.getPlaceholderRef;

  if (!props.placeholder) {
    return;
  }

  var ref = getPlaceholderRef();

  if (ref) {
    return;
  }

  process.env.NODE_ENV !== "production" ? warning$5("\n      Droppable setup issue [droppableId: \"" + props.droppableId + "\"]:\n      DroppableProvided > placeholder could not be found.\n\n      Please be sure to add the {provided.placeholder} React Node as a child of your Droppable.\n      More information: https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/api/droppable.md\n    ") : void 0;
}];
var virtual = [function hasClone(_ref5) {
  var props = _ref5.props;
  !props.renderClone ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Must provide a clone render function (renderClone) for virtual lists') : invariant$3(false) : void 0;
}, function hasNoPlaceholder(_ref6) {
  var getPlaceholderRef = _ref6.getPlaceholderRef;
  !!getPlaceholderRef() ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Expected virtual list to not have a placeholder') : invariant$3(false) : void 0;
}];
function useValidation(args) {
  useDevSetupWarning(function () {
    runChecks(args, shared);

    if (args.props.mode === 'standard') {
      runChecks(args, standard);
    }

    if (args.props.mode === 'virtual') {
      runChecks(args, virtual);
    }
  });
}

var AnimateInOut = function (_React$PureComponent) {
  _inheritsLoose$3(AnimateInOut, _React$PureComponent);

  function AnimateInOut() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;
    _this.state = {
      isVisible: Boolean(_this.props.on),
      data: _this.props.on,
      animate: _this.props.shouldAnimate && _this.props.on ? 'open' : 'none'
    };

    _this.onClose = function () {
      if (_this.state.animate !== 'close') {
        return;
      }

      _this.setState({
        isVisible: false
      });
    };

    return _this;
  }

  AnimateInOut.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
    if (!props.shouldAnimate) {
      return {
        isVisible: Boolean(props.on),
        data: props.on,
        animate: 'none'
      };
    }

    if (props.on) {
      return {
        isVisible: true,
        data: props.on,
        animate: 'open'
      };
    }

    if (state.isVisible) {
      return {
        isVisible: true,
        data: state.data,
        animate: 'close'
      };
    }

    return {
      isVisible: false,
      animate: 'close',
      data: null
    };
  };

  var _proto = AnimateInOut.prototype;

  _proto.render = function render() {
    if (!this.state.isVisible) {
      return null;
    }

    var provided = {
      onClose: this.onClose,
      data: this.state.data,
      animate: this.state.animate
    };
    return this.props.children(provided);
  };

  return AnimateInOut;
}(React__default.PureComponent);

var zIndexOptions = {
  dragging: 5000,
  dropAnimating: 4500
};

var getDraggingTransition = function getDraggingTransition(shouldAnimateDragMovement, dropping) {
  if (dropping) {
    return transitions.drop(dropping.duration);
  }

  if (shouldAnimateDragMovement) {
    return transitions.snap;
  }

  return transitions.fluid;
};

var getDraggingOpacity = function getDraggingOpacity(isCombining, isDropAnimating) {
  if (!isCombining) {
    return null;
  }

  return isDropAnimating ? combine.opacity.drop : combine.opacity.combining;
};

var getShouldDraggingAnimate = function getShouldDraggingAnimate(dragging) {
  if (dragging.forceShouldAnimate != null) {
    return dragging.forceShouldAnimate;
  }

  return dragging.mode === 'SNAP';
};

function getDraggingStyle(dragging) {
  var dimension = dragging.dimension;
  var box = dimension.client;
  var offset = dragging.offset,
      combineWith = dragging.combineWith,
      dropping = dragging.dropping;
  var isCombining = Boolean(combineWith);
  var shouldAnimate = getShouldDraggingAnimate(dragging);
  var isDropAnimating = Boolean(dropping);
  var transform = isDropAnimating ? transforms.drop(offset, isCombining) : transforms.moveTo(offset);
  var style = {
    position: 'fixed',
    top: box.marginBox.top,
    left: box.marginBox.left,
    boxSizing: 'border-box',
    width: box.borderBox.width,
    height: box.borderBox.height,
    transition: getDraggingTransition(shouldAnimate, dropping),
    transform: transform,
    opacity: getDraggingOpacity(isCombining, isDropAnimating),
    zIndex: isDropAnimating ? zIndexOptions.dropAnimating : zIndexOptions.dragging,
    pointerEvents: 'none'
  };
  return style;
}

function getSecondaryStyle(secondary) {
  return {
    transform: transforms.moveTo(secondary.offset),
    transition: secondary.shouldAnimateDisplacement ? null : 'none'
  };
}

function getStyle$1$1(mapped) {
  return mapped.type === 'DRAGGING' ? getDraggingStyle(mapped) : getSecondaryStyle(mapped);
}

function getDimension$1(descriptor, el, windowScroll) {
  if (windowScroll === void 0) {
    windowScroll = origin;
  }

  var computedStyles = window.getComputedStyle(el);
  var borderBox = el.getBoundingClientRect();
  var client = calculateBox(borderBox, computedStyles);
  var page = withScroll(client, windowScroll);
  var placeholder = {
    client: client,
    tagName: el.tagName.toLowerCase(),
    display: computedStyles.display
  };
  var displaceBy = {
    x: client.marginBox.width,
    y: client.marginBox.height
  };
  var dimension = {
    descriptor: descriptor,
    placeholder: placeholder,
    displaceBy: displaceBy,
    client: client,
    page: page
  };
  return dimension;
}

function useDraggablePublisher(args) {
  var uniqueId = useUniqueId('draggable');
  var descriptor = args.descriptor,
      registry = args.registry,
      getDraggableRef = args.getDraggableRef,
      canDragInteractiveElements = args.canDragInteractiveElements,
      shouldRespectForcePress = args.shouldRespectForcePress,
      isEnabled = args.isEnabled;
  var options = useMemo(function () {
    return {
      canDragInteractiveElements: canDragInteractiveElements,
      shouldRespectForcePress: shouldRespectForcePress,
      isEnabled: isEnabled
    };
  }, [canDragInteractiveElements, isEnabled, shouldRespectForcePress]);
  var getDimension = useCallback(function (windowScroll) {
    var el = getDraggableRef();
    !el ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Cannot get dimension when no ref is set') : invariant$3(false) : void 0;
    return getDimension$1(descriptor, el, windowScroll);
  }, [descriptor, getDraggableRef]);
  var entry = useMemo(function () {
    return {
      uniqueId: uniqueId,
      descriptor: descriptor,
      options: options,
      getDimension: getDimension
    };
  }, [descriptor, getDimension, options, uniqueId]);
  var publishedRef = useRef(entry);
  var isFirstPublishRef = useRef(true);
  useIsomorphicLayoutEffect$1(function () {
    registry.draggable.register(publishedRef.current);
    return function () {
      return registry.draggable.unregister(publishedRef.current);
    };
  }, [registry.draggable]);
  useIsomorphicLayoutEffect$1(function () {
    if (isFirstPublishRef.current) {
      isFirstPublishRef.current = false;
      return;
    }

    var last = publishedRef.current;
    publishedRef.current = entry;
    registry.draggable.update(entry, last);
  }, [entry, registry.draggable]);
}

function useValidation$1(props, contextId, getRef) {
  useDevSetupWarning(function () {
    function prefix(id) {
      return "Draggable[id: " + id + "]: ";
    }

    var id = props.draggableId;
    !id ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Draggable requires a draggableId') : invariant$3(false) : void 0;
    !(typeof id === 'string') ? process.env.NODE_ENV !== "production" ? invariant$3(false, "Draggable requires a [string] draggableId.\n      Provided: [type: " + typeof id + "] (value: " + id + ")") : invariant$3(false) : void 0;
    !isInteger(props.index) ? process.env.NODE_ENV !== "production" ? invariant$3(false, prefix(id) + " requires an integer index prop") : invariant$3(false) : void 0;

    if (props.mapped.type === 'DRAGGING') {
      return;
    }

    checkIsValidInnerRef(getRef());

    if (props.isEnabled) {
      !findDragHandle(contextId, id) ? process.env.NODE_ENV !== "production" ? invariant$3(false, prefix(id) + " Unable to find drag handle") : invariant$3(false) : void 0;
    }
  });
}
function useClonePropValidation(isClone) {
  useDev(function () {
    var initialRef = useRef(isClone);
    useDevSetupWarning(function () {
      !(isClone === initialRef.current) ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Draggable isClone prop value changed during component life') : invariant$3(false) : void 0;
    }, [isClone]);
  });
}

function preventHtml5Dnd(event) {
  event.preventDefault();
}

function Draggable(props) {
  var ref = useRef(null);
  var setRef = useCallback(function (el) {
    ref.current = el;
  }, []);
  var getRef = useCallback(function () {
    return ref.current;
  }, []);

  var _useRequiredContext = useRequiredContext(AppContext),
      contextId = _useRequiredContext.contextId,
      liftInstructionId = _useRequiredContext.liftInstructionId,
      registry = _useRequiredContext.registry;

  var _useRequiredContext2 = useRequiredContext(DroppableContext),
      type = _useRequiredContext2.type,
      droppableId = _useRequiredContext2.droppableId;

  var descriptor = useMemo(function () {
    return {
      id: props.draggableId,
      index: props.index,
      type: type,
      droppableId: droppableId
    };
  }, [props.draggableId, props.index, type, droppableId]);
  var children = props.children,
      draggableId = props.draggableId,
      isEnabled = props.isEnabled,
      shouldRespectForcePress = props.shouldRespectForcePress,
      canDragInteractiveElements = props.canDragInteractiveElements,
      isClone = props.isClone,
      mapped = props.mapped,
      dropAnimationFinishedAction = props.dropAnimationFinished;
  useValidation$1(props, contextId, getRef);
  useClonePropValidation(isClone);

  if (!isClone) {
    var forPublisher = useMemo(function () {
      return {
        descriptor: descriptor,
        registry: registry,
        getDraggableRef: getRef,
        canDragInteractiveElements: canDragInteractiveElements,
        shouldRespectForcePress: shouldRespectForcePress,
        isEnabled: isEnabled
      };
    }, [descriptor, registry, getRef, canDragInteractiveElements, shouldRespectForcePress, isEnabled]);
    useDraggablePublisher(forPublisher);
  }

  var dragHandleProps = useMemo(function () {
    return isEnabled ? {
      tabIndex: 0,
      'data-rbd-drag-handle-draggable-id': draggableId,
      'data-rbd-drag-handle-context-id': contextId,
      'aria-labelledby': liftInstructionId,
      draggable: false,
      onDragStart: preventHtml5Dnd
    } : null;
  }, [contextId, draggableId, isEnabled, liftInstructionId]);
  var onMoveEnd = useCallback(function (event) {
    if (mapped.type !== 'DRAGGING') {
      return;
    }

    if (!mapped.dropping) {
      return;
    }

    if (event.propertyName !== 'transform') {
      return;
    }

    dropAnimationFinishedAction();
  }, [dropAnimationFinishedAction, mapped]);
  var provided = useMemo(function () {
    var style = getStyle$1$1(mapped);
    var onTransitionEnd = mapped.type === 'DRAGGING' && mapped.dropping ? onMoveEnd : null;
    var result = {
      innerRef: setRef,
      draggableProps: {
        'data-rbd-draggable-context-id': contextId,
        'data-rbd-draggable-id': draggableId,
        style: style,
        onTransitionEnd: onTransitionEnd
      },
      dragHandleProps: dragHandleProps
    };
    return result;
  }, [contextId, dragHandleProps, draggableId, mapped, onMoveEnd, setRef]);
  var rubric = useMemo(function () {
    return {
      draggableId: descriptor.id,
      type: descriptor.type,
      source: {
        index: descriptor.index,
        droppableId: descriptor.droppableId
      }
    };
  }, [descriptor.droppableId, descriptor.id, descriptor.index, descriptor.type]);
  return children(provided, mapped.snapshot, rubric);
}

var isStrictEqual = (function (a, b) {
  return a === b;
});

var whatIsDraggedOverFromResult = (function (result) {
  var combine = result.combine,
      destination = result.destination;

  if (destination) {
    return destination.droppableId;
  }

  if (combine) {
    return combine.droppableId;
  }

  return null;
});

var getCombineWithFromResult = function getCombineWithFromResult(result) {
  return result.combine ? result.combine.draggableId : null;
};

var getCombineWithFromImpact = function getCombineWithFromImpact(impact) {
  return impact.at && impact.at.type === 'COMBINE' ? impact.at.combine.draggableId : null;
};

function getDraggableSelector() {
  var memoizedOffset = memoizeOne(function (x, y) {
    return {
      x: x,
      y: y
    };
  });
  var getMemoizedSnapshot = memoizeOne(function (mode, isClone, draggingOver, combineWith, dropping) {
    return {
      isDragging: true,
      isClone: isClone,
      isDropAnimating: Boolean(dropping),
      dropAnimation: dropping,
      mode: mode,
      draggingOver: draggingOver,
      combineWith: combineWith,
      combineTargetFor: null
    };
  });
  var getMemoizedProps = memoizeOne(function (offset, mode, dimension, isClone, draggingOver, combineWith, forceShouldAnimate) {
    return {
      mapped: {
        type: 'DRAGGING',
        dropping: null,
        draggingOver: draggingOver,
        combineWith: combineWith,
        mode: mode,
        offset: offset,
        dimension: dimension,
        forceShouldAnimate: forceShouldAnimate,
        snapshot: getMemoizedSnapshot(mode, isClone, draggingOver, combineWith, null)
      }
    };
  });

  var selector = function selector(state, ownProps) {
    if (state.isDragging) {
      if (state.critical.draggable.id !== ownProps.draggableId) {
        return null;
      }

      var offset = state.current.client.offset;
      var dimension = state.dimensions.draggables[ownProps.draggableId];
      var draggingOver = whatIsDraggedOver(state.impact);
      var combineWith = getCombineWithFromImpact(state.impact);
      var forceShouldAnimate = state.forceShouldAnimate;
      return getMemoizedProps(memoizedOffset(offset.x, offset.y), state.movementMode, dimension, ownProps.isClone, draggingOver, combineWith, forceShouldAnimate);
    }

    if (state.phase === 'DROP_ANIMATING') {
      var completed = state.completed;

      if (completed.result.draggableId !== ownProps.draggableId) {
        return null;
      }

      var isClone = ownProps.isClone;
      var _dimension = state.dimensions.draggables[ownProps.draggableId];
      var result = completed.result;
      var mode = result.mode;

      var _draggingOver = whatIsDraggedOverFromResult(result);

      var _combineWith = getCombineWithFromResult(result);

      var duration = state.dropDuration;
      var dropping = {
        duration: duration,
        curve: curves.drop,
        moveTo: state.newHomeClientOffset,
        opacity: _combineWith ? combine.opacity.drop : null,
        scale: _combineWith ? combine.scale.drop : null
      };
      return {
        mapped: {
          type: 'DRAGGING',
          offset: state.newHomeClientOffset,
          dimension: _dimension,
          dropping: dropping,
          draggingOver: _draggingOver,
          combineWith: _combineWith,
          mode: mode,
          forceShouldAnimate: null,
          snapshot: getMemoizedSnapshot(mode, isClone, _draggingOver, _combineWith, dropping)
        }
      };
    }

    return null;
  };

  return selector;
}

function getSecondarySnapshot(combineTargetFor) {
  return {
    isDragging: false,
    isDropAnimating: false,
    isClone: false,
    dropAnimation: null,
    mode: null,
    draggingOver: null,
    combineTargetFor: combineTargetFor,
    combineWith: null
  };
}

var atRest = {
  mapped: {
    type: 'SECONDARY',
    offset: origin,
    combineTargetFor: null,
    shouldAnimateDisplacement: true,
    snapshot: getSecondarySnapshot(null)
  }
};

function getSecondarySelector() {
  var memoizedOffset = memoizeOne(function (x, y) {
    return {
      x: x,
      y: y
    };
  });
  var getMemoizedSnapshot = memoizeOne(getSecondarySnapshot);
  var getMemoizedProps = memoizeOne(function (offset, combineTargetFor, shouldAnimateDisplacement) {
    if (combineTargetFor === void 0) {
      combineTargetFor = null;
    }

    return {
      mapped: {
        type: 'SECONDARY',
        offset: offset,
        combineTargetFor: combineTargetFor,
        shouldAnimateDisplacement: shouldAnimateDisplacement,
        snapshot: getMemoizedSnapshot(combineTargetFor)
      }
    };
  });

  var getFallback = function getFallback(combineTargetFor) {
    return combineTargetFor ? getMemoizedProps(origin, combineTargetFor, true) : null;
  };

  var getProps = function getProps(ownId, draggingId, impact, afterCritical) {
    var visualDisplacement = impact.displaced.visible[ownId];
    var isAfterCriticalInVirtualList = Boolean(afterCritical.inVirtualList && afterCritical.effected[ownId]);
    var combine = tryGetCombine(impact);
    var combineTargetFor = combine && combine.draggableId === ownId ? draggingId : null;

    if (!visualDisplacement) {
      if (!isAfterCriticalInVirtualList) {
        return getFallback(combineTargetFor);
      }

      if (impact.displaced.invisible[ownId]) {
        return null;
      }

      var change = negate(afterCritical.displacedBy.point);

      var _offset = memoizedOffset(change.x, change.y);

      return getMemoizedProps(_offset, combineTargetFor, true);
    }

    if (isAfterCriticalInVirtualList) {
      return getFallback(combineTargetFor);
    }

    var displaceBy = impact.displacedBy.point;
    var offset = memoizedOffset(displaceBy.x, displaceBy.y);
    return getMemoizedProps(offset, combineTargetFor, visualDisplacement.shouldAnimate);
  };

  var selector = function selector(state, ownProps) {
    if (state.isDragging) {
      if (state.critical.draggable.id === ownProps.draggableId) {
        return null;
      }

      return getProps(ownProps.draggableId, state.critical.draggable.id, state.impact, state.afterCritical);
    }

    if (state.phase === 'DROP_ANIMATING') {
      var completed = state.completed;

      if (completed.result.draggableId === ownProps.draggableId) {
        return null;
      }

      return getProps(ownProps.draggableId, completed.result.draggableId, completed.impact, completed.afterCritical);
    }

    return null;
  };

  return selector;
}

var makeMapStateToProps = function makeMapStateToProps() {
  var draggingSelector = getDraggableSelector();
  var secondarySelector = getSecondarySelector();

  var selector = function selector(state, ownProps) {
    return draggingSelector(state, ownProps) || secondarySelector(state, ownProps) || atRest;
  };

  return selector;
};
var mapDispatchToProps = {
  dropAnimationFinished: dropAnimationFinished
};
var ConnectedDraggable = connect(makeMapStateToProps, mapDispatchToProps, null, {
  context: StoreContext,
  pure: true,
  areStatePropsEqual: isStrictEqual
})(Draggable);

function PrivateDraggable(props) {
  var droppableContext = useRequiredContext(DroppableContext);
  var isUsingCloneFor = droppableContext.isUsingCloneFor;

  if (isUsingCloneFor === props.draggableId && !props.isClone) {
    return null;
  }

  return React__default.createElement(ConnectedDraggable, props);
}
function PublicDraggable(props) {
  var isEnabled = typeof props.isDragDisabled === 'boolean' ? !props.isDragDisabled : true;
  var canDragInteractiveElements = Boolean(props.disableInteractiveElementBlocking);
  var shouldRespectForcePress = Boolean(props.shouldRespectForcePress);
  return React__default.createElement(PrivateDraggable, _extends$a({}, props, {
    isClone: false,
    isEnabled: isEnabled,
    canDragInteractiveElements: canDragInteractiveElements,
    shouldRespectForcePress: shouldRespectForcePress
  }));
}

function Droppable(props) {
  var appContext = useContext(AppContext);
  !appContext ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'Could not find app context') : invariant$3(false) : void 0;
  var contextId = appContext.contextId,
      isMovementAllowed = appContext.isMovementAllowed;
  var droppableRef = useRef(null);
  var placeholderRef = useRef(null);
  var children = props.children,
      droppableId = props.droppableId,
      type = props.type,
      mode = props.mode,
      direction = props.direction,
      ignoreContainerClipping = props.ignoreContainerClipping,
      isDropDisabled = props.isDropDisabled,
      isCombineEnabled = props.isCombineEnabled,
      snapshot = props.snapshot,
      useClone = props.useClone,
      updateViewportMaxScroll = props.updateViewportMaxScroll,
      getContainerForClone = props.getContainerForClone;
  var getDroppableRef = useCallback(function () {
    return droppableRef.current;
  }, []);
  var setDroppableRef = useCallback(function (value) {
    droppableRef.current = value;
  }, []);
  var getPlaceholderRef = useCallback(function () {
    return placeholderRef.current;
  }, []);
  var setPlaceholderRef = useCallback(function (value) {
    placeholderRef.current = value;
  }, []);
  useValidation({
    props: props,
    getDroppableRef: getDroppableRef,
    getPlaceholderRef: getPlaceholderRef
  });
  var onPlaceholderTransitionEnd = useCallback(function () {
    if (isMovementAllowed()) {
      updateViewportMaxScroll({
        maxScroll: getMaxWindowScroll()
      });
    }
  }, [isMovementAllowed, updateViewportMaxScroll]);
  useDroppablePublisher({
    droppableId: droppableId,
    type: type,
    mode: mode,
    direction: direction,
    isDropDisabled: isDropDisabled,
    isCombineEnabled: isCombineEnabled,
    ignoreContainerClipping: ignoreContainerClipping,
    getDroppableRef: getDroppableRef
  });
  var placeholder = React__default.createElement(AnimateInOut, {
    on: props.placeholder,
    shouldAnimate: props.shouldAnimatePlaceholder
  }, function (_ref) {
    var onClose = _ref.onClose,
        data = _ref.data,
        animate = _ref.animate;
    return React__default.createElement(Placeholder$1$1, {
      placeholder: data,
      onClose: onClose,
      innerRef: setPlaceholderRef,
      animate: animate,
      contextId: contextId,
      onTransitionEnd: onPlaceholderTransitionEnd
    });
  });
  var provided = useMemo(function () {
    return {
      innerRef: setDroppableRef,
      placeholder: placeholder,
      droppableProps: {
        'data-rbd-droppable-id': droppableId,
        'data-rbd-droppable-context-id': contextId
      }
    };
  }, [contextId, droppableId, placeholder, setDroppableRef]);
  var isUsingCloneFor = useClone ? useClone.dragging.draggableId : null;
  var droppableContext = useMemo(function () {
    return {
      droppableId: droppableId,
      type: type,
      isUsingCloneFor: isUsingCloneFor
    };
  }, [droppableId, isUsingCloneFor, type]);

  function getClone() {
    if (!useClone) {
      return null;
    }

    var dragging = useClone.dragging,
        render = useClone.render;
    var node = React__default.createElement(PrivateDraggable, {
      draggableId: dragging.draggableId,
      index: dragging.source.index,
      isClone: true,
      isEnabled: true,
      shouldRespectForcePress: false,
      canDragInteractiveElements: true
    }, function (draggableProvided, draggableSnapshot) {
      return render(draggableProvided, draggableSnapshot, dragging);
    });
    return ReactDOM.createPortal(node, getContainerForClone());
  }

  return React__default.createElement(DroppableContext.Provider, {
    value: droppableContext
  }, children(provided, snapshot), getClone());
}

var isMatchingType = function isMatchingType(type, critical) {
  return type === critical.droppable.type;
};

var getDraggable = function getDraggable(critical, dimensions) {
  return dimensions.draggables[critical.draggable.id];
};

var makeMapStateToProps$1 = function makeMapStateToProps() {
  var idleWithAnimation = {
    placeholder: null,
    shouldAnimatePlaceholder: true,
    snapshot: {
      isDraggingOver: false,
      draggingOverWith: null,
      draggingFromThisWith: null,
      isUsingPlaceholder: false
    },
    useClone: null
  };

  var idleWithoutAnimation = _extends$a({}, idleWithAnimation, {
    shouldAnimatePlaceholder: false
  });

  var getDraggableRubric = memoizeOne(function (descriptor) {
    return {
      draggableId: descriptor.id,
      type: descriptor.type,
      source: {
        index: descriptor.index,
        droppableId: descriptor.droppableId
      }
    };
  });
  var getMapProps = memoizeOne(function (id, isEnabled, isDraggingOverForConsumer, isDraggingOverForImpact, dragging, renderClone) {
    var draggableId = dragging.descriptor.id;
    var isHome = dragging.descriptor.droppableId === id;

    if (isHome) {
      var useClone = renderClone ? {
        render: renderClone,
        dragging: getDraggableRubric(dragging.descriptor)
      } : null;
      var _snapshot = {
        isDraggingOver: isDraggingOverForConsumer,
        draggingOverWith: isDraggingOverForConsumer ? draggableId : null,
        draggingFromThisWith: draggableId,
        isUsingPlaceholder: true
      };
      return {
        placeholder: dragging.placeholder,
        shouldAnimatePlaceholder: false,
        snapshot: _snapshot,
        useClone: useClone
      };
    }

    if (!isEnabled) {
      return idleWithoutAnimation;
    }

    if (!isDraggingOverForImpact) {
      return idleWithAnimation;
    }

    var snapshot = {
      isDraggingOver: isDraggingOverForConsumer,
      draggingOverWith: draggableId,
      draggingFromThisWith: null,
      isUsingPlaceholder: true
    };
    return {
      placeholder: dragging.placeholder,
      shouldAnimatePlaceholder: true,
      snapshot: snapshot,
      useClone: null
    };
  });

  var selector = function selector(state, ownProps) {
    var id = ownProps.droppableId;
    var type = ownProps.type;
    var isEnabled = !ownProps.isDropDisabled;
    var renderClone = ownProps.renderClone;

    if (state.isDragging) {
      var critical = state.critical;

      if (!isMatchingType(type, critical)) {
        return idleWithoutAnimation;
      }

      var dragging = getDraggable(critical, state.dimensions);
      var isDraggingOver = whatIsDraggedOver(state.impact) === id;
      return getMapProps(id, isEnabled, isDraggingOver, isDraggingOver, dragging, renderClone);
    }

    if (state.phase === 'DROP_ANIMATING') {
      var completed = state.completed;

      if (!isMatchingType(type, completed.critical)) {
        return idleWithoutAnimation;
      }

      var _dragging = getDraggable(completed.critical, state.dimensions);

      return getMapProps(id, isEnabled, whatIsDraggedOverFromResult(completed.result) === id, whatIsDraggedOver(completed.impact) === id, _dragging, renderClone);
    }

    if (state.phase === 'IDLE' && state.completed && !state.shouldFlush) {
      var _completed = state.completed;

      if (!isMatchingType(type, _completed.critical)) {
        return idleWithoutAnimation;
      }

      var wasOver = whatIsDraggedOver(_completed.impact) === id;
      var wasCombining = Boolean(_completed.impact.at && _completed.impact.at.type === 'COMBINE');
      var isHome = _completed.critical.droppable.id === id;

      if (wasOver) {
        return wasCombining ? idleWithAnimation : idleWithoutAnimation;
      }

      if (isHome) {
        return idleWithAnimation;
      }

      return idleWithoutAnimation;
    }

    return idleWithoutAnimation;
  };

  return selector;
};
var mapDispatchToProps$1 = {
  updateViewportMaxScroll: updateViewportMaxScroll
};

function getBody$2() {
  !document.body ? process.env.NODE_ENV !== "production" ? invariant$3(false, 'document.body is not ready') : invariant$3(false) : void 0;
  return document.body;
}

var defaultProps$3 = {
  mode: 'standard',
  type: 'DEFAULT',
  direction: 'vertical',
  isDropDisabled: false,
  isCombineEnabled: false,
  ignoreContainerClipping: false,
  renderClone: null,
  getContainerForClone: getBody$2
};
var ConnectedDroppable = connect(makeMapStateToProps$1, mapDispatchToProps$1, null, {
  context: StoreContext,
  pure: true,
  areStatePropsEqual: isStrictEqual
})(Droppable);
ConnectedDroppable.defaultProps = defaultProps$3;

// Compute height and width of wrapped component before ranking
function withDimensions(WrappedComponent) {
    return /** @class */ (function (_super) {
        __extends$b(WithDimensions, _super);
        function WithDimensions() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.state = {
                refWidth: 0,
                refHeight: 0,
            };
            _this.innerRef = function (ref) {
                if (ref && !_this.props.isRanking) {
                    _this.ref = ref;
                }
            };
            _this.updateDimensions = function () {
                if (!_this.ref) {
                    return;
                }
                var clientRect = _this.ref.getBoundingClientRect();
                var width = clientRect.width;
                var height = clientRect.height;
                if (width !== _this.state.refWidth || height !== _this.state.refHeight) {
                    _this.setState({ refWidth: width, refHeight: height });
                }
            };
            return _this;
        }
        WithDimensions.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {
            var wasRanking = this.props.isRanking;
            var willRanking = nextProps.isRanking;
            if (willRanking && !wasRanking) {
                this.updateDimensions();
            }
        };
        WithDimensions.prototype.render = function () {
            var _a = this.state, refWidth = _a.refWidth, refHeight = _a.refHeight;
            return (React__default.createElement(WrappedComponent, __assign$8({ refWidth: refWidth, refHeight: refHeight, innerRef: this.innerRef }, this.props)));
        };
        return WithDimensions;
    }(React__default.Component));
}

// Inline dialogs
var e200 = themed$3({
    light: "box-shadow: 0 4px 8px -2px " + N50A$1 + ", 0 0 1px " + N60A$1 + ";",
    dark: "box-shadow: 0 4px 8px -2px " + DN50A$1 + ", 0 0 1px " + DN60A$1 + ";",
});
// Flag messages (notifications)
var e500 = themed$3({
    light: "box-shadow: 0 20px 32px -8px " + N50A$1 + ", 0 0 1px " + N60A$1 + ";",
    dark: "box-shadow: 0 20px 32px -8px " + DN50A$1 + ", 0 0 1px " + DN60A$1 + ";",
});

var rankingStyles$2 = css$3(templateObject_1$8 || (templateObject_1$8 = __makeTemplateObject$8(["\n  display: block;\n"], ["\n  display: block;\n"])));
/**
 * TODO: Pass the props here to get particular theme for the table
 * Skipping it for now as it may impact migration as util-shared-styles does not support this feature
 */
var rankingItemStyles = css$3(templateObject_2$5 || (templateObject_2$5 = __makeTemplateObject$8(["\n  background-color: ", ";\n  ", " border-radius: 2px;\n"], ["\n  background-color: ", ";\n  ", " border-radius: 2px;\n"])), N20$3, e500());
var draggableStyles = function (_a) {
    var isRanking = _a.isRanking, isRankingItem = _a.isRankingItem;
    return css$3(templateObject_3$4 || (templateObject_3$4 = __makeTemplateObject$8(["\n  ", " ", " &:focus {\n    outline-style: solid;\n    outline-color: ", ";\n    outline-width: 2px;\n  }\n"], ["\n  ", " ", " &:focus {\n    outline-style: solid;\n    outline-color: ", ";\n    outline-width: 2px;\n  }\n"])), isRanking && rankingStyles$2, isRankingItem && rankingItemStyles, B100$3);
};
var RankableTableBodyRow = styled$1(TableBodyRow)(templateObject_4$2 || (templateObject_4$2 = __makeTemplateObject$8(["\n  ", ";\n"], ["\n  ", ";\n"])), draggableStyles);
var templateObject_1$8, templateObject_2$5, templateObject_3$4, templateObject_4$2;

var rankingStyles$1 = css$3(templateObject_1$7 || (templateObject_1$7 = __makeTemplateObject$8(["\n  box-sizing: border-box;\n"], ["\n  box-sizing: border-box;\n"])));
var RankableTableBodyCell = styled$1(TableBodyCell)(templateObject_2$4 || (templateObject_2$4 = __makeTemplateObject$8(["\n  ", ";\n"], ["\n  ", ";\n"])), function (_a) {
    var isRanking = _a.isRanking;
    return isRanking && rankingStyles$1;
});
var templateObject_1$7, templateObject_2$4;

var RankableTableCell = /** @class */ (function (_super) {
    __extends$b(RankableTableCell, _super);
    function RankableTableCell() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RankableTableCell.prototype.render = function () {
        var _a = this.props, cell = _a.cell, head = _a.head, isFixedSize = _a.isFixedSize, isRanking = _a.isRanking, innerRef = _a.innerRef, refWidth = _a.refWidth;
        var content = cell.content, restCellProps = __rest$6(cell, ["content"]);
        var _b = head || {}, shouldTruncate = _b.shouldTruncate, width = _b.width;
        var inlineStyles = inlineStylesIfRanking(isRanking, refWidth);
        return (React__default.createElement(RankableTableBodyCell, __assign$8({}, restCellProps, { isFixedSize: isFixedSize, shouldTruncate: shouldTruncate, width: width, isRanking: isRanking, style: inlineStyles, innerRef: innerRef, onKeyDown: function (e) { return e.stopPropagation(); } }), content));
    };
    return RankableTableCell;
}(React__default.Component));
var TableCell = withDimensions(RankableTableCell);

var RankableTableRow = /** @class */ (function (_super) {
    __extends$b(RankableTableRow, _super);
    function RankableTableRow() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.innerRef = function (innerRefFn) { return function (ref) {
            innerRefFn(ref);
            if (_this.props.innerRef) {
                _this.props.innerRef(ref);
            }
        }; };
        return _this;
    }
    RankableTableRow.prototype.render = function () {
        var _this = this;
        var _a = this.props, row = _a.row, head = _a.head, isFixedSize = _a.isFixedSize, isRanking = _a.isRanking, refWidth = _a.refWidth, rowIndex = _a.rowIndex, isRankingDisabled = _a.isRankingDisabled, isHighlighted = _a.isHighlighted, testId = _a.testId;
        var cells = row.cells, key = row.key, restRowProps = __rest$6(row, ["cells", "key"]);
        var inlineStyles = inlineStylesIfRanking(isRanking, refWidth);
        if (typeof key !== 'string' && !isRankingDisabled) {
            throw new Error('dynamic-table: ranking is not possible because table row does not have a key. Add the key to the row or disable ranking.');
        }
        return (React__default.createElement(PublicDraggable, { draggableId: key || "" + rowIndex, index: rowIndex, isDragDisabled: isRankingDisabled }, function (provided, snapshot) { return (React__default.createElement(RankableTableBodyRow, __assign$8({}, restRowProps, provided.dragHandleProps, provided.draggableProps, { innerRef: _this.innerRef(provided.innerRef), style: __assign$8(__assign$8({}, provided.draggableProps.style), inlineStyles), isHighlighted: isHighlighted, isRanking: isRanking, isRankingItem: snapshot.isDragging }), cells.map(function (cell, cellIndex) {
            var headCell = (head || { cells: [] }).cells[cellIndex];
            return (React__default.createElement(TableCell, { head: headCell, cell: cell, isRanking: isRanking, key: cell.key || cellIndex, isFixedSize: isFixedSize, testId: testId }));
        }))); }));
    };
    return RankableTableRow;
}(React__default.Component));
var TableRow = withDimensions(RankableTableRow);

// computes destination of ranking
// - if drag was cancelled returns undefined
// - if drag was finished, returns new position and after/before key
var computeRankDestination = function (result, pageRows) {
    var sourceIndex = result.source.index, destination = result.destination;
    if (destination) {
        var index = destination.index;
        var keyIndex = index < sourceIndex ? index - 1 : index;
        var afterKey = keyIndex !== -1 ? pageRows[keyIndex].key : undefined;
        var beforeIndex = keyIndex === -1 ? 0 : keyIndex + 1;
        var beforeKey = beforeIndex < pageRows.length ? pageRows[beforeIndex].key : undefined;
        return {
            index: index,
            afterKey: afterKey,
            beforeKey: beforeKey,
        };
    }
    return undefined;
};
var RankableBody = /** @class */ (function (_super) {
    __extends$b(RankableBody, _super);
    function RankableBody() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onBeforeDragStart = function (dragStart) {
            var key = dragStart.draggableId, index = dragStart.source.index;
            var rankStartProps = {
                index: index,
                key: key,
            };
            _this.props.onRankStart(rankStartProps);
        };
        _this.onDragEnd = function (result) {
            var _a = _this.props, pageRows = _a.pageRows, onRankEnd = _a.onRankEnd;
            var sourceKey = result.draggableId, sourceIndex = result.source.index;
            var destination = computeRankDestination(result, pageRows);
            var rankEndProps = {
                sourceIndex: sourceIndex,
                sourceKey: sourceKey,
                destination: destination,
            };
            onRankEnd(rankEndProps);
        };
        return _this;
    }
    RankableBody.prototype.render = function () {
        var _a = this.props, highlightedRowIndex = _a.highlightedRowIndex, pageRows = _a.pageRows, head = _a.head, isFixedSize = _a.isFixedSize, isRanking = _a.isRanking, isRankingDisabled = _a.isRankingDisabled, testId = _a.testId;
        return (React__default.createElement(DragDropContext, { onBeforeDragStart: this.onBeforeDragStart, onDragEnd: this.onDragEnd },
            React__default.createElement(ConnectedDroppable, { droppableId: "dynamic-table-droppable", isDropDisabled: isRankingDisabled }, function (provided) { return (React__default.createElement("tbody", __assign$8({ "data-testid": testId, ref: provided.innerRef }, provided.droppableProps),
                pageRows.map(function (row, rowIndex) { return (React__default.createElement(TableRow, { head: head, isRanking: isRanking, isFixedSize: isFixedSize, key: row.key, rowIndex: rowIndex, row: row, isRankingDisabled: isRankingDisabled, isHighlighted: highlightedRowIndex === rowIndex })); }),
                provided.placeholder)); })));
    };
    return RankableBody;
}(React__default.Component));
var RankableTableBody = withSortedPageRows(RankableBody);

var rankingStyles = css$3(templateObject_1$6 || (templateObject_1$6 = __makeTemplateObject$8(["\n  display: block;\n"], ["\n  display: block;\n"])));
var Head = styled$1.thead(templateObject_2$3 || (templateObject_2$3 = __makeTemplateObject$8(["\n  border-bottom: 2px solid ", ";\n  ", ";\n"], ["\n  border-bottom: 2px solid ", ";\n  ", ";\n"])), head.borderColor, function (_a) {
    var isRanking = _a.isRanking;
    return isRanking && rankingStyles;
});
var HeadCell$1 = styled$1.th(templateObject_3$3 || (templateObject_3$3 = __makeTemplateObject$8(["\n  ", " \n  ", " \n  ", " \n  ", " \n  border: none;\n  color: ", ";\n  box-sizing: border-box;\n  font-size: 12px;\n  font-weight: 600;\n  position: relative;\n  text-align: left;\n  vertical-align: top;\n  &:focus {\n    outline: solid 2px ", ";\n  }\n"], ["\n  ", " \n  ", " \n  ", " \n  ", " \n  border: none;\n  color: ", ";\n  box-sizing: border-box;\n  font-size: 12px;\n  font-weight: 600;\n  position: relative;\n  text-align: left;\n  vertical-align: top;\n  &:focus {\n    outline: solid 2px ", ";\n  }\n"])), function (_a) {
    var onClick = _a.onClick;
    return onClickStyle({ onClick: Boolean(onClick) });
}, function (p) { return truncateStyle(p); }, function (p) { return arrowsStyle(p); }, cellStyle, head.textColor, B100$3);
var templateObject_1$6, templateObject_2$3, templateObject_3$3;

var TableHeadCell = /** @class */ (function (_super) {
    __extends$b(TableHeadCell, _super);
    function TableHeadCell() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableHeadCell.prototype.render = function () {
        var _a = this.props, content = _a.content, inlineStyles = _a.inlineStyles, testId = _a.testId, rest = __rest$6(_a, ["content", "inlineStyles", "testId"]);
        return (React__default.createElement(HeadCell$1, __assign$8({ style: inlineStyles, "data-testid": testId && testId + "--head--cell" }, rest, { tabIndex: rest.isSortable ? 0 : undefined }),
            React__default.createElement("span", null, content)));
    };
    TableHeadCell.defaultProps = {
        innerRef: function () { },
        inlineStyles: {},
    };
    return TableHeadCell;
}(React__default.Component));
var HeadCell = TableHeadCell;

var RankableTableHeadCell = /** @class */ (function (_super) {
    __extends$b(RankableTableHeadCell, _super);
    function RankableTableHeadCell() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RankableTableHeadCell.prototype.render = function () {
        var _a = this.props, isRanking = _a.isRanking; _a.refHeight; var refWidth = _a.refWidth, innerRef = _a.innerRef, restProps = __rest$6(_a, ["isRanking", "refHeight", "refWidth", "innerRef"]);
        var inlineStyles = inlineStylesIfRanking(isRanking, refWidth);
        return (React__default.createElement(HeadCell, __assign$8({ inlineStyles: inlineStyles, innerRef: innerRef }, restProps)));
    };
    return RankableTableHeadCell;
}(React__default.Component));
var RankableHeadCell = withDimensions(RankableTableHeadCell);

var TableHead = /** @class */ (function (_super) {
    __extends$b(TableHead, _super);
    function TableHead() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.canSortOnEnterPressed = function (e, isSortable) {
            return isSortable && e.key === 'Enter';
        };
        return _this;
    }
    TableHead.prototype.UNSAFE_componentWillMount = function () {
        validateSortKey(this.props.sortKey, this.props.head);
    };
    TableHead.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {
        if (this.props.sortKey !== nextProps.sortKey ||
            this.props.head !== nextProps.head) {
            validateSortKey(nextProps.sortKey, nextProps.head);
        }
    };
    TableHead.prototype.render = function () {
        var _this = this;
        var _a = this.props, head = _a.head, sortKey = _a.sortKey, sortOrder = _a.sortOrder, isFixedSize = _a.isFixedSize, onSort = _a.onSort, isRanking = _a.isRanking, isRankable = _a.isRankable, testId = _a.testId;
        if (!head) {
            return null;
        }
        var HeadCellComponent = isRankable ? RankableHeadCell : HeadCell;
        var cells = head.cells, rest = __rest$6(head, ["cells"]);
        return (React__default.createElement(Head, __assign$8({}, rest, { isRanking: isRanking, "data-testid": testId && testId + "--head" }),
            React__default.createElement("tr", null, cells.map(function (cell, index) {
                var isSortable = cell.isSortable, key = cell.key, restCellProps = __rest$6(cell, ["isSortable", "key"]);
                return (React__default.createElement(HeadCellComponent, __assign$8({ isFixedSize: isFixedSize, isSortable: !!isSortable, isRanking: isRanking, key: key || index, onClick: isSortable ? onSort(cell) : undefined, onKeyDown: function (e) {
                        return _this.canSortOnEnterPressed(e, isSortable)
                            ? onSort(cell)()
                            : undefined;
                    }, testId: testId, sortOrder: key === sortKey ? sortOrder : undefined }, restCellProps)));
            }))));
    };
    return TableHead;
}(React__default.Component));
var TableHead$1 = TableHead;

function toggleSortOrder(currentSortOrder) {
    switch (currentSortOrder) {
        case DESC:
            return ASC;
        case ASC:
            return DESC;
        default:
            return currentSortOrder;
    }
}
var DynamicTable$1 = /** @class */ (function (_super) {
    __extends$b(DynamicTable, _super);
    function DynamicTable() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            isRanking: false,
        };
        _this.onSort = function (item) { return function () {
            var _a = _this.props, sortKey = _a.sortKey, sortOrder = _a.sortOrder, onSort = _a.onSort, isRankable = _a.isRankable;
            var key = item.key;
            if (!key) {
                return;
            }
            if (onSort && isRankable && key === sortKey && sortOrder === DESC) {
                onSort({ key: null, sortOrder: null, item: item });
                return;
            }
            var sortOrderFormatted = key !== sortKey ? ASC : toggleSortOrder(sortOrder);
            if (onSort) {
                onSort({ key: key, item: item, sortOrder: sortOrderFormatted });
            }
        }; };
        _this.onSetPage = function (page, event) {
            var onSetPage = _this.props.onSetPage;
            if (onSetPage) {
                onSetPage(page, event);
            }
        };
        _this.onRankStart = function (params) {
            _this.setState({
                isRanking: true,
            });
            if (_this.props.onRankStart) {
                _this.props.onRankStart(params);
            }
        };
        _this.onRankEnd = function (params) {
            _this.setState({
                isRanking: false,
            });
            if (_this.props.onRankEnd) {
                _this.props.onRankEnd(params);
            }
        };
        _this.getSpinnerSize = function () {
            var _a = _this.props, page = _a.page, rows = _a.rows, rowsPerPage = _a.rowsPerPage, loadingSpinnerSize = _a.loadingSpinnerSize;
            if (loadingSpinnerSize) {
                return loadingSpinnerSize;
            }
            return getPageRows(rows || [], page, rowsPerPage).length > 2
                ? LARGE
                : SMALL;
        };
        _this.renderEmptyBody = function () {
            var _a = _this.props, emptyView = _a.emptyView, isLoading = _a.isLoading;
            if (isLoading) {
                return React__default.createElement(EmptyViewWithFixedHeight, null);
            }
            return emptyView && React__default.createElement(EmptyViewContainer, null, emptyView);
        };
        return _this;
    }
    DynamicTable.prototype.UNSAFE_componentWillMount = function () {
        validateSortKey(this.props.sortKey, this.props.head);
        assertIsSortable(this.props.head);
    };
    DynamicTable.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {
        if (this.props.sortKey !== nextProps.sortKey ||
            this.props.head !== nextProps.head) {
            validateSortKey(nextProps.sortKey, nextProps.head);
        }
        if (this.props.head !== nextProps.head) {
            assertIsSortable(nextProps.head);
        }
    };
    DynamicTable.prototype.render = function () {
        var _this = this;
        var _a = this.props, caption = _a.caption, head = _a.head, highlightedRowIndex = _a.highlightedRowIndex, isFixedSize = _a.isFixedSize, page = _a.page, rows = _a.rows, rowsPerPage = _a.rowsPerPage, sortKey = _a.sortKey, sortOrder = _a.sortOrder, isLoading = _a.isLoading, isRankable = _a.isRankable, isRankingDisabled = _a.isRankingDisabled, paginationi18n = _a.paginationi18n, onPageRowsUpdate = _a.onPageRowsUpdate, testId = _a.testId;
        var rowsLength = rows && rows.length;
        var bodyProps = {
            highlightedRowIndex: highlightedRowIndex,
            rows: rows,
            head: head,
            sortKey: sortKey,
            sortOrder: sortOrder,
            rowsPerPage: rowsPerPage,
            page: page,
            isFixedSize: isFixedSize || false,
            onPageRowsUpdate: onPageRowsUpdate,
            ref: function (el) {
                _this.tableBody = el;
            },
            testId: testId,
        };
        var totalPages = rowsLength && rowsPerPage ? Math.ceil(rowsLength / rowsPerPage) : 0;
        var rowsExist = !!rowsLength;
        var spinnerSize = this.getSpinnerSize();
        var emptyBody = this.renderEmptyBody();
        var canRank = isRankable && !sortKey;
        return (React__default.createElement(React__default.Fragment, null,
            React__default.createElement(LoadingContainerAdvanced$1, { isLoading: isLoading && rowsExist, spinnerSize: spinnerSize, targetRef: function () { return _this.tableBody; } },
                React__default.createElement(Table, { isFixedSize: isFixedSize, "data-testid": testId && testId + "--table" },
                    !!caption && React__default.createElement(Caption, null, caption),
                    head && (React__default.createElement(TableHead$1, { head: head, onSort: this.onSort, sortKey: sortKey, sortOrder: sortOrder, isRanking: this.state.isRanking, isRankable: canRank, testId: testId })),
                    rowsExist &&
                        (canRank ? (React__default.createElement(RankableTableBody, __assign$8({}, bodyProps, { isRanking: this.state.isRanking, onRankStart: this.onRankStart, onRankEnd: this.onRankEnd, isRankingDisabled: isRankingDisabled || isLoading || false }))) : (React__default.createElement(Body$2, __assign$8({}, bodyProps)))))),
            !totalPages ? null : (React__default.createElement(PaginationWrapper, null,
                React__default.createElement(ManagedPagination$1, { value: page, onChange: this.onSetPage, total: totalPages, i18n: paginationi18n }))),
            !rowsExist && emptyBody && (React__default.createElement(LoadingContainer$1, { isLoading: isLoading, spinnerSize: LARGE }, emptyBody))));
    };
    DynamicTable.defaultProps = {
        isLoading: false,
        isFixedSize: false,
        rowsPerPage: Infinity,
        onSetPage: function () { },
        onSort: function () { },
        page: 1,
        isRankable: false,
        isRankingDisabled: false,
        onRankStart: function () { },
        onRankEnd: function () { },
        paginationi18n: {
            prev: 'Prev',
            next: 'Next',
        },
    };
    return DynamicTable;
}(React__default.Component));
var createAndFireEventOnAtlaskit$d = createAndFireEvent$4('atlaskit');
var AkDynamicTable = withAnalyticsContext$9({
    componentName: 'dynamicTable',
    packageName: name$a,
    packageVersion: version$a,
})(withAnalyticsEvents$9({
    onSort: createAndFireEventOnAtlaskit$d({
        action: 'sorted',
        actionSubject: 'dynamicTable',
        attributes: {
            componentName: 'dynamicTable',
            packageName: name$a,
            packageVersion: version$a,
        },
    }),
    onRankEnd: createAndFireEventOnAtlaskit$d({
        action: 'ranked',
        actionSubject: 'dynamicTable',
        attributes: {
            componentName: 'dynamicTable',
            packageName: name$a,
            packageVersion: version$a,
        },
    }),
})(DynamicTable$1));

var css_248z$J = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.styled-atlaskit-table>div{margin-bottom:0}.styled-atlaskit-table.no-padding{padding-bottom:0}.styled-atlaskit-table.no-padding tbody td:first-child,.styled-atlaskit-table.no-padding thead th:first-child{padding-left:0}.styled-atlaskit-table.no-padding tbody td:last-child,.styled-atlaskit-table.no-padding thead th:last-child{padding-right:0}.styled-atlaskit-table thead{border-bottom:1px solid #e1e4e9}.styled-atlaskit-table thead>tr th>span:before{border-bottom-width:6px;border-left:6px solid transparent;border-right:6px solid transparent;border-top:6px solid transparent;bottom:10px;display:block;height:0;position:absolute;right:-15px;width:0}.styled-atlaskit-table thead>tr th:hover>span:before{border:6px solid transparent;border-bottom-color:#dfe1e6;bottom:10px;display:block;height:0;position:absolute;right:-15px;width:0}.styled-atlaskit-table thead>tr th>span:after{border-bottom:6px solid transparent;border-left:6px solid transparent;border-right:6px solid transparent;border-top-width:6px;bottom:-4px;display:block;height:0;position:absolute;right:-15px;width:0}.styled-atlaskit-table thead>tr th:hover>span:after{border:6px solid transparent;border-top-color:#dfe1e6;bottom:-4px;display:block;height:0;position:absolute;right:-15px;width:0}.styled-atlaskit-table tbody,.styled-atlaskit-table tfoot{border-bottom:0}.styled-atlaskit-table thead th{color:#4c576b;font-size:14px;font-weight:500;height:60px;text-align:left;vertical-align:middle}.styled-atlaskit-table thead th:first-child{padding-left:30px}.styled-atlaskit-table thead th:last-child{padding-right:30px}.styled-atlaskit-table tbody td{border-bottom:1px solid #e1e4e9;box-sizing:border-box;color:#232831;font-size:16px;height:50px;max-width:320px;text-align:left;vertical-align:middle;word-break:break-word}.styled-atlaskit-table tbody td .elipsis{overflow:hidden;text-overflow:ellipsis}.styled-atlaskit-table tbody td>a{color:#232831}.styled-atlaskit-table tbody td:first-child{padding-left:30px}.styled-atlaskit-table tbody td:last-child{padding-right:30px}.styled-atlaskit-table tbody td .faint-color{color:#687792}.styled-atlaskit-table .action-wrap{font-size:16px;font-weight:400}.styled-atlaskit-table .action-wrap button{transform:translateX(10px)}.styled-atlaskit-table .action-wrap button.plain-button{padding:0;transform:translateX(0)}.styled-atlaskit-table .action-wrap button:not(:first-child){margin-left:10px}.styled-atlaskit-table .action-wrap a{color:#0b6cff;cursor:pointer}.styled-atlaskit-table .action-wrap a:hover{color:#0b6cff}.styled-atlaskit-table .action-wrap a.disabled{color:#b8bfcd;cursor:not-allowed}.styled-atlaskit-table .action-wrap .delete-button{color:#687792!important;height:auto;line-height:24px;padding:0;text-decoration:none;transform:translateX(0)}.styled-atlaskit-table .action-wrap .delete-button:not(:first-child){margin-left:21px}.styled-atlaskit-table .actions-dropdown-wrap{color:#687792}.styled-atlaskit-table .actions-dropdown-wrap .active{color:#0b6cff}.styled-atlaskit-table .actions-dropdown-wrap .disabled{color:#b8bfcd;cursor:not-allowed}.styled-atlaskit-table .actions-dropdown-wrap .actions-dropdown-wrap-link,.styled-atlaskit-table .actions-dropdown-wrap>span{cursor:pointer;margin-right:10px}.styled-atlaskit-table .actions-dropdown-wrap>div{display:inline}.styled-atlaskit-table .active{color:#0b6cff}.styled-atlaskit-table.last-td-align-right tbody td:last-child,.styled-atlaskit-table.last-td-align-right thead th:last-child{text-align:right}.styled-atlaskit-table.last-td-align-right thead th:last-child{padding-right:40px}.styled-atlaskit-table div[class^=Droplist-]:hover{cursor:pointer}";
styleInject(css_248z$J);

var DynamicTable = function (_a) {
    var className = _a.className, props = __rest$8(_a, ["className"]);
    return (jsx$1("div", __assign$a({ className: classNames$1("styled-atlaskit-table", className) }, { children: jsx$1(AkDynamicTable, __assign$a({}, props), void 0) }), void 0));
};

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics$7 = function(d, b) {
    extendStatics$7 = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics$7(d, b);
};

function __extends$7(d, b) {
    extendStatics$7(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign$4 = function() {
    __assign$4 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign$4.apply(this, arguments);
};

function __rest$1(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __read$1(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread$1() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read$1(arguments[i]));
    return ar;
}

function __makeTemplateObject$4(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
}

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics$6 = function(d, b) {
    extendStatics$6 = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics$6(d, b);
};

function __extends$6(d, b) {
    extendStatics$6(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var isProduction = process.env.NODE_ENV === 'production';
var prefix$2 = 'Invariant failed';

var index$3 = (function (condition, message) {
  if (condition) {
    return;
  }

  if (isProduction) {
    throw new Error(prefix$2);
  }

  throw new Error(prefix$2 + ': ' + (message || ''));
});

var invariant$2 = index$3;

var PORTAL_MOUNT_EVENT = 'akPortalMount';
var PORTAL_UNMOUNT_EVENT = 'akPortalUnmount';

var createContainer = function (zIndex) {
    var container = document.createElement('div');
    container.setAttribute('class', 'atlaskit-portal');
    container.setAttribute('style', "z-index: " + zIndex + ";");
    return container;
};
var getBody$1 = function () {
    invariant$2(document && document.body, 'cannot find document.body');
    return document.body;
};
/**
 * Reverses the name: zIndex object so we can quickly access it using the zIndex value as the key.
 */
var zIndexToName = Object.keys(layers$1).reduce(function (acc, name) {
    var layerName = name;
    var value = layers$1[layerName]();
    acc[value] = layerName;
    return acc;
}, {});
var getLayerName = function (zIndex) {
    return Object.prototype.hasOwnProperty.call(zIndexToName, zIndex)
        ? zIndexToName[zIndex]
        : null;
};
var getEvent = function (eventName, zIndex) {
    var detail = {
        layer: getLayerName(Number(zIndex)),
        zIndex: zIndex,
    };
    // In ie11 the CustomEvent object exists, but it cannot be used as a constructor
    if (typeof CustomEvent === 'function') {
        return new CustomEvent(eventName, {
            detail: detail,
        });
    }
    // CustomEvent constructor API not supported (ie11)
    // Using `new Event` or `new CustomEvent` does not work in ie11
    var event = document.createEvent('CustomEvent');
    var params = {
        bubbles: true,
        cancellable: true,
        detail: detail,
    };
    event.initCustomEvent(eventName, params.bubbles, params.cancellable, params.detail);
    return event;
};
var firePortalEvent = function (eventName, zIndex) {
    var event = getEvent(eventName, zIndex);
    window.dispatchEvent(event);
};
var getPortalParent = function () {
    var parentElement = document.querySelector('body > .atlaskit-portal-container');
    if (!parentElement) {
        var parent_1 = document.createElement('div');
        parent_1.setAttribute('class', 'atlaskit-portal-container');
        parent_1.setAttribute('style', "display: flex;");
        getBody$1().appendChild(parent_1);
        return parent_1;
    }
    return parentElement;
};
// This is a generic component does two things:
// 1. Portals it's children using React.createPortal
// 2. Creates the DOM node container for the portal based on props
// 3. Ensures DOM the container creates it's own stacking context
var Portal = /** @class */ (function (_super) {
    __extends$6(Portal, _super);
    function Portal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            container: exenv.exports.canUseDOM ? createContainer(_this.props.zIndex) : undefined,
            portalIsMounted: false,
        };
        return _this;
    }
    Portal.prototype.componentDidUpdate = function (prevProps, prevState) {
        var container = this.state.container;
        var zIndex = this.props.zIndex;
        if (container && prevProps.zIndex !== zIndex) {
            var newContainer = createContainer(zIndex);
            getPortalParent().replaceChild(container, newContainer);
            // eslint-disable-next-line react/no-did-update-set-state
            this.setState({ container: newContainer });
        }
        else if (!prevState.container && container) {
            // SSR path
            getPortalParent().appendChild(container);
        }
    };
    Portal.prototype.componentDidMount = function () {
        var container = this.state.container;
        var zIndex = this.props.zIndex;
        if (container) {
            getPortalParent().appendChild(container);
        }
        else {
            // SSR path
            var newContainer = createContainer(zIndex);
            // eslint-disable-next-line react/no-did-mount-set-state
            this.setState({ container: newContainer });
        }
        // eslint-disable-next-line react/no-did-mount-set-state
        this.setState({
            portalIsMounted: true,
        });
        firePortalEvent(PORTAL_MOUNT_EVENT, Number(zIndex));
    };
    Portal.prototype.componentWillUnmount = function () {
        var container = this.state.container;
        var zIndex = this.props.zIndex;
        if (container) {
            getPortalParent().removeChild(container);
            // clean up parent element if there are no more portals
            var portals = !!document.querySelector('body > .atlaskit-portal-container > .atlaskit-portal');
            if (!portals) {
                getBody$1().removeChild(getPortalParent());
            }
        }
        firePortalEvent(PORTAL_UNMOUNT_EVENT, Number(zIndex));
    };
    Portal.prototype.render = function () {
        var _a = this.state, container = _a.container, portalIsMounted = _a.portalIsMounted;
        return container && portalIsMounted
            ? ReactDOM.createPortal(this.props.children, container)
            : null;
    };
    Portal.defaultProps = {
        zIndex: 0,
    };
    return Portal;
}(React__default.Component));
var Portal$1 = Portal;

/**
 * generates a UID factory
 * @internal
 * @example
 * const uid = generateUID();
 * uid(object) = 1;
 * uid(object) = 1;
 * uid(anotherObject) = 2;
 */
var generateUID = function () {
    var counter = 1;
    var map = new WeakMap();
    /**
     * @borrows {uid}
     */
    var uid = function (item, index) {
        if (typeof item === 'number' ||
            typeof item === 'string') {
            return index ? "idx-" + index : "val-" + item;
        }
        if (!map.has(item)) {
            map.set(item, counter++);
            return uid(item);
        }
        return 'uid' + map.get(item);
    };
    return uid;
};
/**
 * @name uid
 * returns an UID associated with {item}
 * @param {Object} item - object to generate UID for
 * @param {Number} index, a fallback index
 * @example
 * uid(object) == 1;
 * uid(object) == 1;
 * uid(anotherObject) == 2;
 * uid("not object", 42) == 42
 *
 * @see {@link useUID}
 */
var uid$1 = generateUID();

var createSource = function (prefix) {
    if (prefix === void 0) { prefix = ''; }
    return ({
        value: 1,
        prefix: prefix,
        uid: generateUID()
    });
};
var counter = createSource();
var source = React$7.createContext(createSource());
var getId = function (source) { return source.value++; };
var getPrefix = function (source) { return source ? source.prefix : ''; };

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics$5 = function(d, b) {
    extendStatics$5 = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics$5(d, b);
};

function __extends$5(d, b) {
    extendStatics$5(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

// --------------------------------------------
var prefixId = function (id, prefix, name) {
    var uid = (prefix + id);
    return String(name ? name(uid) : uid);
};
/**
 * @deprecated
 * UID in form of renderProps (not SSR friendly)
 * @see https://github.com/thearnica/react-uid#react-components
 * @example
 * // get UID to connect label to input
 * <UID>
 *   {(id)} => <label htmlFor={id}><input id={id}/>}
 * </UID>
 *
 * // get uid to generate uid for a keys in a list
 * <UID>
 *   {(, uid)} => items.map(item => <li key={uid(item) />)}
 * </UID>
 */
var UID = /** @class */ (function (_super) {
    __extends$5(UID, _super);
    function UID() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            quartz: _this.props.idSource || counter,
            prefix: getPrefix(_this.props.idSource),
            id: getId(_this.props.idSource || counter)
        };
        _this.uid = function (item) { return prefixId(_this.state.id + '-' + _this.state.quartz.uid(item), _this.state.prefix, _this.props.name); };
        return _this;
    }
    UID.prototype.render = function () {
        var _a = this.props, children = _a.children, name = _a.name;
        var _b = this.state, id = _b.id, prefix = _b.prefix;
        return children(prefixId(id, prefix, name), this.uid);
    };
    return UID;
}(React$7.Component));

/**
 * UID isolation component, required for SSR and testing.
 * Wrap your application with it to guarantee UID consistency between SSR and CSR.
 * @param {String} [prefix] - prefix for all generated ids
 * @example
 * <UIDReset>
 *    <App />
 * </UIDReset/>
 * @see https://github.com/thearnica/react-uid#server-side-friendly-uid
 */
var UIDReset = function (_a) {
    var children = _a.children, _b = _a.prefix, prefix = _b === void 0 ? '' : _b;
    return (React$7.createElement(source.Provider, { value: createSource(prefix) }, children));
};
/**
 * UID in form of renderProps. Supports nesting and SSR. Prefer {@link useUID} hook version if possible.
 * @see https://github.com/thearnica/react-uid#server-side-friendly-uid
 * @see https://github.com/thearnica/react-uid#react-components
 * @example
 * // get UID to connect label to input
 * <UIDConsumer>
 *   {(id)} => <label htmlFor={id}><input id={id}/>}
 * </UIDConsumer>
 *
 * // get uid to generate uid for a keys in a list
 * <UIDConsumer>
 *   {(, uid)} => items.map(item => <li key={uid(item) />)}
 * </UIDConsumer>
 *
 * @see {@link useUID} - a hook version of this component
 * @see {@link UID} - not SSR compatible version
 */
var UIDConsumer = function (_a) {
    var name = _a.name, children = _a.children;
    return (React$7.createElement(source.Consumer, null, function (value) { return (React$7.createElement(UID, { name: name, idSource: value, children: children })); }));
};

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics$4 = function(d, b) {
    extendStatics$4 = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics$4(d, b);
};

function __extends$4(d, b) {
    extendStatics$4(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign$3 = function() {
    __assign$3 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign$3.apply(this, arguments);
};

function __makeTemplateObject$3(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
}

var backgroundColor$3 = themed$3({ light: N100A, dark: DN90A });
var opacity = function (p) { return (p.isTinted ? 1 : 0); };
var pointerEvents = function (p) {
    return p.canClickThrough ? 'none' : 'initial';
};
var Div = styled$1.div(templateObject_1$5 || (templateObject_1$5 = __makeTemplateObject$3(["\n  background: ", ";\n  bottom: 0;\n  left: 0;\n  opacity: ", ";\n  pointer-events: ", ";\n  position: fixed;\n  right: 0;\n  top: 0;\n  transition: opacity 220ms;\n  z-index: ", ";\n"], ["\n  background: ", ";\n  bottom: 0;\n  left: 0;\n  opacity: ", ";\n  pointer-events: ", ";\n  position: fixed;\n  right: 0;\n  top: 0;\n  transition: opacity 220ms;\n  z-index: ", ";\n"])), backgroundColor$3, opacity, pointerEvents, layers$1.blanket);
var templateObject_1$5;

var name$7="@atlaskit/blanket";var version$7="10.0.19";

var Blanket$1 = /** @class */ (function (_super) {
    __extends$4(Blanket, _super);
    function Blanket() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Blanket.prototype.render = function () {
        var _a = this.props, canClickThrough = _a.canClickThrough, isTinted = _a.isTinted, onBlanketClicked = _a.onBlanketClicked;
        var onClick = canClickThrough ? undefined : onBlanketClicked;
        var containerProps = { canClickThrough: canClickThrough, isTinted: isTinted, onClick: onClick };
        return React__default.createElement(Div, __assign$3({}, containerProps));
    };
    Blanket.defaultProps = {
        canClickThrough: false,
        isTinted: false,
        onBlanketClicked: function () { },
    };
    return Blanket;
}(React__default.Component));
var createAndFireEventOnAtlaskit$c = createAndFireEvent$4('atlaskit');
var Blanket$2 = withAnalyticsContext$9({
    componentName: 'blanket',
    packageName: name$7,
    packageVersion: version$7,
})(withAnalyticsEvents$9({
    onBlanketClicked: createAndFireEventOnAtlaskit$c({
        action: 'clicked',
        actionSubject: 'blanket',
        attributes: {
            componentName: 'blanket',
            packageName: name$7,
            packageVersion: version$7,
        },
    }),
})(Blanket$1));

// eslint-disable-next-line import/prefer-default-export
var WIDTH_ENUM = {
    values: ['small', 'medium', 'large', 'x-large'],
    widths: {
        small: 400,
        medium: 600,
        large: 800,
        'x-large': 968,
    },
    defaultValue: 'medium',
};
var gutter = 60;

function _defineProperty$2(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var defineProperty$1 = _defineProperty$2;

var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23

var index$2 = memoize(function (prop) {
  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111
  /* o */
  && prop.charCodeAt(1) === 110
  /* n */
  && prop.charCodeAt(2) < 91;
}
/* Z+1 */
);

var testOmitPropsOnStringTag = index$2;

var testOmitPropsOnComponent = function testOmitPropsOnComponent(key) {
  return key !== 'theme' && key !== 'innerRef';
};

var getDefaultShouldForwardProp = function getDefaultShouldForwardProp(tag) {
  return typeof tag === 'string' && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  tag.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;
};

function ownKeys$q(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$p(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$q(source, true).forEach(function (key) { defineProperty$1(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$q(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var ILLEGAL_ESCAPE_SEQUENCE_ERROR = "You have illegal escape sequence in your template literal, most likely inside content's property value.\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \"content: '\\00d7';\" should become \"content: '\\\\00d7';\".\nYou can read more about this here:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences";
var isBrowser$1 = typeof document !== 'undefined';

var createStyled = function createStyled(tag, options) {
  if (process.env.NODE_ENV !== 'production') {
    if (tag === undefined) {
      throw new Error('You are trying to create a styled element with an undefined component.\nYou may have forgotten to import it.');
    }
  }

  var identifierName;
  var shouldForwardProp;
  var targetClassName;

  if (options !== undefined) {
    identifierName = options.label;
    targetClassName = options.target;
    shouldForwardProp = tag.__emotion_forwardProp && options.shouldForwardProp ? function (propName) {
      return tag.__emotion_forwardProp(propName) && // $FlowFixMe
      options.shouldForwardProp(propName);
    } : options.shouldForwardProp;
  }

  var isReal = tag.__emotion_real === tag;
  var baseTag = isReal && tag.__emotion_base || tag;

  if (typeof shouldForwardProp !== 'function' && isReal) {
    shouldForwardProp = tag.__emotion_forwardProp;
  }

  var defaultShouldForwardProp = shouldForwardProp || getDefaultShouldForwardProp(baseTag);
  var shouldUseAs = !defaultShouldForwardProp('as');
  return function () {
    var args = arguments;
    var styles = isReal && tag.__emotion_styles !== undefined ? tag.__emotion_styles.slice(0) : [];

    if (identifierName !== undefined) {
      styles.push("label:" + identifierName + ";");
    }

    if (args[0] == null || args[0].raw === undefined) {
      styles.push.apply(styles, args);
    } else {
      if (process.env.NODE_ENV !== 'production' && args[0][0] === undefined) {
        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);
      }

      styles.push(args[0][0]);
      var len = args.length;
      var i = 1;

      for (; i < len; i++) {
        if (process.env.NODE_ENV !== 'production' && args[0][i] === undefined) {
          console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);
        }

        styles.push(args[i], args[0][i]);
      }
    } // $FlowFixMe: we need to cast StatelessFunctionalComponent to our PrivateStyledComponent class


    var Styled = withEmotionCache(function (props, context, ref) {
      return createElement(ThemeContext.Consumer, null, function (theme) {
        var finalTag = shouldUseAs && props.as || baseTag;
        var className = '';
        var classInterpolations = [];
        var mergedProps = props;

        if (props.theme == null) {
          mergedProps = {};

          for (var key in props) {
            mergedProps[key] = props[key];
          }

          mergedProps.theme = theme;
        }

        if (typeof props.className === 'string') {
          className = getRegisteredStyles(context.registered, classInterpolations, props.className);
        } else if (props.className != null) {
          className = props.className + " ";
        }

        var serialized = serializeStyles(styles.concat(classInterpolations), context.registered, mergedProps);
        var rules = insertStyles(context, serialized, typeof finalTag === 'string');
        className += context.key + "-" + serialized.name;

        if (targetClassName !== undefined) {
          className += " " + targetClassName;
        }

        var finalShouldForwardProp = shouldUseAs && shouldForwardProp === undefined ? getDefaultShouldForwardProp(finalTag) : defaultShouldForwardProp;
        var newProps = {};

        for (var _key in props) {
          if (shouldUseAs && _key === 'as') continue;

          if ( // $FlowFixMe
          finalShouldForwardProp(_key)) {
            newProps[_key] = props[_key];
          }
        }

        newProps.className = className;
        newProps.ref = ref || props.innerRef;

        if (process.env.NODE_ENV !== 'production' && props.innerRef) {
          console.error('`innerRef` is deprecated and will be removed in a future major version of Emotion, please use the `ref` prop instead' + (identifierName === undefined ? '' : " in the usage of `" + identifierName + "`"));
        }

        var ele = createElement(finalTag, newProps);

        if (!isBrowser$1 && rules !== undefined) {
          var _ref;

          var serializedNames = serialized.name;
          var next = serialized.next;

          while (next !== undefined) {
            serializedNames += ' ' + next.name;
            next = next.next;
          }

          return createElement(Fragment$1, null, createElement("style", (_ref = {}, _ref["data-emotion-" + context.key] = serializedNames, _ref.dangerouslySetInnerHTML = {
            __html: rules
          }, _ref.nonce = context.sheet.nonce, _ref)), ele);
        }

        return ele;
      });
    });
    Styled.displayName = identifierName !== undefined ? identifierName : "Styled(" + (typeof baseTag === 'string' ? baseTag : baseTag.displayName || baseTag.name || 'Component') + ")";
    Styled.defaultProps = tag.defaultProps;
    Styled.__emotion_real = Styled;
    Styled.__emotion_base = baseTag;
    Styled.__emotion_styles = styles;
    Styled.__emotion_forwardProp = shouldForwardProp;
    Object.defineProperty(Styled, 'toString', {
      value: function value() {
        if (targetClassName === undefined && process.env.NODE_ENV !== 'production') {
          return 'NO_COMPONENT_SELECTOR';
        } // $FlowFixMe: coerce undefined to string


        return "." + targetClassName;
      }
    });

    Styled.withComponent = function (nextTag, nextOptions) {
      return createStyled(nextTag, nextOptions !== undefined ? _objectSpread$p({}, options || {}, {}, nextOptions) : options).apply(void 0, styles);
    };

    return Styled;
  };
};

var tags = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', // SVG
'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];

var newStyled = createStyled.bind();
tags.forEach(function (tagName) {
  newStyled[tagName] = newStyled(tagName);
});

var styled = newStyled;

/* Used to adjust flex parent height to account for the subtraction in children below */
var IEMaxHeightCalcPx = 1;
/* A bug exists in IE where flex column children overflow the height of their parents.
 * The workaround is to set a pixel max-height on the flex children.
 * For more information see https://github.com/philipwalton/flexbugs/issues/216
 */
var flexMaxHeightIEFix = "\n  max-height: 100%;\n  @media only screen and (-ms-high-contrast:active), (-ms-high-contrast:none) {\n    max-height: calc(100% - " + IEMaxHeightCalcPx + "px);\n  }\n";

var boxShadow$1 = function (_a) {
    var isChromeless = _a.isChromeless;
    return isChromeless
        ? 'none'
        : "\n      0 0 0 1px " + N30A + ", 0 2px 1px " + N30A + ",\n      0 0 20px -6px " + N60A$1 + "\n    ";
};
var dialogBgColor = function (_a) {
    var isChromeless = _a.isChromeless;
    return isChromeless ? 'transparent' : themed$3({ light: N0$7, dark: DN50$1 })();
};
var maxDimensions = "calc(100% - " + gutter * 2 + "px)";
var maxHeightDimensions = "calc(100% - " + (gutter * 2 - IEMaxHeightCalcPx) + "px)";
var dialogWidth = function (_a) {
    var widthName = _a.widthName, widthValue = _a.widthValue;
    if (typeof widthValue === 'number') {
        return widthValue + "px";
    }
    return widthName ? WIDTH_ENUM.widths[widthName] + "px" : widthValue || 'auto';
};
var dialogHeight = function (_a) {
    var heightValue = _a.heightValue;
    if (typeof heightValue === 'number') {
        return heightValue + "px";
    }
    return heightValue || 'auto';
};
var FillScreen = styled.div(templateObject_1$4 || (templateObject_1$4 = __makeTemplateObject$4(["\n  height: 100vh;\n  left: 0;\n  overflow-y: auto;\n  position: absolute;\n  top: ", "px;\n  width: 100%;\n  z-index: ", ";\n  -webkit-overflow-scrolling: touch;\n"], ["\n  height: 100vh;\n  left: 0;\n  overflow-y: auto;\n  position: absolute;\n  top: ", "px;\n  width: 100%;\n  z-index: ", ";\n  -webkit-overflow-scrolling: touch;\n"])), function (props) { return props.scrollDistance; }, layers$1.modal);
var positionBaseStyles = function (props) { return css$2(templateObject_2$2 || (templateObject_2$2 = __makeTemplateObject$4(["\n  display: flex;\n  flex-direction: column;\n  height: ", ";\n  left: 0;\n  right: 0;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: ", ";\n  top: ", "px;\n  width: ", ";\n  z-index: ", ";\n  pointer-events: none;\n"], ["\n  display: flex;\n  flex-direction: column;\n  height: ", ";\n  left: 0;\n  right: 0;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: ", ";\n  top: ", "px;\n  width: ", ";\n  z-index: ", ";\n  pointer-events: none;\n"])), maxHeightDimensions, maxDimensions, gutter, dialogWidth(props), layers$1.modal()); };
var positionBaseResponsiveStyles = css$2(templateObject_3$2 || (templateObject_3$2 = __makeTemplateObject$4(["\n  height: 100%;\n  left: 0;\n  position: fixed;\n  top: 0;\n  max-width: 100%;\n  width: 100%;\n"], ["\n  height: 100%;\n  left: 0;\n  position: fixed;\n  top: 0;\n  max-width: 100%;\n  width: 100%;\n"])));
var PositionerAbsolute = styled.div(templateObject_4$1 || (templateObject_4$1 = __makeTemplateObject$4(["\n  ", ";\n  position: absolute;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    ", ";\n  }\n"], ["\n  ", ";\n  position: absolute;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    ", ";\n  }\n"])), positionBaseStyles, positionBaseResponsiveStyles);
var PositionerRelative = styled.div(templateObject_5$1 || (templateObject_5$1 = __makeTemplateObject$4(["\n  margin: ", "px auto;\n  position: relative;\n  width: ", ";\n  z-index: ", ";\n  pointer-events: none;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    ", ";\n    margin: 0;\n  }\n"], ["\n  margin: ", "px auto;\n  position: relative;\n  width: ", ";\n  z-index: ", ";\n  pointer-events: none;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    ", ";\n    margin: 0;\n  }\n"])), gutter, dialogWidth, layers$1.modal, positionBaseResponsiveStyles);
var PositionerFixed = styled.div(templateObject_6$1 || (templateObject_6$1 = __makeTemplateObject$4(["\n  ", ";\n  position: fixed;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    ", ";\n  }\n"], ["\n  ", ";\n  position: fixed;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    ", ";\n  }\n"])), positionBaseStyles, positionBaseResponsiveStyles);
var Dialog = styled.div(templateObject_7$1 || (templateObject_7$1 = __makeTemplateObject$4(["\n  ", "\n  color: ", ";\n  display: flex;\n  flex-direction: column;\n  height: ", ";\n  ", ";\n  outline: 0;\n  pointer-events: auto;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    height: 100%;\n    max-height: 100%;\n    border-radius: 0;\n  }\n"], ["\n  ",
    "\n  color: ", ";\n  display: flex;\n  flex-direction: column;\n  height: ",
    ";\n  ", ";\n  outline: 0;\n  pointer-events: auto;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    height: 100%;\n    max-height: 100%;\n    border-radius: 0;\n  }\n"])), function (props) {
    return props.isChromeless
        ? null
        : "\n          background-color: " + dialogBgColor(props) + ";\n          border-radius: " + borderRadius$5() + "px;\n          box-shadow: " + boxShadow$1(props) + ";\n        ";
}, text$1, function (props) {
    return dialogHeight({ heightValue: props.heightValue });
}, flexMaxHeightIEFix);
PositionerAbsolute.displayName = 'PositionerAbsolute';
Dialog.displayName = 'Dialog';
FillScreen.displayName = 'FillScreen';
PositionerRelative.displayName = 'PositionerRelative';
PositionerFixed.displayName = 'PositionerFixed';
var templateObject_1$4, templateObject_2$2, templateObject_3$2, templateObject_4$1, templateObject_5$1, templateObject_6$1, templateObject_7$1;

var name$6="@atlaskit/modal-dialog";var version$6="10.6.4";

function _extends$9() {
  _extends$9 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$9.apply(this, arguments);
}

function _objectWithoutPropertiesLoose$2(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _setPrototypeOf$3(o, p) {
  _setPrototypeOf$3 = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf$3(o, p);
}

function _inheritsLoose$2(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf$3(subClass, superClass);
}

var config = {
  disabled: false
};

var timeoutsShape = process.env.NODE_ENV !== 'production' ? PropTypes$3.oneOfType([PropTypes$3.number, PropTypes$3.shape({
  enter: PropTypes$3.number,
  exit: PropTypes$3.number,
  appear: PropTypes$3.number
}).isRequired]) : null;
process.env.NODE_ENV !== 'production' ? PropTypes$3.oneOfType([PropTypes$3.string, PropTypes$3.shape({
  enter: PropTypes$3.string,
  exit: PropTypes$3.string,
  active: PropTypes$3.string
}), PropTypes$3.shape({
  enter: PropTypes$3.string,
  enterDone: PropTypes$3.string,
  enterActive: PropTypes$3.string,
  exit: PropTypes$3.string,
  exitDone: PropTypes$3.string,
  exitActive: PropTypes$3.string
})]) : null;

var TransitionGroupContext = React__default.createContext(null);

var UNMOUNTED = 'unmounted';
var EXITED = 'exited';
var ENTERING = 'entering';
var ENTERED = 'entered';
var EXITING = 'exiting';
/**
 * The Transition component lets you describe a transition from one component
 * state to another _over time_ with a simple declarative API. Most commonly
 * it's used to animate the mounting and unmounting of a component, but can also
 * be used to describe in-place transition states as well.
 *
 * ---
 *
 * **Note**: `Transition` is a platform-agnostic base component. If you're using
 * transitions in CSS, you'll probably want to use
 * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
 * instead. It inherits all the features of `Transition`, but contains
 * additional features necessary to play nice with CSS transitions (hence the
 * name of the component).
 *
 * ---
 *
 * By default the `Transition` component does not alter the behavior of the
 * component it renders, it only tracks "enter" and "exit" states for the
 * components. It's up to you to give meaning and effect to those states. For
 * example we can add styles to a component when it enters or exits:
 *
 * ```jsx
 * import { Transition } from 'react-transition-group';
 *
 * const duration = 300;
 *
 * const defaultStyle = {
 *   transition: `opacity ${duration}ms ease-in-out`,
 *   opacity: 0,
 * }
 *
 * const transitionStyles = {
 *   entering: { opacity: 1 },
 *   entered:  { opacity: 1 },
 *   exiting:  { opacity: 0 },
 *   exited:  { opacity: 0 },
 * };
 *
 * const Fade = ({ in: inProp }) => (
 *   <Transition in={inProp} timeout={duration}>
 *     {state => (
 *       <div style={{
 *         ...defaultStyle,
 *         ...transitionStyles[state]
 *       }}>
 *         I'm a fade Transition!
 *       </div>
 *     )}
 *   </Transition>
 * );
 * ```
 *
 * There are 4 main states a Transition can be in:
 *  - `'entering'`
 *  - `'entered'`
 *  - `'exiting'`
 *  - `'exited'`
 *
 * Transition state is toggled via the `in` prop. When `true` the component
 * begins the "Enter" stage. During this stage, the component will shift from
 * its current transition state, to `'entering'` for the duration of the
 * transition and then to the `'entered'` stage once it's complete. Let's take
 * the following example (we'll use the
 * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <Transition in={inProp} timeout={500}>
 *         {state => (
 *           // ...
 *         )}
 *       </Transition>
 *       <button onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the button is clicked the component will shift to the `'entering'` state
 * and stay there for 500ms (the value of `timeout`) before it finally switches
 * to `'entered'`.
 *
 * When `in` is `false` the same thing happens except the state moves from
 * `'exiting'` to `'exited'`.
 */

var Transition = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose$2(Transition, _React$Component);

  function Transition(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;
    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears

    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;

    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }

    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }

  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;

    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }

    return null;
  } // getSnapshotBeforeUpdate(prevProps) {
  //   let nextStatus = null
  //   if (prevProps !== this.props) {
  //     const { status } = this.state
  //     if (this.props.in) {
  //       if (status !== ENTERING && status !== ENTERED) {
  //         nextStatus = ENTERING
  //       }
  //     } else {
  //       if (status === ENTERING || status === ENTERED) {
  //         nextStatus = EXITING
  //       }
  //     }
  //   }
  //   return { nextStatus }
  // }
  ;

  var _proto = Transition.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;

    if (prevProps !== this.props) {
      var status = this.state.status;

      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }

    this.updateStatus(false, nextStatus);
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };

  _proto.getTimeouts = function getTimeouts() {
    var timeout = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout;

    if (timeout != null && typeof timeout !== 'number') {
      exit = timeout.exit;
      enter = timeout.enter; // TODO: remove fallback for next major

      appear = timeout.appear !== undefined ? timeout.appear : enter;
    }

    return {
      exit: exit,
      enter: enter,
      appear: appear
    };
  };

  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }

    if (nextStatus !== null) {
      // nextStatus will always be ENTERING or EXITING.
      this.cancelNextCallback();

      if (nextStatus === ENTERING) {
        this.performEnter(mounting);
      } else {
        this.performExit();
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };

  _proto.performEnter = function performEnter(mounting) {
    var _this2 = this;

    var enter = this.props.enter;
    var appearing = this.context ? this.context.isMounting : mounting;

    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],
        maybeNode = _ref2[0],
        maybeAppearing = _ref2[1];

    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED
    // if we are mounting and running this it means appear _must_ be set

    if (!mounting && !enter || config.disabled) {
      this.safeSetState({
        status: ENTERED
      }, function () {
        _this2.props.onEntered(maybeNode);
      });
      return;
    }

    this.props.onEnter(maybeNode, maybeAppearing);
    this.safeSetState({
      status: ENTERING
    }, function () {
      _this2.props.onEntering(maybeNode, maybeAppearing);

      _this2.onTransitionEnd(enterTimeout, function () {
        _this2.safeSetState({
          status: ENTERED
        }, function () {
          _this2.props.onEntered(maybeNode, maybeAppearing);
        });
      });
    });
  };

  _proto.performExit = function performExit() {
    var _this3 = this;

    var exit = this.props.exit;
    var timeouts = this.getTimeouts();
    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED

    if (!exit || config.disabled) {
      this.safeSetState({
        status: EXITED
      }, function () {
        _this3.props.onExited(maybeNode);
      });
      return;
    }

    this.props.onExit(maybeNode);
    this.safeSetState({
      status: EXITING
    }, function () {
      _this3.props.onExiting(maybeNode);

      _this3.onTransitionEnd(timeouts.exit, function () {
        _this3.safeSetState({
          status: EXITED
        }, function () {
          _this3.props.onExited(maybeNode);
        });
      });
    });
  };

  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };

  _proto.safeSetState = function safeSetState(nextState, callback) {
    // This shouldn't be necessary, but there are weird race conditions with
    // setState callbacks and unmounting in testing, so always make sure that
    // we can cancel any pending setState callbacks after we unmount.
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };

  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;

    var active = true;

    this.nextCallback = function (event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };

    this.nextCallback.cancel = function () {
      active = false;
    };

    return this.nextCallback;
  };

  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {
    this.setNextCallback(handler);
    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);
    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;

    if (!node || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }

    if (this.props.addEndListener) {
      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],
          maybeNode = _ref3[0],
          maybeNextCallback = _ref3[1];

      this.props.addEndListener(maybeNode, maybeNextCallback);
    }

    if (timeout != null) {
      setTimeout(this.nextCallback, timeout);
    }
  };

  _proto.render = function render() {
    var status = this.state.status;

    if (status === UNMOUNTED) {
      return null;
    }

    var _this$props = this.props,
        children = _this$props.children;
        _this$props.in;
        _this$props.mountOnEnter;
        _this$props.unmountOnExit;
        _this$props.appear;
        _this$props.enter;
        _this$props.exit;
        _this$props.timeout;
        _this$props.addEndListener;
        _this$props.onEnter;
        _this$props.onEntering;
        _this$props.onEntered;
        _this$props.onExit;
        _this$props.onExiting;
        _this$props.onExited;
        _this$props.nodeRef;
        var childProps = _objectWithoutPropertiesLoose$2(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);

    return (
      /*#__PURE__*/
      // allows for nested Transitions
      React__default.createElement(TransitionGroupContext.Provider, {
        value: null
      }, typeof children === 'function' ? children(status, childProps) : React__default.cloneElement(React__default.Children.only(children), childProps))
    );
  };

  return Transition;
}(React__default.Component);

Transition.contextType = TransitionGroupContext;
Transition.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: PropTypes$3.shape({
    current: typeof Element === 'undefined' ? PropTypes$3.any : function (propValue, key, componentName, location, propFullName, secret) {
      var value = propValue[key];
      return PropTypes$3.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);
    }
  }),

  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: PropTypes$3.oneOfType([PropTypes$3.func.isRequired, PropTypes$3.element.isRequired]).isRequired,

  /**
   * Show the component; triggers the enter or exit states
   */
  in: PropTypes$3.bool,

  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: PropTypes$3.bool,

  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: PropTypes$3.bool,

  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: PropTypes$3.bool,

  /**
   * Enable or disable enter transitions.
   */
  enter: PropTypes$3.bool,

  /**
   * Enable or disable exit transitions.
   */
  exit: PropTypes$3.bool,

  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function timeout(props) {
    var pt = timeoutsShape;
    if (!props.addEndListener) pt = pt.isRequired;

    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return pt.apply(void 0, [props].concat(args));
  },

  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: PropTypes$3.func,

  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: PropTypes$3.func,

  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: PropTypes$3.func,

  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: PropTypes$3.func,

  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: PropTypes$3.func,

  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: PropTypes$3.func,

  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: PropTypes$3.func
} : {}; // Name the function so it is clearer in the documentation

function noop$6() {}

Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop$6,
  onEntering: noop$6,
  onEntered: noop$6,
  onExit: noop$6,
  onExiting: noop$6,
  onExited: noop$6
};
Transition.UNMOUNTED = UNMOUNTED;
Transition.EXITED = EXITED;
Transition.ENTERING = ENTERING;
Transition.ENTERED = ENTERED;
Transition.EXITING = EXITING;
var Transition$1 = Transition;

function _assertThisInitialized$3(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */

function getChildMapping(children, mapFn) {
  var mapper = function mapper(child) {
    return mapFn && isValidElement(child) ? mapFn(child) : child;
  };

  var result = Object.create(null);
  if (children) Children.map(children, function (c) {
    return c;
  }).forEach(function (child) {
    // run the map function here instead so that the key is the computed one
    result[child.key] = mapper(child);
  });
  return result;
}
/**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */

function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};

  function getValueForKey(key) {
    return key in next ? next[key] : prev[key];
  } // For each key of `next`, the list of keys to insert before that key in
  // the combined list


  var nextKeysPending = Object.create(null);
  var pendingKeys = [];

  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }

  var i;
  var childMapping = {};

  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }

    childMapping[nextKey] = getValueForKey(nextKey);
  } // Finally, add the keys which didn't appear before any key in `next`


  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }

  return childMapping;
}

function getProp(child, prop, props) {
  return props[prop] != null ? props[prop] : child.props[prop];
}

function getInitialChildMapping(props, onExited) {
  return getChildMapping(props.children, function (child) {
    return cloneElement(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, 'appear', props),
      enter: getProp(child, 'enter', props),
      exit: getProp(child, 'exit', props)
    });
  });
}
function getNextChildMapping(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping(nextProps.children);
  var children = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.keys(children).forEach(function (key) {
    var child = children[key];
    if (!isValidElement(child)) return;
    var hasPrev = (key in prevChildMapping);
    var hasNext = (key in nextChildMapping);
    var prevChild = prevChildMapping[key];
    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)

    if (hasNext && (!hasPrev || isLeaving)) {
      // console.log('entering', key)
      children[key] = cloneElement(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      // item is old (exiting)
      // console.log('leaving', key)
      children[key] = cloneElement(child, {
        in: false
      });
    } else if (hasNext && hasPrev && isValidElement(prevChild)) {
      // item hasn't changed transition states
      // copy over the last transition props;
      // console.log('unchanged', key)
      children[key] = cloneElement(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    }
  });
  return children;
}

var values = Object.values || function (obj) {
  return Object.keys(obj).map(function (k) {
    return obj[k];
  });
};

var defaultProps$2 = {
  component: 'div',
  childFactory: function childFactory(child) {
    return child;
  }
};
/**
 * The `<TransitionGroup>` component manages a set of transition components
 * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition
 * components, `<TransitionGroup>` is a state machine for managing the mounting
 * and unmounting of components over time.
 *
 * Consider the example below. As items are removed or added to the TodoList the
 * `in` prop is toggled automatically by the `<TransitionGroup>`.
 *
 * Note that `<TransitionGroup>`  does not define any animation behavior!
 * Exactly _how_ a list item animates is up to the individual transition
 * component. This means you can mix and match animations across different list
 * items.
 */

var TransitionGroup = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose$2(TransitionGroup, _React$Component);

  function TransitionGroup(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;

    var handleExited = _this.handleExited.bind(_assertThisInitialized$3(_this)); // Initial children should all be entering, dependent on appear


    _this.state = {
      contextValue: {
        isMounting: true
      },
      handleExited: handleExited,
      firstRender: true
    };
    return _this;
  }

  var _proto = TransitionGroup.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.mounted = true;
    this.setState({
      contextValue: {
        isMounting: false
      }
    });
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mounted = false;
  };

  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
    var prevChildMapping = _ref.children,
        handleExited = _ref.handleExited,
        firstRender = _ref.firstRender;
    return {
      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  } // node is `undefined` when user provided `nodeRef` prop
  ;

  _proto.handleExited = function handleExited(child, node) {
    var currentChildMapping = getChildMapping(this.props.children);
    if (child.key in currentChildMapping) return;

    if (child.props.onExited) {
      child.props.onExited(node);
    }

    if (this.mounted) {
      this.setState(function (state) {
        var children = _extends$9({}, state.children);

        delete children[child.key];
        return {
          children: children
        };
      });
    }
  };

  _proto.render = function render() {
    var _this$props = this.props,
        Component = _this$props.component,
        childFactory = _this$props.childFactory,
        props = _objectWithoutPropertiesLoose$2(_this$props, ["component", "childFactory"]);

    var contextValue = this.state.contextValue;
    var children = values(this.state.children).map(childFactory);
    delete props.appear;
    delete props.enter;
    delete props.exit;

    if (Component === null) {
      return /*#__PURE__*/React__default.createElement(TransitionGroupContext.Provider, {
        value: contextValue
      }, children);
    }

    return /*#__PURE__*/React__default.createElement(TransitionGroupContext.Provider, {
      value: contextValue
    }, /*#__PURE__*/React__default.createElement(Component, props, children));
  };

  return TransitionGroup;
}(React__default.Component);

TransitionGroup.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: PropTypes$3.any,

  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: PropTypes$3.node,

  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: PropTypes$3.bool,

  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: PropTypes$3.bool,

  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: PropTypes$3.bool,

  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: PropTypes$3.func
} : {};
TransitionGroup.defaultProps = defaultProps$2;
var TransitionGroup$1 = TransitionGroup;

var duration = 500;
var easing$1 = 'cubic-bezier(0.23, 1, 0.32, 1)'; // easeOutQuint
var verticalOffset = 16;
var Animation$2 = function (_a) {
    var hasEntered = _a.in, _b = _a.stackIndex, stackIndex = _b === void 0 ? 0 : _b, onExited = _a.onExited, onEntered = _a.onEntered, children = _a.children;
    return (React__default.createElement(Transition$1, { in: hasEntered, timeout: { enter: 0, exit: duration }, onExited: onExited, onEntered: onEntered, appear: true }, function (unadjustedStatus) {
        // when we first render, we want to finish the 'entering' state render
        // then jump to the 'entered' state as quick as possible.
        var adjustedStatus = hasEntered && unadjustedStatus === 'exited'
            ? 'entering'
            : unadjustedStatus;
        // Fade styles
        var fadeBaseStyles = {
            transition: "opacity " + duration / 2 + "ms",
            opacity: 1,
        };
        var fadeTransitionStyles = {
            entering: {
                opacity: 0,
            },
            entered: {},
            exiting: {
                opacity: 0,
            },
            exited: {},
        };
        // Slide styles
        var slideBaseStyles = {
            transition: "transform " + duration + "ms " + easing$1,
            transform: "translate3d(0, " + verticalOffset * 2 + "px, 0)",
        };
        var slideTransitionStyles = {
            entering: {},
            entered: {
                transform: stackIndex > 0
                    ? "translate3d(0, " + stackIndex * (verticalOffset / 2) + "px, 0)"
                    : null,
            },
            exiting: {
                transform: "translate3d(0, -" + verticalOffset * 2 + "px, 0)",
            },
            exited: {},
        };
        return children({
            fade: __assign$4(__assign$4({}, fadeBaseStyles), fadeTransitionStyles[adjustedStatus]),
            slide: __assign$4(__assign$4({}, slideBaseStyles), slideTransitionStyles[adjustedStatus]),
        });
    }));
};

var rafSchedule = (function (fn) {
  var lastArgs = [];
  var frameId = null;

  var wrapperFn = function wrapperFn() {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    lastArgs = args;

    if (frameId) {
      return frameId;
    }

    frameId = requestAnimationFrame(function () {
      frameId = null;
      fn.apply(undefined, lastArgs);
    });

    return frameId;
  };

  wrapperFn.cancel = function () {
    if (!frameId) {
      return;
    }

    cancelAnimationFrame(frameId);
    frameId = null;
  };

  var resultFn = wrapperFn;

  return resultFn;
});

var dist = {};

var ScrollLock$3 = {};

var TouchScrollable = {};

var utils = {};

Object.defineProperty(utils, "__esModule", {
  value: true
});
utils.pipe = utils.listenerOptions = undefined;
utils.preventTouchMove = preventTouchMove$1;
utils.allowTouchMove = allowTouchMove$1;
utils.preventInertiaScroll = preventInertiaScroll$1;
utils.isTouchDevice = isTouchDevice$1;
utils.camelToKebab = camelToKebab;
utils.parse = parse;
utils.getPadding = getPadding$5;
utils.getWindowHeight = getWindowHeight;
utils.getDocumentHeight = getDocumentHeight;
utils.makeStyleTag = makeStyleTag;
utils.injectStyles = injectStyles;
utils.insertStyleTag = insertStyleTag;

var _exenv$3 = exenv.exports;

utils.listenerOptions = {
  capture: false,
  passive: false
};

// ==============================
// Touch Helpers
// ==============================

function preventTouchMove$1(e) {
  e.preventDefault();

  return false;
}

function allowTouchMove$1(e) {
  var target = e.currentTarget;

  if (target.scrollHeight > target.clientHeight) {
    e.stopPropagation();
    return true;
  }

  e.preventDefault();
  return false;
}

function preventInertiaScroll$1() {
  var top = this.scrollTop;
  var totalScroll = this.scrollHeight;
  var currentScroll = top + this.offsetHeight;

  if (top === 0) {
    this.scrollTop = 1;
  } else if (currentScroll === totalScroll) {
    this.scrollTop = top - 1;
  }
}

// `ontouchstart` check works on most browsers
// `maxTouchPoints` works on IE10/11 and Surface
function isTouchDevice$1() {
  if (!_exenv$3.canUseDOM) return false;
  return 'ontouchstart' in window || navigator.maxTouchPoints;
}

// ==============================
// Misc.
// ==============================

function camelToKebab(str) {
  return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
}

function parse(val) {
  return isNaN(val) ? val : val + 'px';
}

// Take a list of functions and return a function that applies the list of
// functions from left to right

var pipeFns = function pipeFns(a, b) {
  return function () {
    return b(a.apply(undefined, arguments));
  };
};
utils.pipe = function pipe() {
  for (var _len = arguments.length, fns = Array(_len), _key = 0; _key < _len; _key++) {
    fns[_key] = arguments[_key];
  }

  return fns.reduce(pipeFns);
};

// ==============================
// Document Helpers
// ==============================

function getPadding$5() {
  if (!_exenv$3.canUseDOM) return 0;

  var paddingRight = parseInt(window.getComputedStyle(document.body).paddingRight, 10);
  var scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;

  return paddingRight + scrollbarWidth;
}

function getWindowHeight() {
  var multiplier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

  if (_exenv$3.canUseDOM) {
    return window.innerHeight * multiplier;
  }
}

function getDocumentHeight() {
  if (_exenv$3.canUseDOM) {
    return document.body.clientHeight;
  }
}

// ==============================
// Style Sheets
// ==============================

function makeStyleTag() {
  if (!_exenv$3.canUseDOM) return;

  var tag = document.createElement('style');
  tag.type = 'text/css';
  tag.setAttribute('data-react-scrolllock', '');

  return tag;
}
function injectStyles(tag, css) {
  if (!_exenv$3.canUseDOM) return;

  if (tag.styleSheet) {
    tag.styleSheet.cssText = css;
  } else {
    tag.appendChild(document.createTextNode(css));
  }
}
function insertStyleTag(tag) {
  if (!_exenv$3.canUseDOM) return;

  var head = document.head || document.getElementsByTagName('head')[0];

  head.appendChild(tag);
}

Object.defineProperty(TouchScrollable, "__esModule", {
  value: true
});
TouchScrollable.TouchScrollable = undefined;

var _extends$8 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass$7 = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react$f = React__default;

var _exenv$2 = exenv.exports;

var _utils$3 = utils;

function _objectWithoutProperties$2(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck$7(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn$7(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits$7(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

TouchScrollable.TouchScrollable = function (_PureComponent) {
  _inherits$7(TouchScrollable, _PureComponent);

  function TouchScrollable() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck$7(this, TouchScrollable);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn$7(this, (_ref = TouchScrollable.__proto__ || Object.getPrototypeOf(TouchScrollable)).call.apply(_ref, [this].concat(args))), _this), _this.getScrollableArea = function (ref) {
      _this.scrollableArea = ref;
    }, _temp), _possibleConstructorReturn$7(_this, _ret);
  }

  _createClass$7(TouchScrollable, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (!_exenv$2.canUseEventListeners) return;

      this.scrollableArea.addEventListener('touchstart', _utils$3.preventInertiaScroll, _utils$3.listenerOptions);
      this.scrollableArea.addEventListener('touchmove', _utils$3.allowTouchMove, _utils$3.listenerOptions);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (!_exenv$2.canUseEventListeners) return;

      this.scrollableArea.removeEventListener('touchstart', _utils$3.preventInertiaScroll, _utils$3.listenerOptions);
      this.scrollableArea.removeEventListener('touchmove', _utils$3.allowTouchMove, _utils$3.listenerOptions);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          rest = _objectWithoutProperties$2(_props, ['children']);

      return typeof children === 'function' ? children(this.getScrollableArea) : (0, _react$f.cloneElement)(children, _extends$8({ ref: this.getScrollableArea }, rest));
    }
  }]);

  return TouchScrollable;
}(_react$f.PureComponent);

var withLockSheet$1 = {};

Object.defineProperty(withLockSheet$1, "__esModule", {
  value: true
});

var _createClass$6 = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

withLockSheet$1.default = withLockSheet;

var _react$e = React__default;

var _react2$3 = _interopRequireDefault$d(_react$e);

var _utils$2 = utils;

function _interopRequireDefault$d(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck$6(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn$6(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits$6(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function withLockSheet(WrappedComponent) {
  return function (_PureComponent) {
    _inherits$6(SheetProvider, _PureComponent);

    function SheetProvider() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck$6(this, SheetProvider);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn$6(this, (_ref = SheetProvider.__proto__ || Object.getPrototypeOf(SheetProvider)).call.apply(_ref, [this].concat(args))), _this), _this.addSheet = function () {
        var styles = _this.getStyles();

        var sheet = (0, _utils$2.makeStyleTag)();
        if (!sheet) return;

        (0, _utils$2.injectStyles)(sheet, styles);
        (0, _utils$2.insertStyleTag)(sheet);

        _this.sheet = sheet;
      }, _this.getStyles = function () {
        var accountForScrollbars = _this.props.accountForScrollbars;


        var height = (0, _utils$2.getDocumentHeight)();
        var paddingRight = accountForScrollbars ? (0, _utils$2.getPadding)() : null;
        var styles = 'body {\n        box-sizing: border-box !important;\n        overflow: hidden !important;\n        position: relative !important;\n        ' + (height ? 'height: ' + height + 'px !important;' : '') + '\n        ' + (paddingRight ? 'padding-right: ' + paddingRight + 'px !important;' : '') + '\n      }';

        return styles;
      }, _temp), _possibleConstructorReturn$6(_this, _ret);
    }

    _createClass$6(SheetProvider, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        this.addSheet();
      }
    }, {
      key: 'removeSheet',
      value: function removeSheet() {
        if (!this.sheet) return;

        // $FlowFixMe
        this.sheet.parentNode.removeChild(this.sheet);
        this.sheet = null;
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        this.removeSheet();
      }
    }, {
      key: 'render',
      value: function render() {
        return _react2$3.default.createElement(WrappedComponent, this.props);
      }
    }]);

    return SheetProvider;
  }(_react$e.PureComponent);
}

var withTouchListeners$1 = {};

Object.defineProperty(withTouchListeners$1, "__esModule", {
    value: true
});

var _createClass$5 = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

withTouchListeners$1.default = withTouchListeners;

var _react$d = React__default;

var _react2$2 = _interopRequireDefault$c(_react$d);

var _exenv$1 = exenv.exports;

var _utils$1 = utils;

function _interopRequireDefault$c(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck$5(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn$5(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits$5(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// Mobile Safari ignores { overflow: hidden } declaration on the body,
// so we have to prevent touchmove events via JS
function withTouchListeners(WrappedComponent) {
    return function (_PureComponent) {
        _inherits$5(TouchProvider, _PureComponent);

        function TouchProvider() {
            _classCallCheck$5(this, TouchProvider);

            return _possibleConstructorReturn$5(this, (TouchProvider.__proto__ || Object.getPrototypeOf(TouchProvider)).apply(this, arguments));
        }

        _createClass$5(TouchProvider, [{
            key: 'componentDidMount',
            value: function componentDidMount() {
                if (!_exenv$1.canUseDOM || !(0, _utils$1.isTouchDevice)()) return;

                document.addEventListener('touchmove', _utils$1.preventTouchMove, _utils$1.listenerOptions);
            }
        }, {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
                if (!_exenv$1.canUseDOM || !(0, _utils$1.isTouchDevice)()) return;

                document.removeEventListener('touchmove', _utils$1.preventTouchMove, _utils$1.listenerOptions);
            }
        }, {
            key: 'render',
            value: function render() {
                return _react2$2.default.createElement(WrappedComponent, this.props);
            }
        }]);

        return TouchProvider;
    }(_react$d.PureComponent);
}

Object.defineProperty(ScrollLock$3, "__esModule", {
  value: true
});

var _createClass$4 = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react$c = React__default;

var _react2$1 = _interopRequireDefault$b(_react$c);

var _exenv = exenv.exports;

var _TouchScrollable = TouchScrollable;

var _withLockSheet = withLockSheet$1;

var _withLockSheet2 = _interopRequireDefault$b(_withLockSheet);

var _withTouchListeners = withTouchListeners$1;

var _withTouchListeners2 = _interopRequireDefault$b(_withTouchListeners);

var _utils = utils;

function _interopRequireDefault$b(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck$4(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn$4(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits$4(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ScrollLock$2 = function (_PureComponent) {
  _inherits$4(ScrollLock, _PureComponent);

  function ScrollLock() {
    _classCallCheck$4(this, ScrollLock);

    return _possibleConstructorReturn$4(this, (ScrollLock.__proto__ || Object.getPrototypeOf(ScrollLock)).apply(this, arguments));
  }

  _createClass$4(ScrollLock, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (!_exenv.canUseDOM) return;
      this.initialHeight = window.innerHeight;
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      var offset = window.innerHeight - this.initialHeight;

      // adjust scroll if the window has been resized since the lock was engaged
      // e.g. mobile safari dynamic chrome heights
      if (offset) {
        window.scrollTo(0, window.pageYOffset + offset);
      }

      // reset the initial height in case this scroll lock is used again
      this.initialHeight = window.innerHeight;
    }
  }, {
    key: 'render',
    value: function render() {
      var children = this.props.children;


      return children ? _react2$1.default.createElement(
        _TouchScrollable.TouchScrollable,
        null,
        children
      ) : null;
    }
  }]);

  return ScrollLock;
}(_react$c.PureComponent);

// attach the stylesheet and inject styles on [un]mount


var compose = (0, _utils.pipe)(_withTouchListeners2.default, _withLockSheet2.default);
var SheetLock = compose(ScrollLock$2);

// toggle the lock based on `isActive` prop
var LockToggle = function LockToggle(props) {
  return props.isActive ? _react2$1.default.createElement(SheetLock, props) : props.children;
};

LockToggle.defaultProps = {
  accountForScrollbars: true,
  children: null,
  isActive: true
};

ScrollLock$3.default = LockToggle;

(function (exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _ScrollLock = ScrollLock$3;

Object.defineProperty(exports, 'default', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ScrollLock).default;
  }
});

var _TouchScrollable = TouchScrollable;

Object.defineProperty(exports, 'TouchScrollable', {
  enumerable: true,
  get: function get() {
    return _TouchScrollable.TouchScrollable;
  }
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
}(dist));

var ScrollLock$1 = /*@__PURE__*/getDefaultExportFromCjs(dist);

// Constants
// ==============================
var modalPadding = gridSize$5() * 3;
var keylineColor = themed$3({ light: N30$3, dark: DN30$5 });
var keylineHeight = 2;
// Wrapper
// ==============================
var wrapperStyles = css$2(templateObject_1$3 || (templateObject_1$3 = __makeTemplateObject$4(["\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  ", ";\n"], ["\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  ", ";\n"])), flexMaxHeightIEFix);
var Header$1 = styled.header(templateObject_2$1 || (templateObject_2$1 = __makeTemplateObject$4(["\n  align-items: center;\n  display: flex;\n  flex: 0 0 auto;\n  justify-content: space-between;\n  transition: box-shadow 200ms;\n  z-index: 1;\n  padding: ", "px ", "px ", "px\n    ", "px;\n  box-shadow: ", ";\n"], ["\n  align-items: center;\n  display: flex;\n  flex: 0 0 auto;\n  justify-content: space-between;\n  transition: box-shadow 200ms;\n  z-index: 1;\n  padding: ", "px ", "px ", "px\n    ", "px;\n  box-shadow: ",
    ";\n"])), modalPadding, modalPadding, modalPadding - keylineHeight, modalPadding, function (props) {
    return props.showKeyline
        ? "0 " + keylineHeight + "px 0 0 " + keylineColor(props)
        : 'none';
});
var Title = styled.h4(templateObject_3$1 || (templateObject_3$1 = __makeTemplateObject$4(["\n  align-items: center;\n  display: flex;\n  font-size: 20px;\n  font-style: inherit;\n  font-weight: 500;\n  letter-spacing: -0.008em;\n  line-height: 1;\n  margin: 0;\n  min-width: 0;\n"], ["\n  align-items: center;\n  display: flex;\n  font-size: 20px;\n  font-style: inherit;\n  font-weight: 500;\n  letter-spacing: -0.008em;\n  line-height: 1;\n  margin: 0;\n  min-width: 0;\n"])));
var TitleText = styled.span(templateObject_4 || (templateObject_4 = __makeTemplateObject$4(["\n  flex: 1 1 auto;\n  min-width: 0;\n  word-wrap: break-word;\n  width: 100%;\n  ", ";\n"], ["\n  flex: 1 1 auto;\n  min-width: 0;\n  word-wrap: break-word;\n  width: 100%;\n  ",
    ";\n"])), function (props) {
    return !props.isHeadingMultiline &&
        "\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    ";
});
var iconColor = {
    danger: R400$2,
    warning: Y400,
};
var titleIconWrapperStyles = function (appearance) { return css$2(templateObject_5 || (templateObject_5 = __makeTemplateObject$4(["\n  color: ", ";\n  margin-right: ", "px;\n  flex: 0 0 auto;\n"], ["\n  color: ", ";\n  margin-right: ", "px;\n  flex: 0 0 auto;\n"])), iconColor[appearance], gridSize$5()); };
// Body
// ==============================
/**
  Adding the padding here avoids cropping box shadow on first/last
  children. The combined vertical spacing is maintained by subtracting the
  keyline height from header and footer.
*/
var bodyStyles = function (shouldScroll) { return css$2(templateObject_6 || (templateObject_6 = __makeTemplateObject$4(["\n  flex: 1 1 auto;\n  ", "\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    overflow-y: auto;\n    height: 100%;\n  }\n  &:focus {\n    outline-offset: -1px;\n    outline-style: dotted;\n    outline-color: ", ";\n    outline-width: thin;\n  }\n"], ["\n  flex: 1 1 auto;\n  ",
    "\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    overflow-y: auto;\n    height: 100%;\n  }\n  &:focus {\n    outline-offset: -1px;\n    outline-style: dotted;\n    outline-color: ", ";\n    outline-width: thin;\n  }\n"])), shouldScroll
    ? "\n        overflow-y: auto;\n        overflow-x: hidden;\n        padding: " + keylineHeight + "px " + modalPadding + "px;\n      "
    : "\n        padding: 0 " + modalPadding + "px;\n      ", N800$2); };
var Body = styled.div(templateObject_7 || (templateObject_7 = __makeTemplateObject$4(["\n  ", "\n"], ["\n  ", "\n"])), function (props) { return bodyStyles(props.shouldScroll); });
var Footer$1 = styled.footer(templateObject_8 || (templateObject_8 = __makeTemplateObject$4(["\n  align-items: center;\n  display: flex;\n  flex: 0 0 auto;\n  justify-content: space-between;\n  transition: box-shadow 200ms;\n  z-index: 1;\n  padding: ", "px ", "px ", "px\n    ", "px;\n  box-shadow: ", ";\n"], ["\n  align-items: center;\n  display: flex;\n  flex: 0 0 auto;\n  justify-content: space-between;\n  transition: box-shadow 200ms;\n  z-index: 1;\n  padding: ", "px ", "px ", "px\n    ", "px;\n  box-shadow: ",
    ";\n"])), modalPadding - keylineHeight, modalPadding, modalPadding, modalPadding, function (props) {
    return props.showKeyline
        ? "0 -" + keylineHeight + "px 0 0 " + keylineColor(props)
        : 'none';
});
var Actions = styled.div(templateObject_9 || (templateObject_9 = __makeTemplateObject$4(["\n  display: inline-flex;\n  margin: 0 -", "px;\n"], ["\n  display: inline-flex;\n  margin: 0 -", "px;\n"])), divide(gridSize$5, 2));
var ActionItem = styled.div(templateObject_10 || (templateObject_10 = __makeTemplateObject$4(["\n  flex: 1 0 auto;\n  margin: 0 ", "px;\n"], ["\n  flex: 1 0 auto;\n  margin: 0 ", "px;\n"])), divide(gridSize$5, 2));
var templateObject_1$3, templateObject_2$1, templateObject_3$1, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9, templateObject_10;

var compactButtonHeight$1 = (gridSize$5() * 3) / fontSize$5() + "em";
var buttonHeight$1 = (gridSize$5() * 4) / fontSize$5() + "em";
/** Background */
var getBackground$4 = function (props) {
    return applyPropertyStyle$1('background', props, baseTheme$1);
};
/** Box Shadow */
var getBoxShadow$1 = function (props) {
    var boxShadowColor = applyPropertyStyle$1('boxShadowColor', props, baseTheme$1);
    return "0 0 0 2px " + boxShadowColor;
};
/** Color */
var getColor$3 = function (props) {
    return applyPropertyStyle$1('color', props, baseTheme$1);
};
/** Cursor */
var getCursor$1 = function (_a) {
    var _b = _a.state, state = _b === void 0 ? 'default' : _b;
    return state === 'hover' || state === 'active' || state === 'selected'
        ? 'pointer'
        : state === 'disabled'
            ? 'not-allowed'
            : 'default';
};
/** Height */
var getHeight$1 = function (_a) {
    var _b = _a.spacing, spacing = _b === void 0 ? 'default' : _b;
    return spacing === 'compact'
        ? compactButtonHeight$1
        : spacing === 'none'
            ? 'auto'
            : buttonHeight$1;
};
/** Line Height */
var getLineHeight$2 = function (_a) {
    var _b = _a.spacing, spacing = _b === void 0 ? 'default' : _b;
    return spacing === 'compact'
        ? compactButtonHeight$1
        : spacing === 'none'
            ? 'inherit'
            : buttonHeight$1;
};
/** Padding */
var getPadding$4 = function (_a) {
    var _b = _a.spacing, spacing = _b === void 0 ? 'default' : _b;
    return spacing === 'none' ? 0 : "0 " + gridSize$5() + "px";
};
/** Text Decoration */
var getTextDecoration$1 = function (_a) {
    var _b = _a.appearance, appearance = _b === void 0 ? 'default' : _b, _c = _a.state, state = _c === void 0 ? 'default' : _c;
    return state === 'hover' && (appearance === 'link' || appearance === 'subtle-link')
        ? 'underline'
        : 'inherit';
};
/** Transition */
var getTransition$1 = function (_a) {
    var _b = _a.state, state = _b === void 0 ? 'default' : _b;
    return state === 'hover'
        ? 'background 0s ease-out, box-shadow 0.15s cubic-bezier(0.47, 0.03, 0.49, 1.38)'
        : 'background 0.1s ease-out, box-shadow 0.15s cubic-bezier(0.47, 0.03, 0.49, 1.38)';
};
/** Transition Duration */
var getTransitionDuration$1 = function (_a) {
    var _b = _a.state, state = _b === void 0 ? 'default' : _b;
    return state === 'active' ? '0s' : state === 'focus' ? '0s, 0.2s' : '0.1s, 0.15s';
};
/** Vertical Align */
var getVerticalAlign$1 = function (_a) {
    var _b = _a.spacing, spacing = _b === void 0 ? 'default' : _b;
    return spacing === 'none' ? 'baseline' : 'middle';
};
/** Width */
var getWidth$1 = function (_a) {
    var shouldFitContainer = _a.shouldFitContainer;
    return shouldFitContainer ? '100%' : 'auto';
};
/** Base styles */
var staticStyles$1 = {
    alignItems: 'baseline',
    borderWidth: 0,
    boxSizing: 'border-box',
    display: 'inline-flex',
    fontSize: 'inherit',
    fontStyle: 'normal',
    fontWeight: '500',
    maxWidth: '100%',
    outline: 'none !important',
    textAlign: 'center',
    textDecoration: 'none',
    whiteSpace: 'nowrap',
};
/**
 * BUTTON STYLES
 */
var getButtonStyles$1 = function (props) { return (__assign$4(__assign$4(__assign$4({}, staticStyles$1), { background: getBackground$4(props), borderRadius: borderRadius$5() + "px", boxShadow: getBoxShadow$1(props), color: getColor$3(props) + " !important", cursor: getCursor$1(props), height: getHeight$1(props), lineHeight: getLineHeight$2(props), padding: getPadding$4(props), transition: getTransition$1(props), transitionDuration: getTransitionDuration$1(props), verticalAlign: getVerticalAlign$1(props), width: getWidth$1(props), '&::-moz-focus-inner': {
        border: 0,
        margin: 0,
        padding: 0,
    }, '&:hover': {
        textDecoration: getTextDecoration$1(props),
    } }), (props.isLoading && { pointerEvents: 'none' }))); };
/**
 * SPINNER STYLES
 */
var getSpinnerStyles$1 = function () { return ({
    display: 'flex',
    position: 'absolute',
    left: '50%',
    top: '50%',
    transform: 'translate(-50%, -50%)',
}); };

var mapAttributesToState$1 = function (_a) {
    var _b = _a.isDisabled, isDisabled = _b === void 0 ? false : _b, _c = _a.isActive, isActive = _c === void 0 ? false : _c, _d = _a.isFocus, isFocus = _d === void 0 ? false : _d, _e = _a.isHover, isHover = _e === void 0 ? false : _e, _f = _a.isSelected, isSelected = _f === void 0 ? false : _f;
    if (isDisabled) {
        return 'disabled';
    }
    if (isSelected && isFocus) {
        return 'focusSelected';
    }
    if (isSelected) {
        return 'selected';
    }
    if (isActive) {
        return 'active';
    }
    if (isHover) {
        return 'hover';
    }
    if (isFocus) {
        return 'focus';
    }
    return 'default';
};
var filterProps$1 = function (
// @ts-ignore - createAnalyticsEvent is injected from WithAnalyticsEvents HOC
_a, type) {
    _a.createAnalyticsEvent; var props = __rest$1(_a, 
    // @ts-ignore - createAnalyticsEvent is injected from WithAnalyticsEvents HOC
    ["createAnalyticsEvent"]);
    if (type === 'span') {
        props.target; props.href; var rest = __rest$1(props, ["target", "href"]);
        return rest;
    }
    return props;
};
var getLoadingStyle$1 = function (isLoading) { return ({
    transition: 'opacity 0.3s',
    opacity: isLoading ? 0 : 1,
}); };
var composeRefs$1 = function () {
    var refs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        refs[_i] = arguments[_i];
    }
    return function (x) {
        refs
            .filter(function (r) { return !!r; })
            .forEach(function (ref) {
            if (typeof ref === 'function') {
                ref(x);
            }
            else {
                ref.current = x;
            }
        });
    };
};
/**
 * Convert a hex colour code to RGBA.
 * @param {String} hex Hex colour code.
 * @param {Number} alpha Optional alpha value (defaults to 1).
 */
function hex2rgba$1(hex, alpha) {
    if (alpha === void 0) { alpha = 1; }
    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {
        var colorArr = hex.substring(1).split('');
        if (colorArr.length === 3) {
            colorArr = [
                colorArr[0],
                colorArr[0],
                colorArr[1],
                colorArr[1],
                colorArr[2],
                colorArr[2],
            ];
        }
        var color = "0x" + colorArr.join('');
        // FIXME: `>>` operand can validly take a string value
        var r = (color >> 16) & 255;
        var g = (color >> 8) & 255;
        var b = color & 255;
        return "rgba(" + [r, g, b].join(',') + ", " + alpha + ")";
    }
    throw new Error('Bad Hex');
}

var fallbacks$1 = {
    background: { light: N20A, dark: DN70 },
    color: { light: N400, dark: DN400 },
    textDecoration: { light: 'none', dark: 'none' },
};
var baseTheme$1 = {
    // Default appearance
    background: {
        default: {
            default: { light: N20A, dark: DN70 },
            hover: { light: N30A, dark: DN60$1 },
            active: { light: hex2rgba$1(B75$2, 0.6), dark: B75$2 },
            disabled: { light: N20A, dark: DN70 },
            selected: { light: N700$1, dark: DN0 },
            focusSelected: { light: N700$1, dark: DN0 },
        },
        primary: {
            default: { light: B400, dark: B100$3 },
            hover: { light: B300$1, dark: B75$2 },
            active: { light: B500$1, dark: B200$1 },
            disabled: { light: N20A, dark: DN70 },
            selected: { light: N700$1, dark: DN0 },
            focusSelected: { light: N700$1, dark: DN0 },
        },
        warning: {
            default: { light: Y300$1, dark: Y300$1 },
            hover: { light: Y200$1, dark: Y200$1 },
            active: { light: Y400, dark: Y400 },
            disabled: { light: N20A, dark: DN70 },
            selected: { light: Y400, dark: Y400 },
            focusSelected: { light: Y400, dark: Y400 },
        },
        danger: {
            default: { light: R400$2, dark: R400$2 },
            hover: { light: R300$2, dark: R300$2 },
            active: { light: R500$1, dark: R500$1 },
            disabled: { light: N20A, dark: DN70 },
            selected: { light: R500$1, dark: R500$1 },
            focusSelected: { light: R500$1, dark: R500$1 },
        },
        link: {
            default: { light: 'none', dark: 'none' },
            selected: { light: N700$1, dark: N20$3 },
            focusSelected: { light: N700$1, dark: N20$3 },
        },
        subtle: {
            default: { light: 'none', dark: 'none' },
            hover: { light: N30A, dark: DN60$1 },
            active: { light: hex2rgba$1(B75$2, 0.6), dark: B75$2 },
            disabled: { light: 'none', dark: 'none' },
            selected: { light: N700$1, dark: DN0 },
            focusSelected: { light: N700$1, dark: DN0 },
        },
        'subtle-link': {
            default: { light: 'none', dark: 'none' },
            selected: { light: N700$1, dark: N20$3 },
            focusSelected: { light: N700$1, dark: N20$3 },
        },
    },
    boxShadowColor: {
        default: {
            focus: { light: B100$3, dark: B75$2 },
            focusSelected: {
                light: B100$3,
                dark: B75$2,
            },
        },
        primary: {
            focus: { light: B100$3, dark: B75$2 },
            focusSelected: {
                light: B100$3,
                dark: B75$2,
            },
        },
        warning: {
            focus: { light: Y500, dark: Y500 },
            focusSelected: { light: Y500, dark: Y500 },
        },
        danger: {
            focus: { light: R100$1, dark: R100$1 },
            focusSelected: { light: R100$1, dark: R100$1 },
        },
        link: {
            focus: { light: B100$3, dark: B75$2 },
            focusSelected: {
                light: B100$3,
                dark: B75$2,
            },
        },
        subtle: {
            focus: { light: B100$3, dark: B75$2 },
            focusSelected: {
                light: B100$3,
                dark: B75$2,
            },
        },
        'subtle-link': {
            focus: { light: B100$3, dark: B75$2 },
            focusSelected: {
                light: B100$3,
                dark: B75$2,
            },
        },
    },
    color: {
        default: {
            default: { light: N500$4, dark: DN400 },
            active: { light: B400, dark: B400 },
            disabled: { light: N70$3, dark: DN30$5 },
            selected: { light: N20$3, dark: DN400 },
            focusSelected: { light: N20$3, dark: DN400 },
        },
        primary: {
            default: { light: N0$7, dark: DN30$5 },
            disabled: { light: N70$3, dark: DN30$5 },
            selected: { light: N20$3, dark: DN400 },
            focusSelected: { light: N20$3, dark: DN400 },
        },
        warning: {
            default: { light: N800$2, dark: N800$2 },
            disabled: { light: N70$3, dark: DN30$5 },
            selected: { light: N800$2, dark: N800$2 },
            focusSelected: { light: N800$2, dark: N800$2 },
        },
        danger: {
            default: { light: N0$7, dark: N0$7 },
            disabled: { light: N70$3, dark: DN30$5 },
            selected: { light: N0$7, dark: N0$7 },
            focusSelected: { light: N0$7, dark: N0$7 },
        },
        link: {
            default: { light: B400, dark: B100$3 },
            hover: { light: B300$1, dark: B75$2 },
            active: { light: B500$1, dark: B200$1 },
            disabled: { light: N70$3, dark: DN100 },
            selected: { light: N20$3, dark: N700$1 },
            focusSelected: { light: N20$3, dark: N700$1 },
        },
        subtle: {
            default: { light: N500$4, dark: DN400 },
            active: { light: B400, dark: B400 },
            disabled: { light: N70$3, dark: DN100 },
            selected: { light: N20$3, dark: DN400 },
            focusSelected: { light: N20$3, dark: DN400 },
        },
        'subtle-link': {
            default: { light: N200$2, dark: DN400 },
            hover: { light: N90, dark: B50$1 },
            active: { light: N400, dark: DN300$1 },
            disabled: { light: N70$3, dark: DN100 },
            selected: { light: N20$3, dark: DN400 },
            focusSelected: { light: N20$3, dark: DN400 },
        },
    },
};
function applyPropertyStyle$1(property, _a, theme) {
    var _b = _a.appearance, appearance = _b === void 0 ? 'default' : _b, _c = _a.state, state = _c === void 0 ? 'default' : _c, _d = _a.mode, mode = _d === void 0 ? 'light' : _d;
    var propertyStyles = theme[property];
    if (!propertyStyles) {
        return 'initial';
    }
    // Check for relevant fallbacks
    if (!propertyStyles[appearance]) {
        if (!propertyStyles['default']) {
            return fallbacks$1[property][mode] ? fallbacks$1[property][mode] : 'initial';
        }
        appearance = 'default';
    }
    // If there is no 'state' key (ie, 'hover') defined for a given appearance,
    // return the 'default' state of that appearance.
    if (!propertyStyles[appearance][state]) {
        state = 'default';
    }
    var appearanceStyles = propertyStyles[appearance];
    var stateStyles = appearanceStyles[state];
    if (!stateStyles) {
        return 'inherit';
    }
    return stateStyles[mode] || appearanceStyles.default[mode];
}
var Theme$1 = createTheme$4(function (themeProps) { return ({
    buttonStyles: getButtonStyles$1(themeProps),
    spinnerStyles: getSpinnerStyles$1(),
}); });

var name$5="@atlaskit/button";var version$5="13.4.2";

var Content$9 = (function (_a) {
    var children = _a.children, followsIcon = _a.followsIcon, spacing = _a.spacing, isLoading = _a.isLoading, rest = __rest$1(_a, ["children", "followsIcon", "spacing", "isLoading"]);
    return (jsx("span", __assign$4({ css: __assign$4({ alignItems: followsIcon ? 'baseline' : 'center', alignSelf: followsIcon ? 'baseline' : 'center', flex: '1 1 auto', margin: spacing === 'none' ? 0 : "0 " + gridSize$5() / 2 + "px", maxWidth: '100%', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap' }, getLoadingStyle$1(isLoading)) }, rest), children));
});

var IconWrapper$1 = (function (_a) {
    var spacing = _a.spacing, icon = _a.icon, isOnlyChild = _a.isOnlyChild, isLoading = _a.isLoading, rest = __rest$1(_a, ["spacing", "icon", "isOnlyChild", "isLoading"]);
    return (jsx("span", __assign$4({ css: __assign$4({ alignSelf: 'center', display: 'flex', flexShrink: 0, lineHeight: 0, fontSize: 0, userSelect: 'none', margin: spacing === 'none'
                ? 0
                : isOnlyChild
                    ? "0 -" + gridSize$5() / 4 + "px"
                    : "0 " + gridSize$5() / 2 + "px" }, getLoadingStyle$1(isLoading)) }, rest), icon));
});

var InnerWrapper$1 = (function (_a) {
    var fit = _a.fit, children = _a.children, rest = __rest$1(_a, ["fit", "children"]);
    return (jsx("span", __assign$4({ css: __assign$4(__assign$4({ alignSelf: 'center', display: 'inline-flex', flexWrap: 'nowrap', maxWidth: '100%', position: 'relative' }, (fit && { width: '100%' })), (fit && { justifyContent: 'center' })) }, rest), children));
});

var appearances$1 = ['primary', 'danger'];
var LoadingSpinner$2 = /** @class */ (function (_super) {
    __extends$7(LoadingSpinner, _super);
    function LoadingSpinner() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.invertSpinner = function () {
            var _a = _this.props, appearance = _a.appearance, isSelected = _a.isSelected, isDisabled = _a.isDisabled;
            if (isSelected) {
                return true;
            }
            if (isDisabled) {
                return false;
            }
            if (appearance !== undefined) {
                if (appearances$1.indexOf(appearance) !== -1) {
                    return true;
                }
            }
            return false;
        };
        return _this;
    }
    LoadingSpinner.prototype.render = function () {
        var _a = this.props, spacing = _a.spacing, styles = _a.styles;
        var spinnerSize = spacing !== 'default' ? 'small' : 'medium';
        return (jsx("div", { css: styles },
            jsx(Spinner$3, { size: spinnerSize, appearance: this.invertSpinner() ? 'invert' : 'inherit' })));
    };
    return LoadingSpinner;
}(React__default.Component));
var LoadingSpinner$3 = LoadingSpinner$2;

var Button$2 = /** @class */ (function (_super) {
    __extends$7(Button, _super);
    function Button() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // ref can be a range of things because we render button, a, span or other React components
        _this.button = React__default.createRef();
        // Makes sure we don't call ref every render.
        _this.getComposedRefs = memoizeOne(composeRefs$1);
        _this.state = {
            isActive: false,
            isFocus: false,
            isHover: false,
        };
        _this.isInteractive = function () { return !_this.props.isDisabled && !_this.props.isLoading; };
        _this.onMouseEnter = function (e) {
            _this.setState({ isHover: true });
            if (_this.props.onMouseEnter) {
                _this.props.onMouseEnter(e);
            }
        };
        _this.onMouseLeave = function (e) {
            _this.setState({ isHover: false, isActive: false });
            if (_this.props.onMouseLeave) {
                _this.props.onMouseLeave(e);
            }
        };
        _this.onMouseDown = function (e) {
            e.preventDefault();
            _this.setState({ isActive: true });
            if (_this.props.onMouseDown) {
                _this.props.onMouseDown(e);
            }
        };
        _this.onMouseUp = function (e) {
            _this.setState({ isActive: false });
            if (_this.props.onMouseUp) {
                _this.props.onMouseUp(e);
            }
        };
        _this.onFocus = function (event) {
            _this.setState({ isFocus: true });
            if (_this.props.onFocus) {
                _this.props.onFocus(event);
            }
        };
        _this.onBlur = function (event) {
            _this.setState({ isFocus: false });
            if (_this.props.onBlur) {
                _this.props.onBlur(event);
            }
        };
        _this.getElement = function () {
            var _a = _this.props, href = _a.href, isDisabled = _a.isDisabled;
            if (href) {
                return isDisabled ? 'span' : 'a';
            }
            return 'button';
        };
        // Swallow click events when the button is disabled
        // to prevent inner child clicks bubbling up.
        _this.onInnerClick = function (e) {
            if (!_this.isInteractive()) {
                e.stopPropagation();
            }
            return true;
        };
        return _this;
    }
    Button.prototype.componentDidMount = function () {
        if (this.props.autoFocus && this.button instanceof HTMLButtonElement) {
            this.button.focus();
        }
    };
    Button.prototype.render = function () {
        var _this = this;
        var _a = this.props, _b = _a.appearance, appearance = _b === void 0 ? 'default' : _b, children = _a.children, className = _a.className, CustomComponent = _a.component, consumerRef = _a.consumerRef, iconAfter = _a.iconAfter, iconBefore = _a.iconBefore, _c = _a.isDisabled, isDisabled = _c === void 0 ? false : _c, _d = _a.isLoading, isLoading = _d === void 0 ? false : _d, _e = _a.isSelected, isSelected = _e === void 0 ? false : _e, _f = _a.shouldFitContainer, shouldFitContainer = _f === void 0 ? false : _f, _g = _a.spacing, spacing = _g === void 0 ? 'default' : _g, _h = _a.theme, theme = _h === void 0 ? function (current, props) { return current(props); } : _h, testId = _a.testId, rest = __rest$1(_a, ["appearance", "children", "className", "component", "consumerRef", "iconAfter", "iconBefore", "isDisabled", "isLoading", "isSelected", "shouldFitContainer", "spacing", "theme", "testId"]);
        var attributes = __assign$4(__assign$4({}, this.state), { isSelected: isSelected, isDisabled: isDisabled });
        var StyledButton = CustomComponent || this.getElement();
        var iconIsOnlyChild = !!((iconBefore && !iconAfter && !children) ||
            (iconAfter && !iconBefore && !children));
        var specifiers = function (styles) {
            if (StyledButton === 'a') {
                return {
                    'a&': styles,
                };
            }
            else if (StyledButton === CustomComponent) {
                return {
                    '&, a&, &:hover, &:active, &:focus': styles,
                };
            }
            return styles;
        };
        return (jsx(Theme$1.Provider, { value: theme },
            jsx(GlobalTheme$3.Consumer, null, function (_a) {
                var mode = _a.mode;
                return (jsx(Theme$1.Consumer, __assign$4({ mode: mode, state: mapAttributesToState$1(attributes), iconIsOnlyChild: iconIsOnlyChild }, _this.props), function (_a) {
                    var buttonStyles = _a.buttonStyles, spinnerStyles = _a.spinnerStyles;
                    return (jsx(StyledButton, __assign$4({}, filterProps$1(rest, StyledButton), { "data-testid": testId, ref: _this.getComposedRefs(_this.button, consumerRef), onMouseEnter: _this.onMouseEnter, onMouseLeave: _this.onMouseLeave, onMouseDown: _this.onMouseDown, onMouseUp: _this.onMouseUp, onFocus: _this.onFocus, onBlur: _this.onBlur, disabled: isDisabled, className: className, css: specifiers(buttonStyles) }),
                        jsx(InnerWrapper$1, { onClick: _this.onInnerClick, fit: !!shouldFitContainer },
                            isLoading && (jsx(LoadingSpinner$3, { spacing: spacing, appearance: appearance, isSelected: isSelected, isDisabled: isDisabled, styles: spinnerStyles })),
                            iconBefore && (jsx(IconWrapper$1, { isLoading: isLoading, spacing: spacing, isOnlyChild: iconIsOnlyChild, icon: iconBefore })),
                            children && (jsx(Content$9, { isLoading: isLoading, followsIcon: !!iconBefore, spacing: spacing }, children)),
                            iconAfter && (jsx(IconWrapper$1, { isLoading: isLoading, spacing: spacing, isOnlyChild: iconIsOnlyChild, icon: iconAfter })))));
                }));
            })));
    };
    Button.defaultProps = {
        appearance: 'default',
        autoFocus: false,
        isDisabled: false,
        isLoading: false,
        isSelected: false,
        shouldFitContainer: false,
        spacing: 'default',
        type: 'button',
    };
    return Button;
}(React__default.Component));
var createAndFireEventOnAtlaskit$b = createAndFireEvent$4('atlaskit');
var ButtonWithRef$1 = React__default.forwardRef(function (props, ref) { return jsx(Button$2, __assign$4({}, props, { consumerRef: ref })); });
ButtonWithRef$1.displayName = 'Button';
var Button$3 = withAnalyticsContext$9({
    componentName: 'button',
    packageName: name$5,
    packageVersion: version$5,
})(withAnalyticsEvents$9({
    onClick: createAndFireEventOnAtlaskit$b({
        action: 'clicked',
        actionSubject: 'button',
        attributes: {
            componentName: 'button',
            packageName: name$5,
            packageVersion: version$5,
        },
    }),
})(ButtonWithRef$1));

var JustifyShim = function (props) { return React__default.createElement("span", __assign$4({}, props)); };
var ModalFooter = /** @class */ (function (_super) {
    __extends$7(ModalFooter, _super);
    function ModalFooter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ModalFooter.prototype.render = function () {
        var _a = this.props, actions = _a.actions, appearance = _a.appearance, component = _a.component, onClose = _a.onClose, showKeyline = _a.showKeyline;
        var warning = 'You can provide `component` OR `actions`, not both.';
        if (!component && !actions)
            return null;
        if (component && actions) {
            console.warn(warning); // eslint-disable-line no-console
            return null;
        }
        if (component) {
            return React__default.createElement(component, {
                appearance: appearance,
                onClose: onClose,
                showKeyline: showKeyline,
            });
        }
        return (React__default.createElement(Footer$1, { showKeyline: showKeyline },
            React__default.createElement(JustifyShim, null),
            React__default.createElement(Actions, null, actions
                ? actions.map(function (_a, index) {
                    var text = _a.text, rest = __rest$1(_a, ["text"]);
                    var variant = index !== 0 ? 'subtle' : appearance || 'primary';
                    return (
                    // Index used as text can be a ReactNode
                    React__default.createElement(ActionItem, { key: index },
                        React__default.createElement(Button$3, __assign$4({ appearance: variant }, rest), text)));
                })
                : null)));
    };
    return ModalFooter;
}(React__default.Component));
var Footer = ModalFooter;

var error = {};

Object.defineProperty(error, "__esModule", {
  value: true
});
var default_1$8 = error.default = void 0;

var _react$b = _interopRequireDefault$a(React__default);

var _Icon$4 = _interopRequireDefault$a(Icon$7);

function _interopRequireDefault$a(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends$7() { _extends$7 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7.apply(this, arguments); }

var ErrorIcon = function ErrorIcon(props) {
  return _react$b.default.createElement(_Icon$4.default, _extends$7({
    dangerouslySetGlyph: "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" focusable=\"false\" role=\"presentation\"><g fill-rule=\"evenodd\"><path d=\"M13.416 4.417a2.002 2.002 0 0 0-2.832 0l-6.168 6.167a2.002 2.002 0 0 0 0 2.833l6.168 6.167a2.002 2.002 0 0 0 2.832 0l6.168-6.167a2.002 2.002 0 0 0 0-2.833l-6.168-6.167z\" fill=\"currentColor\"/><path d=\"M12 14a1 1 0 0 1-1-1V8a1 1 0 0 1 2 0v5a1 1 0 0 1-1 1m0 3a1 1 0 0 1 0-2 1 1 0 0 1 0 2\" fill=\"inherit\"/></g></svg>"
  }, props));
};

ErrorIcon.displayName = 'ErrorIcon';
var _default$9 = ErrorIcon;
default_1$8 = error.default = _default$9;

var warning$4 = {};

Object.defineProperty(warning$4, "__esModule", {
  value: true
});
var default_1$7 = warning$4.default = void 0;

var _react$a = _interopRequireDefault$9(React__default);

var _Icon$3 = _interopRequireDefault$9(Icon$7);

function _interopRequireDefault$9(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends$6() { _extends$6 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6.apply(this, arguments); }

var WarningIcon$2 = function WarningIcon(props) {
  return _react$a.default.createElement(_Icon$3.default, _extends$6({
    dangerouslySetGlyph: "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" focusable=\"false\" role=\"presentation\"><g fill-rule=\"evenodd\"><path d=\"M12.938 4.967c-.518-.978-1.36-.974-1.876 0L3.938 18.425c-.518.978-.045 1.771 1.057 1.771h14.01c1.102 0 1.573-.797 1.057-1.771L12.938 4.967z\" fill=\"currentColor\"/><path d=\"M12 15a1 1 0 0 1-1-1V9a1 1 0 0 1 2 0v5a1 1 0 0 1-1 1m0 3a1 1 0 0 1 0-2 1 1 0 0 1 0 2\" fill=\"inherit\"/></g></svg>"
  }, props));
};

WarningIcon$2.displayName = 'WarningIcon';
var _default$8 = WarningIcon$2;
default_1$7 = warning$4.default = _default$8;

var TitleIcon = function (_a) {
    var appearance = _a.appearance;
    if (!appearance)
        return null;
    var Icon = appearance === 'danger' ? default_1$8 : default_1$7;
    return (jsx("span", { css: titleIconWrapperStyles(appearance) },
        jsx(Icon, { label: appearance + " icon" })));
};
var ModalHeader = /** @class */ (function (_super) {
    __extends$7(ModalHeader, _super);
    function ModalHeader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ModalHeader.prototype.render = function () {
        var _a = this.props, id = _a.id, appearance = _a.appearance, component = _a.component, heading = _a.heading, onClose = _a.onClose, showKeyline = _a.showKeyline, isHeadingMultiline = _a.isHeadingMultiline, testId = _a.testId;
        var warning = 'You can provide `component` OR `heading`, not both.';
        if (!component && !heading)
            return null;
        if (component && heading) {
            console.warn(warning); // eslint-disable-line no-console
            return null;
        }
        if (component) {
            return React__default.createElement(component, {
                id: id,
                testId: testId,
                appearance: appearance,
                onClose: onClose,
                showKeyline: showKeyline,
                isHeadingMultiline: isHeadingMultiline,
            });
        }
        return (jsx(Header$1, { showKeyline: showKeyline },
            jsx(Title, null,
                jsx(TitleIcon, { appearance: appearance }),
                jsx(TitleText, { isHeadingMultiline: isHeadingMultiline, id: id, "data-testid": testId && testId + "-heading" }, heading))));
    };
    ModalHeader.defaultProps = {
        isHeadingMultiline: true,
    };
    return ModalHeader;
}(React__default.Component));
var Header = ModalHeader;

function getInitialState() {
    return {
        showFooterKeyline: false,
        showHeaderKeyline: false,
        showContentFocus: false,
        tabbableElements: [],
    };
}
var Content$7 = /** @class */ (function (_super) {
    __extends$7(Content, _super);
    function Content() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.escapeIsHeldDown = false;
        _this._isMounted = false;
        _this.scrollContainer = null;
        _this.state = getInitialState();
        _this.determineKeylines = rafSchedule(function () {
            if (!_this.scrollContainer)
                return;
            var _a = _this.scrollContainer, scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;
            var scrollableDistance = scrollHeight - clientHeight;
            var showHeaderKeyline = scrollTop > keylineHeight;
            var showFooterKeyline = scrollTop <= scrollableDistance - keylineHeight;
            var showContentFocus = scrollHeight > clientHeight;
            _this.setState({
                showHeaderKeyline: showHeaderKeyline,
                showFooterKeyline: showFooterKeyline,
                showContentFocus: showContentFocus,
            });
        });
        _this.getScrollContainer = function (ref) {
            if (!ref)
                return;
            _this.scrollContainer = ref;
        };
        _this.handleKeyUp = function () {
            _this.escapeIsHeldDown = false;
        };
        _this.handleKeyDown = function (event) {
            var _a = _this.props, onClose = _a.onClose, shouldCloseOnEscapePress = _a.shouldCloseOnEscapePress, _b = _a.stackIndex, stackIndex = _b === void 0 ? 0 : _b;
            // avoid consumers accidentally closing multiple modals if they hold escape.
            if (_this.escapeIsHeldDown)
                return;
            if (event.key === 'Escape' || event.key === 'Esc')
                _this.escapeIsHeldDown = true;
            // only the foremost modal should be interactive.
            if (!_this._isMounted || stackIndex > 0)
                return;
            switch (event.key) {
                case 'Esc':
                case 'Escape':
                    if (shouldCloseOnEscapePress)
                        onClose(event);
                    break;
            }
        };
        _this.handleStackChange = function (stackIndex) {
            var onStackChange = _this.props.onStackChange;
            if (onStackChange)
                onStackChange(stackIndex);
        };
        return _this;
    }
    Content.prototype.componentDidMount = function () {
        this._isMounted = true;
        document.addEventListener('keydown', this.handleKeyDown, false);
        document.addEventListener('keyup', this.handleKeyUp, false);
        if (this.scrollContainer) {
            var capturedScrollContainer = this.scrollContainer;
            window.addEventListener('resize', this.determineKeylines, false);
            capturedScrollContainer.addEventListener('scroll', this.determineKeylines, false);
            this.determineKeylines();
        }
        /* eslint-disable no-console */
        // Check for deprecated props
        if (this.props.header)
            console.warn("@atlaskit/modal-dialog: Deprecation warning - Use of the header prop in ModalDialog is deprecated. Please compose your ModalDialog using the 'components' prop instead");
        if (this.props.footer)
            console.warn("@atlaskit/modal-dialog: Deprecation warning - Use of the footer prop in ModalDialog is deprecated. Please compose your ModalDialog using the 'components' prop instead");
        if (this.props.body)
            console.warn("@atlaskit/modal-dialog: Deprecation warning - Use of the body prop in ModalDialog is deprecated. Please compose your ModalDialog using the 'components' prop instead");
        // Check that custom body components have used ForwardRef to attach to a DOM element
        if (this.props.components.Body) {
            if (!(this.scrollContainer instanceof HTMLElement)) {
                console.warn('@atlaskit/modal-dialog: Warning - Ref must attach to a DOM element; check you are using forwardRef and attaching the ref to an appropriate element. Check the examples for more details.');
            }
        }
        /* eslint-enable no-console */
    };
    Content.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {
        var stackIndex = this.props.stackIndex;
        // update focus scope and let consumer know when stack index has changed
        if (nextProps.stackIndex && nextProps.stackIndex !== stackIndex) {
            this.handleStackChange(nextProps.stackIndex);
        }
    };
    Content.prototype.componentWillUnmount = function () {
        this._isMounted = false;
        document.removeEventListener('keydown', this.handleKeyDown, false);
        document.removeEventListener('keyup', this.handleKeyUp, false);
        if (this.scrollContainer) {
            var capturedScrollContainer = this.scrollContainer;
            window.removeEventListener('resize', this.determineKeylines, false);
            capturedScrollContainer.removeEventListener('scroll', this.determineKeylines, false);
        }
    };
    Content.prototype.render = function () {
        var _a = this.props, actions = _a.actions, appearance = _a.appearance, DeprecatedBody = _a.body, children = _a.children, components = _a.components, footer = _a.footer, header = _a.header, heading = _a.heading, isChromeless = _a.isChromeless, isHeadingMultiline = _a.isHeadingMultiline, onClose = _a.onClose, shouldScroll = _a.shouldScroll, testId = _a.testId, headingId = _a.headingId;
        var _b = this.state, showFooterKeyline = _b.showFooterKeyline, showHeaderKeyline = _b.showHeaderKeyline, showContentFocus = _b.showContentFocus;
        var _c = components.Container, Container = _c === void 0 ? 'div' : _c, CustomBody = components.Body;
        var Body$1 = CustomBody || DeprecatedBody || Body;
        return (jsx(Container, { css: wrapperStyles, "data-testid": testId },
            isChromeless ? (children) : (jsx(React__default.Fragment, null,
                jsx(Header, { id: headingId, appearance: appearance, component: components.Header ? components.Header : header, heading: heading, onClose: onClose, isHeadingMultiline: isHeadingMultiline, showKeyline: showHeaderKeyline, testId: testId }),
                jsx(Body$1, __assign$4({ tabIndex: showContentFocus ? 0 : undefined, css: bodyStyles(shouldScroll) }, (!Body$1.hasOwnProperty('styledComponentId')
                    ? { ref: this.getScrollContainer }
                    : { innerRef: this.getScrollContainer })), children),
                jsx(Footer, { actions: actions, appearance: appearance, component: components.Footer ? components.Footer : footer, onClose: onClose, showKeyline: showFooterKeyline }))),
            jsx(ScrollLock$1, null)));
    };
    Content.defaultProps = {
        autoFocus: false,
        components: {},
        isChromeless: false,
        stackIndex: 0,
        isHeadingMultiline: true,
    };
    return Content;
}(React__default.Component));
var Content$8 = Content$7;

function _inheritsLoose$1(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf$6(subClass, superClass);
}

var toArray = function toArray(a) {
  var ret = Array(a.length);
  for (var i = 0; i < a.length; ++i) {
    ret[i] = a[i];
  }
  return ret;
};

var arrayFind = function arrayFind(array, search) {
  return array.filter(function (a) {
    return a === search;
  })[0];
};

var asArray = function asArray(a) {
  return Array.isArray(a) ? a : [a];
};

var tabSort = function tabSort(a, b) {
  var tabDiff = a.tabIndex - b.tabIndex;
  var indexDiff = a.index - b.index;

  if (tabDiff) {
    if (!a.tabIndex) return 1;
    if (!b.tabIndex) return -1;
  }

  return tabDiff || indexDiff;
};

var orderByTabIndex = function orderByTabIndex(nodes, filterNegative, keepGuards) {
  return toArray(nodes).map(function (node, index) {
    return {
      node: node,
      index: index,
      tabIndex: keepGuards && node.tabIndex === -1 ? (node.dataset || {}).focusGuard ? 0 : -1 : node.tabIndex
    };
  }).filter(function (data) {
    return !filterNegative || data.tabIndex >= 0;
  }).sort(tabSort);
};

var tabbables = ['button:enabled:not([readonly])', 'select:enabled:not([readonly])', 'textarea:enabled:not([readonly])', 'input:enabled:not([readonly])', 'a[href]', 'area[href]', 'iframe', 'object', 'embed', '[tabindex]', '[contenteditable]', '[autofocus]'];

var FOCUS_GROUP = 'data-focus-lock';
var FOCUS_DISABLED = 'data-focus-lock-disabled';
var FOCUS_ALLOW = 'data-no-focus-lock';
var FOCUS_AUTO = 'data-autofocus-inside';

var queryTabbables = tabbables.join(',');
var queryGuardTabbables = queryTabbables + ', [data-focus-guard]';

var getFocusables = function getFocusables(parents, withGuards) {
  return parents.reduce(function (acc, parent) {
    return acc.concat(
    // add all tabbables inside
    toArray(parent.querySelectorAll(withGuards ? queryGuardTabbables : queryTabbables)),
    // add if node is tabble itself
    parent.parentNode ? toArray(parent.parentNode.querySelectorAll(tabbables.join(','))).filter(function (node) {
      return node === parent;
    }) : []);
  }, []);
};

var getParentAutofocusables = function getParentAutofocusables(parent) {
  var parentFocus = parent.querySelectorAll('[' + FOCUS_AUTO + ']');
  return toArray(parentFocus).map(function (node) {
    return getFocusables([node]);
  }).reduce(function (acc, nodes) {
    return acc.concat(nodes);
  }, []);
};

var isElementHidden = function isElementHidden(computedStyle) {
  if (!computedStyle || !computedStyle.getPropertyValue) {
    return false;
  }
  return computedStyle.getPropertyValue('display') === 'none' || computedStyle.getPropertyValue('visibility') === 'hidden';
};

var isVisible = function isVisible(node) {
  return !node || node === document || node.nodeType === Node.DOCUMENT_NODE || !isElementHidden(window.getComputedStyle(node, null)) && isVisible(node.parentNode);
};

var notHiddenInput = function notHiddenInput(node) {
  return !((node.tagName === 'INPUT' || node.tagName === 'BUTTON') && (node.type === 'hidden' || node.disabled));
};

var getParents = function getParents(node) {
  var parents = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

  parents.push(node);
  if (node.parentNode) {
    getParents(node.parentNode, parents);
  }
  return parents;
};

var getCommonParent = function getCommonParent(nodea, nodeb) {
  var parentsA = getParents(nodea);
  var parentsB = getParents(nodeb);

  for (var i = 0; i < parentsA.length; i += 1) {
    var currentParent = parentsA[i];
    if (parentsB.indexOf(currentParent) >= 0) {
      return currentParent;
    }
  }
  return false;
};

var filterFocusable = function filterFocusable(nodes) {
  return toArray(nodes).filter(function (node) {
    return isVisible(node);
  }).filter(function (node) {
    return notHiddenInput(node);
  });
};

var getTabbableNodes = function getTabbableNodes(topNodes, withGuards) {
  return orderByTabIndex(filterFocusable(getFocusables(topNodes, withGuards)), true, withGuards);
};

var getAllTabbableNodes = function getAllTabbableNodes(topNodes) {
  return orderByTabIndex(filterFocusable(getFocusables(topNodes)), false);
};

var parentAutofocusables = function parentAutofocusables(topNode) {
  return filterFocusable(getParentAutofocusables(topNode));
};

var isRadio = function isRadio(node) {
  return node.tagName === 'INPUT' && node.type === 'radio';
};

var findSelectedRadio = function findSelectedRadio(node, nodes) {
  return nodes.filter(isRadio).filter(function (el) {
    return el.name === node.name;
  }).filter(function (el) {
    return el.checked;
  })[0] || node;
};

var pickFirstFocus = function pickFirstFocus(nodes) {
  if (nodes[0] && nodes.length > 1) {
    if (isRadio(nodes[0]) && nodes[0].name) {
      return findSelectedRadio(nodes[0], nodes);
    }
  }
  return nodes[0];
};

var pickFocusable = function pickFocusable(nodes, index) {
  if (nodes.length > 1) {
    if (isRadio(nodes[index]) && nodes[index].name) {
      return nodes.indexOf(findSelectedRadio(nodes[index], nodes));
    }
  }
  return index;
};

var pickFirstFocus$1 = pickFirstFocus;

var _typeof$2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var filterNested = function filterNested(nodes) {
  var l = nodes.length;
  for (var i = 0; i < l; i += 1) {
    var _loop = function _loop(j) {
      if (i !== j) {
        if (nodes[i].contains(nodes[j])) {
          return {
            v: filterNested(nodes.filter(function (x) {
              return x !== nodes[j];
            }))
          };
        }
      }
    };

    for (var j = 0; j < l; j += 1) {
      var _ret = _loop(j);

      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof$2(_ret)) === "object") return _ret.v;
    }
  }
  return nodes;
};

var getTopParent = function getTopParent(node) {
  return node.parentNode ? getTopParent(node.parentNode) : node;
};

var getAllAffectedNodes = function getAllAffectedNodes(node) {
  var nodes = asArray(node);
  return nodes.filter(Boolean).reduce(function (acc, currentNode) {
    var group = currentNode.getAttribute(FOCUS_GROUP);
    acc.push.apply(acc, group ? filterNested(toArray(getTopParent(currentNode).querySelectorAll('[' + FOCUS_GROUP + '="' + group + '"]:not([' + FOCUS_DISABLED + '="disabled"])'))) : [currentNode]);
    return acc;
  }, []);
};

var getAllAffectedNodes$1 = getAllAffectedNodes;

var findAutoFocused = function findAutoFocused(autoFocusables) {
  return function (node) {
    return !!node.autofocus || node.dataset && !!node.dataset.autofocus || autoFocusables.indexOf(node) >= 0;
  };
};

var isGuard = function isGuard(node) {
  return node && node.dataset && node.dataset.focusGuard;
};
var notAGuard = function notAGuard(node) {
  return !isGuard(node);
};

var newFocus = function newFocus(innerNodes, outerNodes, activeElement, lastNode, autoFocused) {
  var cnt = innerNodes.length;
  var firstFocus = innerNodes[0];
  var lastFocus = innerNodes[cnt - 1];
  var isOnGuard = isGuard(activeElement);

  // focus is inside
  if (innerNodes.indexOf(activeElement) >= 0) {
    return undefined;
  }

  var activeIndex = outerNodes.indexOf(activeElement);
  var lastIndex = outerNodes.indexOf(lastNode || activeIndex);
  var lastNodeInside = innerNodes.indexOf(lastNode);
  var indexDiff = activeIndex - lastIndex;
  var firstNodeIndex = outerNodes.indexOf(firstFocus);
  var lastNodeIndex = outerNodes.indexOf(lastFocus);

  var returnFirstNode = pickFocusable(innerNodes, 0);
  var returnLastNode = pickFocusable(innerNodes, cnt - 1);

  // new focus
  if (activeIndex === -1 || lastNodeInside === -1) {
    return innerNodes.indexOf(autoFocused && autoFocused.length ? pickFirstFocus$1(autoFocused) : pickFirstFocus$1(innerNodes));
  }
  // old focus
  if (!indexDiff && lastNodeInside >= 0) {
    return lastNodeInside;
  }
  // first element
  if (activeIndex <= firstNodeIndex && isOnGuard && Math.abs(indexDiff) > 1) {
    return returnLastNode;
  }
  // last element
  if (activeIndex >= firstNodeIndex && isOnGuard && Math.abs(indexDiff) > 1) {
    return returnFirstNode;
  }
  // jump out, but not on the guard
  if (indexDiff && Math.abs(indexDiff) > 1) {
    return lastNodeInside;
  }
  // focus above lock
  if (activeIndex <= firstNodeIndex) {
    return returnLastNode;
  }
  // focus below lock
  if (activeIndex > lastNodeIndex) {
    return returnFirstNode;
  }
  // index is inside tab order, but outside Lock
  if (indexDiff) {
    if (Math.abs(indexDiff) > 1) {
      return lastNodeInside;
    }
    return (cnt + lastNodeInside + indexDiff) % cnt;
  }
  // do nothing
  return undefined;
};

var getTopCommonParent = function getTopCommonParent(baseActiveElement, leftEntry, rightEntries) {
  var activeElements = asArray(baseActiveElement);
  var leftEntries = asArray(leftEntry);
  var activeElement = activeElements[0];
  var topCommon = null;
  leftEntries.filter(Boolean).forEach(function (entry) {
    topCommon = getCommonParent(topCommon || entry, entry) || topCommon;
    rightEntries.filter(Boolean).forEach(function (subEntry) {
      var common = getCommonParent(activeElement, subEntry);
      if (common) {
        if (!topCommon || common.contains(topCommon)) {
          topCommon = common;
        } else {
          topCommon = getCommonParent(common, topCommon);
        }
      }
    });
  });
  return topCommon;
};

var allParentAutofocusables = function allParentAutofocusables(entries) {
  return entries.reduce(function (acc, node) {
    return acc.concat(parentAutofocusables(node));
  }, []);
};

var reorderNodes = function reorderNodes(srcNodes, dstNodes) {
  var remap = new Map();
  // no Set(dstNodes) for IE11 :(
  dstNodes.forEach(function (entity) {
    return remap.set(entity.node, entity);
  });
  // remap to dstNodes
  return srcNodes.map(function (node) {
    return remap.get(node);
  }).filter(Boolean);
};

var getFocusabledIn = function getFocusabledIn(topNode) {
  var entries = getAllAffectedNodes$1(topNode).filter(notAGuard);
  var commonParent = getTopCommonParent(topNode, topNode, entries);
  var outerNodes = getTabbableNodes([commonParent], true);
  var innerElements = getTabbableNodes(entries).filter(function (_ref) {
    var node = _ref.node;
    return notAGuard(node);
  }).map(function (_ref2) {
    var node = _ref2.node;
    return node;
  });

  return outerNodes.map(function (_ref3) {
    var node = _ref3.node,
        index = _ref3.index;
    return {
      node: node,
      index: index,
      lockItem: innerElements.indexOf(node) >= 0,
      guard: isGuard(node)
    };
  });
};

var getFocusMerge = function getFocusMerge(topNode, lastNode) {
  var activeElement = document && document.activeElement;
  var entries = getAllAffectedNodes$1(topNode).filter(notAGuard);

  var commonParent = getTopCommonParent(activeElement || topNode, topNode, entries);

  var innerElements = getTabbableNodes(entries).filter(function (_ref4) {
    var node = _ref4.node;
    return notAGuard(node);
  });

  if (!innerElements[0]) {
    innerElements = getAllTabbableNodes(entries).filter(function (_ref5) {
      var node = _ref5.node;
      return notAGuard(node);
    });
    if (!innerElements[0]) {
      return undefined;
    }
  }

  var outerNodes = getTabbableNodes([commonParent]).map(function (_ref6) {
    var node = _ref6.node;
    return node;
  });
  var orderedInnerElements = reorderNodes(outerNodes, innerElements);
  var innerNodes = orderedInnerElements.map(function (_ref7) {
    var node = _ref7.node;
    return node;
  });

  var newId = newFocus(innerNodes, outerNodes, activeElement, lastNode, innerNodes.filter(findAutoFocused(allParentAutofocusables(entries))));

  if (newId === undefined) {
    return newId;
  }
  return orderedInnerElements[newId];
};

var getFocusMerge$1 = getFocusMerge;

var focusInFrame = function focusInFrame(frame) {
  return frame === document.activeElement;
};

var focusInsideIframe = function focusInsideIframe(topNode) {
  return !!arrayFind(toArray(topNode.querySelectorAll('iframe')), focusInFrame);
};

var focusInside = function focusInside(topNode) {
  var activeElement = document && document.activeElement;

  if (!activeElement || activeElement.dataset && activeElement.dataset.focusGuard) {
    return false;
  }
  return getAllAffectedNodes$1(topNode).reduce(function (result, node) {
    return result || node.contains(activeElement) || focusInsideIframe(node);
  }, false);
};

var focusInside$1 = focusInside;

var focusIsHidden = function focusIsHidden() {
  return document && toArray(document.querySelectorAll('[' + FOCUS_ALLOW + ']')).some(function (node) {
    return node.contains(document.activeElement);
  });
};

var focusIsHidden$1 = focusIsHidden;

var focusOn = function focusOn(target) {
  target.focus();
  if (target.contentWindow) {
    target.contentWindow.focus();
  }
};

var guardCount = 0;
var lockDisabled = false;

var setFocus = (function (topNode, lastNode) {
  var focusable = getFocusMerge$1(topNode, lastNode);

  if (lockDisabled) {
    return;
  }

  if (focusable) {
    if (guardCount > 2) {
      // eslint-disable-next-line no-console
      console.error('FocusLock: focus-fighting detected. Only one focus management system could be active. ' + 'See https://github.com/theKashey/focus-lock/#focus-fighting');
      lockDisabled = true;
      setTimeout(function () {
        lockDisabled = false;
      }, 1);
      return;
    }
    guardCount++;
    focusOn(focusable.node);
    guardCount--;
  }
});

function withSideEffect(reducePropsToState, handleStateChangeOnClient) {
  if (process.env.NODE_ENV !== "production") {
    if (typeof reducePropsToState !== 'function') {
      throw new Error('Expected reducePropsToState to be a function.');
    }

    if (typeof handleStateChangeOnClient !== 'function') {
      throw new Error('Expected handleStateChangeOnClient to be a function.');
    }
  }

  function getDisplayName(WrappedComponent) {
    return WrappedComponent.displayName || WrappedComponent.name || 'Component';
  }

  return function wrap(WrappedComponent) {
    if (process.env.NODE_ENV !== "production") {
      if (typeof WrappedComponent !== 'function') {
        throw new Error('Expected WrappedComponent to be a React component.');
      }
    }

    var mountedInstances = [];
    var state;

    function emitChange() {
      state = reducePropsToState(mountedInstances.map(function (instance) {
        return instance.props;
      }));
      handleStateChangeOnClient(state);
    }

    var SideEffect = /*#__PURE__*/function (_PureComponent) {
      _inheritsLoose$1(SideEffect, _PureComponent);

      function SideEffect() {
        return _PureComponent.apply(this, arguments) || this;
      }

      // Try to use displayName of wrapped component
      SideEffect.peek = function peek() {
        return state;
      };

      var _proto = SideEffect.prototype;

      _proto.componentDidMount = function componentDidMount() {
        mountedInstances.push(this);
        emitChange();
      };

      _proto.componentDidUpdate = function componentDidUpdate() {
        emitChange();
      };

      _proto.componentWillUnmount = function componentWillUnmount() {
        var index = mountedInstances.indexOf(this);
        mountedInstances.splice(index, 1);
        emitChange();
      };

      _proto.render = function render() {
        return /*#__PURE__*/React__default.createElement(WrappedComponent, this.props);
      };

      return SideEffect;
    }(PureComponent);

    _defineProperty$3(SideEffect, "displayName", "SideEffect(" + getDisplayName(WrappedComponent) + ")");

    return SideEffect;
  };
}

function deferAction(action) {
  // Hidding setImmediate from Webpack to avoid inserting polyfill
  var setImmediate = window.setImmediate;

  if (typeof setImmediate !== 'undefined') {
    setImmediate(action);
  } else {
    setTimeout(action, 1);
  }
}

var focusOnBody = function focusOnBody() {
  return document && document.activeElement === document.body;
};

var isFreeFocus = function isFreeFocus() {
  return focusOnBody() || focusIsHidden$1();
};

var lastActiveTrap = null;
var lastActiveFocus = null;
var lastPortaledElement = null;
var focusWasOutsideWindow = false;

var defaultWhitelist = function defaultWhitelist() {
  return true;
};

var focusWhitelisted = function focusWhitelisted(activeElement) {
  return (lastActiveTrap.whiteList || defaultWhitelist)(activeElement);
};

var recordPortal = function recordPortal(observerNode, portaledElement) {
  lastPortaledElement = {
    observerNode: observerNode,
    portaledElement: portaledElement
  };
};

var focusIsPortaledPair = function focusIsPortaledPair(element) {
  return lastPortaledElement && lastPortaledElement.portaledElement === element;
};

function autoGuard(startIndex, end, step, allNodes) {
  var lastGuard = null;
  var i = startIndex;

  do {
    var item = allNodes[i];

    if (item.guard) {
      if (item.node.dataset.focusAutoGuard) {
        lastGuard = item;
      }
    } else if (item.lockItem) {
      if (i !== startIndex) {
        // we will tab to the next element
        return;
      }

      lastGuard = null;
    } else {
      break;
    }
  } while ((i += step) !== end);

  if (lastGuard) {
    lastGuard.node.tabIndex = 0;
  }
}

var extractRef = function extractRef(ref) {
  return ref && 'current' in ref ? ref.current : ref;
};

var activateTrap = function activateTrap() {
  var result = false;

  if (lastActiveTrap) {
    var _lastActiveTrap = lastActiveTrap,
        observed = _lastActiveTrap.observed,
        persistentFocus = _lastActiveTrap.persistentFocus,
        autoFocus = _lastActiveTrap.autoFocus,
        shards = _lastActiveTrap.shards;
    var workingNode = observed || lastPortaledElement && lastPortaledElement.portaledElement;
    var activeElement = document && document.activeElement;

    if (workingNode) {
      var workingArea = [workingNode].concat(shards.map(extractRef).filter(Boolean));

      if (!activeElement || focusWhitelisted(activeElement)) {
        if (persistentFocus || focusWasOutsideWindow || !isFreeFocus() || !lastActiveFocus && autoFocus) {
          if (workingNode && !(focusInside$1(workingArea) || focusIsPortaledPair(activeElement))) {
            if (document && !lastActiveFocus && activeElement && !autoFocus) {
              activeElement.blur();
              document.body.focus();
            } else {
              result = setFocus(workingArea, lastActiveFocus);
              lastPortaledElement = {};
            }
          }

          focusWasOutsideWindow = false;
          lastActiveFocus = document && document.activeElement;
        }
      }

      if (document) {
        var newActiveElement = document && document.activeElement;
        var allNodes = getFocusabledIn(workingArea);
        var focusedItem = allNodes.find(function (_ref) {
          var node = _ref.node;
          return node === newActiveElement;
        });

        if (focusedItem) {
          // remove old focus
          allNodes.filter(function (_ref2) {
            var guard = _ref2.guard,
                node = _ref2.node;
            return guard && node.dataset.focusAutoGuard;
          }).forEach(function (_ref3) {
            var node = _ref3.node;
            return node.removeAttribute('tabIndex');
          });
          var focusedIndex = allNodes.indexOf(focusedItem);
          autoGuard(focusedIndex, allNodes.length, +1, allNodes);
          autoGuard(focusedIndex, -1, -1, allNodes);
        }
      }
    }
  }

  return result;
};

var onTrap = function onTrap(event) {
  if (activateTrap() && event) {
    // prevent scroll jump
    event.stopPropagation();
    event.preventDefault();
  }
};

var onBlur = function onBlur() {
  return deferAction(activateTrap);
};
var onFocus = function onFocus(event) {
  // detect portal
  var source = event.target;
  var currentNode = event.currentTarget;

  if (!currentNode.contains(source)) {
    recordPortal(currentNode, source);
  }
};

var FocusWatcher = function FocusWatcher() {
  return null;
};

process.env.NODE_ENV !== "production" ? {
  children: PropTypes$3.node.isRequired
} : {};

var onWindowBlur = function onWindowBlur() {
  focusWasOutsideWindow = true;
};

var attachHandler = function attachHandler() {
  document.addEventListener('focusin', onTrap, true);
  document.addEventListener('focusout', onBlur);
  window.addEventListener('blur', onWindowBlur);
};

var detachHandler = function detachHandler() {
  document.removeEventListener('focusin', onTrap, true);
  document.removeEventListener('focusout', onBlur);
  window.removeEventListener('blur', onWindowBlur);
};

function reducePropsToState(propsList) {
  return propsList.filter(function (_ref5) {
    var disabled = _ref5.disabled;
    return !disabled;
  }).slice(-1)[0];
}

function handleStateChangeOnClient(trap) {
  if (trap && !lastActiveTrap) {
    attachHandler();
  }

  var lastTrap = lastActiveTrap;
  var sameTrap = lastTrap && trap && trap.onActivation === lastTrap.onActivation;
  lastActiveTrap = trap;

  if (lastTrap && !sameTrap) {
    lastTrap.onDeactivation();
  }

  if (trap) {
    lastActiveFocus = null;

    if (!sameTrap || lastTrap.observed !== trap.observed) {
      trap.onActivation();
    }

    activateTrap();
    deferAction(activateTrap);
  } else {
    detachHandler();
    lastActiveFocus = null;
  }
}

var FocusTrap = withSideEffect(reducePropsToState, handleStateChangeOnClient)(FocusWatcher);

var hiddenGuard = {
  width: '1px',
  height: '0px',
  padding: 0,
  overflow: 'hidden',
  position: 'fixed',
  top: '1px',
  left: '1px'
};

process.env.NODE_ENV !== "production" ? {
  children: PropTypes$3.node
} : {};

var RenderChildren = function RenderChildren(_ref) {
  var children = _ref.children;
  return React__default.createElement("div", null, children);
};

RenderChildren.propTypes = process.env.NODE_ENV !== "production" ? {
  children: PropTypes$3.node.isRequired
} : {};
var Fragment = React__default.Fragment ? React__default.Fragment : RenderChildren;
var emptyArray = [];

var FocusLock$2 =
/*#__PURE__*/
function (_Component) {
  _inheritsLoose$1(FocusLock, _Component);

  function FocusLock() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Component.call.apply(_Component, [this].concat(args)) || this;

    _defineProperty$3(_assertThisInitialized$4(_assertThisInitialized$4(_this)), "state", {
      observed: undefined
    });

    _defineProperty$3(_assertThisInitialized$4(_assertThisInitialized$4(_this)), "onActivation", function () {
      _this.originalFocusedElement = _this.originalFocusedElement || document && document.activeElement;

      if (_this.state.observed && _this.props.onActivation) {
        _this.props.onActivation(_this.state.observed);
      }

      _this.isActive = true;
    });

    _defineProperty$3(_assertThisInitialized$4(_assertThisInitialized$4(_this)), "onDeactivation", function () {
      _this.isActive = false;

      if (_this.props.returnFocus && _this.originalFocusedElement && _this.originalFocusedElement.focus) {
        _this.originalFocusedElement.focus();

        _this.originalFocusedElement = null;
      }

      if (_this.props.onDeactivation) {
        _this.props.onDeactivation(_this.state.observed);
      }
    });

    _defineProperty$3(_assertThisInitialized$4(_assertThisInitialized$4(_this)), "onFocus", function (event) {
      if (_this.isActive) {
        onFocus(event);
      }
    });

    _defineProperty$3(_assertThisInitialized$4(_assertThisInitialized$4(_this)), "onBlur", onBlur);

    _defineProperty$3(_assertThisInitialized$4(_assertThisInitialized$4(_this)), "setObserveNode", function (observed) {
      if (_this.state.observed !== observed) {
        _this.setState({
          observed: observed
        });
      }
    });

    _defineProperty$3(_assertThisInitialized$4(_assertThisInitialized$4(_this)), "isActive", false);

    _defineProperty$3(_assertThisInitialized$4(_assertThisInitialized$4(_this)), "originalFocusedElement", null);

    return _this;
  }

  var _proto = FocusLock.prototype;

  _proto.render = function render() {
    var _extends2;

    var _this$props = this.props,
        children = _this$props.children,
        disabled = _this$props.disabled,
        noFocusGuards = _this$props.noFocusGuards,
        persistentFocus = _this$props.persistentFocus,
        autoFocus = _this$props.autoFocus,
        allowTextSelection = _this$props.allowTextSelection,
        group = _this$props.group,
        className = _this$props.className,
        whiteList = _this$props.whiteList,
        _this$props$shards = _this$props.shards,
        shards = _this$props$shards === void 0 ? emptyArray : _this$props$shards,
        _this$props$as = _this$props.as,
        Container = _this$props$as === void 0 ? 'div' : _this$props$as,
        _this$props$lockProps = _this$props.lockProps,
        containerProps = _this$props$lockProps === void 0 ? {} : _this$props$lockProps;
    var observed = this.state.observed;

    if (process.env.NODE_ENV !== 'production') {
      if (typeof allowTextSelection !== 'undefined') {
        // eslint-disable-next-line no-console
        console.warn('React-Focus-Lock: allowTextSelection is deprecated and enabled by default');
      }
    }

    var lockProps = _extends$d((_extends2 = {}, _extends2[FOCUS_DISABLED] = disabled && 'disabled', _extends2[FOCUS_GROUP] = group, _extends2), containerProps);

    var hasLeadingGuards = noFocusGuards !== true;
    var hasTailingGuards = hasLeadingGuards && noFocusGuards !== 'tail';
    return React__default.createElement(Fragment, null, hasLeadingGuards && [React__default.createElement("div", {
      key: "guard-first",
      "data-focus-guard": true,
      tabIndex: disabled ? -1 : 0,
      style: hiddenGuard
    }), // nearest focus guard
    React__default.createElement("div", {
      key: "guard-nearest",
      "data-focus-guard": true,
      tabIndex: disabled ? -1 : 1,
      style: hiddenGuard
    })], React__default.createElement(Container, _extends$d({
      ref: this.setObserveNode
    }, lockProps, {
      className: className,
      onBlur: this.onBlur,
      onFocus: this.onFocus
    }), React__default.createElement(FocusTrap, {
      observed: observed,
      disabled: disabled,
      persistentFocus: persistentFocus,
      autoFocus: autoFocus,
      whiteList: whiteList,
      shards: shards,
      onActivation: this.onActivation,
      onDeactivation: this.onDeactivation
    }), children), hasTailingGuards && React__default.createElement("div", {
      "data-focus-guard": true,
      tabIndex: disabled ? -1 : 0,
      style: hiddenGuard
    }));
  };

  return FocusLock;
}(Component$1);

FocusLock$2.propTypes = process.env.NODE_ENV !== "production" ? {
  children: PropTypes$3.node.isRequired,
  disabled: PropTypes$3.bool,
  returnFocus: PropTypes$3.bool,
  noFocusGuards: PropTypes$3.bool,
  allowTextSelection: PropTypes$3.bool,
  autoFocus: PropTypes$3.bool,
  persistentFocus: PropTypes$3.bool,
  group: PropTypes$3.string,
  className: PropTypes$3.string,
  whiteList: PropTypes$3.func,
  shards: PropTypes$3.arrayOf(PropTypes$3.any),
  as: PropTypes$3.oneOfType([PropTypes$3.string, PropTypes$3.func, PropTypes$3.object]),
  lockProps: PropTypes$3.object,
  onActivation: PropTypes$3.func,
  onDeactivation: PropTypes$3.func
} : {};
FocusLock$2.defaultProps = {
  disabled: false,
  returnFocus: false,
  noFocusGuards: false,
  autoFocus: true,
  persistentFocus: false,
  allowTextSelection: undefined,
  group: undefined,
  className: undefined,
  whiteList: undefined,
  shards: undefined,
  as: 'div',
  lockProps: {},
  onActivation: undefined,
  onDeactivation: undefined
};
var FocusLock$3 = FocusLock$2;

// Thin wrapper over react-focus-lock. This wrapper only exists to ensure API compatibility.
// This component should be deleted during https://ecosystem.atlassian.net/browse/AK-5658
var FocusLock = /** @class */ (function (_super) {
    __extends$7(FocusLock, _super);
    function FocusLock() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FocusLock.prototype.componentDidMount = function () {
        var _a = this.props, isEnabled = _a.isEnabled, autoFocus = _a.autoFocus;
        if (process.env.NODE_ENV !== 'production') {
            invariant$2(typeof autoFocus === 'boolean', '@atlaskit/modal-dialog: Passing a function as autoFocus is deprecated. Instead call focus on the element ref or use the autofocus property.');
        }
        if (typeof autoFocus === 'function' && isEnabled) {
            var elem = autoFocus();
            if (elem && elem.focus) {
                elem.focus();
            }
        }
    };
    FocusLock.prototype.render = function () {
        var _a = this.props, isEnabled = _a.isEnabled, autoFocus = _a.autoFocus, shouldReturnFocus = _a.shouldReturnFocus;
        return (React__default.createElement(FocusLock$3, { disabled: !isEnabled, autoFocus: !!autoFocus, returnFocus: shouldReturnFocus }, this.props.children));
    };
    FocusLock.defaultProps = {
        autoFocus: true,
        isEnabled: true,
        shouldReturnFocus: true,
    };
    return FocusLock;
}(React__default.Component));
var FocusLock$1 = FocusLock;

var Positioner = function Positioner(_a) {
    var scrollBehavior = _a.scrollBehavior, props = __rest$1(_a, ["scrollBehavior"]);
    // default 'inside'
    var PositionComponent = PositionerAbsolute;
    if (scrollBehavior === 'outside') {
        PositionComponent = PositionerRelative;
    }
    else if (scrollBehavior === 'inside-wide') {
        PositionComponent = PositionerFixed;
    }
    return React__default.createElement(PositionComponent, __assign$4({}, props));
};
var Positioner$1 = Positioner;

function getScrollDistance() {
    return (window.pageYOffset ||
        (document.documentElement && document.documentElement.scrollTop) ||
        (document.body && document.body.scrollTop) ||
        0);
}
var Modal$1 = /** @class */ (function (_super) {
    __extends$7(Modal, _super);
    function Modal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            dialogNode: null,
            scrollDistance: exenv.exports.canUseDOM ? getScrollDistance() : 0,
            isExiting: false,
        };
        /* Prevent window from being scrolled programatically so that the modal is positioned correctly
         * and to prevent scrollIntoView from scrolling the window.
         */
        _this.handleWindowScroll = function () {
            if (getScrollDistance() !== _this.state.scrollDistance) {
                window.scrollTo(window.pageXOffset, _this.state.scrollDistance);
            }
        };
        _this.handleOverlayClick = function (e) {
            if (_this.props.shouldCloseOnOverlayClick) {
                _this.props.onClose(e);
            }
        };
        return _this;
    }
    Modal.prototype.componentDidMount = function () {
        var scrollDistance = getScrollDistance();
        if (getScrollDistance() !== this.state.scrollDistance) {
            // eslint-disable-next-line react/no-did-mount-set-state
            this.setState({ scrollDistance: scrollDistance });
        }
        window.addEventListener('scroll', this.handleWindowScroll);
    };
    Modal.prototype.componentWillUnmount = function () {
        window.removeEventListener('scroll', this.handleWindowScroll);
    };
    Modal.prototype.render = function () {
        var _this = this;
        var _a = this.props, actions = _a.actions, appearance = _a.appearance, autoFocus = _a.autoFocus, body = _a.body, children = _a.children, components = _a.components, footer = _a.footer, header = _a.header, height = _a.height, isChromeless = _a.isChromeless, isHeadingMultiline = _a.isHeadingMultiline, isOpen = _a.isOpen, onClose = _a.onClose, onCloseComplete = _a.onCloseComplete, onOpenComplete = _a.onOpenComplete, onStackChange = _a.onStackChange, shouldCloseOnEscapePress = _a.shouldCloseOnEscapePress, stackIndex = _a.stackIndex, heading = _a.heading, width = _a.width, scrollBehavior = _a.scrollBehavior, testId = _a.testId;
        var scrollDistance = this.state.scrollDistance;
        var isBackground = stackIndex != null && stackIndex > 0;
        // If a custom width (number or percentage) is supplied, set inline style
        // otherwise allow styled component to consume as named prop
        var widthName = width
            ? WIDTH_ENUM.values.indexOf(width.toString()) !== -1
                ? width
                : undefined
            : undefined;
        var widthValue = widthName ? undefined : width;
        return (React__default.createElement(Animation$2, { in: isOpen, onExited: onCloseComplete, onEntered: onOpenComplete, stackIndex: stackIndex }, function (_a) {
            var fade = _a.fade, slide = _a.slide;
            return (React__default.createElement(FillScreen, { style: fade, "aria-hidden": isBackground, scrollDistance: scrollDistance },
                React__default.createElement(FocusLock$1, { isEnabled: stackIndex === 0 && isOpen, autoFocus: autoFocus },
                    React__default.createElement(Blanket$2, { isTinted: true, onBlanketClicked: _this.handleOverlayClick }),
                    React__default.createElement(Positioner$1, { style: slide, scrollBehavior: scrollBehavior, widthName: widthName, widthValue: widthValue },
                        React__default.createElement(UIDReset, null,
                            React__default.createElement(UIDConsumer, null, function (id, _) { return (React__default.createElement(Dialog, { heightValue: height, isChromeless: isChromeless, role: "dialog", "aria-labelledby": "dialog-heading-" + id, "data-testid": testId, tabIndex: -1 },
                                React__default.createElement(Content$8, { actions: actions, appearance: appearance, components: components, footer: footer, heading: heading, headingId: "dialog-heading-" + id, testId: testId && testId + "-dialog-content", isHeadingMultiline: isHeadingMultiline, header: header, onClose: onClose, shouldScroll: scrollBehavior === 'inside' ||
                                        scrollBehavior === 'inside-wide', shouldCloseOnEscapePress: shouldCloseOnEscapePress, onStackChange: onStackChange, isChromeless: isChromeless, stackIndex: stackIndex, body: body }, children))); }))))));
        }));
    };
    Modal.defaultProps = {
        autoFocus: true,
        scrollBehavior: 'inside',
        shouldCloseOnEscapePress: true,
        shouldCloseOnOverlayClick: true,
        isChromeless: false,
        isOpen: true,
        stackIndex: 0,
        width: 'medium',
        isHeadingMultiline: true,
        onClose: function () { },
    };
    return Modal;
}(React__default.Component));
var createAndFireEventOnAtlaskit$a = createAndFireEvent$4('atlaskit');
var Modal$2 = withAnalyticsContext$9({
    componentName: 'modalDialog',
    packageName: name$6,
    packageVersion: version$6,
})(withAnalyticsEvents$9({
    onClose: createAndFireEventOnAtlaskit$a({
        action: 'closed',
        actionSubject: 'modalDialog',
        attributes: {
            componentName: 'modalDialog',
            packageName: name$6,
            packageVersion: version$6,
        },
    }),
})(Modal$1));

var _a$3 = React__default.createContext({
    isOpen: true,
    onExited: function () { },
}), Consumer$3 = _a$3.Consumer, Provider$3 = _a$3.Provider;
// checks if children exist and are truthy
var hasChildren = function (children) {
    return React__default.Children.count(children) > 0 &&
        React__default.Children.map(children, function (child) { return !!child; }).filter(Boolean).length > 0;
};
/** @class */ ((function (_super) {
    __extends$7(Transition, _super);
    function Transition() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            currentChildren: undefined,
        };
        _this.onExited = function () {
            _this.setState({
                currentChildren: _this.props.children,
            });
        };
        return _this;
    }
    Transition.getDerivedStateFromProps = function (props, state) {
        var previousChildren = state.currentChildren;
        var exiting = hasChildren(previousChildren) && !hasChildren(props.children);
        return {
            currentChildren: exiting ? previousChildren : props.children,
        };
    };
    Transition.prototype.render = function () {
        return (React__default.createElement(Provider$3, { value: {
                onExited: this.onExited,
                isOpen: hasChildren(this.props.children),
            } }, this.state.currentChildren));
    };
    return Transition;
})(React__default.Component));
var ModalTransitionConsumer = Consumer$3;

// This is the source of truth for open modals
var stackConsumers = [];
// This component provides the position of a modal dialog in the list of all open dialogs.
// The key behaviours are:
// - When a modal renders for the first time it takes the first stack position
// - When a modal mounts, all other modals have to adjust their position
// - When a modal unmounts, all other modals have to adjust their position
var StackConsumer = /** @class */ (function (_super) {
    __extends$7(StackConsumer, _super);
    function StackConsumer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            stackIndex: 0,
        };
        _this.update = function () {
            var stackIndex = stackConsumers.indexOf(_this.update);
            if (_this.state.stackIndex !== stackIndex) {
                _this.setState({ stackIndex: stackIndex });
            }
        };
        return _this;
    }
    StackConsumer.prototype.componentDidMount = function () {
        stackConsumers.forEach(function (updateFn) { return updateFn(); });
    };
    StackConsumer.prototype.componentWillUnmount = function () {
        var _this = this;
        // This check will pass if the <Transition><Modal/></Transition> pattern has not been
        // implemented correctly. In this case, will still need to make sure we remove ourselves
        // from the stack list.
        if (stackConsumers.indexOf(this.update) !== -1) {
            stackConsumers = stackConsumers.filter(function (stack) { return stack !== _this.update; });
            stackConsumers.forEach(function (updateFn) { return updateFn(); });
        }
    };
    StackConsumer.prototype.componentDidUpdate = function (prevProps) {
        var _this = this;
        if (prevProps.isOpen && !this.props.isOpen) {
            stackConsumers = stackConsumers.filter(function (stack) { return stack !== _this.update; });
            stackConsumers.forEach(function (updateFn) { return updateFn(); });
        }
    };
    StackConsumer.prototype.render = function () {
        if (stackConsumers.indexOf(this.update) === -1) {
            // add this instance to stack consumer list
            stackConsumers = __spread$1([this.update], stackConsumers);
        }
        return this.props.children(this.state.stackIndex);
    };
    return StackConsumer;
}(React__default.Component));
var StackConsumer$1 = StackConsumer;

var ModalWrapper = /** @class */ (function (_super) {
    __extends$7(ModalWrapper, _super);
    function ModalWrapper() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onModalClosed = function (onExited) { return function (e) {
            if (onExited) {
                onExited();
            }
            if (_this.props.onCloseComplete) {
                _this.props.onCloseComplete(e);
            }
        }; };
        return _this;
    }
    ModalWrapper.prototype.render = function () {
        var _this = this;
        return (React__default.createElement(ModalTransitionConsumer, null, function (_a) {
            var isOpen = _a.isOpen, onExited = _a.onExited;
            return (React__default.createElement(Portal$1, { zIndex: layers$1.modal() },
                React__default.createElement(StackConsumer$1, { isOpen: isOpen }, function (naturalStackIndex) { return (React__default.createElement(Modal$2, __assign$4({}, _this.props, { isOpen: isOpen, stackIndex: _this.props.stackIndex || naturalStackIndex, onCloseComplete: _this.onModalClosed(onExited) }), _this.props.children)); })));
        }));
    };
    ModalWrapper.defaultProps = {
        autoFocus: true,
        scrollBehavior: 'inside',
        shouldCloseOnEscapePress: true,
        shouldCloseOnOverlayClick: true,
        isChromeless: false,
        width: 'medium',
        isHeadingMultiline: true,
        onClose: function () { },
    };
    return ModalWrapper;
}(React__default.Component));
var AkModal = ModalWrapper;

var css_248z$I = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.atlaskit-portal-container{font-family:Roboto,sans-serif}.atlaskit-portal-container header{border-bottom:1px solid #e1e4e9;padding:20px 20px 14px}.atlaskit-portal-container header span{color:#232831;font-size:18px}.atlaskit-portal-container button{padding:0 35px}.atlaskit-portal-container button span{font-size:16px}";
styleInject(css_248z$I);

var Modal = function (_a) {
    var children = _a.children, _b = _a.isOpen, isOpen = _b === void 0 ? false : _b, _c = _a.scrollBehavior, scrollBehavior = _c === void 0 ? "outside" : _c, _d = _a.autoFocus, autoFocus = _d === void 0 ? false : _d, cancelText = _a.cancelText, submitText = _a.submitText, onClose = _a.onClose, onSubmit = _a.onSubmit, _e = _a.width, width = _e === void 0 ? 400 : _e, _f = _a.isLoading, isLoading = _f === void 0 ? false : _f, _g = _a.isDisabled, isDisabled = _g === void 0 ? false : _g, props = __rest$8(_a, ["children", "isOpen", "scrollBehavior", "autoFocus", "cancelText", "submitText", "onClose", "onSubmit", "width", "isLoading", "isDisabled"]);
    if (!isOpen)
        return null;
    var getActions = React$7.useMemo(function () {
        var actions = [
            { text: cancelText, onClick: onClose, appearance: "subtle", className: "styled-atlaskit-button subtle" },
        ];
        if (onSubmit)
            actions.push({
                isLoading: isLoading,
                isDisabled: isDisabled,
                text: submitText,
                onClick: onSubmit,
                appearance: "primary",
                className: "styled-atlaskit-button primary",
            });
        return actions;
    }, [isLoading, isDisabled]);
    return (jsx$1(AkModal, __assign$a({ actions: getActions, scrollBehavior: scrollBehavior, autoFocus: autoFocus, width: width }, props, { children: children }), void 0));
};

var css_248z$H = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.styled-atlaskit-modal-form{font-size:16px;margin:0 auto;position:relative;z-index:2}.styled-atlaskit-modal-form.full-horizontal{width:100%}.styled-atlaskit-modal-message{box-sizing:border-box;color:#232831;font-size:16px;line-height:1.56;margin:24px 0;word-break:break-word}.styled-atlaskit-modal-title{border-bottom:1px solid #e1e4e9;color:#232831;font-size:18px;font-weight:500;letter-spacing:.01em;line-height:24px;margin:0 -24px;padding:20px 24px}";
styleInject(css_248z$H);

var ModalForm = function (_a) {
    var children = _a.children, _b = _a.fullHorizontal, fullHorizontal = _b === void 0 ? false : _b;
    return (jsx$1("div", __assign$a({ className: classNames$1("styled-atlaskit-modal-form", {
            "full-horizontal": fullHorizontal,
        }) }, { children: children }), void 0));
};
var ModalMessage = function (_a) {
    var children = _a.children;
    return (jsx$1("div", __assign$a({ className: "styled-atlaskit-modal-message" }, { children: children }), void 0));
};
var ModalTitle = function (_a) {
    var title = _a.title;
    return jsx$1("div", __assign$a({ className: "styled-atlaskit-modal-title" }, { children: title }), void 0);
};

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];

  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;

  var _s, _e;

  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

function _taggedTemplateLiteral(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }

  return Object.freeze(Object.defineProperties(strings, {
    raw: {
      value: Object.freeze(raw)
    }
  }));
}

var AutosizeInput$1 = {};

Object.defineProperty(AutosizeInput$1, "__esModule", {
	value: true
});

var _extends$5 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass$3 = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react$9 = React__default;

var _react2 = _interopRequireDefault$8(_react$9);

var _propTypes = propTypes$1.exports;

var _propTypes2 = _interopRequireDefault$8(_propTypes);

function _interopRequireDefault$8(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties$1(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck$3(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn$3(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits$3(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var sizerStyle = {
	position: 'absolute',
	top: 0,
	left: 0,
	visibility: 'hidden',
	height: 0,
	overflow: 'scroll',
	whiteSpace: 'pre'
};

var INPUT_PROPS_BLACKLIST = ['extraWidth', 'injectStyles', 'inputClassName', 'inputRef', 'inputStyle', 'minWidth', 'onAutosize', 'placeholderIsMinWidth'];

var cleanInputProps = function cleanInputProps(inputProps) {
	INPUT_PROPS_BLACKLIST.forEach(function (field) {
		return delete inputProps[field];
	});
	return inputProps;
};

var copyStyles = function copyStyles(styles, node) {
	node.style.fontSize = styles.fontSize;
	node.style.fontFamily = styles.fontFamily;
	node.style.fontWeight = styles.fontWeight;
	node.style.fontStyle = styles.fontStyle;
	node.style.letterSpacing = styles.letterSpacing;
	node.style.textTransform = styles.textTransform;
};

var isIE$1 = typeof window !== 'undefined' && window.navigator ? /MSIE |Trident\/|Edge\//.test(window.navigator.userAgent) : false;

var generateId = function generateId() {
	// we only need an auto-generated ID for stylesheet injection, which is only
	// used for IE. so if the browser is not IE, this should return undefined.
	return isIE$1 ? '_' + Math.random().toString(36).substr(2, 12) : undefined;
};

var AutosizeInput = function (_Component) {
	_inherits$3(AutosizeInput, _Component);

	_createClass$3(AutosizeInput, null, [{
		key: 'getDerivedStateFromProps',
		value: function getDerivedStateFromProps(props, state) {
			var id = props.id;

			return id !== state.prevId ? { inputId: id || generateId(), prevId: id } : null;
		}
	}]);

	function AutosizeInput(props) {
		_classCallCheck$3(this, AutosizeInput);

		var _this = _possibleConstructorReturn$3(this, (AutosizeInput.__proto__ || Object.getPrototypeOf(AutosizeInput)).call(this, props));

		_this.inputRef = function (el) {
			_this.input = el;
			if (typeof _this.props.inputRef === 'function') {
				_this.props.inputRef(el);
			}
		};

		_this.placeHolderSizerRef = function (el) {
			_this.placeHolderSizer = el;
		};

		_this.sizerRef = function (el) {
			_this.sizer = el;
		};

		_this.state = {
			inputWidth: props.minWidth,
			inputId: props.id || generateId(),
			prevId: props.id
		};
		return _this;
	}

	_createClass$3(AutosizeInput, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			this.mounted = true;
			this.copyInputStyles();
			this.updateInputWidth();
		}
	}, {
		key: 'componentDidUpdate',
		value: function componentDidUpdate(prevProps, prevState) {
			if (prevState.inputWidth !== this.state.inputWidth) {
				if (typeof this.props.onAutosize === 'function') {
					this.props.onAutosize(this.state.inputWidth);
				}
			}
			this.updateInputWidth();
		}
	}, {
		key: 'componentWillUnmount',
		value: function componentWillUnmount() {
			this.mounted = false;
		}
	}, {
		key: 'copyInputStyles',
		value: function copyInputStyles() {
			if (!this.mounted || !window.getComputedStyle) {
				return;
			}
			var inputStyles = this.input && window.getComputedStyle(this.input);
			if (!inputStyles) {
				return;
			}
			copyStyles(inputStyles, this.sizer);
			if (this.placeHolderSizer) {
				copyStyles(inputStyles, this.placeHolderSizer);
			}
		}
	}, {
		key: 'updateInputWidth',
		value: function updateInputWidth() {
			if (!this.mounted || !this.sizer || typeof this.sizer.scrollWidth === 'undefined') {
				return;
			}
			var newInputWidth = void 0;
			if (this.props.placeholder && (!this.props.value || this.props.value && this.props.placeholderIsMinWidth)) {
				newInputWidth = Math.max(this.sizer.scrollWidth, this.placeHolderSizer.scrollWidth) + 2;
			} else {
				newInputWidth = this.sizer.scrollWidth + 2;
			}
			// add extraWidth to the detected width. for number types, this defaults to 16 to allow for the stepper UI
			var extraWidth = this.props.type === 'number' && this.props.extraWidth === undefined ? 16 : parseInt(this.props.extraWidth) || 0;
			newInputWidth += extraWidth;
			if (newInputWidth < this.props.minWidth) {
				newInputWidth = this.props.minWidth;
			}
			if (newInputWidth !== this.state.inputWidth) {
				this.setState({
					inputWidth: newInputWidth
				});
			}
		}
	}, {
		key: 'getInput',
		value: function getInput() {
			return this.input;
		}
	}, {
		key: 'focus',
		value: function focus() {
			this.input.focus();
		}
	}, {
		key: 'blur',
		value: function blur() {
			this.input.blur();
		}
	}, {
		key: 'select',
		value: function select() {
			this.input.select();
		}
	}, {
		key: 'renderStyles',
		value: function renderStyles() {
			// this method injects styles to hide IE's clear indicator, which messes
			// with input size detection. the stylesheet is only injected when the
			// browser is IE, and can also be disabled by the `injectStyles` prop.
			var injectStyles = this.props.injectStyles;

			return isIE$1 && injectStyles ? _react2.default.createElement('style', { dangerouslySetInnerHTML: {
					__html: 'input#' + this.state.inputId + '::-ms-clear {display: none;}'
				} }) : null;
		}
	}, {
		key: 'render',
		value: function render() {
			var sizerValue = [this.props.defaultValue, this.props.value, ''].reduce(function (previousValue, currentValue) {
				if (previousValue !== null && previousValue !== undefined) {
					return previousValue;
				}
				return currentValue;
			});

			var wrapperStyle = _extends$5({}, this.props.style);
			if (!wrapperStyle.display) wrapperStyle.display = 'inline-block';

			var inputStyle = _extends$5({
				boxSizing: 'content-box',
				width: this.state.inputWidth + 'px'
			}, this.props.inputStyle);

			var inputProps = _objectWithoutProperties$1(this.props, []);

			cleanInputProps(inputProps);
			inputProps.className = this.props.inputClassName;
			inputProps.id = this.state.inputId;
			inputProps.style = inputStyle;

			return _react2.default.createElement(
				'div',
				{ className: this.props.className, style: wrapperStyle },
				this.renderStyles(),
				_react2.default.createElement('input', _extends$5({}, inputProps, { ref: this.inputRef })),
				_react2.default.createElement(
					'div',
					{ ref: this.sizerRef, style: sizerStyle },
					sizerValue
				),
				this.props.placeholder ? _react2.default.createElement(
					'div',
					{ ref: this.placeHolderSizerRef, style: sizerStyle },
					this.props.placeholder
				) : null
			);
		}
	}]);

	return AutosizeInput;
}(_react$9.Component);

AutosizeInput.propTypes = {
	className: _propTypes2.default.string, // className for the outer element
	defaultValue: _propTypes2.default.any, // default field value
	extraWidth: _propTypes2.default.oneOfType([// additional width for input element
	_propTypes2.default.number, _propTypes2.default.string]),
	id: _propTypes2.default.string, // id to use for the input, can be set for consistent snapshots
	injectStyles: _propTypes2.default.bool, // inject the custom stylesheet to hide clear UI, defaults to true
	inputClassName: _propTypes2.default.string, // className for the input element
	inputRef: _propTypes2.default.func, // ref callback for the input element
	inputStyle: _propTypes2.default.object, // css styles for the input element
	minWidth: _propTypes2.default.oneOfType([// minimum width for input element
	_propTypes2.default.number, _propTypes2.default.string]),
	onAutosize: _propTypes2.default.func, // onAutosize handler: function(newWidth) {}
	onChange: _propTypes2.default.func, // onChange handler: function(event) {}
	placeholder: _propTypes2.default.string, // placeholder text
	placeholderIsMinWidth: _propTypes2.default.bool, // don't collapse size to less than the placeholder
	style: _propTypes2.default.object, // css styles for the outer element
	value: _propTypes2.default.any // field value
};
AutosizeInput.defaultProps = {
	minWidth: 1,
	injectStyles: true
};

var _default$7 = AutosizeInput$1.default = AutosizeInput;

// ==============================
// NO OP
// ==============================
var noop$5 = function noop() {};
// Class Name Prefixer
// ==============================

/**
 String representation of component state for styling with class names.

 Expects an array of strings OR a string/object pair:
 - className(['comp', 'comp-arg', 'comp-arg-2'])
   @returns 'react-select__comp react-select__comp-arg react-select__comp-arg-2'
 - className('comp', { some: true, state: false })
   @returns 'react-select__comp react-select__comp--some'
*/

function applyPrefixToName(prefix, name) {
  if (!name) {
    return prefix;
  } else if (name[0] === '-') {
    return prefix + name;
  } else {
    return prefix + '__' + name;
  }
}

function classNames(prefix, state, className) {
  var arr = [className];

  if (state && prefix) {
    for (var key in state) {
      if (state.hasOwnProperty(key) && state[key]) {
        arr.push("".concat(applyPrefixToName(prefix, key)));
      }
    }
  }

  return arr.filter(function (i) {
    return i;
  }).map(function (i) {
    return String(i).trim();
  }).join(' ');
} // ==============================
// Clean Value
// ==============================

var cleanValue = function cleanValue(value) {
  if (Array.isArray(value)) return value.filter(Boolean);
  if (_typeof$3(value) === 'object' && value !== null) return [value];
  return [];
}; // ==============================
// Scroll Helpers
// ==============================

function isDocumentElement(el) {
  return [document.documentElement, document.body, window].indexOf(el) > -1;
} // Normalized Scroll Top
// ------------------------------

function getScrollTop(el) {
  if (isDocumentElement(el)) {
    return window.pageYOffset;
  }

  return el.scrollTop;
}
function scrollTo(el, top) {
  // with a scroll distance, we perform scroll on the element
  if (isDocumentElement(el)) {
    window.scrollTo(0, top);
    return;
  }

  el.scrollTop = top;
} // Get Scroll Parent
// ------------------------------

function getScrollParent$2(element) {
  var style = getComputedStyle(element);
  var excludeStaticParent = style.position === 'absolute';
  var overflowRx = /(auto|scroll)/;
  var docEl = document.documentElement; // suck it, flow...

  if (style.position === 'fixed') return docEl;

  for (var parent = element; parent = parent.parentElement;) {
    style = getComputedStyle(parent);

    if (excludeStaticParent && style.position === 'static') {
      continue;
    }

    if (overflowRx.test(style.overflow + style.overflowY + style.overflowX)) {
      return parent;
    }
  }

  return docEl;
} // Animated Scroll To
// ------------------------------

/**
  @param t: time (elapsed)
  @param b: initial value
  @param c: amount of change
  @param d: duration
*/

function easeOutCubic(t, b, c, d) {
  return c * ((t = t / d - 1) * t * t + 1) + b;
}

function animatedScrollTo(element, to) {
  var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 200;
  var callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : noop$5;
  var start = getScrollTop(element);
  var change = to - start;
  var increment = 10;
  var currentTime = 0;

  function animateScroll() {
    currentTime += increment;
    var val = easeOutCubic(currentTime, start, change, duration);
    scrollTo(element, val);

    if (currentTime < duration) {
      window.requestAnimationFrame(animateScroll);
    } else {
      callback(element);
    }
  }

  animateScroll();
} // Scroll Into View
// ------------------------------

function scrollIntoView(menuEl, focusedEl) {
  var menuRect = menuEl.getBoundingClientRect();
  var focusedRect = focusedEl.getBoundingClientRect();
  var overScroll = focusedEl.offsetHeight / 3;

  if (focusedRect.bottom + overScroll > menuRect.bottom) {
    scrollTo(menuEl, Math.min(focusedEl.offsetTop + focusedEl.clientHeight - menuEl.offsetHeight + overScroll, menuEl.scrollHeight));
  } else if (focusedRect.top - overScroll < menuRect.top) {
    scrollTo(menuEl, Math.max(focusedEl.offsetTop - overScroll, 0));
  }
} // ==============================
// Get bounding client object
// ==============================
// cannot get keys using array notation with DOMRect

function getBoundingClientObj(element) {
  var rect = element.getBoundingClientRect();
  return {
    bottom: rect.bottom,
    height: rect.height,
    left: rect.left,
    right: rect.right,
    top: rect.top,
    width: rect.width
  };
}
// Touch Capability Detector
// ==============================

function isTouchCapable() {
  try {
    document.createEvent('TouchEvent');
    return true;
  } catch (e) {
    return false;
  }
} // ==============================
// Mobile Device Detector
// ==============================

function isMobileDevice() {
  try {
    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
  } catch (e) {
    return false;
  }
}

function ownKeys$p(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$o(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$p(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$p(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper$l(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$l(); return function _createSuperInternal() { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$8(this, result); }; }

function _isNativeReflectConstruct$l() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }
function getMenuPlacement(_ref) {
  var maxHeight = _ref.maxHeight,
      menuEl = _ref.menuEl,
      minHeight = _ref.minHeight,
      placement = _ref.placement,
      shouldScroll = _ref.shouldScroll,
      isFixedPosition = _ref.isFixedPosition,
      theme = _ref.theme;
  var spacing = theme.spacing;
  var scrollParent = getScrollParent$2(menuEl);
  var defaultState = {
    placement: 'bottom',
    maxHeight: maxHeight
  }; // something went wrong, return default state

  if (!menuEl || !menuEl.offsetParent) return defaultState; // we can't trust `scrollParent.scrollHeight` --> it may increase when
  // the menu is rendered

  var _scrollParent$getBoun = scrollParent.getBoundingClientRect(),
      scrollHeight = _scrollParent$getBoun.height;

  var _menuEl$getBoundingCl = menuEl.getBoundingClientRect(),
      menuBottom = _menuEl$getBoundingCl.bottom,
      menuHeight = _menuEl$getBoundingCl.height,
      menuTop = _menuEl$getBoundingCl.top;

  var _menuEl$offsetParent$ = menuEl.offsetParent.getBoundingClientRect(),
      containerTop = _menuEl$offsetParent$.top;

  var viewHeight = window.innerHeight;
  var scrollTop = getScrollTop(scrollParent);
  var marginBottom = parseInt(getComputedStyle(menuEl).marginBottom, 10);
  var marginTop = parseInt(getComputedStyle(menuEl).marginTop, 10);
  var viewSpaceAbove = containerTop - marginTop;
  var viewSpaceBelow = viewHeight - menuTop;
  var scrollSpaceAbove = viewSpaceAbove + scrollTop;
  var scrollSpaceBelow = scrollHeight - scrollTop - menuTop;
  var scrollDown = menuBottom - viewHeight + scrollTop + marginBottom;
  var scrollUp = scrollTop + menuTop - marginTop;
  var scrollDuration = 160;

  switch (placement) {
    case 'auto':
    case 'bottom':
      // 1: the menu will fit, do nothing
      if (viewSpaceBelow >= menuHeight) {
        return {
          placement: 'bottom',
          maxHeight: maxHeight
        };
      } // 2: the menu will fit, if scrolled


      if (scrollSpaceBelow >= menuHeight && !isFixedPosition) {
        if (shouldScroll) {
          animatedScrollTo(scrollParent, scrollDown, scrollDuration);
        }

        return {
          placement: 'bottom',
          maxHeight: maxHeight
        };
      } // 3: the menu will fit, if constrained


      if (!isFixedPosition && scrollSpaceBelow >= minHeight || isFixedPosition && viewSpaceBelow >= minHeight) {
        if (shouldScroll) {
          animatedScrollTo(scrollParent, scrollDown, scrollDuration);
        } // we want to provide as much of the menu as possible to the user,
        // so give them whatever is available below rather than the minHeight.


        var constrainedHeight = isFixedPosition ? viewSpaceBelow - marginBottom : scrollSpaceBelow - marginBottom;
        return {
          placement: 'bottom',
          maxHeight: constrainedHeight
        };
      } // 4. Forked beviour when there isn't enough space below
      // AUTO: flip the menu, render above


      if (placement === 'auto' || isFixedPosition) {
        // may need to be constrained after flipping
        var _constrainedHeight = maxHeight;
        var spaceAbove = isFixedPosition ? viewSpaceAbove : scrollSpaceAbove;

        if (spaceAbove >= minHeight) {
          _constrainedHeight = Math.min(spaceAbove - marginBottom - spacing.controlHeight, maxHeight);
        }

        return {
          placement: 'top',
          maxHeight: _constrainedHeight
        };
      } // BOTTOM: allow browser to increase scrollable area and immediately set scroll


      if (placement === 'bottom') {
        scrollTo(scrollParent, scrollDown);
        return {
          placement: 'bottom',
          maxHeight: maxHeight
        };
      }

      break;

    case 'top':
      // 1: the menu will fit, do nothing
      if (viewSpaceAbove >= menuHeight) {
        return {
          placement: 'top',
          maxHeight: maxHeight
        };
      } // 2: the menu will fit, if scrolled


      if (scrollSpaceAbove >= menuHeight && !isFixedPosition) {
        if (shouldScroll) {
          animatedScrollTo(scrollParent, scrollUp, scrollDuration);
        }

        return {
          placement: 'top',
          maxHeight: maxHeight
        };
      } // 3: the menu will fit, if constrained


      if (!isFixedPosition && scrollSpaceAbove >= minHeight || isFixedPosition && viewSpaceAbove >= minHeight) {
        var _constrainedHeight2 = maxHeight; // we want to provide as much of the menu as possible to the user,
        // so give them whatever is available below rather than the minHeight.

        if (!isFixedPosition && scrollSpaceAbove >= minHeight || isFixedPosition && viewSpaceAbove >= minHeight) {
          _constrainedHeight2 = isFixedPosition ? viewSpaceAbove - marginTop : scrollSpaceAbove - marginTop;
        }

        if (shouldScroll) {
          animatedScrollTo(scrollParent, scrollUp, scrollDuration);
        }

        return {
          placement: 'top',
          maxHeight: _constrainedHeight2
        };
      } // 4. not enough space, the browser WILL NOT increase scrollable area when
      // absolutely positioned element rendered above the viewport (only below).
      // Flip the menu, render below


      return {
        placement: 'bottom',
        maxHeight: maxHeight
      };

    default:
      throw new Error("Invalid placement provided \"".concat(placement, "\"."));
  } // fulfil contract with flow: implicit return value of undefined


  return defaultState;
} // Menu Component
// ------------------------------

function alignToControl(placement) {
  var placementToCSSProp = {
    bottom: 'top',
    top: 'bottom'
  };
  return placement ? placementToCSSProp[placement] : 'bottom';
}

var coercePlacement = function coercePlacement(p) {
  return p === 'auto' ? 'bottom' : p;
};

var menuCSS = function menuCSS(_ref2) {
  var _ref3;

  var placement = _ref2.placement,
      _ref2$theme = _ref2.theme,
      borderRadius = _ref2$theme.borderRadius,
      spacing = _ref2$theme.spacing,
      colors = _ref2$theme.colors;
  return _ref3 = {
    label: 'menu'
  }, _defineProperty$3(_ref3, alignToControl(placement), '100%'), _defineProperty$3(_ref3, "backgroundColor", colors.neutral0), _defineProperty$3(_ref3, "borderRadius", borderRadius), _defineProperty$3(_ref3, "boxShadow", '0 0 0 1px hsla(0, 0%, 0%, 0.1), 0 4px 11px hsla(0, 0%, 0%, 0.1)'), _defineProperty$3(_ref3, "marginBottom", spacing.menuGutter), _defineProperty$3(_ref3, "marginTop", spacing.menuGutter), _defineProperty$3(_ref3, "position", 'absolute'), _defineProperty$3(_ref3, "width", '100%'), _defineProperty$3(_ref3, "zIndex", 1), _ref3;
};
var PortalPlacementContext = /*#__PURE__*/createContext$1({
  getPortalPlacement: null
}); // NOTE: internal only

var MenuPlacer = /*#__PURE__*/function (_Component) {
  _inherits$8(MenuPlacer, _Component);

  var _super = _createSuper$l(MenuPlacer);

  function MenuPlacer() {
    var _this;

    _classCallCheck$8(this, MenuPlacer);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = {
      maxHeight: _this.props.maxMenuHeight,
      placement: null
    };

    _this.getPlacement = function (ref) {
      var _this$props = _this.props,
          minMenuHeight = _this$props.minMenuHeight,
          maxMenuHeight = _this$props.maxMenuHeight,
          menuPlacement = _this$props.menuPlacement,
          menuPosition = _this$props.menuPosition,
          menuShouldScrollIntoView = _this$props.menuShouldScrollIntoView,
          theme = _this$props.theme;
      if (!ref) return; // DO NOT scroll if position is fixed

      var isFixedPosition = menuPosition === 'fixed';
      var shouldScroll = menuShouldScrollIntoView && !isFixedPosition;
      var state = getMenuPlacement({
        maxHeight: maxMenuHeight,
        menuEl: ref,
        minHeight: minMenuHeight,
        placement: menuPlacement,
        shouldScroll: shouldScroll,
        isFixedPosition: isFixedPosition,
        theme: theme
      });
      var getPortalPlacement = _this.context.getPortalPlacement;
      if (getPortalPlacement) getPortalPlacement(state);

      _this.setState(state);
    };

    _this.getUpdatedProps = function () {
      var menuPlacement = _this.props.menuPlacement;
      var placement = _this.state.placement || coercePlacement(menuPlacement);
      return _objectSpread$o(_objectSpread$o({}, _this.props), {}, {
        placement: placement,
        maxHeight: _this.state.maxHeight
      });
    };

    return _this;
  }

  _createClass$8(MenuPlacer, [{
    key: "render",
    value: function render() {
      var children = this.props.children;
      return children({
        ref: this.getPlacement,
        placerProps: this.getUpdatedProps()
      });
    }
  }]);

  return MenuPlacer;
}(Component$1);
MenuPlacer.contextType = PortalPlacementContext;

var Menu = function Menu(props) {
  var children = props.children,
      className = props.className,
      cx = props.cx,
      getStyles = props.getStyles,
      innerRef = props.innerRef,
      innerProps = props.innerProps;
  return jsx("div", _extends$d({
    css: getStyles('menu', props),
    className: cx({
      menu: true
    }, className)
  }, innerProps, {
    ref: innerRef
  }), children);
};
// Menu List
// ==============================

var menuListCSS = function menuListCSS(_ref4) {
  var maxHeight = _ref4.maxHeight,
      baseUnit = _ref4.theme.spacing.baseUnit;
  return {
    maxHeight: maxHeight,
    overflowY: 'auto',
    paddingBottom: baseUnit,
    paddingTop: baseUnit,
    position: 'relative',
    // required for offset[Height, Top] > keyboard scroll
    WebkitOverflowScrolling: 'touch'
  };
};
var MenuList = function MenuList(props) {
  var children = props.children,
      className = props.className,
      cx = props.cx,
      getStyles = props.getStyles,
      isMulti = props.isMulti,
      innerRef = props.innerRef,
      innerProps = props.innerProps;
  return jsx("div", _extends$d({
    css: getStyles('menuList', props),
    className: cx({
      'menu-list': true,
      'menu-list--is-multi': isMulti
    }, className),
    ref: innerRef
  }, innerProps), children);
}; // ==============================
// Menu Notices
// ==============================

var noticeCSS = function noticeCSS(_ref5) {
  var _ref5$theme = _ref5.theme,
      baseUnit = _ref5$theme.spacing.baseUnit,
      colors = _ref5$theme.colors;
  return {
    color: colors.neutral40,
    padding: "".concat(baseUnit * 2, "px ").concat(baseUnit * 3, "px"),
    textAlign: 'center'
  };
};

var noOptionsMessageCSS = noticeCSS;
var loadingMessageCSS = noticeCSS;
var NoOptionsMessage = function NoOptionsMessage(props) {
  var children = props.children,
      className = props.className,
      cx = props.cx,
      getStyles = props.getStyles,
      innerProps = props.innerProps;
  return jsx("div", _extends$d({
    css: getStyles('noOptionsMessage', props),
    className: cx({
      'menu-notice': true,
      'menu-notice--no-options': true
    }, className)
  }, innerProps), children);
};
NoOptionsMessage.defaultProps = {
  children: 'No options'
};
var LoadingMessage = function LoadingMessage(props) {
  var children = props.children,
      className = props.className,
      cx = props.cx,
      getStyles = props.getStyles,
      innerProps = props.innerProps;
  return jsx("div", _extends$d({
    css: getStyles('loadingMessage', props),
    className: cx({
      'menu-notice': true,
      'menu-notice--loading': true
    }, className)
  }, innerProps), children);
};
LoadingMessage.defaultProps = {
  children: 'Loading...'
}; // ==============================
// Menu Portal
// ==============================

var menuPortalCSS = function menuPortalCSS(_ref6) {
  var rect = _ref6.rect,
      offset = _ref6.offset,
      position = _ref6.position;
  return {
    left: rect.left,
    position: position,
    top: offset,
    width: rect.width,
    zIndex: 1
  };
};
var MenuPortal = /*#__PURE__*/function (_Component2) {
  _inherits$8(MenuPortal, _Component2);

  var _super2 = _createSuper$l(MenuPortal);

  function MenuPortal() {
    var _this2;

    _classCallCheck$8(this, MenuPortal);

    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    _this2 = _super2.call.apply(_super2, [this].concat(args));
    _this2.state = {
      placement: null
    };

    _this2.getPortalPlacement = function (_ref7) {
      var placement = _ref7.placement;
      var initialPlacement = coercePlacement(_this2.props.menuPlacement); // avoid re-renders if the placement has not changed

      if (placement !== initialPlacement) {
        _this2.setState({
          placement: placement
        });
      }
    };

    return _this2;
  }

  _createClass$8(MenuPortal, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          appendTo = _this$props2.appendTo,
          children = _this$props2.children,
          controlElement = _this$props2.controlElement,
          menuPlacement = _this$props2.menuPlacement,
          position = _this$props2.menuPosition,
          getStyles = _this$props2.getStyles;
      var isFixed = position === 'fixed'; // bail early if required elements aren't present

      if (!appendTo && !isFixed || !controlElement) {
        return null;
      }

      var placement = this.state.placement || coercePlacement(menuPlacement);
      var rect = getBoundingClientObj(controlElement);
      var scrollDistance = isFixed ? 0 : window.pageYOffset;
      var offset = rect[placement] + scrollDistance;
      var state = {
        offset: offset,
        position: position,
        rect: rect
      }; // same wrapper element whether fixed or portalled

      var menuWrapper = jsx("div", {
        css: getStyles('menuPortal', state)
      }, children);
      return jsx(PortalPlacementContext.Provider, {
        value: {
          getPortalPlacement: this.getPortalPlacement
        }
      }, appendTo ? /*#__PURE__*/reactDom.exports.createPortal(menuWrapper, appendTo) : menuWrapper);
    }
  }]);

  return MenuPortal;
}(Component$1);

var isArray$2 = Array.isArray;
var keyList$1 = Object.keys;
var hasProp$1 = Object.prototype.hasOwnProperty;

function equal$2(a, b) {
  // fast-deep-equal index.js 2.0.1
  if (a === b) return true;

  if (a && b && _typeof$3(a) == 'object' && _typeof$3(b) == 'object') {
    var arrA = isArray$2(a),
        arrB = isArray$2(b),
        i,
        length,
        key;

    if (arrA && arrB) {
      length = a.length;
      if (length != b.length) return false;

      for (i = length; i-- !== 0;) {
        if (!equal$2(a[i], b[i])) return false;
      }

      return true;
    }

    if (arrA != arrB) return false;
    var dateA = a instanceof Date,
        dateB = b instanceof Date;
    if (dateA != dateB) return false;
    if (dateA && dateB) return a.getTime() == b.getTime();
    var regexpA = a instanceof RegExp,
        regexpB = b instanceof RegExp;
    if (regexpA != regexpB) return false;
    if (regexpA && regexpB) return a.toString() == b.toString();
    var keys = keyList$1(a);
    length = keys.length;

    if (length !== keyList$1(b).length) {
      return false;
    }

    for (i = length; i-- !== 0;) {
      if (!hasProp$1.call(b, keys[i])) return false;
    } // end fast-deep-equal
    // Custom handling for React


    for (i = length; i-- !== 0;) {
      key = keys[i];

      if (key === '_owner' && a.$$typeof) {
        // React-specific: avoid traversing React elements' _owner.
        //  _owner contains circular references
        // and is not needed when comparing the actual elements (and not their owners)
        // .$$typeof and ._store on just reasonable markers of a react element
        continue;
      } else {
        // all other properties should be traversed as usual
        if (!equal$2(a[key], b[key])) return false;
      }
    } // fast-deep-equal index.js 2.0.1


    return true;
  }

  return a !== a && b !== b;
} // end fast-deep-equal


function exportedEqual(a, b) {
  try {
    return equal$2(a, b);
  } catch (error) {
    if (error.message && error.message.match(/stack|recursion/i)) {
      // warn on circular references, don't crash
      // browsers give this different errors name and messages:
      // chrome/safari: "RangeError", "Maximum call stack size exceeded"
      // firefox: "InternalError", too much recursion"
      // edge: "Error", "Out of stack space"
      console.warn('Warning: react-fast-compare does not handle circular references.', error.name, error.message);
      return false;
    } // some other error. we should definitely know about these


    throw error;
  }
}

var containerCSS = function containerCSS(_ref) {
  var isDisabled = _ref.isDisabled,
      isRtl = _ref.isRtl;
  return {
    label: 'container',
    direction: isRtl ? 'rtl' : null,
    pointerEvents: isDisabled ? 'none' : null,
    // cancel mouse events when disabled
    position: 'relative'
  };
};
var SelectContainer = function SelectContainer(props) {
  var children = props.children,
      className = props.className,
      cx = props.cx,
      getStyles = props.getStyles,
      innerProps = props.innerProps,
      isDisabled = props.isDisabled,
      isRtl = props.isRtl;
  return jsx("div", _extends$d({
    css: getStyles('container', props),
    className: cx({
      '--is-disabled': isDisabled,
      '--is-rtl': isRtl
    }, className)
  }, innerProps), children);
}; // ==============================
// Value Container
// ==============================

var valueContainerCSS = function valueContainerCSS(_ref2) {
  var spacing = _ref2.theme.spacing;
  return {
    alignItems: 'center',
    display: 'flex',
    flex: 1,
    flexWrap: 'wrap',
    padding: "".concat(spacing.baseUnit / 2, "px ").concat(spacing.baseUnit * 2, "px"),
    WebkitOverflowScrolling: 'touch',
    position: 'relative',
    overflow: 'hidden'
  };
};
var ValueContainer = function ValueContainer(props) {
  var children = props.children,
      className = props.className,
      cx = props.cx,
      isMulti = props.isMulti,
      getStyles = props.getStyles,
      hasValue = props.hasValue;
  return jsx("div", {
    css: getStyles('valueContainer', props),
    className: cx({
      'value-container': true,
      'value-container--is-multi': isMulti,
      'value-container--has-value': hasValue
    }, className)
  }, children);
}; // ==============================
// Indicator Container
// ==============================

var indicatorsContainerCSS = function indicatorsContainerCSS() {
  return {
    alignItems: 'center',
    alignSelf: 'stretch',
    display: 'flex',
    flexShrink: 0
  };
};
var IndicatorsContainer = function IndicatorsContainer(props) {
  var children = props.children,
      className = props.className,
      cx = props.cx,
      getStyles = props.getStyles;
  return jsx("div", {
    css: getStyles('indicatorsContainer', props),
    className: cx({
      indicators: true
    }, className)
  }, children);
};

function _templateObject$2() {
  var data = _taggedTemplateLiteral(["\n  0%, 80%, 100% { opacity: 0; }\n  40% { opacity: 1; }\n"]);

  _templateObject$2 = function _templateObject() {
    return data;
  };

  return data;
}

function _EMOTION_STRINGIFIED_CSS_ERROR__$2() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }

var _ref2 = process.env.NODE_ENV === "production" ? {
  name: "19bqh2r",
  styles: "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;"
} : {
  name: "19bqh2r",
  styles: "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__$2
};

// ==============================
// Dropdown & Clear Icons
// ==============================
var Svg = function Svg(_ref) {
  var size = _ref.size,
      props = _objectWithoutProperties$3(_ref, ["size"]);

  return jsx("svg", _extends$d({
    height: size,
    width: size,
    viewBox: "0 0 20 20",
    "aria-hidden": "true",
    focusable: "false",
    css: _ref2
  }, props));
};

var CrossIcon = function CrossIcon(props) {
  return jsx(Svg, _extends$d({
    size: 20
  }, props), jsx("path", {
    d: "M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
  }));
};
var DownChevron = function DownChevron(props) {
  return jsx(Svg, _extends$d({
    size: 20
  }, props), jsx("path", {
    d: "M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
  }));
}; // ==============================
// Dropdown & Clear Buttons
// ==============================

var baseCSS = function baseCSS(_ref3) {
  var isFocused = _ref3.isFocused,
      _ref3$theme = _ref3.theme,
      baseUnit = _ref3$theme.spacing.baseUnit,
      colors = _ref3$theme.colors;
  return {
    label: 'indicatorContainer',
    color: isFocused ? colors.neutral60 : colors.neutral20,
    display: 'flex',
    padding: baseUnit * 2,
    transition: 'color 150ms',
    ':hover': {
      color: isFocused ? colors.neutral80 : colors.neutral40
    }
  };
};

var dropdownIndicatorCSS = baseCSS;
var DropdownIndicator$1 = function DropdownIndicator(props) {
  var children = props.children,
      className = props.className,
      cx = props.cx,
      getStyles = props.getStyles,
      innerProps = props.innerProps;
  return jsx("div", _extends$d({}, innerProps, {
    css: getStyles('dropdownIndicator', props),
    className: cx({
      indicator: true,
      'dropdown-indicator': true
    }, className)
  }), children || jsx(DownChevron, null));
};
var clearIndicatorCSS = baseCSS;
var ClearIndicator$1 = function ClearIndicator(props) {
  var children = props.children,
      className = props.className,
      cx = props.cx,
      getStyles = props.getStyles,
      innerProps = props.innerProps;
  return jsx("div", _extends$d({}, innerProps, {
    css: getStyles('clearIndicator', props),
    className: cx({
      indicator: true,
      'clear-indicator': true
    }, className)
  }), children || jsx(CrossIcon, null));
}; // ==============================
// Separator
// ==============================

var indicatorSeparatorCSS = function indicatorSeparatorCSS(_ref4) {
  var isDisabled = _ref4.isDisabled,
      _ref4$theme = _ref4.theme,
      baseUnit = _ref4$theme.spacing.baseUnit,
      colors = _ref4$theme.colors;
  return {
    label: 'indicatorSeparator',
    alignSelf: 'stretch',
    backgroundColor: isDisabled ? colors.neutral10 : colors.neutral20,
    marginBottom: baseUnit * 2,
    marginTop: baseUnit * 2,
    width: 1
  };
};
var IndicatorSeparator$1 = function IndicatorSeparator(props) {
  var className = props.className,
      cx = props.cx,
      getStyles = props.getStyles,
      innerProps = props.innerProps;
  return jsx("span", _extends$d({}, innerProps, {
    css: getStyles('indicatorSeparator', props),
    className: cx({
      'indicator-separator': true
    }, className)
  }));
}; // ==============================
// Loading
// ==============================

var loadingDotAnimations = keyframes(_templateObject$2());
var loadingIndicatorCSS = function loadingIndicatorCSS(_ref5) {
  var isFocused = _ref5.isFocused,
      size = _ref5.size,
      _ref5$theme = _ref5.theme,
      colors = _ref5$theme.colors,
      baseUnit = _ref5$theme.spacing.baseUnit;
  return {
    label: 'loadingIndicator',
    color: isFocused ? colors.neutral60 : colors.neutral20,
    display: 'flex',
    padding: baseUnit * 2,
    transition: 'color 150ms',
    alignSelf: 'center',
    fontSize: size,
    lineHeight: 1,
    marginRight: size,
    textAlign: 'center',
    verticalAlign: 'middle'
  };
};

var LoadingDot = function LoadingDot(_ref6) {
  var delay = _ref6.delay,
      offset = _ref6.offset;
  return jsx("span", {
    css: /*#__PURE__*/css$2({
      animation: "".concat(loadingDotAnimations, " 1s ease-in-out ").concat(delay, "ms infinite;"),
      backgroundColor: 'currentColor',
      borderRadius: '1em',
      display: 'inline-block',
      marginLeft: offset ? '1em' : null,
      height: '1em',
      verticalAlign: 'top',
      width: '1em'
    }, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */")
  });
};

var LoadingIndicator$2 = function LoadingIndicator(props) {
  var className = props.className,
      cx = props.cx,
      getStyles = props.getStyles,
      innerProps = props.innerProps,
      isRtl = props.isRtl;
  return jsx("div", _extends$d({}, innerProps, {
    css: getStyles('loadingIndicator', props),
    className: cx({
      indicator: true,
      'loading-indicator': true
    }, className)
  }), jsx(LoadingDot, {
    delay: 0,
    offset: isRtl
  }), jsx(LoadingDot, {
    delay: 160,
    offset: true
  }), jsx(LoadingDot, {
    delay: 320,
    offset: !isRtl
  }));
};
LoadingIndicator$2.defaultProps = {
  size: 4
};

var css = function css(_ref) {
  var isDisabled = _ref.isDisabled,
      isFocused = _ref.isFocused,
      _ref$theme = _ref.theme,
      colors = _ref$theme.colors,
      borderRadius = _ref$theme.borderRadius,
      spacing = _ref$theme.spacing;
  return {
    label: 'control',
    alignItems: 'center',
    backgroundColor: isDisabled ? colors.neutral5 : colors.neutral0,
    borderColor: isDisabled ? colors.neutral10 : isFocused ? colors.primary : colors.neutral20,
    borderRadius: borderRadius,
    borderStyle: 'solid',
    borderWidth: 1,
    boxShadow: isFocused ? "0 0 0 1px ".concat(colors.primary) : null,
    cursor: 'default',
    display: 'flex',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
    minHeight: spacing.controlHeight,
    outline: '0 !important',
    position: 'relative',
    transition: 'all 100ms',
    '&:hover': {
      borderColor: isFocused ? colors.primary : colors.neutral30
    }
  };
};

var Control = function Control(props) {
  var children = props.children,
      cx = props.cx,
      getStyles = props.getStyles,
      className = props.className,
      isDisabled = props.isDisabled,
      isFocused = props.isFocused,
      innerRef = props.innerRef,
      innerProps = props.innerProps,
      menuIsOpen = props.menuIsOpen;
  return jsx("div", _extends$d({
    ref: innerRef,
    css: getStyles('control', props),
    className: cx({
      control: true,
      'control--is-disabled': isDisabled,
      'control--is-focused': isFocused,
      'control--menu-is-open': menuIsOpen
    }, className)
  }, innerProps), children);
};

function ownKeys$1$3(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1$3(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$1$3(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$1$3(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var groupCSS = function groupCSS(_ref) {
  var spacing = _ref.theme.spacing;
  return {
    paddingBottom: spacing.baseUnit * 2,
    paddingTop: spacing.baseUnit * 2
  };
};

var Group$2 = function Group(props) {
  var children = props.children,
      className = props.className,
      cx = props.cx,
      getStyles = props.getStyles,
      Heading = props.Heading,
      headingProps = props.headingProps,
      label = props.label,
      theme = props.theme,
      selectProps = props.selectProps;
  return jsx("div", {
    css: getStyles('group', props),
    className: cx({
      group: true
    }, className)
  }, jsx(Heading, _extends$d({}, headingProps, {
    selectProps: selectProps,
    theme: theme,
    getStyles: getStyles,
    cx: cx
  }), label), jsx("div", null, children));
};

var groupHeadingCSS = function groupHeadingCSS(_ref2) {
  var spacing = _ref2.theme.spacing;
  return {
    label: 'group',
    color: '#999',
    cursor: 'default',
    display: 'block',
    fontSize: '75%',
    fontWeight: '500',
    marginBottom: '0.25em',
    paddingLeft: spacing.baseUnit * 3,
    paddingRight: spacing.baseUnit * 3,
    textTransform: 'uppercase'
  };
};
var GroupHeading = function GroupHeading(props) {
  var className = props.className,
      cx = props.cx,
      getStyles = props.getStyles,
      theme = props.theme;
      props.selectProps;
      var cleanProps = _objectWithoutProperties$3(props, ["className", "cx", "getStyles", "theme", "selectProps"]);

  return jsx("div", _extends$d({
    css: getStyles('groupHeading', _objectSpread$1$3({
      theme: theme
    }, cleanProps)),
    className: cx({
      'group-heading': true
    }, className)
  }, cleanProps));
};

function ownKeys$2$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2$2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$2$2(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$2$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var inputCSS = function inputCSS(_ref) {
  var isDisabled = _ref.isDisabled,
      _ref$theme = _ref.theme,
      spacing = _ref$theme.spacing,
      colors = _ref$theme.colors;
  return {
    margin: spacing.baseUnit / 2,
    paddingBottom: spacing.baseUnit / 2,
    paddingTop: spacing.baseUnit / 2,
    visibility: isDisabled ? 'hidden' : 'visible',
    color: colors.neutral80
  };
};

var inputStyle = function inputStyle(isHidden) {
  return {
    label: 'input',
    background: 0,
    border: 0,
    fontSize: 'inherit',
    opacity: isHidden ? 0 : 1,
    outline: 0,
    padding: 0,
    color: 'inherit'
  };
};

var Input$2 = function Input(_ref2) {
  var className = _ref2.className,
      cx = _ref2.cx,
      getStyles = _ref2.getStyles,
      innerRef = _ref2.innerRef,
      isHidden = _ref2.isHidden,
      isDisabled = _ref2.isDisabled,
      theme = _ref2.theme;
      _ref2.selectProps;
      var props = _objectWithoutProperties$3(_ref2, ["className", "cx", "getStyles", "innerRef", "isHidden", "isDisabled", "theme", "selectProps"]);

  return jsx("div", {
    css: getStyles('input', _objectSpread$2$2({
      theme: theme
    }, props))
  }, jsx(_default$7, _extends$d({
    className: cx({
      input: true
    }, className),
    inputRef: innerRef,
    inputStyle: inputStyle(isHidden),
    disabled: isDisabled
  }, props)));
};

function ownKeys$3$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$3$1(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$3$1(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$3$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var multiValueCSS = function multiValueCSS(_ref) {
  var _ref$theme = _ref.theme,
      spacing = _ref$theme.spacing,
      borderRadius = _ref$theme.borderRadius,
      colors = _ref$theme.colors;
  return {
    label: 'multiValue',
    backgroundColor: colors.neutral10,
    borderRadius: borderRadius / 2,
    display: 'flex',
    margin: spacing.baseUnit / 2,
    minWidth: 0 // resolves flex/text-overflow bug

  };
};
var multiValueLabelCSS = function multiValueLabelCSS(_ref2) {
  var _ref2$theme = _ref2.theme,
      borderRadius = _ref2$theme.borderRadius,
      colors = _ref2$theme.colors,
      cropWithEllipsis = _ref2.cropWithEllipsis;
  return {
    borderRadius: borderRadius / 2,
    color: colors.neutral80,
    fontSize: '85%',
    overflow: 'hidden',
    padding: 3,
    paddingLeft: 6,
    textOverflow: cropWithEllipsis ? 'ellipsis' : null,
    whiteSpace: 'nowrap'
  };
};
var multiValueRemoveCSS = function multiValueRemoveCSS(_ref3) {
  var _ref3$theme = _ref3.theme,
      spacing = _ref3$theme.spacing,
      borderRadius = _ref3$theme.borderRadius,
      colors = _ref3$theme.colors,
      isFocused = _ref3.isFocused;
  return {
    alignItems: 'center',
    borderRadius: borderRadius / 2,
    backgroundColor: isFocused && colors.dangerLight,
    display: 'flex',
    paddingLeft: spacing.baseUnit,
    paddingRight: spacing.baseUnit,
    ':hover': {
      backgroundColor: colors.dangerLight,
      color: colors.danger
    }
  };
};
var MultiValueGeneric = function MultiValueGeneric(_ref4) {
  var children = _ref4.children,
      innerProps = _ref4.innerProps;
  return jsx("div", innerProps, children);
};
var MultiValueContainer = MultiValueGeneric;
var MultiValueLabel = MultiValueGeneric;
function MultiValueRemove$1(_ref5) {
  var children = _ref5.children,
      innerProps = _ref5.innerProps;
  return jsx("div", innerProps, children || jsx(CrossIcon, {
    size: 14
  }));
}

var MultiValue = function MultiValue(props) {
  var children = props.children,
      className = props.className,
      components = props.components,
      cx = props.cx,
      data = props.data,
      getStyles = props.getStyles,
      innerProps = props.innerProps,
      isDisabled = props.isDisabled,
      removeProps = props.removeProps,
      selectProps = props.selectProps;
  var Container = components.Container,
      Label = components.Label,
      Remove = components.Remove;
  return jsx(ClassNames, null, function (_ref6) {
    var css = _ref6.css,
        emotionCx = _ref6.cx;
    return jsx(Container, {
      data: data,
      innerProps: _objectSpread$3$1(_objectSpread$3$1({}, innerProps), {}, {
        className: emotionCx(css(getStyles('multiValue', props)), cx({
          'multi-value': true,
          'multi-value--is-disabled': isDisabled
        }, className))
      }),
      selectProps: selectProps
    }, jsx(Label, {
      data: data,
      innerProps: {
        className: emotionCx(css(getStyles('multiValueLabel', props)), cx({
          'multi-value__label': true
        }, className))
      },
      selectProps: selectProps
    }, children), jsx(Remove, {
      data: data,
      innerProps: _objectSpread$3$1({
        className: emotionCx(css(getStyles('multiValueRemove', props)), cx({
          'multi-value__remove': true
        }, className))
      }, removeProps),
      selectProps: selectProps
    }));
  });
};

MultiValue.defaultProps = {
  cropWithEllipsis: true
};

var optionCSS = function optionCSS(_ref) {
  var isDisabled = _ref.isDisabled,
      isFocused = _ref.isFocused,
      isSelected = _ref.isSelected,
      _ref$theme = _ref.theme,
      spacing = _ref$theme.spacing,
      colors = _ref$theme.colors;
  return {
    label: 'option',
    backgroundColor: isSelected ? colors.primary : isFocused ? colors.primary25 : 'transparent',
    color: isDisabled ? colors.neutral20 : isSelected ? colors.neutral0 : 'inherit',
    cursor: 'default',
    display: 'block',
    fontSize: 'inherit',
    padding: "".concat(spacing.baseUnit * 2, "px ").concat(spacing.baseUnit * 3, "px"),
    width: '100%',
    userSelect: 'none',
    WebkitTapHighlightColor: 'rgba(0, 0, 0, 0)',
    // provide some affordance on touch devices
    ':active': {
      backgroundColor: !isDisabled && (isSelected ? colors.primary : colors.primary50)
    }
  };
};

var Option = function Option(props) {
  var children = props.children,
      className = props.className,
      cx = props.cx,
      getStyles = props.getStyles,
      isDisabled = props.isDisabled,
      isFocused = props.isFocused,
      isSelected = props.isSelected,
      innerRef = props.innerRef,
      innerProps = props.innerProps;
  return jsx("div", _extends$d({
    css: getStyles('option', props),
    className: cx({
      option: true,
      'option--is-disabled': isDisabled,
      'option--is-focused': isFocused,
      'option--is-selected': isSelected
    }, className),
    ref: innerRef
  }, innerProps), children);
};

var placeholderCSS = function placeholderCSS(_ref) {
  var _ref$theme = _ref.theme,
      spacing = _ref$theme.spacing,
      colors = _ref$theme.colors;
  return {
    label: 'placeholder',
    color: colors.neutral50,
    marginLeft: spacing.baseUnit / 2,
    marginRight: spacing.baseUnit / 2,
    position: 'absolute',
    top: '50%',
    transform: 'translateY(-50%)'
  };
};

var Placeholder = function Placeholder(props) {
  var children = props.children,
      className = props.className,
      cx = props.cx,
      getStyles = props.getStyles,
      innerProps = props.innerProps;
  return jsx("div", _extends$d({
    css: getStyles('placeholder', props),
    className: cx({
      placeholder: true
    }, className)
  }, innerProps), children);
};

var css$1 = function css(_ref) {
  var isDisabled = _ref.isDisabled,
      _ref$theme = _ref.theme,
      spacing = _ref$theme.spacing,
      colors = _ref$theme.colors;
  return {
    label: 'singleValue',
    color: isDisabled ? colors.neutral40 : colors.neutral80,
    marginLeft: spacing.baseUnit / 2,
    marginRight: spacing.baseUnit / 2,
    maxWidth: "calc(100% - ".concat(spacing.baseUnit * 2, "px)"),
    overflow: 'hidden',
    position: 'absolute',
    textOverflow: 'ellipsis',
    whiteSpace: 'nowrap',
    top: '50%',
    transform: 'translateY(-50%)'
  };
};

var SingleValue = function SingleValue(props) {
  var children = props.children,
      className = props.className,
      cx = props.cx,
      getStyles = props.getStyles,
      isDisabled = props.isDisabled,
      innerProps = props.innerProps;
  return jsx("div", _extends$d({
    css: getStyles('singleValue', props),
    className: cx({
      'single-value': true,
      'single-value--is-disabled': isDisabled
    }, className)
  }, innerProps), children);
};

function ownKeys$4$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$4$1(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$4$1(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$4$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var components = {
  ClearIndicator: ClearIndicator$1,
  Control: Control,
  DropdownIndicator: DropdownIndicator$1,
  DownChevron: DownChevron,
  CrossIcon: CrossIcon,
  Group: Group$2,
  GroupHeading: GroupHeading,
  IndicatorsContainer: IndicatorsContainer,
  IndicatorSeparator: IndicatorSeparator$1,
  Input: Input$2,
  LoadingIndicator: LoadingIndicator$2,
  Menu: Menu,
  MenuList: MenuList,
  MenuPortal: MenuPortal,
  LoadingMessage: LoadingMessage,
  NoOptionsMessage: NoOptionsMessage,
  MultiValue: MultiValue,
  MultiValueContainer: MultiValueContainer,
  MultiValueLabel: MultiValueLabel,
  MultiValueRemove: MultiValueRemove$1,
  Option: Option,
  Placeholder: Placeholder,
  SelectContainer: SelectContainer,
  SingleValue: SingleValue,
  ValueContainer: ValueContainer
};
var defaultComponents$1 = function defaultComponents(props) {
  return _objectSpread$4$1(_objectSpread$4$1({}, components), props.components);
};

var diacritics = [{
  base: 'A',
  letters: "A\u24B6\uFF21\xC0\xC1\xC2\u1EA6\u1EA4\u1EAA\u1EA8\xC3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\xC4\u01DE\u1EA2\xC5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F"
}, {
  base: 'AA',
  letters: "\uA732"
}, {
  base: 'AE',
  letters: "\xC6\u01FC\u01E2"
}, {
  base: 'AO',
  letters: "\uA734"
}, {
  base: 'AU',
  letters: "\uA736"
}, {
  base: 'AV',
  letters: "\uA738\uA73A"
}, {
  base: 'AY',
  letters: "\uA73C"
}, {
  base: 'B',
  letters: "B\u24B7\uFF22\u1E02\u1E04\u1E06\u0243\u0182\u0181"
}, {
  base: 'C',
  letters: "C\u24B8\uFF23\u0106\u0108\u010A\u010C\xC7\u1E08\u0187\u023B\uA73E"
}, {
  base: 'D',
  letters: "D\u24B9\uFF24\u1E0A\u010E\u1E0C\u1E10\u1E12\u1E0E\u0110\u018B\u018A\u0189\uA779"
}, {
  base: 'DZ',
  letters: "\u01F1\u01C4"
}, {
  base: 'Dz',
  letters: "\u01F2\u01C5"
}, {
  base: 'E',
  letters: "E\u24BA\uFF25\xC8\xC9\xCA\u1EC0\u1EBE\u1EC4\u1EC2\u1EBC\u0112\u1E14\u1E16\u0114\u0116\xCB\u1EBA\u011A\u0204\u0206\u1EB8\u1EC6\u0228\u1E1C\u0118\u1E18\u1E1A\u0190\u018E"
}, {
  base: 'F',
  letters: "F\u24BB\uFF26\u1E1E\u0191\uA77B"
}, {
  base: 'G',
  letters: "G\u24BC\uFF27\u01F4\u011C\u1E20\u011E\u0120\u01E6\u0122\u01E4\u0193\uA7A0\uA77D\uA77E"
}, {
  base: 'H',
  letters: "H\u24BD\uFF28\u0124\u1E22\u1E26\u021E\u1E24\u1E28\u1E2A\u0126\u2C67\u2C75\uA78D"
}, {
  base: 'I',
  letters: "I\u24BE\uFF29\xCC\xCD\xCE\u0128\u012A\u012C\u0130\xCF\u1E2E\u1EC8\u01CF\u0208\u020A\u1ECA\u012E\u1E2C\u0197"
}, {
  base: 'J',
  letters: "J\u24BF\uFF2A\u0134\u0248"
}, {
  base: 'K',
  letters: "K\u24C0\uFF2B\u1E30\u01E8\u1E32\u0136\u1E34\u0198\u2C69\uA740\uA742\uA744\uA7A2"
}, {
  base: 'L',
  letters: "L\u24C1\uFF2C\u013F\u0139\u013D\u1E36\u1E38\u013B\u1E3C\u1E3A\u0141\u023D\u2C62\u2C60\uA748\uA746\uA780"
}, {
  base: 'LJ',
  letters: "\u01C7"
}, {
  base: 'Lj',
  letters: "\u01C8"
}, {
  base: 'M',
  letters: "M\u24C2\uFF2D\u1E3E\u1E40\u1E42\u2C6E\u019C"
}, {
  base: 'N',
  letters: "N\u24C3\uFF2E\u01F8\u0143\xD1\u1E44\u0147\u1E46\u0145\u1E4A\u1E48\u0220\u019D\uA790\uA7A4"
}, {
  base: 'NJ',
  letters: "\u01CA"
}, {
  base: 'Nj',
  letters: "\u01CB"
}, {
  base: 'O',
  letters: "O\u24C4\uFF2F\xD2\xD3\xD4\u1ED2\u1ED0\u1ED6\u1ED4\xD5\u1E4C\u022C\u1E4E\u014C\u1E50\u1E52\u014E\u022E\u0230\xD6\u022A\u1ECE\u0150\u01D1\u020C\u020E\u01A0\u1EDC\u1EDA\u1EE0\u1EDE\u1EE2\u1ECC\u1ED8\u01EA\u01EC\xD8\u01FE\u0186\u019F\uA74A\uA74C"
}, {
  base: 'OI',
  letters: "\u01A2"
}, {
  base: 'OO',
  letters: "\uA74E"
}, {
  base: 'OU',
  letters: "\u0222"
}, {
  base: 'P',
  letters: "P\u24C5\uFF30\u1E54\u1E56\u01A4\u2C63\uA750\uA752\uA754"
}, {
  base: 'Q',
  letters: "Q\u24C6\uFF31\uA756\uA758\u024A"
}, {
  base: 'R',
  letters: "R\u24C7\uFF32\u0154\u1E58\u0158\u0210\u0212\u1E5A\u1E5C\u0156\u1E5E\u024C\u2C64\uA75A\uA7A6\uA782"
}, {
  base: 'S',
  letters: "S\u24C8\uFF33\u1E9E\u015A\u1E64\u015C\u1E60\u0160\u1E66\u1E62\u1E68\u0218\u015E\u2C7E\uA7A8\uA784"
}, {
  base: 'T',
  letters: "T\u24C9\uFF34\u1E6A\u0164\u1E6C\u021A\u0162\u1E70\u1E6E\u0166\u01AC\u01AE\u023E\uA786"
}, {
  base: 'TZ',
  letters: "\uA728"
}, {
  base: 'U',
  letters: "U\u24CA\uFF35\xD9\xDA\xDB\u0168\u1E78\u016A\u1E7A\u016C\xDC\u01DB\u01D7\u01D5\u01D9\u1EE6\u016E\u0170\u01D3\u0214\u0216\u01AF\u1EEA\u1EE8\u1EEE\u1EEC\u1EF0\u1EE4\u1E72\u0172\u1E76\u1E74\u0244"
}, {
  base: 'V',
  letters: "V\u24CB\uFF36\u1E7C\u1E7E\u01B2\uA75E\u0245"
}, {
  base: 'VY',
  letters: "\uA760"
}, {
  base: 'W',
  letters: "W\u24CC\uFF37\u1E80\u1E82\u0174\u1E86\u1E84\u1E88\u2C72"
}, {
  base: 'X',
  letters: "X\u24CD\uFF38\u1E8A\u1E8C"
}, {
  base: 'Y',
  letters: "Y\u24CE\uFF39\u1EF2\xDD\u0176\u1EF8\u0232\u1E8E\u0178\u1EF6\u1EF4\u01B3\u024E\u1EFE"
}, {
  base: 'Z',
  letters: "Z\u24CF\uFF3A\u0179\u1E90\u017B\u017D\u1E92\u1E94\u01B5\u0224\u2C7F\u2C6B\uA762"
}, {
  base: 'a',
  letters: "a\u24D0\uFF41\u1E9A\xE0\xE1\xE2\u1EA7\u1EA5\u1EAB\u1EA9\xE3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\xE4\u01DF\u1EA3\xE5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250"
}, {
  base: 'aa',
  letters: "\uA733"
}, {
  base: 'ae',
  letters: "\xE6\u01FD\u01E3"
}, {
  base: 'ao',
  letters: "\uA735"
}, {
  base: 'au',
  letters: "\uA737"
}, {
  base: 'av',
  letters: "\uA739\uA73B"
}, {
  base: 'ay',
  letters: "\uA73D"
}, {
  base: 'b',
  letters: "b\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253"
}, {
  base: 'c',
  letters: "c\u24D2\uFF43\u0107\u0109\u010B\u010D\xE7\u1E09\u0188\u023C\uA73F\u2184"
}, {
  base: 'd',
  letters: "d\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\uA77A"
}, {
  base: 'dz',
  letters: "\u01F3\u01C6"
}, {
  base: 'e',
  letters: "e\u24D4\uFF45\xE8\xE9\xEA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\xEB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u025B\u01DD"
}, {
  base: 'f',
  letters: "f\u24D5\uFF46\u1E1F\u0192\uA77C"
}, {
  base: 'g',
  letters: "g\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\u1D79\uA77F"
}, {
  base: 'h',
  letters: "h\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265"
}, {
  base: 'hv',
  letters: "\u0195"
}, {
  base: 'i',
  letters: "i\u24D8\uFF49\xEC\xED\xEE\u0129\u012B\u012D\xEF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131"
}, {
  base: 'j',
  letters: "j\u24D9\uFF4A\u0135\u01F0\u0249"
}, {
  base: 'k',
  letters: "k\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3"
}, {
  base: 'l',
  letters: "l\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747"
}, {
  base: 'lj',
  letters: "\u01C9"
}, {
  base: 'm',
  letters: "m\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F"
}, {
  base: 'n',
  letters: "n\u24DD\uFF4E\u01F9\u0144\xF1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5"
}, {
  base: 'nj',
  letters: "\u01CC"
}, {
  base: 'o',
  letters: "o\u24DE\uFF4F\xF2\xF3\xF4\u1ED3\u1ED1\u1ED7\u1ED5\xF5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\xF6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\xF8\u01FF\u0254\uA74B\uA74D\u0275"
}, {
  base: 'oi',
  letters: "\u01A3"
}, {
  base: 'ou',
  letters: "\u0223"
}, {
  base: 'oo',
  letters: "\uA74F"
}, {
  base: 'p',
  letters: "p\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755"
}, {
  base: 'q',
  letters: "q\u24E0\uFF51\u024B\uA757\uA759"
}, {
  base: 'r',
  letters: "r\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783"
}, {
  base: 's',
  letters: "s\u24E2\uFF53\xDF\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B"
}, {
  base: 't',
  letters: "t\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787"
}, {
  base: 'tz',
  letters: "\uA729"
}, {
  base: 'u',
  letters: "u\u24E4\uFF55\xF9\xFA\xFB\u0169\u1E79\u016B\u1E7B\u016D\xFC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289"
}, {
  base: 'v',
  letters: "v\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C"
}, {
  base: 'vy',
  letters: "\uA761"
}, {
  base: 'w',
  letters: "w\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73"
}, {
  base: 'x',
  letters: "x\u24E7\uFF58\u1E8B\u1E8D"
}, {
  base: 'y',
  letters: "y\u24E8\uFF59\u1EF3\xFD\u0177\u1EF9\u0233\u1E8F\xFF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF"
}, {
  base: 'z',
  letters: "z\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763"
}];
var anyDiacritic = new RegExp('[' + diacritics.map(function (d) {
  return d.letters;
}).join('') + ']', 'g');
var diacriticToBase = {};

for (var i = 0; i < diacritics.length; i++) {
  var diacritic = diacritics[i];

  for (var j = 0; j < diacritic.letters.length; j++) {
    diacriticToBase[diacritic.letters[j]] = diacritic.base;
  }
}

var stripDiacritics = function stripDiacritics(str) {
  return str.replace(anyDiacritic, function (match) {
    return diacriticToBase[match];
  });
};

function ownKeys$o(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$n(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$o(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$o(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var trimString = function trimString(str) {
  return str.replace(/^\s+|\s+$/g, '');
};

var defaultStringify = function defaultStringify(option) {
  return "".concat(option.label, " ").concat(option.value);
};

var createFilter = function createFilter(config) {
  return function (option, rawInput) {
    var _ignoreCase$ignoreAcc = _objectSpread$n({
      ignoreCase: true,
      ignoreAccents: true,
      stringify: defaultStringify,
      trim: true,
      matchFrom: 'any'
    }, config),
        ignoreCase = _ignoreCase$ignoreAcc.ignoreCase,
        ignoreAccents = _ignoreCase$ignoreAcc.ignoreAccents,
        stringify = _ignoreCase$ignoreAcc.stringify,
        trim = _ignoreCase$ignoreAcc.trim,
        matchFrom = _ignoreCase$ignoreAcc.matchFrom;

    var input = trim ? trimString(rawInput) : rawInput;
    var candidate = trim ? trimString(stringify(option)) : stringify(option);

    if (ignoreCase) {
      input = input.toLowerCase();
      candidate = candidate.toLowerCase();
    }

    if (ignoreAccents) {
      input = stripDiacritics(input);
      candidate = stripDiacritics(candidate);
    }

    return matchFrom === 'start' ? candidate.substr(0, input.length) === input : candidate.indexOf(input) > -1;
  };
};

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }

var _ref$1 = process.env.NODE_ENV === "production" ? {
  name: "1laao21-a11yText",
  styles: "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap;"
} : {
  name: "1laao21-a11yText",
  styles: "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkExMXlUZXh0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVFJIiwiZmlsZSI6IkExMXlUZXh0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQGZsb3dcbi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IHsgdHlwZSBFbGVtZW50Q29uZmlnIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5cbi8vIEFzc2lzdGl2ZSB0ZXh0IHRvIGRlc2NyaWJlIHZpc3VhbCBlbGVtZW50cy4gSGlkZGVuIGZvciBzaWdodGVkIHVzZXJzLlxuY29uc3QgQTExeVRleHQgPSAocHJvcHM6IEVsZW1lbnRDb25maWc8J3NwYW4nPikgPT4gKFxuICA8c3BhblxuICAgIGNzcz17e1xuICAgICAgbGFiZWw6ICdhMTF5VGV4dCcsXG4gICAgICB6SW5kZXg6IDk5OTksXG4gICAgICBib3JkZXI6IDAsXG4gICAgICBjbGlwOiAncmVjdCgxcHgsIDFweCwgMXB4LCAxcHgpJyxcbiAgICAgIGhlaWdodDogMSxcbiAgICAgIHdpZHRoOiAxLFxuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgICBwYWRkaW5nOiAwLFxuICAgICAgd2hpdGVTcGFjZTogJ25vd3JhcCcsXG4gICAgfX1cbiAgICB7Li4ucHJvcHN9XG4gIC8+XG4pO1xuXG5leHBvcnQgZGVmYXVsdCBBMTF5VGV4dDtcbiJdfQ== */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

var A11yText = function A11yText(props) {
  return jsx("span", _extends$d({
    css: _ref$1
  }, props));
};

function DummyInput(_ref) {
  _ref.in;
      _ref.out;
      _ref.onExited;
      _ref.appear;
      _ref.enter;
      _ref.exit;
      var innerRef = _ref.innerRef;
      _ref.emotion;
      var props = _objectWithoutProperties$3(_ref, ["in", "out", "onExited", "appear", "enter", "exit", "innerRef", "emotion"]);

  return jsx("input", _extends$d({
    ref: innerRef
  }, props, {
    css: /*#__PURE__*/css$2({
      label: 'dummyInput',
      // get rid of any default styles
      background: 0,
      border: 0,
      fontSize: 'inherit',
      outline: 0,
      padding: 0,
      // important! without `width` browsers won't allow focus
      width: 1,
      // remove cursor on desktop
      color: 'transparent',
      // remove cursor on mobile whilst maintaining "scroll into view" behaviour
      left: -100,
      opacity: 0,
      position: 'relative',
      transform: 'scale(0)'
    }, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkR1bW15SW5wdXQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUJNIiwiZmlsZSI6IkR1bW15SW5wdXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAZmxvd1xuLyoqIEBqc3gganN4ICovXG5pbXBvcnQgeyBqc3ggfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRHVtbXlJbnB1dCh7XG4gIGluOiBpblByb3AsXG4gIG91dCxcbiAgb25FeGl0ZWQsXG4gIGFwcGVhcixcbiAgZW50ZXIsXG4gIGV4aXQsXG4gIGlubmVyUmVmLFxuICBlbW90aW9uLFxuICAuLi5wcm9wc1xufTogYW55KSB7XG4gIHJldHVybiAoXG4gICAgPGlucHV0XG4gICAgICByZWY9e2lubmVyUmVmfVxuICAgICAgey4uLnByb3BzfVxuICAgICAgY3NzPXt7XG4gICAgICAgIGxhYmVsOiAnZHVtbXlJbnB1dCcsXG4gICAgICAgIC8vIGdldCByaWQgb2YgYW55IGRlZmF1bHQgc3R5bGVzXG4gICAgICAgIGJhY2tncm91bmQ6IDAsXG4gICAgICAgIGJvcmRlcjogMCxcbiAgICAgICAgZm9udFNpemU6ICdpbmhlcml0JyxcbiAgICAgICAgb3V0bGluZTogMCxcbiAgICAgICAgcGFkZGluZzogMCxcbiAgICAgICAgLy8gaW1wb3J0YW50ISB3aXRob3V0IGB3aWR0aGAgYnJvd3NlcnMgd29uJ3QgYWxsb3cgZm9jdXNcbiAgICAgICAgd2lkdGg6IDEsXG5cbiAgICAgICAgLy8gcmVtb3ZlIGN1cnNvciBvbiBkZXNrdG9wXG4gICAgICAgIGNvbG9yOiAndHJhbnNwYXJlbnQnLFxuXG4gICAgICAgIC8vIHJlbW92ZSBjdXJzb3Igb24gbW9iaWxlIHdoaWxzdCBtYWludGFpbmluZyBcInNjcm9sbCBpbnRvIHZpZXdcIiBiZWhhdmlvdXJcbiAgICAgICAgbGVmdDogLTEwMCxcbiAgICAgICAgb3BhY2l0eTogMCxcbiAgICAgICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgICAgIHRyYW5zZm9ybTogJ3NjYWxlKDApJyxcbiAgICAgIH19XG4gICAgLz5cbiAgKTtcbn1cbiJdfQ== */")
  }));
}

function _createSuper$k(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$k(); return function _createSuperInternal() { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$8(this, result); }; }

function _isNativeReflectConstruct$k() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var NodeResolver$3 = /*#__PURE__*/function (_Component) {
  _inherits$8(NodeResolver, _Component);

  var _super = _createSuper$k(NodeResolver);

  function NodeResolver() {
    _classCallCheck$8(this, NodeResolver);

    return _super.apply(this, arguments);
  }

  _createClass$8(NodeResolver, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.props.innerRef(reactDom.exports.findDOMNode(this));
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.props.innerRef(null);
    }
  }, {
    key: "render",
    value: function render() {
      return this.props.children;
    }
  }]);

  return NodeResolver;
}(Component$1);

var STYLE_KEYS = ['boxSizing', 'height', 'overflow', 'paddingRight', 'position'];
var LOCK_STYLES = {
  boxSizing: 'border-box',
  // account for possible declaration `width: 100%;` on body
  overflow: 'hidden',
  position: 'relative',
  height: '100%'
};

function preventTouchMove(e) {
  e.preventDefault();
}
function allowTouchMove(e) {
  e.stopPropagation();
}
function preventInertiaScroll() {
  var top = this.scrollTop;
  var totalScroll = this.scrollHeight;
  var currentScroll = top + this.offsetHeight;

  if (top === 0) {
    this.scrollTop = 1;
  } else if (currentScroll === totalScroll) {
    this.scrollTop = top - 1;
  }
} // `ontouchstart` check works on most browsers
// `maxTouchPoints` works on IE10/11 and Surface

function isTouchDevice() {
  return 'ontouchstart' in window || navigator.maxTouchPoints;
}

function _createSuper$1$1(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$1$1(); return function _createSuperInternal() { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$8(this, result); }; }

function _isNativeReflectConstruct$1$1() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }
var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
var activeScrollLocks = 0;

var ScrollLock = /*#__PURE__*/function (_Component) {
  _inherits$8(ScrollLock, _Component);

  var _super = _createSuper$1$1(ScrollLock);

  function ScrollLock() {
    var _this;

    _classCallCheck$8(this, ScrollLock);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.originalStyles = {};
    _this.listenerOptions = {
      capture: false,
      passive: false
    };
    return _this;
  }

  _createClass$8(ScrollLock, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      if (!canUseDOM) return;
      var _this$props = this.props,
          accountForScrollbars = _this$props.accountForScrollbars,
          touchScrollTarget = _this$props.touchScrollTarget;
      var target = document.body;
      var targetStyle = target && target.style;

      if (accountForScrollbars) {
        // store any styles already applied to the body
        STYLE_KEYS.forEach(function (key) {
          var val = targetStyle && targetStyle[key];
          _this2.originalStyles[key] = val;
        });
      } // apply the lock styles and padding if this is the first scroll lock


      if (accountForScrollbars && activeScrollLocks < 1) {
        var currentPadding = parseInt(this.originalStyles.paddingRight, 10) || 0;
        var clientWidth = document.body ? document.body.clientWidth : 0;
        var adjustedPadding = window.innerWidth - clientWidth + currentPadding || 0;
        Object.keys(LOCK_STYLES).forEach(function (key) {
          var val = LOCK_STYLES[key];

          if (targetStyle) {
            targetStyle[key] = val;
          }
        });

        if (targetStyle) {
          targetStyle.paddingRight = "".concat(adjustedPadding, "px");
        }
      } // account for touch devices


      if (target && isTouchDevice()) {
        // Mobile Safari ignores { overflow: hidden } declaration on the body.
        target.addEventListener('touchmove', preventTouchMove, this.listenerOptions); // Allow scroll on provided target

        if (touchScrollTarget) {
          touchScrollTarget.addEventListener('touchstart', preventInertiaScroll, this.listenerOptions);
          touchScrollTarget.addEventListener('touchmove', allowTouchMove, this.listenerOptions);
        }
      } // increment active scroll locks


      activeScrollLocks += 1;
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var _this3 = this;

      if (!canUseDOM) return;
      var _this$props2 = this.props,
          accountForScrollbars = _this$props2.accountForScrollbars,
          touchScrollTarget = _this$props2.touchScrollTarget;
      var target = document.body;
      var targetStyle = target && target.style; // safely decrement active scroll locks

      activeScrollLocks = Math.max(activeScrollLocks - 1, 0); // reapply original body styles, if any

      if (accountForScrollbars && activeScrollLocks < 1) {
        STYLE_KEYS.forEach(function (key) {
          var val = _this3.originalStyles[key];

          if (targetStyle) {
            targetStyle[key] = val;
          }
        });
      } // remove touch listeners


      if (target && isTouchDevice()) {
        target.removeEventListener('touchmove', preventTouchMove, this.listenerOptions);

        if (touchScrollTarget) {
          touchScrollTarget.removeEventListener('touchstart', preventInertiaScroll, this.listenerOptions);
          touchScrollTarget.removeEventListener('touchmove', allowTouchMove, this.listenerOptions);
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      return null;
    }
  }]);

  return ScrollLock;
}(Component$1);

ScrollLock.defaultProps = {
  accountForScrollbars: true
};

function _EMOTION_STRINGIFIED_CSS_ERROR__$1() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }

function _createSuper$2$1(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$2$1(); return function _createSuperInternal() { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$8(this, result); }; }

function _isNativeReflectConstruct$2$1() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var _ref$1$1 = process.env.NODE_ENV === "production" ? {
  name: "1dsbpcp",
  styles: "position:fixed;left:0;bottom:0;right:0;top:0;"
} : {
  name: "1dsbpcp",
  styles: "position:fixed;left:0;bottom:0;right:0;top:0;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNjcm9sbEJsb2NrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTZEVSIsImZpbGUiOiJTY3JvbGxCbG9jay5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBmbG93XG4vKiogQGpzeCBqc3ggKi9cbmltcG9ydCB7IFB1cmVDb21wb25lbnQsIHR5cGUgRWxlbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IE5vZGVSZXNvbHZlciBmcm9tICcuL05vZGVSZXNvbHZlcic7XG5pbXBvcnQgU2Nyb2xsTG9jayBmcm9tICcuL1Njcm9sbExvY2svaW5kZXgnO1xuXG50eXBlIFByb3BzID0ge1xuICBjaGlsZHJlbjogRWxlbWVudDwqPixcbiAgaXNFbmFibGVkOiBib29sZWFuLFxufTtcbnR5cGUgU3RhdGUgPSB7XG4gIHRvdWNoU2Nyb2xsVGFyZ2V0OiBIVE1MRWxlbWVudCB8IG51bGwsXG59O1xuXG4vLyBOT1RFOlxuLy8gV2Ugc2hvdWxkbid0IG5lZWQgdGhpcyBhZnRlciB1cGRhdGluZyB0byBSZWFjdCB2MTYuMy4wLCB3aGljaCBpbnRyb2R1Y2VzOlxuLy8gLSBjcmVhdGVSZWYoKSBodHRwczovL3JlYWN0anMub3JnL2RvY3MvcmVhY3QtYXBpLmh0bWwjcmVhY3RjcmVhdGVyZWZcbi8vIC0gZm9yd2FyZFJlZigpIGh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9yZWFjdC1hcGkuaHRtbCNyZWFjdGZvcndhcmRyZWZcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2Nyb2xsQmxvY2sgZXh0ZW5kcyBQdXJlQ29tcG9uZW50PFByb3BzLCBTdGF0ZT4ge1xuICBzdGF0ZSA9IHsgdG91Y2hTY3JvbGxUYXJnZXQ6IG51bGwgfTtcblxuICAvLyBtdXN0IGJlIGluIHN0YXRlIHRvIHRyaWdnZXIgYSByZS1yZW5kZXIsIG9ubHkgcnVucyBvbmNlIHBlciBpbnN0YW5jZVxuICBnZXRTY3JvbGxUYXJnZXQgPSAocmVmOiBIVE1MRWxlbWVudCkgPT4ge1xuICAgIGlmIChyZWYgPT09IHRoaXMuc3RhdGUudG91Y2hTY3JvbGxUYXJnZXQpIHJldHVybjtcbiAgICB0aGlzLnNldFN0YXRlKHsgdG91Y2hTY3JvbGxUYXJnZXQ6IHJlZiB9KTtcbiAgfTtcblxuICAvLyB0aGlzIHdpbGwgY2xvc2UgdGhlIG1lbnUgd2hlbiBhIHVzZXIgY2xpY2tzIG91dHNpZGVcbiAgYmx1clNlbGVjdElucHV0ID0gKCkgPT4ge1xuICAgIGlmIChkb2N1bWVudC5hY3RpdmVFbGVtZW50KSB7XG4gICAgICBkb2N1bWVudC5hY3RpdmVFbGVtZW50LmJsdXIoKTtcbiAgICB9XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgY2hpbGRyZW4sIGlzRW5hYmxlZCB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IHRvdWNoU2Nyb2xsVGFyZ2V0IH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgLy8gYmFpbCBlYXJseSBpZiBub3QgZW5hYmxlZFxuICAgIGlmICghaXNFbmFibGVkKSByZXR1cm4gY2hpbGRyZW47XG5cbiAgICAvKlxuICAgICAqIERpdlxuICAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAqIGJsb2NrcyBzY3JvbGxpbmcgb24gbm9uLWJvZHkgZWxlbWVudHMgYmVoaW5kIHRoZSBtZW51XG5cbiAgICAgKiBOb2RlUmVzb2x2ZXJcbiAgICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgKiB3ZSBuZWVkIGEgcmVmZXJlbmNlIHRvIHRoZSBzY3JvbGxhYmxlIGVsZW1lbnQgdG8gXCJ1bmxvY2tcIiBzY3JvbGwgb25cbiAgICAgKiBtb2JpbGUgZGV2aWNlc1xuXG4gICAgICogU2Nyb2xsTG9ja1xuICAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAqIGFjdHVhbGx5IGRvZXMgdGhlIHNjcm9sbCBsb2NraW5nXG4gICAgICovXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXY+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBvbkNsaWNrPXt0aGlzLmJsdXJTZWxlY3RJbnB1dH1cbiAgICAgICAgICBjc3M9e3sgcG9zaXRpb246ICdmaXhlZCcsIGxlZnQ6IDAsIGJvdHRvbTogMCwgcmlnaHQ6IDAsIHRvcDogMCB9fVxuICAgICAgICAvPlxuICAgICAgICA8Tm9kZVJlc29sdmVyIGlubmVyUmVmPXt0aGlzLmdldFNjcm9sbFRhcmdldH0+e2NoaWxkcmVufTwvTm9kZVJlc29sdmVyPlxuICAgICAgICB7dG91Y2hTY3JvbGxUYXJnZXQgPyAoXG4gICAgICAgICAgPFNjcm9sbExvY2sgdG91Y2hTY3JvbGxUYXJnZXQ9e3RvdWNoU2Nyb2xsVGFyZ2V0fSAvPlxuICAgICAgICApIDogbnVsbH1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cbiJdfQ== */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__$1
};

// NOTE:
// We shouldn't need this after updating to React v16.3.0, which introduces:
// - createRef() https://reactjs.org/docs/react-api.html#reactcreateref
// - forwardRef() https://reactjs.org/docs/react-api.html#reactforwardref
var ScrollBlock$1 = /*#__PURE__*/function (_PureComponent) {
  _inherits$8(ScrollBlock, _PureComponent);

  var _super = _createSuper$2$1(ScrollBlock);

  function ScrollBlock() {
    var _this;

    _classCallCheck$8(this, ScrollBlock);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = {
      touchScrollTarget: null
    };

    _this.getScrollTarget = function (ref) {
      if (ref === _this.state.touchScrollTarget) return;

      _this.setState({
        touchScrollTarget: ref
      });
    };

    _this.blurSelectInput = function () {
      if (document.activeElement) {
        document.activeElement.blur();
      }
    };

    return _this;
  }

  _createClass$8(ScrollBlock, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          isEnabled = _this$props.isEnabled;
      var touchScrollTarget = this.state.touchScrollTarget; // bail early if not enabled

      if (!isEnabled) return children;
      /*
       * Div
       * ------------------------------
       * blocks scrolling on non-body elements behind the menu
        * NodeResolver
       * ------------------------------
       * we need a reference to the scrollable element to "unlock" scroll on
       * mobile devices
        * ScrollLock
       * ------------------------------
       * actually does the scroll locking
       */

      return jsx("div", null, jsx("div", {
        onClick: this.blurSelectInput,
        css: _ref$1$1
      }), jsx(NodeResolver$3, {
        innerRef: this.getScrollTarget
      }, children), touchScrollTarget ? jsx(ScrollLock, {
        touchScrollTarget: touchScrollTarget
      }) : null);
    }
  }]);

  return ScrollBlock;
}(PureComponent);

function _createSuper$3$1(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$3$1(); return function _createSuperInternal() { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$8(this, result); }; }

function _isNativeReflectConstruct$3$1() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var ScrollCaptor = /*#__PURE__*/function (_Component) {
  _inherits$8(ScrollCaptor, _Component);

  var _super = _createSuper$3$1(ScrollCaptor);

  function ScrollCaptor() {
    var _this;

    _classCallCheck$8(this, ScrollCaptor);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.isBottom = false;
    _this.isTop = false;
    _this.scrollTarget = void 0;
    _this.touchStart = void 0;

    _this.cancelScroll = function (event) {
      event.preventDefault();
      event.stopPropagation();
    };

    _this.handleEventDelta = function (event, delta) {
      var _this$props = _this.props,
          onBottomArrive = _this$props.onBottomArrive,
          onBottomLeave = _this$props.onBottomLeave,
          onTopArrive = _this$props.onTopArrive,
          onTopLeave = _this$props.onTopLeave;
      var _this$scrollTarget = _this.scrollTarget,
          scrollTop = _this$scrollTarget.scrollTop,
          scrollHeight = _this$scrollTarget.scrollHeight,
          clientHeight = _this$scrollTarget.clientHeight;
      var target = _this.scrollTarget;
      var isDeltaPositive = delta > 0;
      var availableScroll = scrollHeight - clientHeight - scrollTop;
      var shouldCancelScroll = false; // reset bottom/top flags

      if (availableScroll > delta && _this.isBottom) {
        if (onBottomLeave) onBottomLeave(event);
        _this.isBottom = false;
      }

      if (isDeltaPositive && _this.isTop) {
        if (onTopLeave) onTopLeave(event);
        _this.isTop = false;
      } // bottom limit


      if (isDeltaPositive && delta > availableScroll) {
        if (onBottomArrive && !_this.isBottom) {
          onBottomArrive(event);
        }

        target.scrollTop = scrollHeight;
        shouldCancelScroll = true;
        _this.isBottom = true; // top limit
      } else if (!isDeltaPositive && -delta > scrollTop) {
        if (onTopArrive && !_this.isTop) {
          onTopArrive(event);
        }

        target.scrollTop = 0;
        shouldCancelScroll = true;
        _this.isTop = true;
      } // cancel scroll


      if (shouldCancelScroll) {
        _this.cancelScroll(event);
      }
    };

    _this.onWheel = function (event) {
      _this.handleEventDelta(event, event.deltaY);
    };

    _this.onTouchStart = function (event) {
      // set touch start so we can calculate touchmove delta
      _this.touchStart = event.changedTouches[0].clientY;
    };

    _this.onTouchMove = function (event) {
      var deltaY = _this.touchStart - event.changedTouches[0].clientY;

      _this.handleEventDelta(event, deltaY);
    };

    _this.getScrollTarget = function (ref) {
      _this.scrollTarget = ref;
    };

    return _this;
  }

  _createClass$8(ScrollCaptor, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.startListening(this.scrollTarget);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.stopListening(this.scrollTarget);
    }
  }, {
    key: "startListening",
    value: function startListening(el) {
      // bail early if no element is available to attach to
      if (!el) return; // all the if statements are to appease Flow 😢

      if (typeof el.addEventListener === 'function') {
        el.addEventListener('wheel', this.onWheel, false);
      }

      if (typeof el.addEventListener === 'function') {
        el.addEventListener('touchstart', this.onTouchStart, false);
      }

      if (typeof el.addEventListener === 'function') {
        el.addEventListener('touchmove', this.onTouchMove, false);
      }
    }
  }, {
    key: "stopListening",
    value: function stopListening(el) {
      if (!el) return; // all the if statements are to appease Flow 😢

      if (typeof el.removeEventListener === 'function') {
        el.removeEventListener('wheel', this.onWheel, false);
      }

      if (typeof el.removeEventListener === 'function') {
        el.removeEventListener('touchstart', this.onTouchStart, false);
      }

      if (typeof el.removeEventListener === 'function') {
        el.removeEventListener('touchmove', this.onTouchMove, false);
      }
    }
  }, {
    key: "render",
    value: function render() {
      return /*#__PURE__*/React__default.createElement(NodeResolver$3, {
        innerRef: this.getScrollTarget
      }, this.props.children);
    }
  }]);

  return ScrollCaptor;
}(Component$1);

function ScrollCaptorSwitch(_ref) {
  var _ref$isEnabled = _ref.isEnabled,
      isEnabled = _ref$isEnabled === void 0 ? true : _ref$isEnabled,
      props = _objectWithoutProperties$3(_ref, ["isEnabled"]);

  return isEnabled ? /*#__PURE__*/React__default.createElement(ScrollCaptor, props) : props.children;
}

var instructionsAriaMessage = function instructionsAriaMessage(event) {
  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var isSearchable = context.isSearchable,
      isMulti = context.isMulti,
      label = context.label,
      isDisabled = context.isDisabled,
      tabSelectsValue = context.tabSelectsValue;

  switch (event) {
    case 'menu':
      return "Use Up and Down to choose options".concat(isDisabled ? '' : ', press Enter to select the currently focused option', ", press Escape to exit the menu").concat(tabSelectsValue ? ', press Tab to select the option and exit the menu' : '', ".");

    case 'input':
      return "".concat(label ? label : 'Select', " is focused ").concat(isSearchable ? ',type to refine list' : '', ", press Down to open the menu, ").concat(isMulti ? ' press left to focus selected values' : '');

    case 'value':
      return 'Use left and right to toggle between focused values, press Backspace to remove the currently focused value';
  }
};
var valueEventAriaMessage = function valueEventAriaMessage(event, context) {
  var value = context.value,
      isDisabled = context.isDisabled;
  if (!value) return;

  switch (event) {
    case 'deselect-option':
    case 'pop-value':
    case 'remove-value':
      return "option ".concat(value, ", deselected.");

    case 'select-option':
      return isDisabled ? "option ".concat(value, " is disabled. Select another option.") : "option ".concat(value, ", selected.");
  }
};
var valueFocusAriaMessage = function valueFocusAriaMessage(_ref) {
  var focusedValue = _ref.focusedValue,
      getOptionLabel = _ref.getOptionLabel,
      selectValue = _ref.selectValue;
  return "value ".concat(getOptionLabel(focusedValue), " focused, ").concat(selectValue.indexOf(focusedValue) + 1, " of ").concat(selectValue.length, ".");
};
var optionFocusAriaMessage = function optionFocusAriaMessage(_ref2) {
  var focusedOption = _ref2.focusedOption,
      getOptionLabel = _ref2.getOptionLabel,
      options = _ref2.options;
  return "option ".concat(getOptionLabel(focusedOption), " focused").concat(focusedOption.isDisabled ? ' disabled' : '', ", ").concat(options.indexOf(focusedOption) + 1, " of ").concat(options.length, ".");
};
var resultsAriaMessage = function resultsAriaMessage(_ref3) {
  var inputValue = _ref3.inputValue,
      screenReaderMessage = _ref3.screenReaderMessage;
  return "".concat(screenReaderMessage).concat(inputValue ? ' for search term ' + inputValue : '', ".");
};

var formatGroupLabel = function formatGroupLabel(group) {
  return group.label;
};
var getOptionLabel = function getOptionLabel(option) {
  return option.label;
};
var getOptionValue = function getOptionValue(option) {
  return option.value;
};
var isOptionDisabled = function isOptionDisabled(option) {
  return !!option.isDisabled;
};

function ownKeys$1$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1$2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$1$2(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$1$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var defaultStyles = {
  clearIndicator: clearIndicatorCSS,
  container: containerCSS,
  control: css,
  dropdownIndicator: dropdownIndicatorCSS,
  group: groupCSS,
  groupHeading: groupHeadingCSS,
  indicatorsContainer: indicatorsContainerCSS,
  indicatorSeparator: indicatorSeparatorCSS,
  input: inputCSS,
  loadingIndicator: loadingIndicatorCSS,
  loadingMessage: loadingMessageCSS,
  menu: menuCSS,
  menuList: menuListCSS,
  menuPortal: menuPortalCSS,
  multiValue: multiValueCSS,
  multiValueLabel: multiValueLabelCSS,
  multiValueRemove: multiValueRemoveCSS,
  noOptionsMessage: noOptionsMessageCSS,
  option: optionCSS,
  placeholder: placeholderCSS,
  singleValue: css$1,
  valueContainer: valueContainerCSS
}; // Merge Utility
// Allows consumers to extend a base Select with additional styles

function mergeStyles(source) {
  var target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  // initialize with source styles
  var styles = _objectSpread$1$2({}, source); // massage in target styles


  Object.keys(target).forEach(function (key) {
    if (source[key]) {
      styles[key] = function (rsCss, props) {
        return target[key](source[key](rsCss, props), props);
      };
    } else {
      styles[key] = target[key];
    }
  });
  return styles;
}

var colors = {
  primary: '#2684FF',
  primary75: '#4C9AFF',
  primary50: '#B2D4FF',
  primary25: '#DEEBFF',
  danger: '#DE350B',
  dangerLight: '#FFBDAD',
  neutral0: 'hsl(0, 0%, 100%)',
  neutral5: 'hsl(0, 0%, 95%)',
  neutral10: 'hsl(0, 0%, 90%)',
  neutral20: 'hsl(0, 0%, 80%)',
  neutral30: 'hsl(0, 0%, 70%)',
  neutral40: 'hsl(0, 0%, 60%)',
  neutral50: 'hsl(0, 0%, 50%)',
  neutral60: 'hsl(0, 0%, 40%)',
  neutral70: 'hsl(0, 0%, 30%)',
  neutral80: 'hsl(0, 0%, 20%)',
  neutral90: 'hsl(0, 0%, 10%)'
};
var borderRadius$4 = 4; // Used to calculate consistent margin/padding on elements

var baseUnit = 4; // The minimum height of the control

var controlHeight = 38; // The amount of space between the control and menu */

var menuGutter = baseUnit * 2;
var spacing$1 = {
  baseUnit: baseUnit,
  controlHeight: controlHeight,
  menuGutter: menuGutter
};
var defaultTheme$1 = {
  borderRadius: borderRadius$4,
  colors: colors,
  spacing: spacing$1
};

function ownKeys$2$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2$1(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$2$1(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$2$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper$4$1(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$4$1(); return function _createSuperInternal() { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$8(this, result); }; }

function _isNativeReflectConstruct$4$1() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }
var defaultProps$1 = {
  backspaceRemovesValue: true,
  blurInputOnSelect: isTouchCapable(),
  captureMenuScroll: !isTouchCapable(),
  closeMenuOnSelect: true,
  closeMenuOnScroll: false,
  components: {},
  controlShouldRenderValue: true,
  escapeClearsValue: false,
  filterOption: createFilter(),
  formatGroupLabel: formatGroupLabel,
  getOptionLabel: getOptionLabel,
  getOptionValue: getOptionValue,
  isDisabled: false,
  isLoading: false,
  isMulti: false,
  isRtl: false,
  isSearchable: true,
  isOptionDisabled: isOptionDisabled,
  loadingMessage: function loadingMessage() {
    return 'Loading...';
  },
  maxMenuHeight: 300,
  minMenuHeight: 140,
  menuIsOpen: false,
  menuPlacement: 'bottom',
  menuPosition: 'absolute',
  menuShouldBlockScroll: false,
  menuShouldScrollIntoView: !isMobileDevice(),
  noOptionsMessage: function noOptionsMessage() {
    return 'No options';
  },
  openMenuOnFocus: false,
  openMenuOnClick: true,
  options: [],
  pageSize: 5,
  placeholder: 'Select...',
  screenReaderStatus: function screenReaderStatus(_ref) {
    var count = _ref.count;
    return "".concat(count, " result").concat(count !== 1 ? 's' : '', " available");
  },
  styles: {},
  tabIndex: '0',
  tabSelectsValue: true
};
var instanceId = 1;

var Select$2 = /*#__PURE__*/function (_Component) {
  _inherits$8(Select, _Component);

  var _super = _createSuper$4$1(Select);

  // Misc. Instance Properties
  // ------------------------------
  // TODO
  // Refs
  // ------------------------------
  // Lifecycle
  // ------------------------------
  function Select(_props) {
    var _this;

    _classCallCheck$8(this, Select);

    _this = _super.call(this, _props);
    _this.state = {
      ariaLiveSelection: '',
      ariaLiveContext: '',
      focusedOption: null,
      focusedValue: null,
      inputIsHidden: false,
      isFocused: false,
      menuOptions: {
        render: [],
        focusable: []
      },
      selectValue: []
    };
    _this.blockOptionHover = false;
    _this.isComposing = false;
    _this.clearFocusValueOnUpdate = false;
    _this.commonProps = void 0;
    _this.components = void 0;
    _this.hasGroups = false;
    _this.initialTouchX = 0;
    _this.initialTouchY = 0;
    _this.inputIsHiddenAfterUpdate = void 0;
    _this.instancePrefix = '';
    _this.openAfterFocus = false;
    _this.scrollToFocusedOptionOnUpdate = false;
    _this.userIsDragging = void 0;
    _this.controlRef = null;

    _this.getControlRef = function (ref) {
      _this.controlRef = ref;
    };

    _this.focusedOptionRef = null;

    _this.getFocusedOptionRef = function (ref) {
      _this.focusedOptionRef = ref;
    };

    _this.menuListRef = null;

    _this.getMenuListRef = function (ref) {
      _this.menuListRef = ref;
    };

    _this.inputRef = null;

    _this.getInputRef = function (ref) {
      _this.inputRef = ref;
    };

    _this.cacheComponents = function (components) {
      _this.components = defaultComponents$1({
        components: components
      });
    };

    _this.focus = _this.focusInput;
    _this.blur = _this.blurInput;

    _this.onChange = function (newValue, actionMeta) {
      var _this$props = _this.props,
          onChange = _this$props.onChange,
          name = _this$props.name;
      onChange(newValue, _objectSpread$2$1(_objectSpread$2$1({}, actionMeta), {}, {
        name: name
      }));
    };

    _this.setValue = function (newValue) {
      var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'set-value';
      var option = arguments.length > 2 ? arguments[2] : undefined;
      var _this$props2 = _this.props,
          closeMenuOnSelect = _this$props2.closeMenuOnSelect,
          isMulti = _this$props2.isMulti;

      _this.onInputChange('', {
        action: 'set-value'
      });

      if (closeMenuOnSelect) {
        _this.inputIsHiddenAfterUpdate = !isMulti;

        _this.onMenuClose();
      } // when the select value should change, we should reset focusedValue


      _this.clearFocusValueOnUpdate = true;

      _this.onChange(newValue, {
        action: action,
        option: option
      });
    };

    _this.selectOption = function (newValue) {
      var _this$props3 = _this.props,
          blurInputOnSelect = _this$props3.blurInputOnSelect,
          isMulti = _this$props3.isMulti;
      var selectValue = _this.state.selectValue;

      if (isMulti) {
        if (_this.isOptionSelected(newValue, selectValue)) {
          var candidate = _this.getOptionValue(newValue);

          _this.setValue(selectValue.filter(function (i) {
            return _this.getOptionValue(i) !== candidate;
          }), 'deselect-option', newValue);

          _this.announceAriaLiveSelection({
            event: 'deselect-option',
            context: {
              value: _this.getOptionLabel(newValue)
            }
          });
        } else {
          if (!_this.isOptionDisabled(newValue, selectValue)) {
            _this.setValue([].concat(_toConsumableArray$2(selectValue), [newValue]), 'select-option', newValue);

            _this.announceAriaLiveSelection({
              event: 'select-option',
              context: {
                value: _this.getOptionLabel(newValue)
              }
            });
          } else {
            // announce that option is disabled
            _this.announceAriaLiveSelection({
              event: 'select-option',
              context: {
                value: _this.getOptionLabel(newValue),
                isDisabled: true
              }
            });
          }
        }
      } else {
        if (!_this.isOptionDisabled(newValue, selectValue)) {
          _this.setValue(newValue, 'select-option');

          _this.announceAriaLiveSelection({
            event: 'select-option',
            context: {
              value: _this.getOptionLabel(newValue)
            }
          });
        } else {
          // announce that option is disabled
          _this.announceAriaLiveSelection({
            event: 'select-option',
            context: {
              value: _this.getOptionLabel(newValue),
              isDisabled: true
            }
          });
        }
      }

      if (blurInputOnSelect) {
        _this.blurInput();
      }
    };

    _this.removeValue = function (removedValue) {
      var selectValue = _this.state.selectValue;

      var candidate = _this.getOptionValue(removedValue);

      var newValue = selectValue.filter(function (i) {
        return _this.getOptionValue(i) !== candidate;
      });

      _this.onChange(newValue.length ? newValue : null, {
        action: 'remove-value',
        removedValue: removedValue
      });

      _this.announceAriaLiveSelection({
        event: 'remove-value',
        context: {
          value: removedValue ? _this.getOptionLabel(removedValue) : ''
        }
      });

      _this.focusInput();
    };

    _this.clearValue = function () {
      _this.onChange(null, {
        action: 'clear'
      });
    };

    _this.popValue = function () {
      var selectValue = _this.state.selectValue;
      var lastSelectedValue = selectValue[selectValue.length - 1];
      var newValue = selectValue.slice(0, selectValue.length - 1);

      _this.announceAriaLiveSelection({
        event: 'pop-value',
        context: {
          value: lastSelectedValue ? _this.getOptionLabel(lastSelectedValue) : ''
        }
      });

      _this.onChange(newValue.length ? newValue : null, {
        action: 'pop-value',
        removedValue: lastSelectedValue
      });
    };

    _this.getValue = function () {
      return _this.state.selectValue;
    };

    _this.cx = function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return classNames.apply(void 0, [_this.props.classNamePrefix].concat(args));
    };

    _this.getOptionLabel = function (data) {
      return _this.props.getOptionLabel(data);
    };

    _this.getOptionValue = function (data) {
      return _this.props.getOptionValue(data);
    };

    _this.getStyles = function (key, props) {
      var base = defaultStyles[key](props);
      base.boxSizing = 'border-box';
      var custom = _this.props.styles[key];
      return custom ? custom(base, props) : base;
    };

    _this.getElementId = function (element) {
      return "".concat(_this.instancePrefix, "-").concat(element);
    };

    _this.getActiveDescendentId = function () {
      var menuIsOpen = _this.props.menuIsOpen;
      var _this$state = _this.state,
          menuOptions = _this$state.menuOptions,
          focusedOption = _this$state.focusedOption;
      if (!focusedOption || !menuIsOpen) return undefined;
      var index = menuOptions.focusable.indexOf(focusedOption);
      var option = menuOptions.render[index];
      return option && option.key;
    };

    _this.announceAriaLiveSelection = function (_ref2) {
      var event = _ref2.event,
          context = _ref2.context;

      _this.setState({
        ariaLiveSelection: valueEventAriaMessage(event, context)
      });
    };

    _this.announceAriaLiveContext = function (_ref3) {
      var event = _ref3.event,
          context = _ref3.context;

      _this.setState({
        ariaLiveContext: instructionsAriaMessage(event, _objectSpread$2$1(_objectSpread$2$1({}, context), {}, {
          label: _this.props['aria-label']
        }))
      });
    };

    _this.onMenuMouseDown = function (event) {
      if (event.button !== 0) {
        return;
      }

      event.stopPropagation();
      event.preventDefault();

      _this.focusInput();
    };

    _this.onMenuMouseMove = function (event) {
      _this.blockOptionHover = false;
    };

    _this.onControlMouseDown = function (event) {
      var openMenuOnClick = _this.props.openMenuOnClick;

      if (!_this.state.isFocused) {
        if (openMenuOnClick) {
          _this.openAfterFocus = true;
        }

        _this.focusInput();
      } else if (!_this.props.menuIsOpen) {
        if (openMenuOnClick) {
          _this.openMenu('first');
        }
      } else {
        if ( // $FlowFixMe
        event.target.tagName !== 'INPUT' && event.target.tagName !== 'TEXTAREA') {
          _this.onMenuClose();
        }
      }

      if ( // $FlowFixMe
      event.target.tagName !== 'INPUT' && event.target.tagName !== 'TEXTAREA') {
        event.preventDefault();
      }
    };

    _this.onDropdownIndicatorMouseDown = function (event) {
      // ignore mouse events that weren't triggered by the primary button
      if (event && event.type === 'mousedown' && event.button !== 0) {
        return;
      }

      if (_this.props.isDisabled) return;
      var _this$props4 = _this.props,
          isMulti = _this$props4.isMulti,
          menuIsOpen = _this$props4.menuIsOpen;

      _this.focusInput();

      if (menuIsOpen) {
        _this.inputIsHiddenAfterUpdate = !isMulti;

        _this.onMenuClose();
      } else {
        _this.openMenu('first');
      }

      event.preventDefault();
      event.stopPropagation();
    };

    _this.onClearIndicatorMouseDown = function (event) {
      // ignore mouse events that weren't triggered by the primary button
      if (event && event.type === 'mousedown' && event.button !== 0) {
        return;
      }

      _this.clearValue();

      event.stopPropagation();
      _this.openAfterFocus = false;

      if (event.type === 'touchend') {
        _this.focusInput();
      } else {
        setTimeout(function () {
          return _this.focusInput();
        });
      }
    };

    _this.onScroll = function (event) {
      if (typeof _this.props.closeMenuOnScroll === 'boolean') {
        if (event.target instanceof HTMLElement && isDocumentElement(event.target)) {
          _this.props.onMenuClose();
        }
      } else if (typeof _this.props.closeMenuOnScroll === 'function') {
        if (_this.props.closeMenuOnScroll(event)) {
          _this.props.onMenuClose();
        }
      }
    };

    _this.onCompositionStart = function () {
      _this.isComposing = true;
    };

    _this.onCompositionEnd = function () {
      _this.isComposing = false;
    };

    _this.onTouchStart = function (_ref4) {
      var touches = _ref4.touches;
      var touch = touches && touches.item(0);

      if (!touch) {
        return;
      }

      _this.initialTouchX = touch.clientX;
      _this.initialTouchY = touch.clientY;
      _this.userIsDragging = false;
    };

    _this.onTouchMove = function (_ref5) {
      var touches = _ref5.touches;
      var touch = touches && touches.item(0);

      if (!touch) {
        return;
      }

      var deltaX = Math.abs(touch.clientX - _this.initialTouchX);
      var deltaY = Math.abs(touch.clientY - _this.initialTouchY);
      var moveThreshold = 5;
      _this.userIsDragging = deltaX > moveThreshold || deltaY > moveThreshold;
    };

    _this.onTouchEnd = function (event) {
      if (_this.userIsDragging) return; // close the menu if the user taps outside
      // we're checking on event.target here instead of event.currentTarget, because we want to assert information
      // on events on child elements, not the document (which we've attached this handler to).

      if (_this.controlRef && !_this.controlRef.contains(event.target) && _this.menuListRef && !_this.menuListRef.contains(event.target)) {
        _this.blurInput();
      } // reset move vars


      _this.initialTouchX = 0;
      _this.initialTouchY = 0;
    };

    _this.onControlTouchEnd = function (event) {
      if (_this.userIsDragging) return;

      _this.onControlMouseDown(event);
    };

    _this.onClearIndicatorTouchEnd = function (event) {
      if (_this.userIsDragging) return;

      _this.onClearIndicatorMouseDown(event);
    };

    _this.onDropdownIndicatorTouchEnd = function (event) {
      if (_this.userIsDragging) return;

      _this.onDropdownIndicatorMouseDown(event);
    };

    _this.handleInputChange = function (event) {
      var inputValue = event.currentTarget.value;
      _this.inputIsHiddenAfterUpdate = false;

      _this.onInputChange(inputValue, {
        action: 'input-change'
      });

      if (!_this.props.menuIsOpen) {
        _this.onMenuOpen();
      }
    };

    _this.onInputFocus = function (event) {
      var _this$props5 = _this.props,
          isSearchable = _this$props5.isSearchable,
          isMulti = _this$props5.isMulti;

      if (_this.props.onFocus) {
        _this.props.onFocus(event);
      }

      _this.inputIsHiddenAfterUpdate = false;

      _this.announceAriaLiveContext({
        event: 'input',
        context: {
          isSearchable: isSearchable,
          isMulti: isMulti
        }
      });

      _this.setState({
        isFocused: true
      });

      if (_this.openAfterFocus || _this.props.openMenuOnFocus) {
        _this.openMenu('first');
      }

      _this.openAfterFocus = false;
    };

    _this.onInputBlur = function (event) {
      if (_this.menuListRef && _this.menuListRef.contains(document.activeElement)) {
        _this.inputRef.focus();

        return;
      }

      if (_this.props.onBlur) {
        _this.props.onBlur(event);
      }

      _this.onInputChange('', {
        action: 'input-blur'
      });

      _this.onMenuClose();

      _this.setState({
        focusedValue: null,
        isFocused: false
      });
    };

    _this.onOptionHover = function (focusedOption) {
      if (_this.blockOptionHover || _this.state.focusedOption === focusedOption) {
        return;
      }

      _this.setState({
        focusedOption: focusedOption
      });
    };

    _this.shouldHideSelectedOptions = function () {
      var _this$props6 = _this.props,
          hideSelectedOptions = _this$props6.hideSelectedOptions,
          isMulti = _this$props6.isMulti;
      if (hideSelectedOptions === undefined) return isMulti;
      return hideSelectedOptions;
    };

    _this.onKeyDown = function (event) {
      var _this$props7 = _this.props,
          isMulti = _this$props7.isMulti,
          backspaceRemovesValue = _this$props7.backspaceRemovesValue,
          escapeClearsValue = _this$props7.escapeClearsValue,
          inputValue = _this$props7.inputValue,
          isClearable = _this$props7.isClearable,
          isDisabled = _this$props7.isDisabled,
          menuIsOpen = _this$props7.menuIsOpen,
          onKeyDown = _this$props7.onKeyDown,
          tabSelectsValue = _this$props7.tabSelectsValue,
          openMenuOnFocus = _this$props7.openMenuOnFocus;
      var _this$state2 = _this.state,
          focusedOption = _this$state2.focusedOption,
          focusedValue = _this$state2.focusedValue,
          selectValue = _this$state2.selectValue;
      if (isDisabled) return;

      if (typeof onKeyDown === 'function') {
        onKeyDown(event);

        if (event.defaultPrevented) {
          return;
        }
      } // Block option hover events when the user has just pressed a key


      _this.blockOptionHover = true;

      switch (event.key) {
        case 'ArrowLeft':
          if (!isMulti || inputValue) return;

          _this.focusValue('previous');

          break;

        case 'ArrowRight':
          if (!isMulti || inputValue) return;

          _this.focusValue('next');

          break;

        case 'Delete':
        case 'Backspace':
          if (inputValue) return;

          if (focusedValue) {
            _this.removeValue(focusedValue);
          } else {
            if (!backspaceRemovesValue) return;

            if (isMulti) {
              _this.popValue();
            } else if (isClearable) {
              _this.clearValue();
            }
          }

          break;

        case 'Tab':
          if (_this.isComposing) return;

          if (event.shiftKey || !menuIsOpen || !tabSelectsValue || !focusedOption || // don't capture the event if the menu opens on focus and the focused
          // option is already selected; it breaks the flow of navigation
          openMenuOnFocus && _this.isOptionSelected(focusedOption, selectValue)) {
            return;
          }

          _this.selectOption(focusedOption);

          break;

        case 'Enter':
          if (event.keyCode === 229) {
            // ignore the keydown event from an Input Method Editor(IME)
            // ref. https://www.w3.org/TR/uievents/#determine-keydown-keyup-keyCode
            break;
          }

          if (menuIsOpen) {
            if (!focusedOption) return;
            if (_this.isComposing) return;

            _this.selectOption(focusedOption);

            break;
          }

          return;

        case 'Escape':
          if (menuIsOpen) {
            _this.inputIsHiddenAfterUpdate = false;

            _this.onInputChange('', {
              action: 'menu-close'
            });

            _this.onMenuClose();
          } else if (isClearable && escapeClearsValue) {
            _this.clearValue();
          }

          break;

        case ' ':
          // space
          if (inputValue) {
            return;
          }

          if (!menuIsOpen) {
            _this.openMenu('first');

            break;
          }

          if (!focusedOption) return;

          _this.selectOption(focusedOption);

          break;

        case 'ArrowUp':
          if (menuIsOpen) {
            _this.focusOption('up');
          } else {
            _this.openMenu('last');
          }

          break;

        case 'ArrowDown':
          if (menuIsOpen) {
            _this.focusOption('down');
          } else {
            _this.openMenu('first');
          }

          break;

        case 'PageUp':
          if (!menuIsOpen) return;

          _this.focusOption('pageup');

          break;

        case 'PageDown':
          if (!menuIsOpen) return;

          _this.focusOption('pagedown');

          break;

        case 'Home':
          if (!menuIsOpen) return;

          _this.focusOption('first');

          break;

        case 'End':
          if (!menuIsOpen) return;

          _this.focusOption('last');

          break;

        default:
          return;
      }

      event.preventDefault();
    };

    _this.buildMenuOptions = function (props, selectValue) {
      var _props$inputValue = props.inputValue,
          inputValue = _props$inputValue === void 0 ? '' : _props$inputValue,
          options = props.options;

      var toOption = function toOption(option, id) {
        var isDisabled = _this.isOptionDisabled(option, selectValue);

        var isSelected = _this.isOptionSelected(option, selectValue);

        var label = _this.getOptionLabel(option);

        var value = _this.getOptionValue(option);

        if (_this.shouldHideSelectedOptions() && isSelected || !_this.filterOption({
          label: label,
          value: value,
          data: option
        }, inputValue)) {
          return;
        }

        var onHover = isDisabled ? undefined : function () {
          return _this.onOptionHover(option);
        };
        var onSelect = isDisabled ? undefined : function () {
          return _this.selectOption(option);
        };
        var optionId = "".concat(_this.getElementId('option'), "-").concat(id);
        return {
          innerProps: {
            id: optionId,
            onClick: onSelect,
            onMouseMove: onHover,
            onMouseOver: onHover,
            tabIndex: -1
          },
          data: option,
          isDisabled: isDisabled,
          isSelected: isSelected,
          key: optionId,
          label: label,
          type: 'option',
          value: value
        };
      };

      return options.reduce(function (acc, item, itemIndex) {
        if (item.options) {
          // TODO needs a tidier implementation
          if (!_this.hasGroups) _this.hasGroups = true;
          var items = item.options;
          var children = items.map(function (child, i) {
            var option = toOption(child, "".concat(itemIndex, "-").concat(i));
            if (option) acc.focusable.push(child);
            return option;
          }).filter(Boolean);

          if (children.length) {
            var groupId = "".concat(_this.getElementId('group'), "-").concat(itemIndex);
            acc.render.push({
              type: 'group',
              key: groupId,
              data: item,
              options: children
            });
          }
        } else {
          var option = toOption(item, "".concat(itemIndex));

          if (option) {
            acc.render.push(option);
            acc.focusable.push(item);
          }
        }

        return acc;
      }, {
        render: [],
        focusable: []
      });
    };

    var _value = _props.value;
    _this.cacheComponents = memoizeOne(_this.cacheComponents, exportedEqual).bind(_assertThisInitialized$4(_this));

    _this.cacheComponents(_props.components);

    _this.instancePrefix = 'react-select-' + (_this.props.instanceId || ++instanceId);

    var _selectValue = cleanValue(_value);

    _this.buildMenuOptions = memoizeOne(_this.buildMenuOptions, function (newArgs, lastArgs) {
      var _ref6 = newArgs,
          _ref7 = _slicedToArray(_ref6, 2),
          newProps = _ref7[0],
          newSelectValue = _ref7[1];

      var _ref8 = lastArgs,
          _ref9 = _slicedToArray(_ref8, 2),
          lastProps = _ref9[0],
          lastSelectValue = _ref9[1];

      return newSelectValue === lastSelectValue && newProps.inputValue === lastProps.inputValue && newProps.options === lastProps.options;
    }).bind(_assertThisInitialized$4(_this));

    var _menuOptions = _props.menuIsOpen ? _this.buildMenuOptions(_props, _selectValue) : {
      render: [],
      focusable: []
    };

    _this.state.menuOptions = _menuOptions;
    _this.state.selectValue = _selectValue;
    return _this;
  }

  _createClass$8(Select, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.startListeningComposition();
      this.startListeningToTouch();

      if (this.props.closeMenuOnScroll && document && document.addEventListener) {
        // Listen to all scroll events, and filter them out inside of 'onScroll'
        document.addEventListener('scroll', this.onScroll, true);
      }

      if (this.props.autoFocus) {
        this.focusInput();
      }
    }
  }, {
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(nextProps) {
      var _this$props8 = this.props,
          options = _this$props8.options,
          value = _this$props8.value,
          menuIsOpen = _this$props8.menuIsOpen,
          inputValue = _this$props8.inputValue; // re-cache custom components

      this.cacheComponents(nextProps.components); // rebuild the menu options

      if (nextProps.value !== value || nextProps.options !== options || nextProps.menuIsOpen !== menuIsOpen || nextProps.inputValue !== inputValue) {
        var selectValue = cleanValue(nextProps.value);
        var menuOptions = nextProps.menuIsOpen ? this.buildMenuOptions(nextProps, selectValue) : {
          render: [],
          focusable: []
        };
        var focusedValue = this.getNextFocusedValue(selectValue);
        var focusedOption = this.getNextFocusedOption(menuOptions.focusable);
        this.setState({
          menuOptions: menuOptions,
          selectValue: selectValue,
          focusedOption: focusedOption,
          focusedValue: focusedValue
        });
      } // some updates should toggle the state of the input visibility


      if (this.inputIsHiddenAfterUpdate != null) {
        this.setState({
          inputIsHidden: this.inputIsHiddenAfterUpdate
        });
        delete this.inputIsHiddenAfterUpdate;
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var _this$props9 = this.props,
          isDisabled = _this$props9.isDisabled,
          menuIsOpen = _this$props9.menuIsOpen;
      var isFocused = this.state.isFocused;

      if ( // ensure focus is restored correctly when the control becomes enabled
      isFocused && !isDisabled && prevProps.isDisabled || // ensure focus is on the Input when the menu opens
      isFocused && menuIsOpen && !prevProps.menuIsOpen) {
        this.focusInput();
      }

      if (isFocused && isDisabled && !prevProps.isDisabled) {
        // ensure select state gets blurred in case Select is programatically disabled while focused
        this.setState({
          isFocused: false
        }, this.onMenuClose);
      } // scroll the focused option into view if necessary


      if (this.menuListRef && this.focusedOptionRef && this.scrollToFocusedOptionOnUpdate) {
        scrollIntoView(this.menuListRef, this.focusedOptionRef);
        this.scrollToFocusedOptionOnUpdate = false;
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.stopListeningComposition();
      this.stopListeningToTouch();
      document.removeEventListener('scroll', this.onScroll, true);
    }
  }, {
    key: "onMenuOpen",
    // ==============================
    // Consumer Handlers
    // ==============================
    value: function onMenuOpen() {
      this.props.onMenuOpen();
    }
  }, {
    key: "onMenuClose",
    value: function onMenuClose() {
      var _this$props10 = this.props,
          isSearchable = _this$props10.isSearchable,
          isMulti = _this$props10.isMulti;
      this.announceAriaLiveContext({
        event: 'input',
        context: {
          isSearchable: isSearchable,
          isMulti: isMulti
        }
      });
      this.onInputChange('', {
        action: 'menu-close'
      });
      this.props.onMenuClose();
    }
  }, {
    key: "onInputChange",
    value: function onInputChange(newValue, actionMeta) {
      this.props.onInputChange(newValue, actionMeta);
    } // ==============================
    // Methods
    // ==============================

  }, {
    key: "focusInput",
    value: function focusInput() {
      if (!this.inputRef) return;
      this.inputRef.focus();
    }
  }, {
    key: "blurInput",
    value: function blurInput() {
      if (!this.inputRef) return;
      this.inputRef.blur();
    } // aliased for consumers

  }, {
    key: "openMenu",
    value: function openMenu(focusOption) {
      var _this2 = this;

      var _this$state3 = this.state,
          selectValue = _this$state3.selectValue,
          isFocused = _this$state3.isFocused;
      var menuOptions = this.buildMenuOptions(this.props, selectValue);
      var _this$props11 = this.props,
          isMulti = _this$props11.isMulti,
          tabSelectsValue = _this$props11.tabSelectsValue;
      var openAtIndex = focusOption === 'first' ? 0 : menuOptions.focusable.length - 1;

      if (!isMulti) {
        var selectedIndex = menuOptions.focusable.indexOf(selectValue[0]);

        if (selectedIndex > -1) {
          openAtIndex = selectedIndex;
        }
      } // only scroll if the menu isn't already open


      this.scrollToFocusedOptionOnUpdate = !(isFocused && this.menuListRef);
      this.inputIsHiddenAfterUpdate = false;
      this.setState({
        menuOptions: menuOptions,
        focusedValue: null,
        focusedOption: menuOptions.focusable[openAtIndex]
      }, function () {
        _this2.onMenuOpen();

        _this2.announceAriaLiveContext({
          event: 'menu',
          context: {
            tabSelectsValue: tabSelectsValue
          }
        });
      });
    }
  }, {
    key: "focusValue",
    value: function focusValue(direction) {
      var _this$props12 = this.props,
          isMulti = _this$props12.isMulti,
          isSearchable = _this$props12.isSearchable;
      var _this$state4 = this.state,
          selectValue = _this$state4.selectValue,
          focusedValue = _this$state4.focusedValue; // Only multiselects support value focusing

      if (!isMulti) return;
      this.setState({
        focusedOption: null
      });
      var focusedIndex = selectValue.indexOf(focusedValue);

      if (!focusedValue) {
        focusedIndex = -1;
        this.announceAriaLiveContext({
          event: 'value'
        });
      }

      var lastIndex = selectValue.length - 1;
      var nextFocus = -1;
      if (!selectValue.length) return;

      switch (direction) {
        case 'previous':
          if (focusedIndex === 0) {
            // don't cycle from the start to the end
            nextFocus = 0;
          } else if (focusedIndex === -1) {
            // if nothing is focused, focus the last value first
            nextFocus = lastIndex;
          } else {
            nextFocus = focusedIndex - 1;
          }

          break;

        case 'next':
          if (focusedIndex > -1 && focusedIndex < lastIndex) {
            nextFocus = focusedIndex + 1;
          }

          break;
      }

      if (nextFocus === -1) {
        this.announceAriaLiveContext({
          event: 'input',
          context: {
            isSearchable: isSearchable,
            isMulti: isMulti
          }
        });
      }

      this.setState({
        inputIsHidden: nextFocus !== -1,
        focusedValue: selectValue[nextFocus]
      });
    }
  }, {
    key: "focusOption",
    value: function focusOption() {
      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'first';
      var _this$props13 = this.props,
          pageSize = _this$props13.pageSize,
          tabSelectsValue = _this$props13.tabSelectsValue;
      var _this$state5 = this.state,
          focusedOption = _this$state5.focusedOption,
          menuOptions = _this$state5.menuOptions;
      var options = menuOptions.focusable;
      if (!options.length) return;
      var nextFocus = 0; // handles 'first'

      var focusedIndex = options.indexOf(focusedOption);

      if (!focusedOption) {
        focusedIndex = -1;
        this.announceAriaLiveContext({
          event: 'menu',
          context: {
            tabSelectsValue: tabSelectsValue
          }
        });
      }

      if (direction === 'up') {
        nextFocus = focusedIndex > 0 ? focusedIndex - 1 : options.length - 1;
      } else if (direction === 'down') {
        nextFocus = (focusedIndex + 1) % options.length;
      } else if (direction === 'pageup') {
        nextFocus = focusedIndex - pageSize;
        if (nextFocus < 0) nextFocus = 0;
      } else if (direction === 'pagedown') {
        nextFocus = focusedIndex + pageSize;
        if (nextFocus > options.length - 1) nextFocus = options.length - 1;
      } else if (direction === 'last') {
        nextFocus = options.length - 1;
      }

      this.scrollToFocusedOptionOnUpdate = true;
      this.setState({
        focusedOption: options[nextFocus],
        focusedValue: null
      });
      this.announceAriaLiveContext({
        event: 'menu',
        context: {
          isDisabled: isOptionDisabled(options[nextFocus]),
          tabSelectsValue: tabSelectsValue
        }
      });
    }
  }, {
    key: "getTheme",
    // ==============================
    // Getters
    // ==============================
    value: function getTheme() {
      // Use the default theme if there are no customizations.
      if (!this.props.theme) {
        return defaultTheme$1;
      } // If the theme prop is a function, assume the function
      // knows how to merge the passed-in default theme with
      // its own modifications.


      if (typeof this.props.theme === 'function') {
        return this.props.theme(defaultTheme$1);
      } // Otherwise, if a plain theme object was passed in,
      // overlay it with the default theme.


      return _objectSpread$2$1(_objectSpread$2$1({}, defaultTheme$1), this.props.theme);
    }
  }, {
    key: "getCommonProps",
    value: function getCommonProps() {
      var clearValue = this.clearValue,
          cx = this.cx,
          getStyles = this.getStyles,
          getValue = this.getValue,
          setValue = this.setValue,
          selectOption = this.selectOption,
          props = this.props;
      var isMulti = props.isMulti,
          isRtl = props.isRtl,
          options = props.options;
      var hasValue = this.hasValue();
      return {
        cx: cx,
        clearValue: clearValue,
        getStyles: getStyles,
        getValue: getValue,
        hasValue: hasValue,
        isMulti: isMulti,
        isRtl: isRtl,
        options: options,
        selectOption: selectOption,
        setValue: setValue,
        selectProps: props,
        theme: this.getTheme()
      };
    }
  }, {
    key: "getNextFocusedValue",
    value: function getNextFocusedValue(nextSelectValue) {
      if (this.clearFocusValueOnUpdate) {
        this.clearFocusValueOnUpdate = false;
        return null;
      }

      var _this$state6 = this.state,
          focusedValue = _this$state6.focusedValue,
          lastSelectValue = _this$state6.selectValue;
      var lastFocusedIndex = lastSelectValue.indexOf(focusedValue);

      if (lastFocusedIndex > -1) {
        var nextFocusedIndex = nextSelectValue.indexOf(focusedValue);

        if (nextFocusedIndex > -1) {
          // the focused value is still in the selectValue, return it
          return focusedValue;
        } else if (lastFocusedIndex < nextSelectValue.length) {
          // the focusedValue is not present in the next selectValue array by
          // reference, so return the new value at the same index
          return nextSelectValue[lastFocusedIndex];
        }
      }

      return null;
    }
  }, {
    key: "getNextFocusedOption",
    value: function getNextFocusedOption(options) {
      var lastFocusedOption = this.state.focusedOption;
      return lastFocusedOption && options.indexOf(lastFocusedOption) > -1 ? lastFocusedOption : options[0];
    }
  }, {
    key: "hasValue",
    value: function hasValue() {
      var selectValue = this.state.selectValue;
      return selectValue.length > 0;
    }
  }, {
    key: "hasOptions",
    value: function hasOptions() {
      return !!this.state.menuOptions.render.length;
    }
  }, {
    key: "countOptions",
    value: function countOptions() {
      return this.state.menuOptions.focusable.length;
    }
  }, {
    key: "isClearable",
    value: function isClearable() {
      var _this$props14 = this.props,
          isClearable = _this$props14.isClearable,
          isMulti = _this$props14.isMulti; // single select, by default, IS NOT clearable
      // multi select, by default, IS clearable

      if (isClearable === undefined) return isMulti;
      return isClearable;
    }
  }, {
    key: "isOptionDisabled",
    value: function isOptionDisabled(option, selectValue) {
      return typeof this.props.isOptionDisabled === 'function' ? this.props.isOptionDisabled(option, selectValue) : false;
    }
  }, {
    key: "isOptionSelected",
    value: function isOptionSelected(option, selectValue) {
      var _this3 = this;

      if (selectValue.indexOf(option) > -1) return true;

      if (typeof this.props.isOptionSelected === 'function') {
        return this.props.isOptionSelected(option, selectValue);
      }

      var candidate = this.getOptionValue(option);
      return selectValue.some(function (i) {
        return _this3.getOptionValue(i) === candidate;
      });
    }
  }, {
    key: "filterOption",
    value: function filterOption(option, inputValue) {
      return this.props.filterOption ? this.props.filterOption(option, inputValue) : true;
    }
  }, {
    key: "formatOptionLabel",
    value: function formatOptionLabel(data, context) {
      if (typeof this.props.formatOptionLabel === 'function') {
        var inputValue = this.props.inputValue;
        var selectValue = this.state.selectValue;
        return this.props.formatOptionLabel(data, {
          context: context,
          inputValue: inputValue,
          selectValue: selectValue
        });
      } else {
        return this.getOptionLabel(data);
      }
    }
  }, {
    key: "formatGroupLabel",
    value: function formatGroupLabel(data) {
      return this.props.formatGroupLabel(data);
    } // ==============================
    // Mouse Handlers
    // ==============================

  }, {
    key: "startListeningComposition",
    // ==============================
    // Composition Handlers
    // ==============================
    value: function startListeningComposition() {
      if (document && document.addEventListener) {
        document.addEventListener('compositionstart', this.onCompositionStart, false);
        document.addEventListener('compositionend', this.onCompositionEnd, false);
      }
    }
  }, {
    key: "stopListeningComposition",
    value: function stopListeningComposition() {
      if (document && document.removeEventListener) {
        document.removeEventListener('compositionstart', this.onCompositionStart);
        document.removeEventListener('compositionend', this.onCompositionEnd);
      }
    }
  }, {
    key: "startListeningToTouch",
    // ==============================
    // Touch Handlers
    // ==============================
    value: function startListeningToTouch() {
      if (document && document.addEventListener) {
        document.addEventListener('touchstart', this.onTouchStart, false);
        document.addEventListener('touchmove', this.onTouchMove, false);
        document.addEventListener('touchend', this.onTouchEnd, false);
      }
    }
  }, {
    key: "stopListeningToTouch",
    value: function stopListeningToTouch() {
      if (document && document.removeEventListener) {
        document.removeEventListener('touchstart', this.onTouchStart);
        document.removeEventListener('touchmove', this.onTouchMove);
        document.removeEventListener('touchend', this.onTouchEnd);
      }
    }
  }, {
    key: "constructAriaLiveMessage",
    // ==============================
    // Renderers
    // ==============================
    value: function constructAriaLiveMessage() {
      var _this$state7 = this.state,
          ariaLiveContext = _this$state7.ariaLiveContext,
          selectValue = _this$state7.selectValue,
          focusedValue = _this$state7.focusedValue,
          focusedOption = _this$state7.focusedOption;
      var _this$props15 = this.props,
          options = _this$props15.options,
          menuIsOpen = _this$props15.menuIsOpen,
          inputValue = _this$props15.inputValue,
          screenReaderStatus = _this$props15.screenReaderStatus; // An aria live message representing the currently focused value in the select.

      var focusedValueMsg = focusedValue ? valueFocusAriaMessage({
        focusedValue: focusedValue,
        getOptionLabel: this.getOptionLabel,
        selectValue: selectValue
      }) : ''; // An aria live message representing the currently focused option in the select.

      var focusedOptionMsg = focusedOption && menuIsOpen ? optionFocusAriaMessage({
        focusedOption: focusedOption,
        getOptionLabel: this.getOptionLabel,
        options: options
      }) : ''; // An aria live message representing the set of focusable results and current searchterm/inputvalue.

      var resultsMsg = resultsAriaMessage({
        inputValue: inputValue,
        screenReaderMessage: screenReaderStatus({
          count: this.countOptions()
        })
      });
      return "".concat(focusedValueMsg, " ").concat(focusedOptionMsg, " ").concat(resultsMsg, " ").concat(ariaLiveContext);
    }
  }, {
    key: "renderInput",
    value: function renderInput() {
      var _this$props16 = this.props,
          isDisabled = _this$props16.isDisabled,
          isSearchable = _this$props16.isSearchable,
          inputId = _this$props16.inputId,
          inputValue = _this$props16.inputValue,
          tabIndex = _this$props16.tabIndex,
          form = _this$props16.form;
      var Input = this.components.Input;
      var inputIsHidden = this.state.inputIsHidden;
      var id = inputId || this.getElementId('input'); // aria attributes makes the JSX "noisy", separated for clarity

      var ariaAttributes = {
        'aria-autocomplete': 'list',
        'aria-label': this.props['aria-label'],
        'aria-labelledby': this.props['aria-labelledby']
      };

      if (!isSearchable) {
        // use a dummy input to maintain focus/blur functionality
        return /*#__PURE__*/React__default.createElement(DummyInput, _extends$d({
          id: id,
          innerRef: this.getInputRef,
          onBlur: this.onInputBlur,
          onChange: noop$5,
          onFocus: this.onInputFocus,
          readOnly: true,
          disabled: isDisabled,
          tabIndex: tabIndex,
          form: form,
          value: ""
        }, ariaAttributes));
      }

      var _this$commonProps = this.commonProps,
          cx = _this$commonProps.cx,
          theme = _this$commonProps.theme,
          selectProps = _this$commonProps.selectProps;
      return /*#__PURE__*/React__default.createElement(Input, _extends$d({
        autoCapitalize: "none",
        autoComplete: "off",
        autoCorrect: "off",
        cx: cx,
        getStyles: this.getStyles,
        id: id,
        innerRef: this.getInputRef,
        isDisabled: isDisabled,
        isHidden: inputIsHidden,
        onBlur: this.onInputBlur,
        onChange: this.handleInputChange,
        onFocus: this.onInputFocus,
        selectProps: selectProps,
        spellCheck: "false",
        tabIndex: tabIndex,
        form: form,
        theme: theme,
        type: "text",
        value: inputValue
      }, ariaAttributes));
    }
  }, {
    key: "renderPlaceholderOrValue",
    value: function renderPlaceholderOrValue() {
      var _this4 = this;

      var _this$components = this.components,
          MultiValue = _this$components.MultiValue,
          MultiValueContainer = _this$components.MultiValueContainer,
          MultiValueLabel = _this$components.MultiValueLabel,
          MultiValueRemove = _this$components.MultiValueRemove,
          SingleValue = _this$components.SingleValue,
          Placeholder = _this$components.Placeholder;
      var commonProps = this.commonProps;
      var _this$props17 = this.props,
          controlShouldRenderValue = _this$props17.controlShouldRenderValue,
          isDisabled = _this$props17.isDisabled,
          isMulti = _this$props17.isMulti,
          inputValue = _this$props17.inputValue,
          placeholder = _this$props17.placeholder;
      var _this$state8 = this.state,
          selectValue = _this$state8.selectValue,
          focusedValue = _this$state8.focusedValue,
          isFocused = _this$state8.isFocused;

      if (!this.hasValue() || !controlShouldRenderValue) {
        return inputValue ? null : /*#__PURE__*/React__default.createElement(Placeholder, _extends$d({}, commonProps, {
          key: "placeholder",
          isDisabled: isDisabled,
          isFocused: isFocused
        }), placeholder);
      }

      if (isMulti) {
        var selectValues = selectValue.map(function (opt, index) {
          var isOptionFocused = opt === focusedValue;
          return /*#__PURE__*/React__default.createElement(MultiValue, _extends$d({}, commonProps, {
            components: {
              Container: MultiValueContainer,
              Label: MultiValueLabel,
              Remove: MultiValueRemove
            },
            isFocused: isOptionFocused,
            isDisabled: isDisabled,
            key: "".concat(_this4.getOptionValue(opt)).concat(index),
            index: index,
            removeProps: {
              onClick: function onClick() {
                return _this4.removeValue(opt);
              },
              onTouchEnd: function onTouchEnd() {
                return _this4.removeValue(opt);
              },
              onMouseDown: function onMouseDown(e) {
                e.preventDefault();
                e.stopPropagation();
              }
            },
            data: opt
          }), _this4.formatOptionLabel(opt, 'value'));
        });
        return selectValues;
      }

      if (inputValue) {
        return null;
      }

      var singleValue = selectValue[0];
      return /*#__PURE__*/React__default.createElement(SingleValue, _extends$d({}, commonProps, {
        data: singleValue,
        isDisabled: isDisabled
      }), this.formatOptionLabel(singleValue, 'value'));
    }
  }, {
    key: "renderClearIndicator",
    value: function renderClearIndicator() {
      var ClearIndicator = this.components.ClearIndicator;
      var commonProps = this.commonProps;
      var _this$props18 = this.props,
          isDisabled = _this$props18.isDisabled,
          isLoading = _this$props18.isLoading;
      var isFocused = this.state.isFocused;

      if (!this.isClearable() || !ClearIndicator || isDisabled || !this.hasValue() || isLoading) {
        return null;
      }

      var innerProps = {
        onMouseDown: this.onClearIndicatorMouseDown,
        onTouchEnd: this.onClearIndicatorTouchEnd,
        'aria-hidden': 'true'
      };
      return /*#__PURE__*/React__default.createElement(ClearIndicator, _extends$d({}, commonProps, {
        innerProps: innerProps,
        isFocused: isFocused
      }));
    }
  }, {
    key: "renderLoadingIndicator",
    value: function renderLoadingIndicator() {
      var LoadingIndicator = this.components.LoadingIndicator;
      var commonProps = this.commonProps;
      var _this$props19 = this.props,
          isDisabled = _this$props19.isDisabled,
          isLoading = _this$props19.isLoading;
      var isFocused = this.state.isFocused;
      if (!LoadingIndicator || !isLoading) return null;
      var innerProps = {
        'aria-hidden': 'true'
      };
      return /*#__PURE__*/React__default.createElement(LoadingIndicator, _extends$d({}, commonProps, {
        innerProps: innerProps,
        isDisabled: isDisabled,
        isFocused: isFocused
      }));
    }
  }, {
    key: "renderIndicatorSeparator",
    value: function renderIndicatorSeparator() {
      var _this$components2 = this.components,
          DropdownIndicator = _this$components2.DropdownIndicator,
          IndicatorSeparator = _this$components2.IndicatorSeparator; // separator doesn't make sense without the dropdown indicator

      if (!DropdownIndicator || !IndicatorSeparator) return null;
      var commonProps = this.commonProps;
      var isDisabled = this.props.isDisabled;
      var isFocused = this.state.isFocused;
      return /*#__PURE__*/React__default.createElement(IndicatorSeparator, _extends$d({}, commonProps, {
        isDisabled: isDisabled,
        isFocused: isFocused
      }));
    }
  }, {
    key: "renderDropdownIndicator",
    value: function renderDropdownIndicator() {
      var DropdownIndicator = this.components.DropdownIndicator;
      if (!DropdownIndicator) return null;
      var commonProps = this.commonProps;
      var isDisabled = this.props.isDisabled;
      var isFocused = this.state.isFocused;
      var innerProps = {
        onMouseDown: this.onDropdownIndicatorMouseDown,
        onTouchEnd: this.onDropdownIndicatorTouchEnd,
        'aria-hidden': 'true'
      };
      return /*#__PURE__*/React__default.createElement(DropdownIndicator, _extends$d({}, commonProps, {
        innerProps: innerProps,
        isDisabled: isDisabled,
        isFocused: isFocused
      }));
    }
  }, {
    key: "renderMenu",
    value: function renderMenu() {
      var _this5 = this;

      var _this$components3 = this.components,
          Group = _this$components3.Group,
          GroupHeading = _this$components3.GroupHeading,
          Menu = _this$components3.Menu,
          MenuList = _this$components3.MenuList,
          MenuPortal = _this$components3.MenuPortal,
          LoadingMessage = _this$components3.LoadingMessage,
          NoOptionsMessage = _this$components3.NoOptionsMessage,
          Option = _this$components3.Option;
      var commonProps = this.commonProps;
      var _this$state9 = this.state,
          focusedOption = _this$state9.focusedOption,
          menuOptions = _this$state9.menuOptions;
      var _this$props20 = this.props,
          captureMenuScroll = _this$props20.captureMenuScroll,
          inputValue = _this$props20.inputValue,
          isLoading = _this$props20.isLoading,
          loadingMessage = _this$props20.loadingMessage,
          minMenuHeight = _this$props20.minMenuHeight,
          maxMenuHeight = _this$props20.maxMenuHeight,
          menuIsOpen = _this$props20.menuIsOpen,
          menuPlacement = _this$props20.menuPlacement,
          menuPosition = _this$props20.menuPosition,
          menuPortalTarget = _this$props20.menuPortalTarget,
          menuShouldBlockScroll = _this$props20.menuShouldBlockScroll,
          menuShouldScrollIntoView = _this$props20.menuShouldScrollIntoView,
          noOptionsMessage = _this$props20.noOptionsMessage,
          onMenuScrollToTop = _this$props20.onMenuScrollToTop,
          onMenuScrollToBottom = _this$props20.onMenuScrollToBottom;
      if (!menuIsOpen) return null; // TODO: Internal Option Type here

      var render = function render(props) {
        // for performance, the menu options in state aren't changed when the
        // focused option changes so we calculate additional props based on that
        var isFocused = focusedOption === props.data;
        props.innerRef = isFocused ? _this5.getFocusedOptionRef : undefined;
        return /*#__PURE__*/React__default.createElement(Option, _extends$d({}, commonProps, props, {
          isFocused: isFocused
        }), _this5.formatOptionLabel(props.data, 'menu'));
      };

      var menuUI;

      if (this.hasOptions()) {
        menuUI = menuOptions.render.map(function (item) {
          if (item.type === 'group') {
            item.type;
                var group = _objectWithoutProperties$3(item, ["type"]);

            var headingId = "".concat(item.key, "-heading");
            return /*#__PURE__*/React__default.createElement(Group, _extends$d({}, commonProps, group, {
              Heading: GroupHeading,
              headingProps: {
                id: headingId,
                data: item.data
              },
              label: _this5.formatGroupLabel(item.data)
            }), item.options.map(function (option) {
              return render(option);
            }));
          } else if (item.type === 'option') {
            return render(item);
          }
        });
      } else if (isLoading) {
        var message = loadingMessage({
          inputValue: inputValue
        });
        if (message === null) return null;
        menuUI = /*#__PURE__*/React__default.createElement(LoadingMessage, commonProps, message);
      } else {
        var _message = noOptionsMessage({
          inputValue: inputValue
        });

        if (_message === null) return null;
        menuUI = /*#__PURE__*/React__default.createElement(NoOptionsMessage, commonProps, _message);
      }

      var menuPlacementProps = {
        minMenuHeight: minMenuHeight,
        maxMenuHeight: maxMenuHeight,
        menuPlacement: menuPlacement,
        menuPosition: menuPosition,
        menuShouldScrollIntoView: menuShouldScrollIntoView
      };
      var menuElement = /*#__PURE__*/React__default.createElement(MenuPlacer, _extends$d({}, commonProps, menuPlacementProps), function (_ref10) {
        var ref = _ref10.ref,
            _ref10$placerProps = _ref10.placerProps,
            placement = _ref10$placerProps.placement,
            maxHeight = _ref10$placerProps.maxHeight;
        return /*#__PURE__*/React__default.createElement(Menu, _extends$d({}, commonProps, menuPlacementProps, {
          innerRef: ref,
          innerProps: {
            onMouseDown: _this5.onMenuMouseDown,
            onMouseMove: _this5.onMenuMouseMove
          },
          isLoading: isLoading,
          placement: placement
        }), /*#__PURE__*/React__default.createElement(ScrollCaptorSwitch, {
          isEnabled: captureMenuScroll,
          onTopArrive: onMenuScrollToTop,
          onBottomArrive: onMenuScrollToBottom
        }, /*#__PURE__*/React__default.createElement(ScrollBlock$1, {
          isEnabled: menuShouldBlockScroll
        }, /*#__PURE__*/React__default.createElement(MenuList, _extends$d({}, commonProps, {
          innerRef: _this5.getMenuListRef,
          isLoading: isLoading,
          maxHeight: maxHeight
        }), menuUI))));
      }); // positioning behaviour is almost identical for portalled and fixed,
      // so we use the same component. the actual portalling logic is forked
      // within the component based on `menuPosition`

      return menuPortalTarget || menuPosition === 'fixed' ? /*#__PURE__*/React__default.createElement(MenuPortal, _extends$d({}, commonProps, {
        appendTo: menuPortalTarget,
        controlElement: this.controlRef,
        menuPlacement: menuPlacement,
        menuPosition: menuPosition
      }), menuElement) : menuElement;
    }
  }, {
    key: "renderFormField",
    value: function renderFormField() {
      var _this6 = this;

      var _this$props21 = this.props,
          delimiter = _this$props21.delimiter,
          isDisabled = _this$props21.isDisabled,
          isMulti = _this$props21.isMulti,
          name = _this$props21.name;
      var selectValue = this.state.selectValue;
      if (!name || isDisabled) return;

      if (isMulti) {
        if (delimiter) {
          var value = selectValue.map(function (opt) {
            return _this6.getOptionValue(opt);
          }).join(delimiter);
          return /*#__PURE__*/React__default.createElement("input", {
            name: name,
            type: "hidden",
            value: value
          });
        } else {
          var input = selectValue.length > 0 ? selectValue.map(function (opt, i) {
            return /*#__PURE__*/React__default.createElement("input", {
              key: "i-".concat(i),
              name: name,
              type: "hidden",
              value: _this6.getOptionValue(opt)
            });
          }) : /*#__PURE__*/React__default.createElement("input", {
            name: name,
            type: "hidden"
          });
          return /*#__PURE__*/React__default.createElement("div", null, input);
        }
      } else {
        var _value2 = selectValue[0] ? this.getOptionValue(selectValue[0]) : '';

        return /*#__PURE__*/React__default.createElement("input", {
          name: name,
          type: "hidden",
          value: _value2
        });
      }
    }
  }, {
    key: "renderLiveRegion",
    value: function renderLiveRegion() {
      if (!this.state.isFocused) return null;
      return /*#__PURE__*/React__default.createElement(A11yText, {
        "aria-live": "polite"
      }, /*#__PURE__*/React__default.createElement("span", {
        id: "aria-selection-event"
      }, "\xA0", this.state.ariaLiveSelection), /*#__PURE__*/React__default.createElement("span", {
        id: "aria-context"
      }, "\xA0", this.constructAriaLiveMessage()));
    }
  }, {
    key: "render",
    value: function render() {
      var _this$components4 = this.components,
          Control = _this$components4.Control,
          IndicatorsContainer = _this$components4.IndicatorsContainer,
          SelectContainer = _this$components4.SelectContainer,
          ValueContainer = _this$components4.ValueContainer;
      var _this$props22 = this.props,
          className = _this$props22.className,
          id = _this$props22.id,
          isDisabled = _this$props22.isDisabled,
          menuIsOpen = _this$props22.menuIsOpen;
      var isFocused = this.state.isFocused;
      var commonProps = this.commonProps = this.getCommonProps();
      return /*#__PURE__*/React__default.createElement(SelectContainer, _extends$d({}, commonProps, {
        className: className,
        innerProps: {
          id: id,
          onKeyDown: this.onKeyDown
        },
        isDisabled: isDisabled,
        isFocused: isFocused
      }), this.renderLiveRegion(), /*#__PURE__*/React__default.createElement(Control, _extends$d({}, commonProps, {
        innerRef: this.getControlRef,
        innerProps: {
          onMouseDown: this.onControlMouseDown,
          onTouchEnd: this.onControlTouchEnd
        },
        isDisabled: isDisabled,
        isFocused: isFocused,
        menuIsOpen: menuIsOpen
      }), /*#__PURE__*/React__default.createElement(ValueContainer, _extends$d({}, commonProps, {
        isDisabled: isDisabled
      }), this.renderPlaceholderOrValue(), this.renderInput()), /*#__PURE__*/React__default.createElement(IndicatorsContainer, _extends$d({}, commonProps, {
        isDisabled: isDisabled
      }), this.renderClearIndicator(), this.renderLoadingIndicator(), this.renderIndicatorSeparator(), this.renderDropdownIndicator())), this.renderMenu(), this.renderFormField());
    }
  }]);

  return Select;
}(Component$1);

Select$2.defaultProps = defaultProps$1;

function _createSuper$j(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$j(); return function _createSuperInternal() { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$8(this, result); }; }

function _isNativeReflectConstruct$j() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }
var defaultProps = {
  defaultInputValue: '',
  defaultMenuIsOpen: false,
  defaultValue: null
};

var manageState = function manageState(SelectComponent) {
  var _class, _temp;

  return _temp = _class = /*#__PURE__*/function (_Component) {
    _inherits$8(StateManager, _Component);

    var _super = _createSuper$j(StateManager);

    function StateManager() {
      var _this;

      _classCallCheck$8(this, StateManager);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _super.call.apply(_super, [this].concat(args));
      _this.select = void 0;
      _this.state = {
        inputValue: _this.props.inputValue !== undefined ? _this.props.inputValue : _this.props.defaultInputValue,
        menuIsOpen: _this.props.menuIsOpen !== undefined ? _this.props.menuIsOpen : _this.props.defaultMenuIsOpen,
        value: _this.props.value !== undefined ? _this.props.value : _this.props.defaultValue
      };

      _this.onChange = function (value, actionMeta) {
        _this.callProp('onChange', value, actionMeta);

        _this.setState({
          value: value
        });
      };

      _this.onInputChange = function (value, actionMeta) {
        // TODO: for backwards compatibility, we allow the prop to return a new
        // value, but now inputValue is a controllable prop we probably shouldn't
        var newValue = _this.callProp('onInputChange', value, actionMeta);

        _this.setState({
          inputValue: newValue !== undefined ? newValue : value
        });
      };

      _this.onMenuOpen = function () {
        _this.callProp('onMenuOpen');

        _this.setState({
          menuIsOpen: true
        });
      };

      _this.onMenuClose = function () {
        _this.callProp('onMenuClose');

        _this.setState({
          menuIsOpen: false
        });
      };

      return _this;
    }

    _createClass$8(StateManager, [{
      key: "focus",
      value: function focus() {
        this.select.focus();
      }
    }, {
      key: "blur",
      value: function blur() {
        this.select.blur();
      } // FIXME: untyped flow code, return any

    }, {
      key: "getProp",
      value: function getProp(key) {
        return this.props[key] !== undefined ? this.props[key] : this.state[key];
      } // FIXME: untyped flow code, return any

    }, {
      key: "callProp",
      value: function callProp(name) {
        if (typeof this.props[name] === 'function') {
          var _this$props;

          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
            args[_key2 - 1] = arguments[_key2];
          }

          return (_this$props = this.props)[name].apply(_this$props, args);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props2 = this.props;
            _this$props2.defaultInputValue;
            _this$props2.defaultMenuIsOpen;
            _this$props2.defaultValue;
            var props = _objectWithoutProperties$3(_this$props2, ["defaultInputValue", "defaultMenuIsOpen", "defaultValue"]);

        return /*#__PURE__*/React__default.createElement(SelectComponent, _extends$d({}, props, {
          ref: function ref(_ref) {
            _this2.select = _ref;
          },
          inputValue: this.getProp('inputValue'),
          menuIsOpen: this.getProp('menuIsOpen'),
          onChange: this.onChange,
          onInputChange: this.onInputChange,
          onMenuClose: this.onMenuClose,
          onMenuOpen: this.onMenuOpen,
          value: this.getProp('value')
        }));
      }
    }]);

    return StateManager;
  }(Component$1), _class.defaultProps = defaultProps, _temp;
};

var index$1 = manageState(Select$2);

var Select$1 = index$1;

/**
 * createTheme is used to create a set of Providers and Consumers for theming components.
 * - Takes a default theme function; this theme function gets a set of props, and returns tokens
 *  based on those props. An example of this default theme function is one that produces the standard
 *  appearance of the component
 * - Returns three things - a Provider that allow for additional themes to be applied, a Consumer
 *  that can get the current theme and fetch it, and a custom hook - useTheme which provides an alternate (although functionally the same) API
 *  to the Consumer.
 **/
function createTheme$3(defaultGetTokens) {
  var emptyThemeFn = function emptyThemeFn(getTokens, props) {
    return getTokens(props);
  };
  /**
   * Internally, Theme uses React Context, with internal providers and consumers.
   * The React Context passes only a function that gets props, and turns them into tokens. This
   * function gets mixed as more Providers with their own themes are added. This mixed function
   * is ultimately picked up by Consumers, which implement a context consumer internally to fetch
   * the theme.
   **/


  var ThemeContext = /*#__PURE__*/createContext$1(defaultGetTokens);

  function useTheme(themeProps) {
    var theme = useContext(ThemeContext);
    var themeFn = theme || emptyThemeFn;
    var tokens = themeFn(themeProps);
    return tokens;
  } // The Theme Consumer takes a function as its child - this function takes tokens, and the
  // return value is generally a set of nodes with the tokens applied appropriately.


  function Consumer(props) {
    var children = props.children,
        themeProps = _objectWithoutProperties$3(props, ["children"]); // @ts-ignore See issue for more info: https://github.com/Microsoft/TypeScript/issues/10727
    // Argument of type 'Pick<ThemeProps & { children: (tokens: ThemeTokens) => ReactNode; }, Exclude<keyof ThemeProps, "children">>' is not assignable to parameter of type 'ThemeProps'.ts(2345)


    var tokens = useTheme(themeProps); // We add a fragment to ensure we don't break people upgrading.
    // Previously they may have been able to pass in undefined without things blowing up.

    return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, children(tokens));
  }
  /**
   * The Theme Provider takes regular nodes as its children, but also takes a *theme function*
   * - The theme function takes a set of props, as well as a function (getTokens) that can turn props into tokens.
   * - The getTokens function isn't called immediately - instead the props are passed
   *    through a mix of parent theming functions
   * Children of this provider will receive this mixed theme
   */


  function Provider(props) {
    var themeFn = useContext(ThemeContext);
    var valueFn = props.value || emptyThemeFn;
    var mixedFn = useCallback$1(function (themeProps) {
      return valueFn(themeFn, themeProps);
    }, [themeFn, valueFn]);
    return /*#__PURE__*/React__default.createElement(ThemeContext.Provider, {
      value: mixedFn
    }, props.children);
  }

  return {
    Consumer: Consumer,
    Provider: Provider,
    useTheme: useTheme
  };
}

// Create default global light theme
var _createTheme$3 = createTheme$3(function () {
  return {
    mode: 'light'
  };
}),
    useTheme$2 = _createTheme$3.useTheme;

var useGlobalTheme$2 = function useGlobalTheme() {
  return useTheme$2();
};

// These are duplicates of colors imports -
// Not bringing in colors to reduce dependency on theme
// These values are enforced via unit tests
var DN30$4 = '#1B2638';
var N0$6 = '#FFFFFF';
var themedBackground$3 = {
  light: N0$6,
  dark: DN30$4
};
/**
 * Returns the background color depending on the passed through mode.
 * @param mode
 */

var getBackground$3 = function getBackground() {
  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';
  return themedBackground$3[mode];
};

var sizes$2 = {
  small: '16px',
  medium: '24px',
  large: '32px',
  xlarge: '48px'
};
var dimensions$2 = {
  small: {
    width: sizes$2.small,
    height: sizes$2.small
  },
  medium: {
    width: sizes$2.medium,
    height: sizes$2.medium
  },
  large: {
    width: sizes$2.large,
    height: sizes$2.large
  },
  xlarge: {
    width: sizes$2.xlarge,
    height: sizes$2.xlarge
  }
};

var commonSVGStyles$2 = {
  overflow: 'hidden',
  pointerEvents: 'none',

  /**
   * Stop-color doesn't properly apply in chrome when the inherited/current color changes.
   * We have to initially set stop-color to inherit (either via DOM attribute or an initial CSS
   * rule) and then override it with currentColor for the color changes to be picked up.
   */
  stop: {
    stopColor: 'currentColor'
  }
};
css$2(dimensions$2.small);
css$2(dimensions$2.medium);
css$2(dimensions$2.large);
css$2(dimensions$2.xlarge); // pre-built css style-size map
/**
 * Returns the width of the icon's parent span. This function has
 * special behaviour to deal with icon-file-type specifically.
 *
 * The reality is the SVG still has its own dimensions, so this is
 * a secondary fallback which in 95% of cases is not required.
 * It's only really being kept to maintain backward compatability.
 */

var getIconSize$2 = function getIconSize(_ref) {
  var width = _ref.width,
      height = _ref.height,
      size = _ref.size;

  if (width && height) {
    return {
      width: width,
      height: height
    };
  }

  if (size) {
    return dimensions$2[size];
  }

  return undefined;
};

function ownKeys$n(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$m(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$n(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$n(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
/**
 * We are hiding these props from consumers as they're used to
 * hack around icon sizing specifically for icon-file-type.
 */

var iconStyles$2 = css$2({
  display: 'inline-block',
  flexShrink: 0,
  lineHeight: 1,
  // eslint-disable-next-line @repo/internal/styles/no-nested-styles
  '> svg': _objectSpread$m(_objectSpread$m({}, commonSVGStyles$2), {}, {
    maxWidth: '100%',
    maxHeight: '100%',
    color: 'var(--icon-primary-color)',
    fill: 'var(--icon-secondary-color)',
    verticalAlign: 'bottom'
  })
});
/**
 * For windows high contrast mode
 */

var baseHcmStyles$2 = css$2({
  '@media screen and (forced-colors: active)': {
    // eslint-disable-next-line @repo/internal/styles/no-nested-styles
    '> svg': {
      filter: 'grayscale(1)',
      '--icon-primary-color': 'CanvasText',
      // foreground
      '--icon-secondary-color': 'Canvas' // background

    }
  }
});
var primaryEqualsSecondaryHcmStyles$2 = css$2({
  '@media screen and (forced-colors: active)': {
    // eslint-disable-next-line @repo/internal/styles/no-nested-styles
    '> svg': {
      // if the primaryColor is the same as the secondaryColor we
      // set the --icon-primary-color to Canvas
      // this is usually to convey state i.e. Checkbox checked -> not checked
      '--icon-primary-color': 'Canvas' // foreground

    }
  }
});
var secondaryTransparentHcmStyles$2 = css$2({
  '@media screen and (forced-colors: active)': {
    // eslint-disable-next-line @repo/internal/styles/no-nested-styles
    '> svg': {
      '--icon-secondary-color': 'transparent' // background

    }
  }
});
/**
 * __Icon__
 *
 * An icon is used as a visual representation of common actions and commands to provide context.
 *
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)
 */

var Icon$5 = /*#__PURE__*/memo(function Icon(props) {
  var _ref = props,
      Glyph = _ref.glyph,
      dangerouslySetGlyph = _ref.dangerouslySetGlyph,
      _ref$primaryColor = _ref.primaryColor,
      primaryColor = _ref$primaryColor === void 0 ? 'currentColor' : _ref$primaryColor,
      secondaryColor = _ref.secondaryColor,
      size = _ref.size,
      testId = _ref.testId,
      label = _ref.label,
      width = _ref.width,
      height = _ref.height;
  var glyphProps = dangerouslySetGlyph ? {
    dangerouslySetInnerHTML: {
      __html: dangerouslySetGlyph
    }
  } : {
    children: Glyph ? jsx(Glyph, {
      role: "presentation"
    }) : null
  };
  var dimensions = getIconSize$2({
    width: width,
    height: height,
    size: size
  });

  var _useGlobalTheme = useGlobalTheme$2(),
      mode = _useGlobalTheme.mode;

  return jsx("span", _extends$d({
    "data-testid": testId,
    role: label ? 'img' : 'presentation',
    "aria-label": label ? label : undefined,
    "aria-hidden": label ? undefined : true,
    style: {
      '--icon-primary-color': primaryColor,
      '--icon-secondary-color': secondaryColor || getBackground$3(mode)
    }
  }, glyphProps, {
    css: [iconStyles$2, baseHcmStyles$2, primaryColor === secondaryColor && primaryEqualsSecondaryHcmStyles$2, secondaryColor === 'transparent' && secondaryTransparentHcmStyles$2, // NB: This can be resolved if this component, composes base SVG / and/or skeleton
    // We could then simplify how common styles are dealt with simply by encapsualting them
    // at their appropriate level and/or having a singular approach to css variables in the package
    dimensions && // eslint-disable-next-line @repo/internal/react/consistent-css-prop-usage
    css$2({
      width: dimensions.width,
      height: dimensions.height,
      '> svg': dimensions
    })]
  }));
});
var Icon$6 = Icon$5;

var base$2 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    'default': Icon$6,
    Icon: Icon$5
});

var require$$1$2 = /*@__PURE__*/getAugmentedNamespace(base$2);

var R75$1 = '#FFBDAD';
var R400$1 = '#DE350B';
var G400 = '#00875A';
var B100$2 = '#4C9AFF';

var N0$5 = '#FFFFFF';
var N20$2 = '#F4F5F7';
var N30$2 = '#EBECF0';
var N40$1 = '#DFE1E6';
var N70$2 = '#A5ADBA';
var N100$2 = '#7A869A';
var N200$1 = '#6B778C';
var N500$3 = '#42526E';
var N800$1 = '#172B4D'; // ATTENTION: update the tints if you update this

var gridSize$4 = function gridSize() {
  return 8;
};
var fontFamily = function fontFamily() {
  return "-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif";
};

function ownKeys$m(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$l(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$m(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$m(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var AnalyticsEvent$4 = /*#__PURE__*/function () {
  function AnalyticsEvent(props) {
    var _this = this;

    _classCallCheck$8(this, AnalyticsEvent);

    _defineProperty$3(this, "clone", function () {
      // just a shallow clone, don't change sub refs unless you want to
      // affect the original's too
      var payload = _objectSpread$l({}, _this.payload);

      return new AnalyticsEvent({
        payload: payload
      });
    });

    this.payload = props.payload;
  }

  _createClass$8(AnalyticsEvent, [{
    key: "update",
    value: function update(updater) {
      if (typeof updater === 'function') {
        this.payload = updater(this.payload);
      }

      if (_typeof$3(updater) === 'object') {
        this.payload = _objectSpread$l(_objectSpread$l({}, this.payload), updater);
      }

      return this;
    }
  }]);

  return AnalyticsEvent;
}();

function _createSuper$i(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$i(); return function _createSuperInternal() { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$8(this, result); }; }

function _isNativeReflectConstruct$i() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var UIAnalyticsEvent$4 = /*#__PURE__*/function (_AnalyticsEvent) {
  _inherits$8(UIAnalyticsEvent, _AnalyticsEvent);

  var _super = _createSuper$i(UIAnalyticsEvent);

  function UIAnalyticsEvent(props) {
    var _this;

    _classCallCheck$8(this, UIAnalyticsEvent);

    _this = _super.call(this, props);

    _defineProperty$3(_assertThisInitialized$4(_this), "clone", function () {
      if (_this.hasFired) {
        if (process.env.NODE_ENV !== 'production' && !process.env.CI) {
          // eslint-disable-next-line no-console
          console.warn("Cannot clone an event after it's been fired.");
        }

        return null;
      }

      var context = _toConsumableArray$2(_this.context);

      var handlers = _toConsumableArray$2(_this.handlers);
      /**
       * A hacky "deep clone" of the object. This is limited in that it wont
       * support functions, regexs, Maps, Sets, etc, but none of those need to
       * be represented in our payload.
       */


      var payload = JSON.parse(JSON.stringify(_this.payload));
      return new UIAnalyticsEvent({
        context: context,
        handlers: handlers,
        payload: payload
      });
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "fire", function (channel) {
      if (_this.hasFired) {
        if (process.env.NODE_ENV !== 'production' && !process.env.CI) {
          // eslint-disable-next-line no-console
          console.warn('Cannot fire an event twice.');
        }

        return;
      }

      _this.handlers.forEach(function (handler) {
        return handler(_assertThisInitialized$4(_this), channel);
      });

      _this.hasFired = true;
    });

    _this.context = props.context || [];
    _this.handlers = props.handlers || [];
    _this.hasFired = false;
    return _this;
  }

  _createClass$8(UIAnalyticsEvent, [{
    key: "update",
    value: function update(updater) {
      if (this.hasFired) {
        if (process.env.NODE_ENV !== 'production' && !process.env.CI) {
          // eslint-disable-next-line no-console
          console.warn("Cannot update an event after it's been fired.");
        }

        return this;
      }

      return _get(_getPrototypeOf$2(UIAnalyticsEvent.prototype), "update", this).call(this, updater);
    }
  }]);

  return UIAnalyticsEvent;
}(AnalyticsEvent$4);

var useAnalyticsContext$4 = function useAnalyticsContext() {
  return useContext(AnalyticsNextContext$1);
};

var useTrackedRef$4 = function useTrackedRef(value) {
  var ref = useRef(value);
  useEffect(function () {
    ref.current = value;
  }, [value]);
  return ref;
};

function _createSuper$h(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$h(); return function _createSuperInternal() { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$8(this, result); }; }

function _isNativeReflectConstruct$h() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var ContextTypes$3 = {
  getAtlaskitAnalyticsContext: PropTypes$3.func,
  getAtlaskitAnalyticsEventHandlers: PropTypes$3.func
};

var noop$4 = function noop() {
  return [];
}; // eslint-disable-next-line @repo/internal/react/no-class-components


var AnalyticsContext$e = /*#__PURE__*/function (_Component) {
  _inherits$8(AnalyticsContext, _Component);

  var _super = _createSuper$h(AnalyticsContext);

  function AnalyticsContext(props) {
    var _this;

    _classCallCheck$8(this, AnalyticsContext);

    _this = _super.call(this, props);

    _defineProperty$3(_assertThisInitialized$4(_this), "getChildContext", function () {
      return {
        getAtlaskitAnalyticsContext: _this.getAnalyticsContext
      };
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "getAnalyticsContext", function () {
      var data = _this.props.data;
      var _this$context$getAtla = _this.context.getAtlaskitAnalyticsContext,
          getAtlaskitAnalyticsContext = _this$context$getAtla === void 0 ? noop$4 : _this$context$getAtla;
      return [].concat(_toConsumableArray$2(getAtlaskitAnalyticsContext()), [data]);
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "getAnalyticsEventHandlers", function () {
      var _this$context$getAtla2 = _this.context.getAtlaskitAnalyticsEventHandlers,
          getAtlaskitAnalyticsEventHandlers = _this$context$getAtla2 === void 0 ? noop$4 : _this$context$getAtla2;
      return getAtlaskitAnalyticsEventHandlers();
    });

    _this.contextValue = {
      getAtlaskitAnalyticsContext: _this.getAnalyticsContext,
      getAtlaskitAnalyticsEventHandlers: _this.getAnalyticsEventHandlers
    };
    return _this;
  }

  _createClass$8(AnalyticsContext, [{
    key: "render",
    value: function render() {
      var children = this.props.children;
      return /*#__PURE__*/React__default.createElement(AnalyticsNextContext$1.Provider, {
        value: this.contextValue
      }, children);
    }
  }]);

  return AnalyticsContext;
}(Component$1);

_defineProperty$3(AnalyticsContext$e, "contextTypes", ContextTypes$3);

_defineProperty$3(AnalyticsContext$e, "childContextTypes", ContextTypes$3);

var AnalyticsContext$f = AnalyticsContext$e;

var AnalyticsContext$d = function AnalyticsContext(_ref) {
  var data = _ref.data,
      children = _ref.children;
  var dataRef = useTrackedRef$4(data);
  var analyticsContext = useAnalyticsContext$4();
  var getAtlaskitAnalyticsContext = useCallback$1(function () {
    return [].concat(_toConsumableArray$2(analyticsContext.getAtlaskitAnalyticsContext()), [dataRef.current]);
  }, [analyticsContext, dataRef]);
  var value = useMemo$1(function () {
    return {
      getAtlaskitAnalyticsContext: getAtlaskitAnalyticsContext,
      getAtlaskitAnalyticsEventHandlers: analyticsContext.getAtlaskitAnalyticsEventHandlers
    };
  }, [analyticsContext, getAtlaskitAnalyticsContext]);
  return /*#__PURE__*/React__default.createElement(AnalyticsNextContext$1.Provider, {
    value: value
  }, children);
};

var ModernAnalyticsContext$3 = AnalyticsContext$d;

var ExportedAnalyticsContext$3;

if (typeof process !== 'undefined' && process.env['ANALYTICS_NEXT_MODERN_CONTEXT']) {
  ExportedAnalyticsContext$3 = ModernAnalyticsContext$3;
} else {
  ExportedAnalyticsContext$3 = AnalyticsContext$f;
}

var AnalyticsContext$c = ExportedAnalyticsContext$3;

function ownKeys$l(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$k(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$l(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$l(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var withAnalyticsContext$6 = function withAnalyticsContext(defaultData) {
  return function (WrappedComponent) {
    var WithAnalyticsContext = /*#__PURE__*/forwardRef(function (_ref, ref) {
      var analyticsContext = _ref.analyticsContext,
          rest = _objectWithoutProperties$3(_ref, ["analyticsContext"]);

      var analyticsData = useMemo$1(function () {
        return _objectSpread$k(_objectSpread$k({}, defaultData), analyticsContext);
      }, [analyticsContext]);
      return /*#__PURE__*/React__default.createElement(AnalyticsContext$c, {
        data: analyticsData
      }, /*#__PURE__*/React__default.createElement(WrappedComponent, _extends$d({}, rest, {
        ref: ref
      })));
    }); // @ts-ignore

    WithAnalyticsContext.displayName = "WithAnalyticsContext(".concat( // @ts-ignore disneyName doesn't exist on type
    WrappedComponent.displayName || WrappedComponent.name, ")");
    return WithAnalyticsContext;
  };
};

var withAnalyticsContext$7 = withAnalyticsContext$6;

function useAnalyticsEvents$4() {
  var analyticsContext = useAnalyticsContext$4();
  var createAnalyticsEvent = useCallbackOne(function (payload) {
    return new UIAnalyticsEvent$4({
      context: analyticsContext.getAtlaskitAnalyticsContext(),
      handlers: analyticsContext.getAtlaskitAnalyticsEventHandlers(),
      payload: payload
    });
  }, [analyticsContext]);
  return {
    createAnalyticsEvent: createAnalyticsEvent
  };
}

function ownKeys$k(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$j(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$k(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$k(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
function usePatchedProps$3() {
  var createEventMap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var wrappedComponentProps = arguments.length > 1 ? arguments[1] : undefined;

  var _useAnalyticsEvents = useAnalyticsEvents$4(),
      createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;

  var handlerCache = useRef({});
  var patchedProps = useMemo$1(function () {
    var cache = handlerCache.current; // Clean up no longer used handlers in cache

    Object.keys(cache).filter(function (key) {
      return !(key in createEventMap);
    }).forEach(function (key) {
      return delete cache[key];
    });
    return Object.keys(createEventMap).reduce(function (p, k) {
      var eventCreator = createEventMap[k];

      if (!['object', 'function'].includes(_typeof$3(eventCreator))) {
        return p;
      }

      var propValue = wrappedComponentProps[k];

      if (k in cache && cache[k].eventCreator === eventCreator && cache[k].propValue === propValue) {
        return _objectSpread$j(_objectSpread$j({}, p), {}, _defineProperty$3({}, k, cache[k].wrappedCallback));
      }

      var wrappedCallback = function wrappedCallback() {
        var analyticsEvent = typeof eventCreator === 'function' ? eventCreator(createAnalyticsEvent, wrappedComponentProps) : createAnalyticsEvent(eventCreator);

        if (propValue && typeof propValue === 'function') {
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          propValue.apply(void 0, args.concat([analyticsEvent]));
        }
      };

      cache[k] = {
        eventCreator: eventCreator,
        wrappedCallback: wrappedCallback,
        propValue: propValue
      };
      return _objectSpread$j(_objectSpread$j({}, p), {}, _defineProperty$3({}, k, wrappedCallback));
    }, {});
  }, [createEventMap, wrappedComponentProps, createAnalyticsEvent, handlerCache]);
  return {
    patchedEventProps: patchedProps
  };
}

var withAnalyticsEvents$6 = function withAnalyticsEvents() {
  var createEventMap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return function (WrappedComponent) {
    var WithAnalyticsEvents = /*#__PURE__*/forwardRef(function (props, ref) {
      var _usePatchedProps = usePatchedProps$3(createEventMap, props),
          patchedEventProps = _usePatchedProps.patchedEventProps;

      var _useAnalyticsEvents = useAnalyticsEvents$4(),
          createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;

      return /*#__PURE__*/React__default.createElement(WrappedComponent, _extends$d({}, props, patchedEventProps, {
        createAnalyticsEvent: createAnalyticsEvent,
        ref: ref
      }));
    }); // @ts-ignore

    WithAnalyticsEvents.displayName = "WithAnalyticsEvents(".concat( // @ts-ignore disneyName doesn't exist on type
    WrappedComponent.displayName || WrappedComponent.name, ")");
    return WithAnalyticsEvents;
  };
};

var withAnalyticsEvents$7 = withAnalyticsEvents$6;

var createAndFireEvent$3 = (function (channel) {
  return function (payload) {
    return function (createAnalyticsEvent) {
      var consumerEvent = createAnalyticsEvent(payload);
      var clonedEvent = consumerEvent.clone();

      if (clonedEvent) {
        clonedEvent.fire(channel);
      }

      return consumerEvent;
    };
  };
});

// strip transition props off before spreading onto select component
// note we need to be explicit about innerRef for flow
var AnimatedInput = function AnimatedInput(WrappedComponent) {
  return function (_ref) {
    _ref.in;
        _ref.onExited;
        _ref.appear;
        _ref.enter;
        _ref.exit;
        var props = _objectWithoutProperties$3(_ref, ["in", "onExited", "appear", "enter", "exit"]);

    return /*#__PURE__*/React__default.createElement(WrappedComponent, props);
  };
};

function _createSuper$g(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$g(); return function _createSuperInternal() { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$8(this, result); }; }

function _isNativeReflectConstruct$g() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function ownKeys$j(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$i(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$j(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$j(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var Fade = function Fade(_ref) {
  var Tag = _ref.component,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 1 : _ref$duration,
      inProp = _ref.in;
      _ref.onExited;
      var props = _objectWithoutProperties$3(_ref, ["component", "duration", "in", "onExited"]);

  var transition = {
    entering: {
      opacity: 0
    },
    entered: {
      opacity: 1,
      transition: "opacity ".concat(duration, "ms")
    },
    exiting: {
      opacity: 0
    },
    exited: {
      opacity: 0
    }
  };
  return /*#__PURE__*/React__default.createElement(Transition$1, {
    mountOnEnter: true,
    unmountOnExit: true,
    in: inProp,
    timeout: duration
  }, function (state) {
    var innerProps = {
      style: _objectSpread$i({}, transition[state])
    };
    return /*#__PURE__*/React__default.createElement(Tag, _extends$d({
      innerProps: innerProps
    }, props));
  });
}; // ==============================
// Collapse Transition
// ==============================

var collapseDuration = 260;
// wrap each MultiValue with a collapse transition; decreases width until
// finally removing from DOM
var Collapse = /*#__PURE__*/function (_Component) {
  _inherits$8(Collapse, _Component);

  var _super = _createSuper$g(Collapse);

  function Collapse() {
    var _this;

    _classCallCheck$8(this, Collapse);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.duration = collapseDuration;
    _this.rafID = void 0;
    _this.state = {
      width: 'auto'
    };
    _this.transition = {
      exiting: {
        width: 0,
        transition: "width ".concat(_this.duration, "ms ease-out")
      },
      exited: {
        width: 0
      }
    };

    _this.getWidth = function (ref) {
      if (ref && isNaN(_this.state.width)) {
        /*
          Here we're invoking requestAnimationFrame with a callback invoking our
          call to getBoundingClientRect and setState in order to resolve an edge case
          around portalling. Certain portalling solutions briefly remove children from the DOM
          before appending them to the target node. This is to avoid us trying to call getBoundingClientrect
          while the Select component is in this state.
        */
        // cannot use `offsetWidth` because it is rounded
        _this.rafID = window.requestAnimationFrame(function () {
          var _ref$getBoundingClien = ref.getBoundingClientRect(),
              width = _ref$getBoundingClien.width;

          _this.setState({
            width: width
          });
        });
      }
    };

    _this.getStyle = function (width) {
      return {
        overflow: 'hidden',
        whiteSpace: 'nowrap',
        width: width
      };
    };

    _this.getTransition = function (state) {
      return _this.transition[state];
    };

    return _this;
  }

  _createClass$8(Collapse, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.rafID) {
        window.cancelAnimationFrame(this.rafID);
      }
    } // width must be calculated; cannot transition from `undefined` to `number`

  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          children = _this$props.children,
          inProp = _this$props.in;
      var width = this.state.width;
      return /*#__PURE__*/React__default.createElement(Transition$1, {
        enter: false,
        mountOnEnter: true,
        unmountOnExit: true,
        in: inProp,
        timeout: this.duration
      }, function (state) {
        var style = _objectSpread$i(_objectSpread$i({}, _this2.getStyle(width)), _this2.getTransition(state));

        return /*#__PURE__*/React__default.createElement("div", {
          ref: _this2.getWidth,
          style: style
        }, children);
      });
    }
  }]);

  return Collapse;
}(Component$1);

var AnimatedMultiValue = function AnimatedMultiValue(WrappedComponent) {
  return function (_ref) {
    var inProp = _ref.in,
        onExited = _ref.onExited,
        props = _objectWithoutProperties$3(_ref, ["in", "onExited"]);

    return /*#__PURE__*/React__default.createElement(Collapse, {
      in: inProp,
      onExited: onExited
    }, /*#__PURE__*/React__default.createElement(WrappedComponent, _extends$d({
      cropWithEllipsis: inProp
    }, props)));
  };
};

var AnimatedPlaceholder = function AnimatedPlaceholder(WrappedComponent) {
  return function (props) {
    return /*#__PURE__*/React__default.createElement(Fade, _extends$d({
      component: WrappedComponent,
      duration: props.isMulti ? collapseDuration : 1
    }, props));
  };
};

var AnimatedSingleValue = function AnimatedSingleValue(WrappedComponent) {
  return function (props) {
    return /*#__PURE__*/React__default.createElement(Fade, _extends$d({
      component: WrappedComponent
    }, props));
  };
};

// make ValueContainer a transition group
var AnimatedValueContainer = function AnimatedValueContainer(WrappedComponent) {
  return function (props) {
    return /*#__PURE__*/React__default.createElement(TransitionGroup$1, _extends$d({
      component: WrappedComponent
    }, props));
  };
};

function ownKeys$1$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1$1(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$1$1(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$1$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var makeAnimated = function makeAnimated() {
  var externalComponents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var components = defaultComponents$1({
    components: externalComponents
  });

  var Input = components.Input,
      MultiValue = components.MultiValue,
      Placeholder = components.Placeholder,
      SingleValue = components.SingleValue,
      ValueContainer = components.ValueContainer,
      rest = _objectWithoutProperties$3(components, ["Input", "MultiValue", "Placeholder", "SingleValue", "ValueContainer"]);

  return _objectSpread$1$1({
    Input: AnimatedInput(Input),
    MultiValue: AnimatedMultiValue(MultiValue),
    Placeholder: AnimatedPlaceholder(Placeholder),
    SingleValue: AnimatedSingleValue(SingleValue),
    ValueContainer: AnimatedValueContainer(ValueContainer)
  }, rest);
};

var AnimatedComponents = makeAnimated();
AnimatedComponents.Input;
AnimatedComponents.MultiValue;
AnimatedComponents.Placeholder;
AnimatedComponents.SingleValue;
AnimatedComponents.ValueContainer;
var index = memoizeOne(makeAnimated, exportedEqual);

var isArray$1 = Array.isArray;
var keyList = Object.keys;
var hasProp = Object.prototype.hasOwnProperty;
var hasElementType$1 = typeof Element !== 'undefined';

function equal$1(a, b) {
  // fast-deep-equal index.js 2.0.1
  if (a === b) return true;

  if (a && b && typeof a == 'object' && typeof b == 'object') {
    var arrA = isArray$1(a)
      , arrB = isArray$1(b)
      , i
      , length
      , key;

    if (arrA && arrB) {
      length = a.length;
      if (length != b.length) return false;
      for (i = length; i-- !== 0;)
        if (!equal$1(a[i], b[i])) return false;
      return true;
    }

    if (arrA != arrB) return false;

    var dateA = a instanceof Date
      , dateB = b instanceof Date;
    if (dateA != dateB) return false;
    if (dateA && dateB) return a.getTime() == b.getTime();

    var regexpA = a instanceof RegExp
      , regexpB = b instanceof RegExp;
    if (regexpA != regexpB) return false;
    if (regexpA && regexpB) return a.toString() == b.toString();

    var keys = keyList(a);
    length = keys.length;

    if (length !== keyList(b).length)
      return false;

    for (i = length; i-- !== 0;)
      if (!hasProp.call(b, keys[i])) return false;
    // end fast-deep-equal

    // start react-fast-compare
    // custom handling for DOM elements
    if (hasElementType$1 && a instanceof Element && b instanceof Element)
      return a === b;

    // custom handling for React
    for (i = length; i-- !== 0;) {
      key = keys[i];
      if (key === '_owner' && a.$$typeof) {
        // React-specific: avoid traversing React elements' _owner.
        //  _owner contains circular references
        // and is not needed when comparing the actual elements (and not their owners)
        // .$$typeof and ._store on just reasonable markers of a react element
        continue;
      } else {
        // all other properties should be traversed as usual
        if (!equal$1(a[key], b[key])) return false;
      }
    }
    // end react-fast-compare

    // fast-deep-equal index.js 2.0.1
    return true;
  }

  return a !== a && b !== b;
}
// end fast-deep-equal

var reactFastCompare$1 = function exportedEqual(a, b) {
  try {
    return equal$1(a, b);
  } catch (error) {
    if ((error.message && error.message.match(/stack|recursion/i)) || (error.number === -2146828260)) {
      // warn on circular references, don't crash
      // browsers give this different errors name and messages:
      // chrome/safari: "RangeError", "Maximum call stack size exceeded"
      // firefox: "InternalError", too much recursion"
      // edge: "Error", "Out of stack space"
      console.warn('Warning: react-fast-compare does not handle circular references.', error.name, error.message);
      return false;
    }
    // some other error. we should definitely know about these
    throw error;
  }
};

var selectClear = {};

Object.defineProperty(selectClear, "__esModule", {
  value: true
});
var default_1$6 = selectClear.default = void 0;

var _react$8 = _interopRequireDefault$7(React__default);

var _base$3 = require$$1$2;

function _interopRequireDefault$7(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const SelectClearIcon = props => /*#__PURE__*/_react$8.default.createElement(_base$3.Icon, Object.assign({
  dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><g fill-rule="evenodd"><circle fill="currentColor" cx="12" cy="12" r="9"/><path d="M16.155 14.493a1.174 1.174 0 11-1.662 1.663L12 13.662l-2.494 2.494a1.172 1.172 0 01-1.662 0 1.176 1.176 0 010-1.663L10.337 12 7.844 9.507a1.176 1.176 0 011.662-1.662L12 10.338l2.493-2.493a1.174 1.174 0 111.662 1.662L13.662 12l2.493 2.493z" fill="inherit"/></g></svg>`
}, props));

SelectClearIcon.displayName = 'SelectClearIcon';
var _default$6 = SelectClearIcon;
default_1$6 = selectClear.default = _default$6;

var N0$4 = '#FFFFFF';
var N500$2 = '#42526E';

var DN900$1 = '#E6EDFA';
var DN500$1 = '#ABBBD6';

/**
 * createTheme is used to create a set of Providers and Consumers for theming components.
 * - Takes a default theme function; this theme function gets a set of props, and returns tokens
 *  based on those props. An example of this default theme function is one that produces the standard
 *  appearance of the component
 * - Returns three things - a Provider that allow for additional themes to be applied, a Consumer
 *  that can get the current theme and fetch it, and a custom hook - useTheme which provides an alternate (although functionally the same) API
 *  to the Consumer.
 **/
function createTheme$2(defaultGetTokens) {
  var emptyThemeFn = function emptyThemeFn(getTokens, props) {
    return getTokens(props);
  };
  /**
   * Internally, Theme uses React Context, with internal providers and consumers.
   * The React Context passes only a function that gets props, and turns them into tokens. This
   * function gets mixed as more Providers with their own themes are added. This mixed function
   * is ultimately picked up by Consumers, which implement a context consumer internally to fetch
   * the theme.
   **/


  var ThemeContext = /*#__PURE__*/createContext$1(defaultGetTokens);

  function useTheme(themeProps) {
    var theme = useContext(ThemeContext);
    var themeFn = theme || emptyThemeFn;
    var tokens = themeFn(themeProps);
    return tokens;
  } // The Theme Consumer takes a function as its child - this function takes tokens, and the
  // return value is generally a set of nodes with the tokens applied appropriately.


  function Consumer(props) {
    var children = props.children,
        themeProps = _objectWithoutProperties$3(props, ["children"]); // @ts-ignore See issue for more info: https://github.com/Microsoft/TypeScript/issues/10727
    // Argument of type 'Pick<ThemeProps & { children: (tokens: ThemeTokens) => ReactNode; }, Exclude<keyof ThemeProps, "children">>' is not assignable to parameter of type 'ThemeProps'.ts(2345)


    var tokens = useTheme(themeProps); // We add a fragment to ensure we don't break people upgrading.
    // Previously they may have been able to pass in undefined without things blowing up.

    return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, children(tokens));
  }
  /**
   * The Theme Provider takes regular nodes as its children, but also takes a *theme function*
   * - The theme function takes a set of props, as well as a function (getTokens) that can turn props into tokens.
   * - The getTokens function isn't called immediately - instead the props are passed
   *    through a mix of parent theming functions
   * Children of this provider will receive this mixed theme
   */


  function Provider(props) {
    var themeFn = useContext(ThemeContext);
    var valueFn = props.value || emptyThemeFn;
    var mixedFn = useCallback$1(function (themeProps) {
      return valueFn(themeFn, themeProps);
    }, [themeFn, valueFn]);
    return /*#__PURE__*/React__default.createElement(ThemeContext.Provider, {
      value: mixedFn
    }, props.children);
  }

  return {
    Consumer: Consumer,
    Provider: Provider,
    useTheme: useTheme
  };
}

// Create default global light theme
var _createTheme$2 = createTheme$2(function () {
  return {
    mode: 'light'
  };
}),
    Provider$2 = _createTheme$2.Provider,
    Consumer$2 = _createTheme$2.Consumer;
var GlobalTheme$2 = {
  Provider: Provider$2,
  Consumer: Consumer$2
};

// THIS IS AN AUTO-GENERATED FILE DO NOT MODIFY DIRECTLY
// Re-generate by running `yarn build tokens`.
var tokens$4 = {
  'color.accent.subtleBlue': '--accent-subtleBlue',
  'color.accent.subtleGreen': '--accent-subtleGreen',
  'color.accent.subtleMagenta': '--accent-subtleMagenta',
  'color.accent.subtleOrange': '--accent-subtleOrange',
  'color.accent.subtlePurple': '--accent-subtlePurple',
  'color.accent.subtleRed': '--accent-subtleRed',
  'color.accent.subtleTeal': '--accent-subtleTeal',
  'color.background.sunken': '--background-sunken',
  'color.background.default': '--background-default',
  'color.background.card': '--background-card',
  'color.background.overlay': '--background-overlay',
  'color.background.selected.resting': '--background-selected-resting',
  'color.background.selected.hover': '--background-selected-hover',
  'color.background.selected.pressed': '--background-selected-pressed',
  'color.background.blanket': '--background-blanket',
  'color.background.disabled': '--background-disabled',
  'color.background.boldBrand.resting': '--background-boldBrand-resting',
  'color.background.boldBrand.hover': '--background-boldBrand-hover',
  'color.background.boldBrand.pressed': '--background-boldBrand-pressed',
  'color.background.subtleBrand.resting': '--background-subtleBrand-resting',
  'color.background.subtleBrand.hover': '--background-subtleBrand-hover',
  'color.background.subtleBrand.pressed': '--background-subtleBrand-pressed',
  'color.background.boldDanger.resting': '--background-boldDanger-resting',
  'color.background.boldDanger.hover': '--background-boldDanger-hover',
  'color.background.boldDanger.pressed': '--background-boldDanger-pressed',
  'color.background.subtleDanger.resting': '--background-subtleDanger-resting',
  'color.background.subtleDanger.hover': '--background-subtleDanger-hover',
  'color.background.subtleDanger.pressed': '--background-subtleDanger-pressed',
  'color.background.boldWarning.resting': '--background-boldWarning-resting',
  'color.background.boldWarning.hover': '--background-boldWarning-hover',
  'color.background.boldWarning.pressed': '--background-boldWarning-pressed',
  'color.background.subtleWarning.resting': '--background-subtleWarning-resting',
  'color.background.subtleWarning.hover': '--background-subtleWarning-hover',
  'color.background.subtleWarning.pressed': '--background-subtleWarning-pressed',
  'color.background.boldSuccess.resting': '--background-boldSuccess-resting',
  'color.background.boldSuccess.hover': '--background-boldSuccess-hover',
  'color.background.boldSuccess.pressed': '--background-boldSuccess-pressed',
  'color.background.subtleSuccess.resting': '--background-subtleSuccess-resting',
  'color.background.subtleSuccess.hover': '--background-subtleSuccess-hover',
  'color.background.subtleSuccess.pressed': '--background-subtleSuccess-pressed',
  'color.background.boldDiscovery.resting': '--background-boldDiscovery-resting',
  'color.background.boldDiscovery.hover': '--background-boldDiscovery-hover',
  'color.background.boldDiscovery.pressed': '--background-boldDiscovery-pressed',
  'color.background.subtleDiscovery.resting': '--background-subtleDiscovery-resting',
  'color.background.subtleDiscovery.hover': '--background-subtleDiscovery-hover',
  'color.background.subtleDiscovery.pressed': '--background-subtleDiscovery-pressed',
  'color.background.boldNeutral.resting': '--background-boldNeutral-resting',
  'color.background.boldNeutral.hover': '--background-boldNeutral-hover',
  'color.background.boldNeutral.pressed': '--background-boldNeutral-pressed',
  'color.background.transparentNeutral.hover': '--background-transparentNeutral-hover',
  'color.background.transparentNeutral.pressed': '--background-transparentNeutral-pressed',
  'color.background.subtleNeutral.resting': '--background-subtleNeutral-resting',
  'color.background.subtleNeutral.hover': '--background-subtleNeutral-hover',
  'color.background.subtleNeutral.pressed': '--background-subtleNeutral-pressed',
  'color.background.subtleBorderedNeutral.resting': '--background-subtleBorderedNeutral-resting',
  'color.background.subtleBorderedNeutral.pressed': '--background-subtleBorderedNeutral-pressed',
  'color.border.focus': '--border-focus',
  'color.border.neutral': '--border-neutral',
  'color.iconBorder.brand': '--iconBorder-brand',
  'color.iconBorder.danger': '--iconBorder-danger',
  'color.iconBorder.warning': '--iconBorder-warning',
  'color.iconBorder.success': '--iconBorder-success',
  'color.iconBorder.discovery': '--iconBorder-discovery',
  'color.overlay.hover': '--overlay-hover',
  'color.overlay.pressed': '--overlay-pressed',
  'color.text.selected': '--text-selected',
  'color.text.highEmphasis': '--text-highEmphasis',
  'color.text.mediumEmphasis': '--text-mediumEmphasis',
  'color.text.lowEmphasis': '--text-lowEmphasis',
  'color.text.onBold': '--text-onBold',
  'color.text.onBoldWarning': '--text-onBoldWarning',
  'color.text.link.resting': '--text-link-resting',
  'color.text.link.pressed': '--text-link-pressed',
  'color.text.brand': '--text-brand',
  'color.text.warning': '--text-warning',
  'color.text.danger': '--text-danger',
  'color.text.success': '--text-success',
  'color.text.discovery': '--text-discovery',
  'color.text.disabled': '--text-disabled',
  'shadow.card': '--card',
  'shadow.overlay': '--overlay'
};
var tokens$5 = tokens$4;

function token$2(path, fallback) {
  if (process.env.NODE_ENV !== 'production' && !tokens$5[path]) {
    throw new Error("Unknown token at path: ".concat(path));
  }

  var token = tokens$5[path];
  var tokenCall = fallback ? "var(".concat(token, ", ").concat(fallback, ")") : "var(".concat(token, ")");
  return tokenCall;
}

var presetSizes$1 = {
  xsmall: 8,
  small: 16,
  medium: 24,
  large: 48,
  xlarge: 96
};

var _templateObject$1, _templateObject2$1, _templateObject3$1, _templateObject4$1;
var rotate$1 = keyframes(_templateObject$1 || (_templateObject$1 = _taggedTemplateLiteral(["\n  to { transform: rotate(360deg); }\n"]))); // There are three parts to the load in animation:
// 1. Fade in
// 2. Accelerated spin
// 3. Stretch the spinner line

var loadIn$1 = keyframes(_templateObject2$1 || (_templateObject2$1 = _taggedTemplateLiteral(["\n  from {\n    transform: rotate(50deg);\n    opacity: 0;\n    stroke-dashoffset: 60;\n  }\n  to {\n    transform: rotate(230deg);\n    opacity: 1;\n    stroke-dashoffset: 50;\n  }\n"])));

function getStrokeColor$1(_ref) {
  var mode = _ref.mode,
      appearance = _ref.appearance;

  if (mode === 'light') {
    return appearance === 'inherit' ? token$2('color.text.mediumEmphasis', N500$2) : token$2('color.text.onBold', N0$4);
  }

  return appearance === 'inherit' ? token$2('color.text.mediumEmphasis', DN900$1) : token$2('color.text.onBold', DN500$1);
}

var Spinner$2 = /*#__PURE__*/React__default.memo( /*#__PURE__*/React__default.forwardRef(function Spinner(_ref2, ref) {
  var testId = _ref2.testId,
      _ref2$appearance = _ref2.appearance,
      appearance = _ref2$appearance === void 0 ? 'inherit' : _ref2$appearance,
      _ref2$delay = _ref2.delay,
      delay = _ref2$delay === void 0 ? 0 : _ref2$delay,
      _ref2$size = _ref2.size,
      providedSize = _ref2$size === void 0 ? 'medium' : _ref2$size;
  var size = typeof providedSize === 'number' ? providedSize : presetSizes$1[providedSize];
  return jsx(GlobalTheme$2.Consumer, null, function (tokens) {
    var strokeColor = getStrokeColor$1({
      mode: tokens.mode,
      appearance: appearance
    }); // The Spinner animation uses a combination of two
    // css animations on two separate elements.

    return jsx("span", {
      /* This span exists to off-load animations from the circle element,
       which were causing performance issues (style recalculations) on Safari and older versions of Chrome.
       This can be removed and styles placed back on the circle element once Safari fixes this bug and off-loads rendering to the GPU from the CPU.
       */
      css: css$2(_templateObject3$1 || (_templateObject3$1 = _taggedTemplateLiteral(["\n                transform-origin: center;\n                animation: ", " 0.86s infinite;\n                animation-delay: ", "ms;\n                animation-timing-function: cubic-bezier(0.4, 0.15, 0.6, 0.85);\n                height: ", "px;\n                width: ", "px;\n                display: inline-flex;\n                /* align better inline with text */\n                vertical-align: middle;\n              "])), rotate$1, delay, size, size),
      "data-testid": testId && "".concat(testId, "-wrapper")
    }, jsx("svg", {
      height: size,
      width: size,
      viewBox: "0 0 16 16",
      xmlns: "http://www.w3.org/2000/svg",
      "data-testid": testId,
      ref: ref,
      css: css$2(_templateObject4$1 || (_templateObject4$1 = _taggedTemplateLiteral(["\n                  /* We are going to animate this in */\n                  opacity: 0;\n                  animation: ", " 1s ease-in-out;\n                  /* When the animation completes, stay at the last frame of the animation */\n                  animation-fill-mode: forwards;\n                  animation-delay: ", "ms;\n                  fill: none;\n                  stroke: ", ";\n                  stroke-width: 1.5;\n                  stroke-linecap: round;\n                  stroke-dasharray: 60;\n                  stroke-dashoffset: inherit;\n                  @media screen and (forced-colors: active) {\n                    filter: grayscale(100%);\n                    stroke: CanvasText;\n                  }\n                "])), loadIn$1, delay, strokeColor)
    }, jsx("circle", {
      cx: "8",
      cy: "8",
      r: "7"
    })));
  });
}));

var chevronDown$1 = {};

Object.defineProperty(chevronDown$1, "__esModule", {
  value: true
});
var default_1$5 = chevronDown$1.default = void 0;

var _react$7 = _interopRequireDefault$6(React__default);

var _base$2 = require$$1$2;

function _interopRequireDefault$6(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const ChevronDownIcon$1 = props => /*#__PURE__*/_react$7.default.createElement(_base$2.Icon, Object.assign({
  dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><path d="M8.292 10.293a1.009 1.009 0 000 1.419l2.939 2.965c.218.215.5.322.779.322s.556-.107.769-.322l2.93-2.955a1.01 1.01 0 000-1.419.987.987 0 00-1.406 0l-2.298 2.317-2.307-2.327a.99.99 0 00-1.406 0z" fill="currentColor" fill-rule="evenodd"/></svg>`
}, props));

ChevronDownIcon$1.displayName = 'ChevronDownIcon';
var _default$5 = ChevronDownIcon$1;
default_1$5 = chevronDown$1.default = _default$5;

var ClearIndicator = function ClearIndicator(props) {
  return jsx(components.ClearIndicator, props, jsx(default_1$6, {
    size: "small",
    primaryColor: "inherit",
    label: "clear"
  }));
};
var DropdownIndicator = function DropdownIndicator(props) {
  return jsx(components.DropdownIndicator, props, jsx(default_1$5, {
    label: "open"
  }));
};
var LoadingIndicator$1 = function LoadingIndicator(props) {
  return jsx("div", _extends$d({
    css: props.getStyles('loadingIndicator', props)
  }, props.innerProps), jsx(Spinner$2, {
    size: "small"
  }));
};

var MultiValueRemove = function MultiValueRemove(props) {
  return /*#__PURE__*/React__default.createElement(components.MultiValueRemove, props, /*#__PURE__*/React__default.createElement(default_1$6, {
    label: "Clear",
    size: "small",
    primaryColor: "transparent",
    secondaryColor: "inherit"
  }));
};
var IndicatorSeparator = null;

var defaultComponents = /*#__PURE__*/Object.freeze({
    __proto__: null,
    MultiValueRemove: MultiValueRemove,
    IndicatorSeparator: IndicatorSeparator,
    ClearIndicator: ClearIndicator,
    DropdownIndicator: DropdownIndicator,
    LoadingIndicator: LoadingIndicator$1
});

function ownKeys$i(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$h(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$i(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$i(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var BORDER_WIDTH = 2;
var ICON_PADDING = 2;
var paddingExcludingBorder = gridSize$4() - BORDER_WIDTH;
function baseStyles(validationState, isCompact) {
  return {
    container: function container(css, _ref) {
      var isDisabled = _ref.isDisabled;
      return _objectSpread$h(_objectSpread$h({}, css), {}, {
        fontFamily: fontFamily(),
        // react-select disables pointer events when isDisabled is true.
        // We override this and make the inner container turn it off instead.
        pointerEvents: 'all',
        cursor: isDisabled ? 'not-allowed' : undefined
      });
    },
    control: function control(css, _ref2) {
      var isFocused = _ref2.isFocused,
          isDisabled = _ref2.isDisabled;
      var borderColor = isFocused ? B100$2 : N20$2;
      var backgroundColor = isFocused ? N0$5 : N20$2;

      if (isDisabled) {
        backgroundColor = N20$2;
      }

      if (validationState === 'error') {
        borderColor = R400$1;
      }

      if (validationState === 'success') {
        borderColor = G400;
      }

      var borderColorHover = isFocused ? B100$2 : N30$2;

      if (validationState === 'error') {
        borderColorHover = R400$1;
      }

      if (validationState === 'success') {
        borderColorHover = G400;
      }

      var transitionDuration = '200ms';
      return _objectSpread$h(_objectSpread$h({}, css), {}, {
        // Turn pointer events off when disabled - this makes it so hover etc don't work.
        pointerEvents: isDisabled ? 'none' : undefined,
        backgroundColor: backgroundColor,
        borderColor: borderColor,
        borderStyle: 'solid',
        borderRadius: '3px',
        borderWidth: '2px',
        boxShadow: 'none',
        minHeight: isCompact ? gridSize$4() * 4 : gridSize$4() * 5,
        padding: 0,
        transition: "background-color ".concat(transitionDuration, " ease-in-out,\n        border-color ").concat(transitionDuration, " ease-in-out"),
        '::-webkit-scrollbar': {
          height: gridSize$4(),
          width: gridSize$4()
        },
        '::-webkit-scrollbar-corner': {
          display: 'none'
        },
        ':hover': {
          '::-webkit-scrollbar-thumb': {
            backgroundColor: 'rgba(0,0,0,0.2)'
          },
          cursor: 'pointer',
          backgroundColor: isFocused ? N0$5 : N30$2,
          borderColor: borderColorHover
        },
        '::-webkit-scrollbar-thumb:hover': {
          backgroundColor: 'rgba(0,0,0,0.4)'
        }
      });
    },
    valueContainer: function valueContainer(css) {
      return _objectSpread$h(_objectSpread$h({}, css), {}, {
        paddingLeft: paddingExcludingBorder,
        paddingRight: paddingExcludingBorder,
        paddingBottom: isCompact ? 0 : 2,
        paddingTop: isCompact ? 0 : 2
      });
    },
    clearIndicator: function clearIndicator(css) {
      return _objectSpread$h(_objectSpread$h({}, css), {}, {
        color: N70$2,
        paddingLeft: ICON_PADDING,
        paddingRight: ICON_PADDING,
        paddingBottom: isCompact ? 0 : 6,
        paddingTop: isCompact ? 0 : 6,
        ':hover': {
          color: N500$3
        }
      });
    },
    loadingIndicator: function loadingIndicator(css) {
      return _objectSpread$h(_objectSpread$h({}, css), {}, {
        paddingBottom: isCompact ? 0 : 6,
        paddingTop: isCompact ? 0 : 6
      });
    },
    dropdownIndicator: function dropdownIndicator(css, _ref3) {
      var isDisabled = _ref3.isDisabled;
      var color = N500$3;

      if (isDisabled) {
        color = N70$2;
      }

      return _objectSpread$h(_objectSpread$h({}, css), {}, {
        color: color,
        paddingLeft: ICON_PADDING,
        paddingRight: ICON_PADDING,
        paddingBottom: isCompact ? 0 : 6,
        paddingTop: isCompact ? 0 : 6,
        ':hover': {
          color: N200$1
        }
      });
    },
    indicatorsContainer: function indicatorsContainer(css) {
      return _objectSpread$h(_objectSpread$h({}, css), {}, {
        paddingRight: paddingExcludingBorder - ICON_PADDING
      });
    },
    option: function option(css, _ref4) {
      var isFocused = _ref4.isFocused,
          isSelected = _ref4.isSelected,
          isDisabled = _ref4.isDisabled;
      var color;

      if (isDisabled) {
        color = N70$2;
      } else if (isSelected) {
        color = N0$5;
      }

      var backgroundColor;

      if (isDisabled) {
        backgroundColor = undefined;
      } else if (isSelected) {
        backgroundColor = N500$3;
      } else if (isFocused) {
        backgroundColor = N30$2;
      }

      var cursor = isDisabled ? 'not-allowed' : undefined;
      return _objectSpread$h(_objectSpread$h({}, css), {}, {
        paddingTop: '6px',
        paddingBottom: '6px',
        backgroundColor: backgroundColor,
        color: color,
        cursor: cursor
      });
    },
    placeholder: function placeholder(css) {
      return _objectSpread$h(_objectSpread$h({}, css), {}, {
        color: N100$2
      });
    },
    singleValue: function singleValue(css, _ref5) {
      var isDisabled = _ref5.isDisabled;
      return _objectSpread$h(_objectSpread$h({}, css), {}, {
        color: isDisabled ? N70$2 : N800$1,
        lineHeight: "".concat(gridSize$4() * 2, "px") // 16px

      });
    },
    menuList: function menuList(css) {
      return _objectSpread$h(_objectSpread$h({}, css), {}, {
        paddingTop: gridSize$4(),
        paddingBottom: gridSize$4()
      });
    },
    multiValue: function multiValue(css) {
      return _objectSpread$h(_objectSpread$h({}, css), {}, {
        borderRadius: '2px',
        backgroundColor: N40$1,
        color: N500$3,
        maxWidth: '100%'
      });
    },
    multiValueLabel: function multiValueLabel(css) {
      return _objectSpread$h(_objectSpread$h({}, css), {}, {
        padding: '2px',
        paddingRight: '2px'
      });
    },
    multiValueRemove: function multiValueRemove(css, _ref6) {
      var isFocused = _ref6.isFocused;
      return _objectSpread$h(_objectSpread$h({}, css), {}, {
        backgroundColor: isFocused && R75$1,
        color: isFocused && R400$1,
        paddingLeft: '2px',
        paddingRight: '2px',
        borderRadius: '0px 2px 2px 0px',
        ':hover': {
          color: R400$1,
          backgroundColor: R75$1
        }
      });
    }
  };
}

function ownKeys$h(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$g(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$h(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$h(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper$f(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$f(); return function _createSuperInternal() { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$8(this, result); }; }

function _isNativeReflectConstruct$f() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }
function createSelect(WrappedComponent) {
  var _class, _temp;

  return _temp = _class = /*#__PURE__*/function (_Component) {
    _inherits$8(AtlaskitSelect, _Component);

    var _super = _createSuper$f(AtlaskitSelect);

    function AtlaskitSelect(props) {
      var _this;

      _classCallCheck$8(this, AtlaskitSelect);

      _this = _super.call(this, props);

      _defineProperty$3(_assertThisInitialized$4(_this), "components", {});

      _defineProperty$3(_assertThisInitialized$4(_this), "select", null);

      _defineProperty$3(_assertThisInitialized$4(_this), "cacheComponents", function (components, enableAnimation) {
        _this.components = enableAnimation ? index(_objectSpread$g(_objectSpread$g({}, defaultComponents), components)) : _objectSpread$g(_objectSpread$g({}, defaultComponents), components);
      });

      _defineProperty$3(_assertThisInitialized$4(_this), "onSelectRef", function (ref) {
        _this.select = ref;
        var innerRef = _this.props.innerRef;

        if (_typeof$3(innerRef) === 'object') {
          innerRef.current = ref;
        }

        if (typeof innerRef === 'function') {
          innerRef(ref);
        }
      });

      _this.cacheComponents = memoizeOne(_this.cacheComponents, reactFastCompare$1).bind(_assertThisInitialized$4(_this));

      _this.cacheComponents(props.components || {}, props.enableAnimation);

      return _this;
    }

    _createClass$8(AtlaskitSelect, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        this.cacheComponents(nextProps.components, nextProps.enableAnimation);
      }
    }, {
      key: "focus",
      value: function focus() {
        if (this.select) {
          this.select.focus();
        }
      }
    }, {
      key: "blur",
      value: function blur() {
        if (this.select) {
          this.select.blur();
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            styles = _this$props.styles,
            validationState = _this$props.validationState,
            spacing = _this$props.spacing,
            isMulti = _this$props.isMulti,
            props = _objectWithoutProperties$3(_this$props, ["styles", "validationState", "spacing", "isMulti"]);

        var isCompact = spacing === 'compact'; // props must be spread first to stop `components` being overridden

        return /*#__PURE__*/React__default.createElement(WrappedComponent, _extends$d({
          ref: this.onSelectRef,
          isMulti: isMulti
        }, props, {
          components: this.components,
          styles: mergeStyles(baseStyles(validationState, isCompact), styles)
        }));
      }
    }]);

    return AtlaskitSelect;
  }(Component$1), _defineProperty$3(_class, "defaultProps", {
    enableAnimation: true,
    validationState: 'default',
    spacing: 'default',
    onClickPreventDefault: true,
    tabSelectsValue: false,
    components: {},
    styles: {}
  }), _temp;
}

var packageName$4 = "@atlaskit/select";
var packageVersion$4 = "13.3.1";
var SelectWithoutAnalytics = createSelect(Select$1);
var createAndFireEventOnAtlaskit$9 = createAndFireEvent$3('atlaskit');
var AkSelect = withAnalyticsContext$7({
  componentName: 'select',
  packageName: packageName$4,
  packageVersion: packageVersion$4
})(withAnalyticsEvents$7({
  onChange: createAndFireEventOnAtlaskit$9({
    action: 'changed',
    actionSubject: 'option',
    attributes: {
      componentName: 'select',
      packageName: packageName$4,
      packageVersion: packageVersion$4
    }
  })
})(SelectWithoutAnalytics));

var ManagerReferenceNodeContext$1 = React$7.createContext();
var ManagerReferenceNodeSetterContext$1 = React$7.createContext();
function Manager$1(_ref) {
  var children = _ref.children;

  var _React$useState = React$7.useState(null),
      referenceNode = _React$useState[0],
      setReferenceNode = _React$useState[1];

  var hasUnmounted = React$7.useRef(false);
  React$7.useEffect(function () {
    return function () {
      hasUnmounted.current = true;
    };
  }, []);
  var handleSetReferenceNode = React$7.useCallback(function (node) {
    if (!hasUnmounted.current) {
      setReferenceNode(node);
    }
  }, []);
  return /*#__PURE__*/React$7.createElement(ManagerReferenceNodeContext$1.Provider, {
    value: referenceNode
  }, /*#__PURE__*/React$7.createElement(ManagerReferenceNodeSetterContext$1.Provider, {
    value: handleSetReferenceNode
  }, children));
}

/**
 * Takes an argument and if it's an array, returns the first item in the array,
 * otherwise returns the argument. Used for Preact compatibility.
 */
var unwrapArray$1 = function unwrapArray(arg) {
  return Array.isArray(arg) ? arg[0] : arg;
};
/**
 * Takes a maybe-undefined function and arbitrary args and invokes the function
 * only if it is defined.
 */

var safeInvoke$1 = function safeInvoke(fn) {
  if (typeof fn === 'function') {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return fn.apply(void 0, args);
  }
};
/**
 * Sets a ref using either a ref callback or a ref object
 */

var setRef$1 = function setRef(ref, node) {
  // if its a function call it
  if (typeof ref === 'function') {
    return safeInvoke$1(ref, node);
  } // otherwise we should treat it as a ref object
  else if (ref != null) {
      ref.current = node;
    }
};
/**
 * Simple ponyfill for Object.fromEntries
 */

var fromEntries = function fromEntries(entries) {
  return entries.reduce(function (acc, _ref) {
    var key = _ref[0],
        value = _ref[1];
    acc[key] = value;
    return acc;
  }, {});
};
/**
 * Small wrapper around `useLayoutEffect` to get rid of the warning on SSR envs
 */

var useIsomorphicLayoutEffect = typeof window !== 'undefined' && window.document && window.document.createElement ? React$7.useLayoutEffect : React$7.useEffect;

var top = 'top';
var bottom = 'bottom';
var right = 'right';
var left = 'left';
var auto = 'auto';
var basePlacements = [top, bottom, right, left];
var start = 'start';
var end = 'end';
var clippingParents = 'clippingParents';
var viewport = 'viewport';
var popper = 'popper';
var reference = 'reference';
var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {
  return acc.concat([placement + "-" + start, placement + "-" + end]);
}, []);
var placements$1 = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {
  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
}, []); // modifiers that need to read the DOM

var beforeRead = 'beforeRead';
var read = 'read';
var afterRead = 'afterRead'; // pure-logic modifiers

var beforeMain = 'beforeMain';
var main = 'main';
var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)

var beforeWrite = 'beforeWrite';
var write = 'write';
var afterWrite = 'afterWrite';
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

function getNodeName(element) {
  return element ? (element.nodeName || '').toLowerCase() : null;
}

function getWindow$1(node) {
  if (node == null) {
    return window;
  }

  if (node.toString() !== '[object Window]') {
    var ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }

  return node;
}

function isElement(node) {
  var OwnElement = getWindow$1(node).Element;
  return node instanceof OwnElement || node instanceof Element;
}

function isHTMLElement(node) {
  var OwnElement = getWindow$1(node).HTMLElement;
  return node instanceof OwnElement || node instanceof HTMLElement;
}

function isShadowRoot(node) {
  // IE 11 has no ShadowRoot
  if (typeof ShadowRoot === 'undefined') {
    return false;
  }

  var OwnElement = getWindow$1(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}

// and applies them to the HTMLElements such as popper and arrow

function applyStyles(_ref) {
  var state = _ref.state;
  Object.keys(state.elements).forEach(function (name) {
    var style = state.styles[name] || {};
    var attributes = state.attributes[name] || {};
    var element = state.elements[name]; // arrow is optional + virtual elements

    if (!isHTMLElement(element) || !getNodeName(element)) {
      return;
    } // Flow doesn't support to extend this property, but it's the most
    // effective way to apply styles to an HTMLElement
    // $FlowFixMe[cannot-write]


    Object.assign(element.style, style);
    Object.keys(attributes).forEach(function (name) {
      var value = attributes[name];

      if (value === false) {
        element.removeAttribute(name);
      } else {
        element.setAttribute(name, value === true ? '' : value);
      }
    });
  });
}

function effect$2(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: '0',
      top: '0',
      margin: '0'
    },
    arrow: {
      position: 'absolute'
    },
    reference: {}
  };
  Object.assign(state.elements.popper.style, initialStyles.popper);
  state.styles = initialStyles;

  if (state.elements.arrow) {
    Object.assign(state.elements.arrow.style, initialStyles.arrow);
  }

  return function () {
    Object.keys(state.elements).forEach(function (name) {
      var element = state.elements[name];
      var attributes = state.attributes[name] || {};
      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them

      var style = styleProperties.reduce(function (style, property) {
        style[property] = '';
        return style;
      }, {}); // arrow is optional + virtual elements

      if (!isHTMLElement(element) || !getNodeName(element)) {
        return;
      }

      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function (attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
} // eslint-disable-next-line import/no-unused-modules


var applyStyles$1 = {
  name: 'applyStyles',
  enabled: true,
  phase: 'write',
  fn: applyStyles,
  effect: effect$2,
  requires: ['computeStyles']
};

function getBasePlacement(placement) {
  return placement.split('-')[0];
}

var round$1 = Math.round;
function getBoundingClientRect$1(element, includeScale) {
  if (includeScale === void 0) {
    includeScale = false;
  }

  var rect = element.getBoundingClientRect();
  var scaleX = 1;
  var scaleY = 1;

  if (isHTMLElement(element) && includeScale) {
    // Fallback to 1 in case both values are `0`
    scaleX = rect.width / element.offsetWidth || 1;
    scaleY = rect.height / element.offsetHeight || 1;
  }

  return {
    width: round$1(rect.width / scaleX),
    height: round$1(rect.height / scaleY),
    top: round$1(rect.top / scaleY),
    right: round$1(rect.right / scaleX),
    bottom: round$1(rect.bottom / scaleY),
    left: round$1(rect.left / scaleX),
    x: round$1(rect.left / scaleX),
    y: round$1(rect.top / scaleY)
  };
}

// means it doesn't take into account transforms.

function getLayoutRect(element) {
  var clientRect = getBoundingClientRect$1(element); // Use the clientRect sizes if it's not been transformed.
  // Fixes https://github.com/popperjs/popper-core/issues/1223

  var width = element.offsetWidth;
  var height = element.offsetHeight;

  if (Math.abs(clientRect.width - width) <= 1) {
    width = clientRect.width;
  }

  if (Math.abs(clientRect.height - height) <= 1) {
    height = clientRect.height;
  }

  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width: width,
    height: height
  };
}

function contains(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method

  if (parent.contains(child)) {
    return true;
  } // then fallback to custom implementation with Shadow DOM support
  else if (rootNode && isShadowRoot(rootNode)) {
      var next = child;

      do {
        if (next && parent.isSameNode(next)) {
          return true;
        } // $FlowFixMe[prop-missing]: need a better way to handle this...


        next = next.parentNode || next.host;
      } while (next);
    } // Give up, the result is false


  return false;
}

function getComputedStyle$1(element) {
  return getWindow$1(element).getComputedStyle(element);
}

function isTableElement(element) {
  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;
}

function getDocumentElement(element) {
  // $FlowFixMe[incompatible-return]: assume body is always available
  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]
  element.document) || window.document).documentElement;
}

function getParentNode$1(element) {
  if (getNodeName(element) === 'html') {
    return element;
  }

  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    element.parentNode || ( // DOM Element detected
    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    getDocumentElement(element) // fallback

  );
}

function getTrueOffsetParent(element) {
  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837
  getComputedStyle$1(element).position === 'fixed') {
    return null;
  }

  return element.offsetParent;
} // `.offsetParent` reports `null` for fixed elements, while absolute elements
// return the containing block


function getContainingBlock(element) {
  var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') !== -1;
  var isIE = navigator.userAgent.indexOf('Trident') !== -1;

  if (isIE && isHTMLElement(element)) {
    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport
    var elementCss = getComputedStyle$1(element);

    if (elementCss.position === 'fixed') {
      return null;
    }
  }

  var currentNode = getParentNode$1(element);

  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {
    var css = getComputedStyle$1(currentNode); // This is non-exhaustive but covers the most common CSS properties that
    // create a containing block.
    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block

    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }

  return null;
} // Gets the closest ancestor positioned element. Handles some edge cases,
// such as table ancestors and cross browser bugs.


function getOffsetParent$1(element) {
  var window = getWindow$1(element);
  var offsetParent = getTrueOffsetParent(element);

  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {
    offsetParent = getTrueOffsetParent(offsetParent);
  }

  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static')) {
    return window;
  }

  return offsetParent || getContainingBlock(element) || window;
}

function getMainAxisFromPlacement(placement) {
  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';
}

var max$1 = Math.max;
var min = Math.min;
var round = Math.round;

function within(min$1, value, max) {
  return max$1(min$1, min(value, max));
}

function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}

function mergePaddingObject(paddingObject) {
  return Object.assign({}, getFreshSideObject(), paddingObject);
}

function expandToHashMap(value, keys) {
  return keys.reduce(function (hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}

var toPaddingObject = function toPaddingObject(padding, state) {
  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {
    placement: state.placement
  })) : padding;
  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
};

function arrow$1(_ref) {
  var _state$modifiersData$;

  var state = _ref.state,
      name = _ref.name,
      options = _ref.options;
  var arrowElement = state.elements.arrow;
  var popperOffsets = state.modifiersData.popperOffsets;
  var basePlacement = getBasePlacement(state.placement);
  var axis = getMainAxisFromPlacement(basePlacement);
  var isVertical = [left, right].indexOf(basePlacement) >= 0;
  var len = isVertical ? 'height' : 'width';

  if (!arrowElement || !popperOffsets) {
    return;
  }

  var paddingObject = toPaddingObject(options.padding, state);
  var arrowRect = getLayoutRect(arrowElement);
  var minProp = axis === 'y' ? top : left;
  var maxProp = axis === 'y' ? bottom : right;
  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
  var startDiff = popperOffsets[axis] - state.rects.reference[axis];
  var arrowOffsetParent = getOffsetParent$1(arrowElement);
  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is
  // outside of the popper bounds

  var min = paddingObject[minProp];
  var max = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset = within(min, center, max); // Prevents breaking syntax highlighting...

  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);
}

function effect$1(_ref2) {
  var state = _ref2.state,
      options = _ref2.options;
  var _options$element = options.element,
      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;

  if (arrowElement == null) {
    return;
  } // CSS selector


  if (typeof arrowElement === 'string') {
    arrowElement = state.elements.popper.querySelector(arrowElement);

    if (!arrowElement) {
      return;
    }
  }

  if (process.env.NODE_ENV !== "production") {
    if (!isHTMLElement(arrowElement)) {
      console.error(['Popper: "arrow" element must be an HTMLElement (not an SVGElement).', 'To use an SVG arrow, wrap it in an HTMLElement that will be used as', 'the arrow.'].join(' '));
    }
  }

  if (!contains(state.elements.popper, arrowElement)) {
    if (process.env.NODE_ENV !== "production") {
      console.error(['Popper: "arrow" modifier\'s `element` must be a child of the popper', 'element.'].join(' '));
    }

    return;
  }

  state.elements.arrow = arrowElement;
} // eslint-disable-next-line import/no-unused-modules


var arrow$2 = {
  name: 'arrow',
  enabled: true,
  phase: 'main',
  fn: arrow$1,
  effect: effect$1,
  requires: ['popperOffsets'],
  requiresIfExists: ['preventOverflow']
};

var unsetSides = {
  top: 'auto',
  right: 'auto',
  bottom: 'auto',
  left: 'auto'
}; // Round the offsets to the nearest suitable subpixel based on the DPR.
// Zooming can change the DPR, but it seems to report a value that will
// cleanly divide the values into the appropriate subpixels.

function roundOffsetsByDPR(_ref) {
  var x = _ref.x,
      y = _ref.y;
  var win = window;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: round(round(x * dpr) / dpr) || 0,
    y: round(round(y * dpr) / dpr) || 0
  };
}

function mapToStyles(_ref2) {
  var _Object$assign2;

  var popper = _ref2.popper,
      popperRect = _ref2.popperRect,
      placement = _ref2.placement,
      offsets = _ref2.offsets,
      position = _ref2.position,
      gpuAcceleration = _ref2.gpuAcceleration,
      adaptive = _ref2.adaptive,
      roundOffsets = _ref2.roundOffsets;

  var _ref3 = roundOffsets === true ? roundOffsetsByDPR(offsets) : typeof roundOffsets === 'function' ? roundOffsets(offsets) : offsets,
      _ref3$x = _ref3.x,
      x = _ref3$x === void 0 ? 0 : _ref3$x,
      _ref3$y = _ref3.y,
      y = _ref3$y === void 0 ? 0 : _ref3$y;

  var hasX = offsets.hasOwnProperty('x');
  var hasY = offsets.hasOwnProperty('y');
  var sideX = left;
  var sideY = top;
  var win = window;

  if (adaptive) {
    var offsetParent = getOffsetParent$1(popper);
    var heightProp = 'clientHeight';
    var widthProp = 'clientWidth';

    if (offsetParent === getWindow$1(popper)) {
      offsetParent = getDocumentElement(popper);

      if (getComputedStyle$1(offsetParent).position !== 'static') {
        heightProp = 'scrollHeight';
        widthProp = 'scrollWidth';
      }
    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it


    offsetParent = offsetParent;

    if (placement === top) {
      sideY = bottom; // $FlowFixMe[prop-missing]

      y -= offsetParent[heightProp] - popperRect.height;
      y *= gpuAcceleration ? 1 : -1;
    }

    if (placement === left) {
      sideX = right; // $FlowFixMe[prop-missing]

      x -= offsetParent[widthProp] - popperRect.width;
      x *= gpuAcceleration ? 1 : -1;
    }
  }

  var commonStyles = Object.assign({
    position: position
  }, adaptive && unsetSides);

  if (gpuAcceleration) {
    var _Object$assign;

    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) < 2 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
  }

  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : '', _Object$assign2[sideX] = hasX ? x + "px" : '', _Object$assign2.transform = '', _Object$assign2));
}

function computeStyles(_ref4) {
  var state = _ref4.state,
      options = _ref4.options;
  var _options$gpuAccelerat = options.gpuAcceleration,
      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,
      _options$adaptive = options.adaptive,
      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,
      _options$roundOffsets = options.roundOffsets,
      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;

  if (process.env.NODE_ENV !== "production") {
    var transitionProperty = getComputedStyle$1(state.elements.popper).transitionProperty || '';

    if (adaptive && ['transform', 'top', 'right', 'bottom', 'left'].some(function (property) {
      return transitionProperty.indexOf(property) >= 0;
    })) {
      console.warn(['Popper: Detected CSS transitions on at least one of the following', 'CSS properties: "transform", "top", "right", "bottom", "left".', '\n\n', 'Disable the "computeStyles" modifier\'s `adaptive` option to allow', 'for smooth transitions, or remove these properties from the CSS', 'transition declaration on the popper element if only transitioning', 'opacity or background-color for example.', '\n\n', 'We recommend using the popper element as a wrapper around an inner', 'element that can have any CSS property transitioned for animations.'].join(' '));
    }
  }

  var commonStyles = {
    placement: getBasePlacement(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration: gpuAcceleration
  };

  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive: adaptive,
      roundOffsets: roundOffsets
    })));
  }

  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.arrow,
      position: 'absolute',
      adaptive: false,
      roundOffsets: roundOffsets
    })));
  }

  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-placement': state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


var computeStyles$1 = {
  name: 'computeStyles',
  enabled: true,
  phase: 'beforeWrite',
  fn: computeStyles,
  data: {}
};

var passive = {
  passive: true
};

function effect(_ref) {
  var state = _ref.state,
      instance = _ref.instance,
      options = _ref.options;
  var _options$scroll = options.scroll,
      scroll = _options$scroll === void 0 ? true : _options$scroll,
      _options$resize = options.resize,
      resize = _options$resize === void 0 ? true : _options$resize;
  var window = getWindow$1(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);

  if (scroll) {
    scrollParents.forEach(function (scrollParent) {
      scrollParent.addEventListener('scroll', instance.update, passive);
    });
  }

  if (resize) {
    window.addEventListener('resize', instance.update, passive);
  }

  return function () {
    if (scroll) {
      scrollParents.forEach(function (scrollParent) {
        scrollParent.removeEventListener('scroll', instance.update, passive);
      });
    }

    if (resize) {
      window.removeEventListener('resize', instance.update, passive);
    }
  };
} // eslint-disable-next-line import/no-unused-modules


var eventListeners = {
  name: 'eventListeners',
  enabled: true,
  phase: 'write',
  fn: function fn() {},
  effect: effect,
  data: {}
};

var hash$1 = {
  left: 'right',
  right: 'left',
  bottom: 'top',
  top: 'bottom'
};
function getOppositePlacement$1(placement) {
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash$1[matched];
  });
}

var hash = {
  start: 'end',
  end: 'start'
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function (matched) {
    return hash[matched];
  });
}

function getWindowScroll(node) {
  var win = getWindow$1(node);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft: scrollLeft,
    scrollTop: scrollTop
  };
}

function getWindowScrollBarX(element) {
  // If <html> has a CSS width greater than the viewport, then this will be
  // incorrect for RTL.
  // Popper 1 is broken in this case and never had a bug report so let's assume
  // it's not an issue. I don't think anyone ever specifies width on <html>
  // anyway.
  // Browsers where the left scrollbar doesn't cause an issue report `0` for
  // this (e.g. Edge 2019, IE11, Safari)
  return getBoundingClientRect$1(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
}

function getViewportRect(element) {
  var win = getWindow$1(element);
  var html = getDocumentElement(element);
  var visualViewport = win.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x = 0;
  var y = 0; // NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper
  // can be obscured underneath it.
  // Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even
  // if it isn't open, so if this isn't available, the popper will be detected
  // to overflow the bottom of the screen too early.

  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)
    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding
    // errors due to floating point numbers, so we need to check precision.
    // Safari returns a number <= 0, usually < -1 when pinch-zoomed
    // Feature detection fails in mobile emulation mode in Chrome.
    // Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <
    // 0.001
    // Fallback here: "Not Safari" userAgent

    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }

  return {
    width: width,
    height: height,
    x: x + getWindowScrollBarX(element),
    y: y
  };
}

// of the `<html>` and `<body>` rect bounds if horizontally scrollable

function getDocumentRect(element) {
  var _element$ownerDocumen;

  var html = getDocumentElement(element);
  var winScroll = getWindowScroll(element);
  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = max$1(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = max$1(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);
  var y = -winScroll.scrollTop;

  if (getComputedStyle$1(body || html).direction === 'rtl') {
    x += max$1(html.clientWidth, body ? body.clientWidth : 0) - width;
  }

  return {
    width: width,
    height: height,
    x: x,
    y: y
  };
}

function isScrollParent(element) {
  // Firefox wants us to check `-x` and `-y` variations as well
  var _getComputedStyle = getComputedStyle$1(element),
      overflow = _getComputedStyle.overflow,
      overflowX = _getComputedStyle.overflowX,
      overflowY = _getComputedStyle.overflowY;

  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}

function getScrollParent$1(node) {
  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {
    // $FlowFixMe[incompatible-return]: assume body is always available
    return node.ownerDocument.body;
  }

  if (isHTMLElement(node) && isScrollParent(node)) {
    return node;
  }

  return getScrollParent$1(getParentNode$1(node));
}

/*
given a DOM element, return the list of all scroll parents, up the list of ancesors
until we get to the top window object. This list is what we attach scroll listeners
to, because if any of these parent elements scroll, we'll need to re-calculate the
reference element's position.
*/

function listScrollParents(element, list) {
  var _element$ownerDocumen;

  if (list === void 0) {
    list = [];
  }

  var scrollParent = getScrollParent$1(element);
  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win = getWindow$1(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
  updatedList.concat(listScrollParents(getParentNode$1(target)));
}

function rectToClientRect(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}

function getInnerBoundingClientRect(element) {
  var rect = getBoundingClientRect$1(element);
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}

function getClientRectFromMixedType(element, clippingParent) {
  return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isHTMLElement(clippingParent) ? getInnerBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
} // A "clipping parent" is an overflowable container with the characteristic of
// clipping (or hiding) overflowing elements with a position different from
// `initial`


function getClippingParents(element) {
  var clippingParents = listScrollParents(getParentNode$1(element));
  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle$1(element).position) >= 0;
  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent$1(element) : element;

  if (!isElement(clipperElement)) {
    return [];
  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414


  return clippingParents.filter(function (clippingParent) {
    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';
  });
} // Gets the maximum area that the element is visible in due to any number of
// clipping parents


function getClippingRect(element, boundary, rootBoundary) {
  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents[0];
  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent);
    accRect.top = max$1(rect.top, accRect.top);
    accRect.right = min(rect.right, accRect.right);
    accRect.bottom = min(rect.bottom, accRect.bottom);
    accRect.left = max$1(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}

function getVariation(placement) {
  return placement.split('-')[1];
}

function computeOffsets(_ref) {
  var reference = _ref.reference,
      element = _ref.element,
      placement = _ref.placement;
  var basePlacement = placement ? getBasePlacement(placement) : null;
  var variation = placement ? getVariation(placement) : null;
  var commonX = reference.x + reference.width / 2 - element.width / 2;
  var commonY = reference.y + reference.height / 2 - element.height / 2;
  var offsets;

  switch (basePlacement) {
    case top:
      offsets = {
        x: commonX,
        y: reference.y - element.height
      };
      break;

    case bottom:
      offsets = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;

    case right:
      offsets = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;

    case left:
      offsets = {
        x: reference.x - element.width,
        y: commonY
      };
      break;

    default:
      offsets = {
        x: reference.x,
        y: reference.y
      };
  }

  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;

  if (mainAxis != null) {
    var len = mainAxis === 'y' ? 'height' : 'width';

    switch (variation) {
      case start:
        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);
        break;

      case end:
        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);
        break;
    }
  }

  return offsets;
}

function detectOverflow(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      _options$placement = _options.placement,
      placement = _options$placement === void 0 ? state.placement : _options$placement,
      _options$boundary = _options.boundary,
      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,
      _options$rootBoundary = _options.rootBoundary,
      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,
      _options$elementConte = _options.elementContext,
      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,
      _options$altBoundary = _options.altBoundary,
      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,
      _options$padding = _options.padding,
      padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
  var altContext = elementContext === popper ? reference : popper;
  var referenceElement = state.elements.reference;
  var popperRect = state.rects.popper;
  var element = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary);
  var referenceClientRect = getBoundingClientRect$1(referenceElement);
  var popperOffsets = computeOffsets({
    reference: referenceClientRect,
    element: popperRect,
    strategy: 'absolute',
    placement: placement
  });
  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));
  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect
  // 0 or negative = within the clipping rect

  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element

  if (elementContext === popper && offsetData) {
    var offset = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function (key) {
      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';
      overflowOffsets[key] += offset[axis] * multiply;
    });
  }

  return overflowOffsets;
}

function computeAutoPlacement$1(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      placement = _options.placement,
      boundary = _options.boundary,
      rootBoundary = _options.rootBoundary,
      padding = _options.padding,
      flipVariations = _options.flipVariations,
      _options$allowedAutoP = _options.allowedAutoPlacements,
      allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements$1 : _options$allowedAutoP;
  var variation = getVariation(placement);
  var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {
    return getVariation(placement) === variation;
  }) : basePlacements;
  var allowedPlacements = placements.filter(function (placement) {
    return allowedAutoPlacements.indexOf(placement) >= 0;
  });

  if (allowedPlacements.length === 0) {
    allowedPlacements = placements;

    if (process.env.NODE_ENV !== "production") {
      console.error(['Popper: The `allowedAutoPlacements` option did not allow any', 'placements. Ensure the `placement` option matches the variation', 'of the allowed placements.', 'For example, "auto" cannot be used to allow "bottom-start".', 'Use "auto-start" instead.'].join(' '));
    }
  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...


  var overflows = allowedPlacements.reduce(function (acc, placement) {
    acc[placement] = detectOverflow(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding
    })[getBasePlacement(placement)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function (a, b) {
    return overflows[a] - overflows[b];
  });
}

function getExpandedFallbackPlacements(placement) {
  if (getBasePlacement(placement) === auto) {
    return [];
  }

  var oppositePlacement = getOppositePlacement$1(placement);
  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
}

function flip$1(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;

  if (state.modifiersData[name]._skip) {
    return;
  }

  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,
      specifiedFallbackPlacements = options.fallbackPlacements,
      padding = options.padding,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      _options$flipVariatio = options.flipVariations,
      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,
      allowedAutoPlacements = options.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = getBasePlacement(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement$1(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {
    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement$1(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding,
      flipVariations: flipVariations,
      allowedAutoPlacements: allowedAutoPlacements
    }) : placement);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements[0];

  for (var i = 0; i < placements.length; i++) {
    var placement = placements[i];

    var _basePlacement = getBasePlacement(placement);

    var isStartVariation = getVariation(placement) === start;
    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
    var len = isVertical ? 'width' : 'height';
    var overflow = detectOverflow(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      altBoundary: altBoundary,
      padding: padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;

    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = getOppositePlacement$1(mainVariationSide);
    }

    var altVariationSide = getOppositePlacement$1(mainVariationSide);
    var checks = [];

    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }

    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }

    if (checks.every(function (check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }

    checksMap.set(placement, checks);
  }

  if (makeFallbackChecks) {
    // `2` may be desired in some cases – research later
    var numberOfChecks = flipVariations ? 3 : 1;

    var _loop = function _loop(_i) {
      var fittingPlacement = placements.find(function (placement) {
        var checks = checksMap.get(placement);

        if (checks) {
          return checks.slice(0, _i).every(function (check) {
            return check;
          });
        }
      });

      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };

    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);

      if (_ret === "break") break;
    }
  }

  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
} // eslint-disable-next-line import/no-unused-modules


var flip$2 = {
  name: 'flip',
  enabled: true,
  phase: 'main',
  fn: flip$1,
  requiresIfExists: ['offset'],
  data: {
    _skip: false
  }
};

function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }

  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}

function isAnySideFullyClipped(overflow) {
  return [top, right, bottom, left].some(function (side) {
    return overflow[side] >= 0;
  });
}

function hide$1(_ref) {
  var state = _ref.state,
      name = _ref.name;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var preventedOffsets = state.modifiersData.preventOverflow;
  var referenceOverflow = detectOverflow(state, {
    elementContext: 'reference'
  });
  var popperAltOverflow = detectOverflow(state, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state.modifiersData[name] = {
    referenceClippingOffsets: referenceClippingOffsets,
    popperEscapeOffsets: popperEscapeOffsets,
    isReferenceHidden: isReferenceHidden,
    hasPopperEscaped: hasPopperEscaped
  };
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-reference-hidden': isReferenceHidden,
    'data-popper-escaped': hasPopperEscaped
  });
} // eslint-disable-next-line import/no-unused-modules


var hide$2 = {
  name: 'hide',
  enabled: true,
  phase: 'main',
  requiresIfExists: ['preventOverflow'],
  fn: hide$1
};

function distanceAndSkiddingToXY(placement, rects, offset) {
  var basePlacement = getBasePlacement(placement);
  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;

  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {
    placement: placement
  })) : offset,
      skidding = _ref[0],
      distance = _ref[1];

  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [left, right].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}

function offset$1(_ref2) {
  var state = _ref2.state,
      options = _ref2.options,
      name = _ref2.name;
  var _options$offset = options.offset,
      offset = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = placements$1.reduce(function (acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
    return acc;
  }, {});
  var _data$state$placement = data[state.placement],
      x = _data$state$placement.x,
      y = _data$state$placement.y;

  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x;
    state.modifiersData.popperOffsets.y += y;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


var offset$2 = {
  name: 'offset',
  enabled: true,
  phase: 'main',
  requires: ['popperOffsets'],
  fn: offset$1
};

function popperOffsets(_ref) {
  var state = _ref.state,
      name = _ref.name;
  // Offsets are the actual position the popper needs to have to be
  // properly positioned near its reference element
  // This is the most basic placement, and will be adjusted by
  // the modifiers in the next step
  state.modifiersData[name] = computeOffsets({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: 'absolute',
    placement: state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


var popperOffsets$1 = {
  name: 'popperOffsets',
  enabled: true,
  phase: 'read',
  fn: popperOffsets,
  data: {}
};

function getAltAxis(axis) {
  return axis === 'x' ? 'y' : 'x';
}

function preventOverflow$1(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;
  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      padding = options.padding,
      _options$tether = options.tether,
      tether = _options$tether === void 0 ? true : _options$tether,
      _options$tetherOffset = options.tetherOffset,
      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = detectOverflow(state, {
    boundary: boundary,
    rootBoundary: rootBoundary,
    padding: padding,
    altBoundary: altBoundary
  });
  var basePlacement = getBasePlacement(state.placement);
  var variation = getVariation(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = getMainAxisFromPlacement(basePlacement);
  var altAxis = getAltAxis(mainAxis);
  var popperOffsets = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {
    placement: state.placement
  })) : tetherOffset;
  var data = {
    x: 0,
    y: 0
  };

  if (!popperOffsets) {
    return;
  }

  if (checkMainAxis || checkAltAxis) {
    var mainSide = mainAxis === 'y' ? top : left;
    var altSide = mainAxis === 'y' ? bottom : right;
    var len = mainAxis === 'y' ? 'height' : 'width';
    var offset = popperOffsets[mainAxis];
    var min$1 = popperOffsets[mainAxis] + overflow[mainSide];
    var max = popperOffsets[mainAxis] - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === start ? referenceRect[len] : popperRect[len];
    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go
    // outside the reference bounds

    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want
    // to include its full size in the calculation. If the reference is small
    // and near the edge of a boundary, the popper can overflow even if the
    // reference is not overflowing as well (e.g. virtual elements with no
    // width or height)

    var arrowLen = within(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - tetherOffsetValue : minLen - arrowLen - arrowPaddingMin - tetherOffsetValue;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + tetherOffsetValue : maxLen + arrowLen + arrowPaddingMax + tetherOffsetValue;
    var arrowOffsetParent = state.elements.arrow && getOffsetParent$1(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = state.modifiersData.offset ? state.modifiersData.offset[state.placement][mainAxis] : 0;
    var tetherMin = popperOffsets[mainAxis] + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = popperOffsets[mainAxis] + maxOffset - offsetModifierValue;

    if (checkMainAxis) {
      var preventedOffset = within(tether ? min(min$1, tetherMin) : min$1, offset, tether ? max$1(max, tetherMax) : max);
      popperOffsets[mainAxis] = preventedOffset;
      data[mainAxis] = preventedOffset - offset;
    }

    if (checkAltAxis) {
      var _mainSide = mainAxis === 'x' ? top : left;

      var _altSide = mainAxis === 'x' ? bottom : right;

      var _offset = popperOffsets[altAxis];

      var _min = _offset + overflow[_mainSide];

      var _max = _offset - overflow[_altSide];

      var _preventedOffset = within(tether ? min(_min, tetherMin) : _min, _offset, tether ? max$1(_max, tetherMax) : _max);

      popperOffsets[altAxis] = _preventedOffset;
      data[altAxis] = _preventedOffset - _offset;
    }
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


var preventOverflow$2 = {
  name: 'preventOverflow',
  enabled: true,
  phase: 'main',
  fn: preventOverflow$1,
  requiresIfExists: ['offset']
};

function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}

function getNodeScroll(node) {
  if (node === getWindow$1(node) || !isHTMLElement(node)) {
    return getWindowScroll(node);
  } else {
    return getHTMLElementScroll(node);
  }
}

function isElementScaled(element) {
  var rect = element.getBoundingClientRect();
  var scaleX = rect.width / element.offsetWidth || 1;
  var scaleY = rect.height / element.offsetHeight || 1;
  return scaleX !== 1 || scaleY !== 1;
} // Returns the composite rect of an element relative to its offsetParent.
// Composite means it takes into account transforms as well as layout.


function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }

  var isOffsetParentAnElement = isHTMLElement(offsetParent);
  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);
  var documentElement = getDocumentElement(offsetParent);
  var rect = getBoundingClientRect$1(elementOrVirtualElement, offsetParentIsScaled);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };

  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078
    isScrollParent(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }

    if (isHTMLElement(offsetParent)) {
      offsets = getBoundingClientRect$1(offsetParent, true);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }

  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}

function order(modifiers) {
  var map = new Map();
  var visited = new Set();
  var result = [];
  modifiers.forEach(function (modifier) {
    map.set(modifier.name, modifier);
  }); // On visiting object, check for its dependencies and visit them recursively

  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function (dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);

        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }

  modifiers.forEach(function (modifier) {
    if (!visited.has(modifier.name)) {
      // check for visited object
      sort(modifier);
    }
  });
  return result;
}

function orderModifiers(modifiers) {
  // order based on dependencies
  var orderedModifiers = order(modifiers); // order based on phase

  return modifierPhases.reduce(function (acc, phase) {
    return acc.concat(orderedModifiers.filter(function (modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}

function debounce$2(fn) {
  var pending;
  return function () {
    if (!pending) {
      pending = new Promise(function (resolve) {
        Promise.resolve().then(function () {
          pending = undefined;
          resolve(fn());
        });
      });
    }

    return pending;
  };
}

function format$1(str) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  return [].concat(args).reduce(function (p, c) {
    return p.replace(/%s/, c);
  }, str);
}

var INVALID_MODIFIER_ERROR = 'Popper: modifier "%s" provided an invalid %s property, expected %s but got %s';
var MISSING_DEPENDENCY_ERROR = 'Popper: modifier "%s" requires "%s", but "%s" modifier is not available';
var VALID_PROPERTIES = ['name', 'enabled', 'phase', 'fn', 'effect', 'requires', 'options'];
function validateModifiers(modifiers) {
  modifiers.forEach(function (modifier) {
    Object.keys(modifier).forEach(function (key) {
      switch (key) {
        case 'name':
          if (typeof modifier.name !== 'string') {
            console.error(format$1(INVALID_MODIFIER_ERROR, String(modifier.name), '"name"', '"string"', "\"" + String(modifier.name) + "\""));
          }

          break;

        case 'enabled':
          if (typeof modifier.enabled !== 'boolean') {
            console.error(format$1(INVALID_MODIFIER_ERROR, modifier.name, '"enabled"', '"boolean"', "\"" + String(modifier.enabled) + "\""));
          }

        case 'phase':
          if (modifierPhases.indexOf(modifier.phase) < 0) {
            console.error(format$1(INVALID_MODIFIER_ERROR, modifier.name, '"phase"', "either " + modifierPhases.join(', '), "\"" + String(modifier.phase) + "\""));
          }

          break;

        case 'fn':
          if (typeof modifier.fn !== 'function') {
            console.error(format$1(INVALID_MODIFIER_ERROR, modifier.name, '"fn"', '"function"', "\"" + String(modifier.fn) + "\""));
          }

          break;

        case 'effect':
          if (typeof modifier.effect !== 'function') {
            console.error(format$1(INVALID_MODIFIER_ERROR, modifier.name, '"effect"', '"function"', "\"" + String(modifier.fn) + "\""));
          }

          break;

        case 'requires':
          if (!Array.isArray(modifier.requires)) {
            console.error(format$1(INVALID_MODIFIER_ERROR, modifier.name, '"requires"', '"array"', "\"" + String(modifier.requires) + "\""));
          }

          break;

        case 'requiresIfExists':
          if (!Array.isArray(modifier.requiresIfExists)) {
            console.error(format$1(INVALID_MODIFIER_ERROR, modifier.name, '"requiresIfExists"', '"array"', "\"" + String(modifier.requiresIfExists) + "\""));
          }

          break;

        case 'options':
        case 'data':
          break;

        default:
          console.error("PopperJS: an invalid property has been provided to the \"" + modifier.name + "\" modifier, valid properties are " + VALID_PROPERTIES.map(function (s) {
            return "\"" + s + "\"";
          }).join(', ') + "; but \"" + key + "\" was provided.");
      }

      modifier.requires && modifier.requires.forEach(function (requirement) {
        if (modifiers.find(function (mod) {
          return mod.name === requirement;
        }) == null) {
          console.error(format$1(MISSING_DEPENDENCY_ERROR, String(modifier.name), requirement, requirement));
        }
      });
    });
  });
}

function uniqueBy(arr, fn) {
  var identifiers = new Set();
  return arr.filter(function (item) {
    var identifier = fn(item);

    if (!identifiers.has(identifier)) {
      identifiers.add(identifier);
      return true;
    }
  });
}

function mergeByName(modifiers) {
  var merged = modifiers.reduce(function (merged, current) {
    var existing = merged[current.name];
    merged[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged;
  }, {}); // IE11 does not support Object.values

  return Object.keys(merged).map(function (key) {
    return merged[key];
  });
}

var INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';
var INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';
var DEFAULT_OPTIONS = {
  placement: 'bottom',
  modifiers: [],
  strategy: 'absolute'
};

function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return !args.some(function (element) {
    return !(element && typeof element.getBoundingClientRect === 'function');
  });
}

function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }

  var _generatorOptions = generatorOptions,
      _generatorOptions$def = _generatorOptions.defaultModifiers,
      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,
      _generatorOptions$def2 = _generatorOptions.defaultOptions,
      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return function createPopper(reference, popper, options) {
    if (options === void 0) {
      options = defaultOptions;
    }

    var state = {
      placement: 'bottom',
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference,
        popper: popper
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state: state,
      setOptions: function setOptions(options) {
        cleanupModifierEffects();
        state.options = Object.assign({}, defaultOptions, state.options, options);
        state.scrollParents = {
          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],
          popper: listScrollParents(popper)
        }; // Orders the modifiers based on their dependencies and `phase`
        // properties

        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers

        state.orderedModifiers = orderedModifiers.filter(function (m) {
          return m.enabled;
        }); // Validate the provided modifiers so that the consumer will get warned
        // if one of the modifiers is invalid for any reason

        if (process.env.NODE_ENV !== "production") {
          var modifiers = uniqueBy([].concat(orderedModifiers, state.options.modifiers), function (_ref) {
            var name = _ref.name;
            return name;
          });
          validateModifiers(modifiers);

          if (getBasePlacement(state.options.placement) === auto) {
            var flipModifier = state.orderedModifiers.find(function (_ref2) {
              var name = _ref2.name;
              return name === 'flip';
            });

            if (!flipModifier) {
              console.error(['Popper: "auto" placements require the "flip" modifier be', 'present and enabled to work.'].join(' '));
            }
          }

          var _getComputedStyle = getComputedStyle$1(popper),
              marginTop = _getComputedStyle.marginTop,
              marginRight = _getComputedStyle.marginRight,
              marginBottom = _getComputedStyle.marginBottom,
              marginLeft = _getComputedStyle.marginLeft; // We no longer take into account `margins` on the popper, and it can
          // cause bugs with positioning, so we'll warn the consumer


          if ([marginTop, marginRight, marginBottom, marginLeft].some(function (margin) {
            return parseFloat(margin);
          })) {
            console.warn(['Popper: CSS "margin" styles cannot be used to apply padding', 'between the popper and its reference element or boundary.', 'To replicate margin, use the `offset` modifier, as well as', 'the `padding` option in the `preventOverflow` and `flip`', 'modifiers.'].join(' '));
          }
        }

        runModifierEffects();
        return instance.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }

        var _state$elements = state.elements,
            reference = _state$elements.reference,
            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements
        // anymore

        if (!areValidElements(reference, popper)) {
          if (process.env.NODE_ENV !== "production") {
            console.error(INVALID_ELEMENT_ERROR);
          }

          return;
        } // Store the reference and popper rects to be read by modifiers


        state.rects = {
          reference: getCompositeRect(reference, getOffsetParent$1(popper), state.options.strategy === 'fixed'),
          popper: getLayoutRect(popper)
        }; // Modifiers have the ability to reset the current update cycle. The
        // most common use case for this is the `flip` modifier changing the
        // placement, which then needs to re-run all the modifiers, because the
        // logic was previously ran for the previous placement and is therefore
        // stale/incorrect

        state.reset = false;
        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier
        // is filled with the initial data specified by the modifier. This means
        // it doesn't persist and is fresh on each update.
        // To ensure persistent data, use `${name}#persistent`

        state.orderedModifiers.forEach(function (modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });
        var __debug_loops__ = 0;

        for (var index = 0; index < state.orderedModifiers.length; index++) {
          if (process.env.NODE_ENV !== "production") {
            __debug_loops__ += 1;

            if (__debug_loops__ > 100) {
              console.error(INFINITE_LOOP_ERROR);
              break;
            }
          }

          if (state.reset === true) {
            state.reset = false;
            index = -1;
            continue;
          }

          var _state$orderedModifie = state.orderedModifiers[index],
              fn = _state$orderedModifie.fn,
              _state$orderedModifie2 = _state$orderedModifie.options,
              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,
              name = _state$orderedModifie.name;

          if (typeof fn === 'function') {
            state = fn({
              state: state,
              options: _options,
              name: name,
              instance: instance
            }) || state;
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: debounce$2(function () {
        return new Promise(function (resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };

    if (!areValidElements(reference, popper)) {
      if (process.env.NODE_ENV !== "production") {
        console.error(INVALID_ELEMENT_ERROR);
      }

      return instance;
    }

    instance.setOptions(options).then(function (state) {
      if (!isDestroyed && options.onFirstUpdate) {
        options.onFirstUpdate(state);
      }
    }); // Modifiers have the ability to execute arbitrary code before the first
    // update cycle runs. They will be executed in the same order as the update
    // cycle. This is useful when a modifier adds some persistent data that
    // other modifiers need to use, but the modifier is run after the dependent
    // one.

    function runModifierEffects() {
      state.orderedModifiers.forEach(function (_ref3) {
        var name = _ref3.name,
            _ref3$options = _ref3.options,
            options = _ref3$options === void 0 ? {} : _ref3$options,
            effect = _ref3.effect;

        if (typeof effect === 'function') {
          var cleanupFn = effect({
            state: state,
            name: name,
            instance: instance,
            options: options
          });

          var noopFn = function noopFn() {};

          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }

    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function (fn) {
        return fn();
      });
      effectCleanupFns = [];
    }

    return instance;
  };
}

var defaultModifiers = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1, offset$2, flip$2, preventOverflow$2, arrow$2, hide$2];
var createPopper = /*#__PURE__*/popperGenerator({
  defaultModifiers: defaultModifiers
}); // eslint-disable-next-line import/no-unused-modules

/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */

var hasElementType = typeof Element !== 'undefined';
var hasMap = typeof Map === 'function';
var hasSet = typeof Set === 'function';
var hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;

// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js

function equal(a, b) {
  // START: fast-deep-equal es6/index.js 3.1.1
  if (a === b) return true;

  if (a && b && typeof a == 'object' && typeof b == 'object') {
    if (a.constructor !== b.constructor) return false;

    var length, i, keys;
    if (Array.isArray(a)) {
      length = a.length;
      if (length != b.length) return false;
      for (i = length; i-- !== 0;)
        if (!equal(a[i], b[i])) return false;
      return true;
    }

    // START: Modifications:
    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code
    //    to co-exist with es5.
    // 2. Replace `for of` with es5 compliant iteration using `for`.
    //    Basically, take:
    //
    //    ```js
    //    for (i of a.entries())
    //      if (!b.has(i[0])) return false;
    //    ```
    //
    //    ... and convert to:
    //
    //    ```js
    //    it = a.entries();
    //    while (!(i = it.next()).done)
    //      if (!b.has(i.value[0])) return false;
    //    ```
    //
    //    **Note**: `i` access switches to `i.value`.
    var it;
    if (hasMap && (a instanceof Map) && (b instanceof Map)) {
      if (a.size !== b.size) return false;
      it = a.entries();
      while (!(i = it.next()).done)
        if (!b.has(i.value[0])) return false;
      it = a.entries();
      while (!(i = it.next()).done)
        if (!equal(i.value[1], b.get(i.value[0]))) return false;
      return true;
    }

    if (hasSet && (a instanceof Set) && (b instanceof Set)) {
      if (a.size !== b.size) return false;
      it = a.entries();
      while (!(i = it.next()).done)
        if (!b.has(i.value[0])) return false;
      return true;
    }
    // END: Modifications

    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {
      length = a.length;
      if (length != b.length) return false;
      for (i = length; i-- !== 0;)
        if (a[i] !== b[i]) return false;
      return true;
    }

    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;
    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();
    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();

    keys = Object.keys(a);
    length = keys.length;
    if (length !== Object.keys(b).length) return false;

    for (i = length; i-- !== 0;)
      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;
    // END: fast-deep-equal

    // START: react-fast-compare
    // custom handling for DOM elements
    if (hasElementType && a instanceof Element) return false;

    // custom handling for React/Preact
    for (i = length; i-- !== 0;) {
      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {
        // React-specific: avoid traversing React elements' _owner
        // Preact-specific: avoid traversing Preact elements' __v and __o
        //    __v = $_original / $_vnode
        //    __o = $_owner
        // These properties contain circular references and are not needed when
        // comparing the actual elements (and not their owners)
        // .$$typeof and ._store on just reasonable markers of elements

        continue;
      }

      // all other properties should be traversed as usual
      if (!equal(a[keys[i]], b[keys[i]])) return false;
    }
    // END: react-fast-compare

    // START: fast-deep-equal
    return true;
  }

  return a !== a && b !== b;
}
// end fast-deep-equal

var reactFastCompare = function isEqual(a, b) {
  try {
    return equal(a, b);
  } catch (error) {
    if (((error.message || '').match(/stack|recursion/i))) {
      // warn on circular references, don't crash
      // browsers give this different errors name and messages:
      // chrome/safari: "RangeError", "Maximum call stack size exceeded"
      // firefox: "InternalError", too much recursion"
      // edge: "Error", "Out of stack space"
      console.warn('react-fast-compare cannot handle circular refs');
      return false;
    }
    // some other error. we should definitely know about these
    throw error;
  }
};

var EMPTY_MODIFIERS$1 = [];
var usePopper = function usePopper(referenceElement, popperElement, options) {
  if (options === void 0) {
    options = {};
  }

  var prevOptions = React$7.useRef(null);
  var optionsWithDefaults = {
    onFirstUpdate: options.onFirstUpdate,
    placement: options.placement || 'bottom',
    strategy: options.strategy || 'absolute',
    modifiers: options.modifiers || EMPTY_MODIFIERS$1
  };

  var _React$useState = React$7.useState({
    styles: {
      popper: {
        position: optionsWithDefaults.strategy,
        left: '0',
        top: '0'
      },
      arrow: {
        position: 'absolute'
      }
    },
    attributes: {}
  }),
      state = _React$useState[0],
      setState = _React$useState[1];

  var updateStateModifier = React$7.useMemo(function () {
    return {
      name: 'updateState',
      enabled: true,
      phase: 'write',
      fn: function fn(_ref) {
        var state = _ref.state;
        var elements = Object.keys(state.elements);
        setState({
          styles: fromEntries(elements.map(function (element) {
            return [element, state.styles[element] || {}];
          })),
          attributes: fromEntries(elements.map(function (element) {
            return [element, state.attributes[element]];
          }))
        });
      },
      requires: ['computeStyles']
    };
  }, []);
  var popperOptions = React$7.useMemo(function () {
    var newOptions = {
      onFirstUpdate: optionsWithDefaults.onFirstUpdate,
      placement: optionsWithDefaults.placement,
      strategy: optionsWithDefaults.strategy,
      modifiers: [].concat(optionsWithDefaults.modifiers, [updateStateModifier, {
        name: 'applyStyles',
        enabled: false
      }])
    };

    if (reactFastCompare(prevOptions.current, newOptions)) {
      return prevOptions.current || newOptions;
    } else {
      prevOptions.current = newOptions;
      return newOptions;
    }
  }, [optionsWithDefaults.onFirstUpdate, optionsWithDefaults.placement, optionsWithDefaults.strategy, optionsWithDefaults.modifiers, updateStateModifier]);
  var popperInstanceRef = React$7.useRef();
  useIsomorphicLayoutEffect(function () {
    if (popperInstanceRef.current) {
      popperInstanceRef.current.setOptions(popperOptions);
    }
  }, [popperOptions]);
  useIsomorphicLayoutEffect(function () {
    if (referenceElement == null || popperElement == null) {
      return;
    }

    var createPopper$1 = options.createPopper || createPopper;
    var popperInstance = createPopper$1(referenceElement, popperElement, popperOptions);
    popperInstanceRef.current = popperInstance;
    return function () {
      popperInstance.destroy();
      popperInstanceRef.current = null;
    };
  }, [referenceElement, popperElement, options.createPopper]);
  return {
    state: popperInstanceRef.current ? popperInstanceRef.current.state : null,
    styles: state.styles,
    attributes: state.attributes,
    update: popperInstanceRef.current ? popperInstanceRef.current.update : null,
    forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null
  };
};

var NOOP = function NOOP() {
  return void 0;
};

var NOOP_PROMISE = function NOOP_PROMISE() {
  return Promise.resolve(null);
};

var EMPTY_MODIFIERS = [];
function Popper$4(_ref) {
  var _ref$placement = _ref.placement,
      placement = _ref$placement === void 0 ? 'bottom' : _ref$placement,
      _ref$strategy = _ref.strategy,
      strategy = _ref$strategy === void 0 ? 'absolute' : _ref$strategy,
      _ref$modifiers = _ref.modifiers,
      modifiers = _ref$modifiers === void 0 ? EMPTY_MODIFIERS : _ref$modifiers,
      referenceElement = _ref.referenceElement,
      onFirstUpdate = _ref.onFirstUpdate,
      innerRef = _ref.innerRef,
      children = _ref.children;
  var referenceNode = React$7.useContext(ManagerReferenceNodeContext$1);

  var _React$useState = React$7.useState(null),
      popperElement = _React$useState[0],
      setPopperElement = _React$useState[1];

  var _React$useState2 = React$7.useState(null),
      arrowElement = _React$useState2[0],
      setArrowElement = _React$useState2[1];

  React$7.useEffect(function () {
    setRef$1(innerRef, popperElement);
  }, [innerRef, popperElement]);
  var options = React$7.useMemo(function () {
    return {
      placement: placement,
      strategy: strategy,
      onFirstUpdate: onFirstUpdate,
      modifiers: [].concat(modifiers, [{
        name: 'arrow',
        enabled: arrowElement != null,
        options: {
          element: arrowElement
        }
      }])
    };
  }, [placement, strategy, onFirstUpdate, modifiers, arrowElement]);

  var _usePopper = usePopper(referenceElement || referenceNode, popperElement, options),
      state = _usePopper.state,
      styles = _usePopper.styles,
      forceUpdate = _usePopper.forceUpdate,
      update = _usePopper.update;

  var childrenProps = React$7.useMemo(function () {
    return {
      ref: setPopperElement,
      style: styles.popper,
      placement: state ? state.placement : placement,
      hasPopperEscaped: state && state.modifiersData.hide ? state.modifiersData.hide.hasPopperEscaped : null,
      isReferenceHidden: state && state.modifiersData.hide ? state.modifiersData.hide.isReferenceHidden : null,
      arrowProps: {
        style: styles.arrow,
        ref: setArrowElement
      },
      forceUpdate: forceUpdate || NOOP,
      update: update || NOOP_PROMISE
    };
  }, [setPopperElement, setArrowElement, placement, state, styles, update, forceUpdate]);
  return unwrapArray$1(children)(childrenProps);
}

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var __DEV__ = process.env.NODE_ENV !== 'production';

var warning$3 = function() {};

if (__DEV__) {
  var printWarning$2 = function printWarning(format, args) {
    var len = arguments.length;
    args = new Array(len > 1 ? len - 1 : 0);
    for (var key = 1; key < len; key++) {
      args[key - 1] = arguments[key];
    }
    var argIndex = 0;
    var message = 'Warning: ' +
      format.replace(/%s/g, function() {
        return args[argIndex++];
      });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  warning$3 = function(condition, format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);
    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }
    if (format === undefined) {
      throw new Error(
          '`warning(condition, format, ...args)` requires a warning ' +
          'message argument'
      );
    }
    if (!condition) {
      printWarning$2.apply(null, [format].concat(args));
    }
  };
}

var warning_1$1 = warning$3;

function Reference$1(_ref) {
  var children = _ref.children,
      innerRef = _ref.innerRef;
  var setReferenceNode = React$7.useContext(ManagerReferenceNodeSetterContext$1);
  var refHandler = React$7.useCallback(function (node) {
    setRef$1(innerRef, node);
    safeInvoke$1(setReferenceNode, node);
  }, [innerRef, setReferenceNode]); // ran on unmount

  React$7.useEffect(function () {
    return function () {
      return setRef$1(innerRef, null);
    };
  });
  React$7.useEffect(function () {
    warning_1$1(Boolean(setReferenceNode), '`Reference` should not be used outside of a `Manager` component.');
  }, [setReferenceNode]);
  return unwrapArray$1(children)({
    ref: refHandler
  });
}

var lib$2 = {};

var NodeResolver$2 = {};

Object.defineProperty(NodeResolver$2, "__esModule", {
  value: true
});

var _createClass$2 = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react$6 = React__default;

var _reactDom = reactDom.exports;

function _classCallCheck$2(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn$2(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits$2(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var NodeResolver$1 = function (_Component) {
  _inherits$2(NodeResolver, _Component);

  function NodeResolver() {
    _classCallCheck$2(this, NodeResolver);

    return _possibleConstructorReturn$2(this, (NodeResolver.__proto__ || Object.getPrototypeOf(NodeResolver)).apply(this, arguments));
  }

  _createClass$2(NodeResolver, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.props.innerRef((0, _reactDom.findDOMNode)(this));
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.props.innerRef(null);
    }
  }, {
    key: 'render',
    value: function render() {
      return this.props.children;
    }
  }]);

  return NodeResolver;
}(_react$6.Component);

NodeResolver$2.default = NodeResolver$1;

(function (exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _NodeResolver = NodeResolver$2;

Object.defineProperty(exports, 'default', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_NodeResolver).default;
  }
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
}(lib$2));

var NodeResolver = /*@__PURE__*/getDefaultExportFromCjs(lib$2);

var css_248z$G = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.styled-atlaskit-select__control,.styled-atlaskit-select div[class*=-control]{background-color:transparent;border-color:#b8bfcd;border-radius:4px;border-width:1px}.styled-atlaskit-select__control:hover,.styled-atlaskit-select div[class*=-control]:hover{background-color:#f5f6f8;border-color:#687792}.styled-atlaskit-select__control.styled-atlaskit-select__control--is-focused,.styled-atlaskit-select div[class*=-control].styled-atlaskit-select__control--is-focused{border:2px solid #0b6cff}.styled-atlaskit-select__option{color:#232831;height:36px;line-height:24px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.styled-atlaskit-select__option.styled-atlaskit-select__option--is-focused{background-color:#f5f6f8}.styled-atlaskit-select__option.styled-atlaskit-select__option--is-selected{background-color:#0b6cff}.styled-atlaskit-select__placeholder,.styled-atlaskit-select__value-container div,.styled-atlaskit-select div.styled-atlaskit-select__option{font-family:Roboto,sans-serif;font-size:14px}";
styleInject(css_248z$G);

var Select = function (_a) {
    var _b = _a.isMulti, isMulti = _b === void 0 ? false : _b, onChange = _a.onChange, props = __rest$8(_a, ["isMulti", "onChange"]);
    return (jsx$1(AkSelect, __assign$a({ className: "styled-atlaskit-select", classNamePrefix: "styled-atlaskit-select", isMulti: isMulti, onChange: onChange ? function (item) { return onChange(item); } : undefined }, props), void 0));
};

var R50 = '#FFEBE6';
var R75 = '#FFBDAD';
var R100 = '#FF8F73';
var R200 = '#FF7452';
var R300$1 = '#FF5630';
var R500 = '#BF2600'; // Yellows
var Y75 = '#FFF0B3';
var Y100 = '#FFE380';
var Y200 = '#FFC400';
var G75 = '#ABF5D1';
var G100 = '#79F2C0';
var G200 = '#57D9A3';
var G500 = '#006644'; // Blues

var B50 = '#DEEBFF';
var B75$1 = '#B3D4FF';
var B100$1 = '#4C9AFF';
var B200 = '#2684FF';
var B300 = '#0065FF';
var B500 = '#0747A6'; // Purples

var P50 = '#EAE6FF';
var P75 = '#C0B6F2';
var P100 = '#998DD9';
var P500 = '#403294'; // Teals
var T75 = '#B3F5FF';
var T100 = '#79E2F2';
var T200 = '#00C7E6';

var N0$3 = '#FFFFFF';
var N20$1 = '#F4F5F7';
var N30$1 = '#EBECF0';
var N50 = '#C1C7D0';
var N500$1 = '#42526E';
var N700 = '#253858';
var N800 = '#172B4D'; // ATTENTION: update the tints if you update this
var DN600$1 = '#B8C7E0';
var DN60 = '#313D52';
var DN30$3 = '#1B2638';
var DN100A = 'rgba(13, 20, 36, 0.53)';

/*
  These theme values are expressed as functions so that if we decide to make
  them dependent on props in the future, it wouldn't require a significant
  refactor everywhere they are being used.
*/

var borderRadius$3 = function borderRadius() {
  return 3;
};
var gridSize$3 = function gridSize() {
  return 8;
};
var fontSize$4 = function fontSize() {
  return 14;
};

/**
 * createTheme is used to create a set of Providers and Consumers for theming components.
 * - Takes a default theme function; this theme function gets a set of props, and returns tokens
 *  based on those props. An example of this default theme function is one that produces the standard
 *  appearance of the component
 * - Returns three things - a Provider that allow for additional themes to be applied, a Consumer
 *  that can get the current theme and fetch it, and a custom hook - useTheme which provides an alternate (although functionally the same) API
 *  to the Consumer.
 **/
function createTheme$1(defaultGetTokens) {
  var emptyThemeFn = function emptyThemeFn(getTokens, props) {
    return getTokens(props);
  };
  /**
   * Internally, Theme uses React Context, with internal providers and consumers.
   * The React Context passes only a function that gets props, and turns them into tokens. This
   * function gets mixed as more Providers with their own themes are added. This mixed function
   * is ultimately picked up by Consumers, which implement a context consumer internally to fetch
   * the theme.
   **/


  var ThemeContext = /*#__PURE__*/createContext$1(defaultGetTokens);

  function useTheme(themeProps) {
    var theme = useContext(ThemeContext);
    var themeFn = theme || emptyThemeFn;
    var tokens = themeFn(themeProps);
    return tokens;
  } // The Theme Consumer takes a function as its child - this function takes tokens, and the
  // return value is generally a set of nodes with the tokens applied appropriately.


  function Consumer(props) {
    var children = props.children,
        themeProps = _objectWithoutProperties$3(props, ["children"]); // @ts-ignore See issue for more info: https://github.com/Microsoft/TypeScript/issues/10727
    // Argument of type 'Pick<ThemeProps & { children: (tokens: ThemeTokens) => ReactNode; }, Exclude<keyof ThemeProps, "children">>' is not assignable to parameter of type 'ThemeProps'.ts(2345)


    var tokens = useTheme(themeProps); // We add a fragment to ensure we don't break people upgrading.
    // Previously they may have been able to pass in undefined without things blowing up.

    return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, children(tokens));
  }
  /**
   * The Theme Provider takes regular nodes as its children, but also takes a *theme function*
   * - The theme function takes a set of props, as well as a function (getTokens) that can turn props into tokens.
   * - The getTokens function isn't called immediately - instead the props are passed
   *    through a mix of parent theming functions
   * Children of this provider will receive this mixed theme
   */


  function Provider(props) {
    var themeFn = useContext(ThemeContext);
    var valueFn = props.value || emptyThemeFn;
    var mixedFn = useCallback$1(function (themeProps) {
      return valueFn(themeFn, themeProps);
    }, [themeFn, valueFn]);
    return /*#__PURE__*/React__default.createElement(ThemeContext.Provider, {
      value: mixedFn
    }, props.children);
  }

  return {
    Consumer: Consumer,
    Provider: Provider,
    useTheme: useTheme
  };
}

// Create default global light theme
var _createTheme$1 = createTheme$1(function () {
  return {
    mode: 'light'
  };
}),
    Provider$1 = _createTheme$1.Provider,
    Consumer$1 = _createTheme$1.Consumer,
    useTheme$1 = _createTheme$1.useTheme;

var useGlobalTheme$1 = function useGlobalTheme() {
  return useTheme$1();
};
var GlobalTheme$1 = {
  Provider: Provider$1,
  Consumer: Consumer$1
};

var textColors = {
  standard: {
    light: N700,
    dark: DN600$1
  },
  green: {
    light: N800,
    dark: N800
  },
  purple: {
    light: N800,
    dark: N800
  },
  red: {
    light: N800,
    dark: N800
  },
  yellow: {
    light: N800,
    dark: N800
  },
  grey: {
    light: N0$3,
    dark: N0$3
  },
  teal: {
    light: N800,
    dark: N800
  },
  blue: {
    light: N800,
    dark: N800
  },
  tealLight: {
    light: N500$1,
    dark: N500$1
  },
  blueLight: {
    light: B500,
    dark: B500
  },
  greenLight: {
    light: G500,
    dark: G500
  },
  purpleLight: {
    light: P500,
    dark: P500
  },
  redLight: {
    light: N500$1,
    dark: N500$1
  },
  yellowLight: {
    light: N500$1,
    dark: N500$1
  },
  greyLight: {
    light: N500$1,
    dark: N500$1
  }
};
var backgroundColors = {
  standard: {
    light: N20$1,
    dark: DN100A
  },
  green: {
    light: G200,
    dark: G200
  },
  purple: {
    light: P100,
    dark: P100
  },
  red: {
    light: R100,
    dark: R100
  },
  yellow: {
    light: Y200,
    dark: Y200
  },
  grey: {
    light: N500$1,
    dark: N500$1
  },
  teal: {
    light: T200,
    dark: T200
  },
  blue: {
    light: B100$1,
    dark: B100$1
  },
  tealLight: {
    light: T100,
    dark: T100
  },
  blueLight: {
    light: B75$1,
    dark: B75$1
  },
  greenLight: {
    light: G100,
    dark: G100
  },
  purpleLight: {
    light: P75,
    dark: P75
  },
  redLight: {
    light: R75,
    dark: R75
  },
  yellowLight: {
    light: Y100,
    dark: Y100
  },
  greyLight: {
    light: N30$1,
    dark: N30$1
  }
};
var linkBackgroundColorHover = {
  standard: {
    light: N30$1,
    dark: DN60
  },
  green: {
    light: G100,
    dark: DN60
  },
  purple: {
    light: P75,
    dark: DN60
  },
  red: {
    light: R75,
    dark: DN60
  },
  yellow: {
    light: Y100,
    dark: DN60
  },
  grey: {
    light: N50,
    dark: DN60
  },
  teal: {
    light: T100,
    dark: DN60
  },
  blue: {
    light: B75$1,
    dark: DN60
  },
  tealLight: {
    light: T75,
    dark: DN60
  },
  blueLight: {
    light: B50,
    dark: DN60
  },
  greenLight: {
    light: G75,
    dark: DN60
  },
  purpleLight: {
    light: P50,
    dark: DN60
  },
  redLight: {
    light: R50,
    dark: DN60
  },
  yellowLight: {
    light: Y75,
    dark: DN60
  },
  greyLight: {
    light: N30$1,
    dark: DN60
  }
};
var focusRingColorObj = {
  light: B100$1,
  dark: B75$1
};
var hoverBoxShadowColorObj = {
  light: R300$1,
  dark: R200
};
var focusBoxShadowColorObj = {
  light: B100$1,
  dark: B75$1
};
var linkHoverColorObj = {
  light: B300,
  dark: B200
};

var getTextColor = function getTextColor(tagColor, mode) {
  var color = tagColor ? tagColor : 'standard';
  return textColors[color][mode];
};

var getLinkBackgroundColorHover = function getLinkBackgroundColorHover(tagColor, mode) {
  var color = tagColor ? tagColor : 'standard';
  return linkBackgroundColorHover[color][mode];
};

var getBackgroundColor$1 = function getBackgroundColor(tagColor, mode) {
  var color = tagColor ? tagColor : 'standard';
  return backgroundColors[color][mode];
};

var getTextColorForRemoval = function getTextColorForRemoval(tagColor, mode) {
  return {
    light: R500,
    dark: DN30$3
  }[mode];
};

var getBackgroundColorForRemoval = function getBackgroundColorForRemoval(tagColor, mode) {
  return {
    light: R50,
    dark: R100
  }[mode];
};

var getChromeColors = function getChromeColors(color, mode, isRemovable) {
  var backgroundColor = getBackgroundColor$1(color, mode);
  var backgroundColorHover = isRemovable ? getBackgroundColorForRemoval(color, mode) : getLinkBackgroundColorHover(color, mode);
  var textColor = getTextColor(color, mode);
  var textColorHover = isRemovable ? getTextColorForRemoval(color, mode) : getTextColor(color, mode);
  return {
    backgroundColor: backgroundColor,
    backgroundColorHover: backgroundColorHover,
    textColor: textColor,
    textColorHover: textColorHover
  };
};

var getChromeLinkColors = function getChromeLinkColors(color, mode) {
  var hoverBackgroundColorRemoval = getBackgroundColorForRemoval(color, mode);
  var hoverTextColorRemoval = getTextColorForRemoval(color, mode);
  var hoverBackgroundColor = getLinkBackgroundColorHover(color, mode);
  var hoverTextColor = linkHoverColorObj[mode];
  var focusRingColor = focusRingColorObj[mode];
  return {
    hoverBackgroundColor: hoverBackgroundColor,
    hoverTextColor: hoverTextColor,
    hoverBackgroundColorRemoval: hoverBackgroundColorRemoval,
    hoverTextColorRemoval: hoverTextColorRemoval,
    focusRingColor: focusRingColor
  };
};

var getButtonColors = function getButtonColors(color, mode) {
  var backgroundColor = getBackgroundColor$1(color, mode);
  var backgroundColorHover = getBackgroundColorForRemoval(color, mode);
  var focusBoxShadowColor = focusBoxShadowColorObj[mode];
  var hoverBoxShadowColor = hoverBoxShadowColorObj[mode];
  return {
    backgroundColor: backgroundColor,
    backgroundColorHover: backgroundColorHover,
    focusBoxShadowColor: focusBoxShadowColor,
    hoverBoxShadowColor: hoverBoxShadowColor
  };
};

var getThemeColors = function getThemeColors(color, mode, isRemovable) {
  var chromeColors = getChromeColors(color, mode, isRemovable);
  var chromeLinkColors = getChromeLinkColors(color, mode);
  var buttonColors = getButtonColors(color, mode);
  var linkHoverColor = linkHoverColorObj[mode];
  return {
    chromeColors: chromeColors,
    chromeLinkColors: chromeLinkColors,
    buttonColors: buttonColors,
    linkHoverColor: linkHoverColor
  };
};

var BaseTag = /*#__PURE__*/React__default.forwardRef(function BaseTag(_ref, ref) {
  var before = _ref.before,
      contentElement = _ref.contentElement,
      after = _ref.after,
      testId = _ref.testId,
      tagCss = _ref.tagCss,
      other = _objectWithoutProperties$3(_ref, ["before", "contentElement", "after", "testId", "tagCss"]);

  return jsx("span", _extends$d({}, other, {
    ref: ref,
    css: tagCss,
    "data-testid": testId
  }), before, contentElement, after);
});
var BaseTag$1 = BaseTag;

var gridSizeValue = gridSize$3();
var borderRaidusValue = borderRadius$3();
var fontSizeValue = fontSize$4();
var tagHeightUnitless = 2.5 * gridSizeValue;
var tagHeight = "".concat(tagHeightUnitless, "px");
var buttonWidthUnitless = tagHeightUnitless; // button should be square

var maxWidthUnitless = 25 * gridSizeValue;
var maxTextWidthUnitless = maxWidthUnitless - tagHeightUnitless;
var maxTextWidth = "".concat(maxTextWidthUnitless, "px");
var defaultBorderRadius = "".concat(borderRaidusValue, "px");
var defaultRoundedBorderRadius = "".concat(buttonWidthUnitless / 2, "px");
var defaultMargin = "".concat(gridSizeValue / 2, "px");
var defaultTextPadding = "".concat(gridSizeValue / 2, "px");
var textPaddingRight = "".concat(2 * gridSizeValue, "px");
var textMarginLeft = "".concat(tagHeightUnitless, "px");
var textFontSize = "".concat(fontSizeValue, "px");

function ownKeys$g(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$f(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$g(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$g(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var roundedBorderStyles = {
  borderRadius: "".concat(defaultRoundedBorderRadius)
};
var beforeElementStyles = function beforeElementStyles(_ref) {
  var textColor = _ref.textColor;
  return {
    position: 'absolute',
    left: 0,
    borderRadius: "".concat(defaultBorderRadius),
    alignItems: 'center',
    display: 'flex',
    justifyContent: 'center',
    color: textColor
  };
};
var chromeStyles = function chromeStyles(_ref2) {
  var backgroundColor = _ref2.backgroundColor,
      backgroundColorHover = _ref2.backgroundColorHover,
      textColor = _ref2.textColor,
      textColorHover = _ref2.textColorHover;
  return {
    backgroundColor: backgroundColor,
    color: textColor,
    '&:hover': {
      backgroundColor: backgroundColorHover,
      color: textColorHover
    },
    '& button:hover': {
      backgroundColor: backgroundColor,
      color: textColor
    },
    '&>span:hover': {
      backgroundColor: backgroundColor,
      color: textColor
    },
    borderRadius: "".concat(defaultBorderRadius),
    cursor: 'default',
    display: 'inline-flex',
    position: 'relative',
    height: "".concat(tagHeight),
    lineHeight: 1,
    margin: "".concat(defaultMargin),
    padding: 0,
    overflow: 'hidden'
  };
};
var chromeLinkStyles = function chromeLinkStyles(_ref3) {
  var hoverBackgroundColor = _ref3.hoverBackgroundColor,
      hoverTextColor = _ref3.hoverTextColor,
      hoverBackgroundColorRemoval = _ref3.hoverBackgroundColorRemoval,
      hoverTextColorRemoval = _ref3.hoverTextColorRemoval,
      focusRingColor = _ref3.focusRingColor;
  return {
    '&>a:hover': {
      backgroundColor: hoverBackgroundColor,
      color: hoverTextColor
    },
    '&[data-removable="true"]:hover': {
      backgroundColor: hoverBackgroundColorRemoval,
      color: hoverTextColorRemoval
    },
    '&:focus-within': {
      boxShadow: "0 0 0 2px ".concat(focusRingColor),
      outline: 'none'
    },
    '&[data-removing="true"]:focus-within': {
      boxShadow: "0 0 0 2px transparent",
      outline: 'none'
    }
  };
};
var hasAfterStyles = {
  paddingRight: "".concat(textPaddingRight),
  maxWidth: "".concat(maxTextWidthUnitless - buttonWidthUnitless, "px")
};
var hasBeforeStyles = {
  marginLeft: "".concat(textMarginLeft)
};
var textStyles = {
  fontSize: textFontSize,
  fontWeight: 'normal',
  lineHeight: 1,
  paddingLeft: defaultTextPadding,
  paddingRight: defaultTextPadding,
  paddingTop: '2px',
  paddingBottom: '2px',
  borderRadius: defaultBorderRadius,
  maxWidth: maxTextWidth,
  overflow: 'hidden',
  textOverflow: 'ellipsis',
  whiteSpace: 'nowrap'
};
var linkStyles = function linkStyles(linkHoverColor) {
  return _objectSpread$f(_objectSpread$f({}, textStyles), {}, {
    ':not([data-color="standard"])': {
      color: 'inherit',
      textDecoration: 'underline'
    },
    textDecoration: 'none',
    '&:hover': {
      color: linkHoverColor
    },
    '&:focus': {
      outline: 'none'
    }
  });
};

/** @jsx jsx */

var Before$2 = function Before(_ref) {
  var elemBefore = _ref.elemBefore,
      isRounded = _ref.isRounded,
      styles = _ref.styles;
  return elemBefore ? jsx("span", {
    css: [beforeElementStyles(styles), isRounded ? roundedBorderStyles : undefined]
  }, elemBefore) : null;
};

var Before$3 = Before$2;

/** @jsx jsx */

var Content$5 = function Content(props) {
  var _props$elemBefore = props.elemBefore,
      elemBefore = _props$elemBefore === void 0 ? null : _props$elemBefore,
      _props$isRemovable = props.isRemovable,
      isRemovable = _props$isRemovable === void 0 ? true : _props$isRemovable,
      _props$text = props.text,
      text = _props$text === void 0 ? '' : _props$text,
      _props$color = props.color,
      color = _props$color === void 0 ? 'standard' : _props$color,
      href = props.href,
      isRounded = props.isRounded,
      isLink = props.isLink,
      _props$linkComponent = props.linkComponent,
      Link = _props$linkComponent === void 0 ? 'a' : _props$linkComponent,
      linkHoverColor = props.linkHoverColor;

  if (isLink) {
    return jsx(Link, {
      href: href,
      "data-color": color,
      css: [linkStyles(linkHoverColor), isRounded ? roundedBorderStyles : undefined, elemBefore ? hasBeforeStyles : undefined, isRemovable ? hasAfterStyles : undefined]
    }, text);
  } else {
    return jsx("span", {
      css: [textStyles, isRounded ? roundedBorderStyles : undefined, elemBefore ? hasBeforeStyles : undefined, isRemovable ? hasAfterStyles : undefined]
    }, text);
  }
};

var Content$6 = Content$5;

function ownKeys$f(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$e(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$f(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$f(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var AnalyticsEvent$3 = /*#__PURE__*/function () {
  function AnalyticsEvent(props) {
    var _this = this;

    _classCallCheck$8(this, AnalyticsEvent);

    _defineProperty$3(this, "clone", function () {
      // just a shallow clone, don't change sub refs unless you want to
      // affect the original's too
      var payload = _objectSpread$e({}, _this.payload);

      return new AnalyticsEvent({
        payload: payload
      });
    });

    this.payload = props.payload;
  }

  _createClass$8(AnalyticsEvent, [{
    key: "update",
    value: function update(updater) {
      if (typeof updater === 'function') {
        this.payload = updater(this.payload);
      }

      if (_typeof$3(updater) === 'object') {
        this.payload = _objectSpread$e(_objectSpread$e({}, this.payload), updater);
      }

      return this;
    }
  }]);

  return AnalyticsEvent;
}();

function _createSuper$e(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$e(); return function _createSuperInternal() { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$8(this, result); }; }

function _isNativeReflectConstruct$e() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var UIAnalyticsEvent$3 = /*#__PURE__*/function (_AnalyticsEvent) {
  _inherits$8(UIAnalyticsEvent, _AnalyticsEvent);

  var _super = _createSuper$e(UIAnalyticsEvent);

  function UIAnalyticsEvent(props) {
    var _this;

    _classCallCheck$8(this, UIAnalyticsEvent);

    _this = _super.call(this, props);

    _defineProperty$3(_assertThisInitialized$4(_this), "clone", function () {
      if (_this.hasFired) {
        if (process.env.NODE_ENV !== 'production' && !process.env.CI) {
          // eslint-disable-next-line no-console
          console.warn("Cannot clone an event after it's been fired.");
        }

        return null;
      }

      var context = _toConsumableArray$2(_this.context);

      var handlers = _toConsumableArray$2(_this.handlers);
      /**
       * A hacky "deep clone" of the object. This is limited in that it wont
       * support functions, regexs, Maps, Sets, etc, but none of those need to
       * be represented in our payload.
       */


      var payload = JSON.parse(JSON.stringify(_this.payload));
      return new UIAnalyticsEvent({
        context: context,
        handlers: handlers,
        payload: payload
      });
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "fire", function (channel) {
      if (_this.hasFired) {
        if (process.env.NODE_ENV !== 'production' && !process.env.CI) {
          // eslint-disable-next-line no-console
          console.warn('Cannot fire an event twice.');
        }

        return;
      }

      _this.handlers.forEach(function (handler) {
        return handler(_assertThisInitialized$4(_this), channel);
      });

      _this.hasFired = true;
    });

    _this.context = props.context || [];
    _this.handlers = props.handlers || [];
    _this.hasFired = false;
    return _this;
  }

  _createClass$8(UIAnalyticsEvent, [{
    key: "update",
    value: function update(updater) {
      if (this.hasFired) {
        if (process.env.NODE_ENV !== 'production' && !process.env.CI) {
          // eslint-disable-next-line no-console
          console.warn("Cannot update an event after it's been fired.");
        }

        return this;
      }

      return _get(_getPrototypeOf$2(UIAnalyticsEvent.prototype), "update", this).call(this, updater);
    }
  }]);

  return UIAnalyticsEvent;
}(AnalyticsEvent$3);

var useAnalyticsContext$3 = function useAnalyticsContext() {
  return useContext(AnalyticsNextContext$1);
};

var useTrackedRef$3 = function useTrackedRef(value) {
  var ref = useRef(value);
  useEffect(function () {
    ref.current = value;
  }, [value]);
  return ref;
};

function useAnalyticsEvents$3() {
  var analyticsContext = useAnalyticsContext$3();
  var createAnalyticsEvent = useCallbackOne(function (payload) {
    return new UIAnalyticsEvent$3({
      context: analyticsContext.getAtlaskitAnalyticsContext(),
      handlers: analyticsContext.getAtlaskitAnalyticsEventHandlers(),
      payload: payload
    });
  }, [analyticsContext]);
  return {
    createAnalyticsEvent: createAnalyticsEvent
  };
}

var useCallbackWithAnalytics = function useCallbackWithAnalytics(method, payload, channel) {
  var _useAnalyticsEvents = useAnalyticsEvents$3(),
      createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;

  var methodRef = useTrackedRef$3(method);
  var payloadRef = useTrackedRef$3(payload);
  return useCallback$1(function () {
    var pload = typeof payloadRef.current === 'function' ? payloadRef.current.apply(payloadRef, arguments) : payloadRef.current;
    createAnalyticsEvent(pload).fire(channel);
    methodRef.current.apply(methodRef, arguments);
  }, [createAnalyticsEvent, methodRef, payloadRef, channel]);
};

var close = {};

// These are duplicates of colors imports -
// Not bringing in colors to reduce dependency on theme
// These values are enforced via unit tests
var DN30$2 = '#1B2638';
var N0$2 = '#FFFFFF';
var themedBackground$2 = {
  light: N0$2,
  dark: DN30$2
};
/**
 * Returns the background color depending on the passed through mode.
 * @param mode
 */

var getBackground$2 = function getBackground() {
  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';
  return themedBackground$2[mode];
};

var sizes$1 = {
  small: '16px',
  medium: '24px',
  large: '32px',
  xlarge: '48px'
};
var dimensions$1 = {
  small: {
    width: sizes$1.small,
    height: sizes$1.small
  },
  medium: {
    width: sizes$1.medium,
    height: sizes$1.medium
  },
  large: {
    width: sizes$1.large,
    height: sizes$1.large
  },
  xlarge: {
    width: sizes$1.xlarge,
    height: sizes$1.xlarge
  }
};

var commonSVGStyles$1 = {
  overflow: 'hidden',
  pointerEvents: 'none',

  /**
   * Stop-color doesn't properly apply in chrome when the inherited/current color changes.
   * We have to initially set stop-color to inherit (either via DOM attribute or an initial CSS
   * rule) and then override it with currentColor for the color changes to be picked up.
   */
  stop: {
    stopColor: 'currentColor'
  }
};
css$2(dimensions$1.small);
css$2(dimensions$1.medium);
css$2(dimensions$1.large);
css$2(dimensions$1.xlarge); // pre-built css style-size map
/**
 * Returns the width of the icon's parent span. This function has
 * special behaviour to deal with icon-file-type specifically.
 *
 * The reality is the SVG still has its own dimensions, so this is
 * a secondary fallback which in 95% of cases is not required.
 * It's only really being kept to maintain backward compatability.
 */

var getIconSize$1 = function getIconSize(_ref) {
  var width = _ref.width,
      height = _ref.height,
      size = _ref.size;

  if (width && height) {
    return {
      width: width,
      height: height
    };
  }

  if (size) {
    return dimensions$1[size];
  }

  return undefined;
};

function ownKeys$e(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$d(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$e(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$e(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
/**
 * We are hiding these props from consumers as they're used to
 * hack around icon sizing specifically for icon-file-type.
 */

var iconStyles$1 = css$2({
  display: 'inline-block',
  flexShrink: 0,
  lineHeight: 1,
  '> svg': _objectSpread$d(_objectSpread$d({}, commonSVGStyles$1), {}, {
    maxWidth: '100%',
    maxHeight: '100%',
    color: 'var(--icon-primary-color)',
    fill: 'var(--icon-secondary-color)',
    verticalAlign: 'bottom'
  })
});
/**
 * For windows high contrast mode
 */

var baseHcmStyles$1 = css$2({
  '@media screen and (forced-colors: active)': {
    '> svg': {
      filter: 'grayscale(1)',
      '--icon-primary-color': 'CanvasText',
      // foreground
      '--icon-secondary-color': 'Canvas' // background

    }
  }
});
var primaryEqualsSecondaryHcmStyles$1 = css$2({
  '@media screen and (forced-colors: active)': {
    '> svg': {
      // if the primaryColor is the same as the secondaryColor we
      // set the --icon-primary-color to Canvas
      // this is usually to convey state i.e. Checkbox checked -> not checked
      '--icon-primary-color': 'Canvas' // foreground

    }
  }
});
var secondaryTransparentHcmStyles$1 = css$2({
  '@media screen and (forced-colors: active)': {
    '> svg': {
      '--icon-secondary-color': 'transparent' // background

    }
  }
});
/**
 * __Icon__
 *
 * An icon is used as a visual representation of common actions and commands to provide context.
 *
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)
 */

var Icon$3 = /*#__PURE__*/memo(function Icon(props) {
  var _ref = props,
      Glyph = _ref.glyph,
      dangerouslySetGlyph = _ref.dangerouslySetGlyph,
      _ref$primaryColor = _ref.primaryColor,
      primaryColor = _ref$primaryColor === void 0 ? 'currentColor' : _ref$primaryColor,
      secondaryColor = _ref.secondaryColor,
      size = _ref.size,
      testId = _ref.testId,
      label = _ref.label,
      width = _ref.width,
      height = _ref.height;
  var glyphProps = dangerouslySetGlyph ? {
    dangerouslySetInnerHTML: {
      __html: dangerouslySetGlyph
    }
  } : {
    children: Glyph ? jsx(Glyph, {
      role: "presentation"
    }) : null
  };
  var dimensions = getIconSize$1({
    width: width,
    height: height,
    size: size
  });

  var _useGlobalTheme = useGlobalTheme$1(),
      mode = _useGlobalTheme.mode;

  return jsx("span", _extends$d({
    "data-testid": testId,
    role: label ? 'img' : 'presentation',
    "aria-label": label ? label : undefined,
    "aria-hidden": label ? undefined : true,
    style: {
      '--icon-primary-color': primaryColor,
      '--icon-secondary-color': secondaryColor || getBackground$2(mode)
    }
  }, glyphProps, {
    css: [iconStyles$1, baseHcmStyles$1, primaryColor === secondaryColor && primaryEqualsSecondaryHcmStyles$1, secondaryColor === 'transparent' && secondaryTransparentHcmStyles$1, // NB: This can be resolved if this component, composes base SVG / and/or skeleton
    // We could then simplify how common styles are dealt with simply by encapsualting them
    // at their appropriate level and/or having a singular approach to css variables in the package
    dimensions && // eslint-disable-next-line @repo/internal/react/consistent-css-prop-usage
    css$2({
      width: dimensions.width,
      height: dimensions.height,
      '> svg': dimensions
    })]
  }));
});
var Icon$4 = Icon$3;

var base$1 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    'default': Icon$4,
    Icon: Icon$3
});

var require$$1$1 = /*@__PURE__*/getAugmentedNamespace(base$1);

Object.defineProperty(close, "__esModule", {
  value: true
});
var default_1$4 = close.default = void 0;

var _react$5 = _interopRequireDefault$5(React__default);

var _base$1 = require$$1$1;

function _interopRequireDefault$5(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const EditorCloseIcon = props => /*#__PURE__*/_react$5.default.createElement(_base$1.Icon, Object.assign({
  dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><path d="M15.185 7.4l-3.184 3.185-3.186-3.186a.507.507 0 00-.712.003l-.7.701a.496.496 0 00-.004.712l3.185 3.184L7.4 15.185a.507.507 0 00.004.712l.7.7c.206.207.516.2.712.004l3.186-3.185 3.184 3.185a.507.507 0 00.712-.004l.701-.7a.496.496 0 00.003-.712l-3.186-3.186 3.186-3.184a.507.507 0 00-.003-.712l-.7-.7a.508.508 0 00-.36-.153.5.5 0 00-.353.15z" fill="currentColor" fill-rule="evenodd"/></svg>`
}, props));

EditorCloseIcon.displayName = 'EditorCloseIcon';
var _default$4 = EditorCloseIcon;
default_1$4 = close.default = _default$4;

/**
 * Think of this as the motion equivalent of the @atlaskit/theme `grid()`.
 */
var durationStep = 25;
var smallDurationMs = durationStep * 4;

var easeIn = 'cubic-bezier(0.8,0,0,0.8)';

/**
 * Use for any programatic motions needed at runtime.
 * Will return `true` if the current user prefers reduced motion.
 * This is generally set through OS preferences/settings.
 */
var isReducedMotion = function isReducedMotion() {
  if (typeof window === 'undefined' || !('matchMedia' in window)) {
    return false;
  }

  var _window$matchMedia = window.matchMedia('(prefers-reduced-motion: reduce)'),
      matches = _window$matchMedia.matches;

  return matches;
};

var getHookDeps = function getHookDeps(opts) {
  switch (opts.cleanup) {
    case 'next-effect':
      return undefined;

    case 'unmount':
    default:
      return [];
  }
};
/**
 * Will return request animation frame as a function which will clean itself up.
 */


var useRequestAnimationFrame = function useRequestAnimationFrame() {
  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
    cleanup: 'unmount'
  };
  var frames = useRef([]);
  useEffect(function () {
    return function () {
      if (frames.current.length) {
        frames.current.forEach(function (id) {
          return cancelAnimationFrame(id);
        });
        frames.current = [];
      }
    }; // We dynamically set this so we either clean up on the next effect - or on unmount.
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, getHookDeps(opts));
  return useCallback$1(function (handler) {
    var id = requestAnimationFrame(function (time) {
      frames.current = frames.current.filter(function (frameId) {
        return frameId !== id;
      });
      handler(time);
    });
    frames.current.push(id);
  }, []);
};
/**
 * Will return set  timeout as a function which will clean itself up.
 */

var useSetTimeout = function useSetTimeout() {
  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
    cleanup: 'unmount'
  };
  var timeouts = useRef([]);
  useEffect(function () {
    return function () {
      if (timeouts.current.length) {
        timeouts.current.forEach(function (id) {
          return clearTimeout(id);
        });
        timeouts.current = [];
      }
    }; // We dynamically set this so we either clean up on the next effect - or on unmount.
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, getHookDeps(opts));
  return useCallback$1(function (handler, timeout) {
    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    var id = setTimeout.apply(void 0, [function () {
      timeouts.current = timeouts.current.filter(function (timeoutId) {
        return timeoutId !== id;
      });
      handler();
    }, timeout].concat(args));
    timeouts.current.push(id);
  }, []);
};

var useForceRender = function useForceRender() {
  var _useState = useState({}),
      _useState2 = _slicedToArray(_useState, 2),
      updateState = _useState2[1];

  var forceRender = useCallback$1(function () {
    return updateState({});
  }, []);
  return forceRender;
};

/**
 * Internally we will be playing with an element that will always have a key defined.
 */

// We define empty context here so the object doesn't change.
var emptyContext = {
  // Motions will always appear if not inside a exiting persistence component.
  appear: true,
  isExiting: false
};
var ExitingContext = /*#__PURE__*/createContext$1(emptyContext);

var isAnyPreviousKeysMissingFromCurrent = function isAnyPreviousKeysMissingFromCurrent(currentMap, previous) {
  for (var i = 0; i < previous.length; i++) {
    var element = previous[i];
    var _key = element.key;

    if (!currentMap[_key]) {
      return true;
    }
  }

  return false;
};
/**
 * This method will wrap any React element with a context provider. We're using context (instead of
 * cloneElement) so we can communicate between multiple elements without the need of prop drilling
 * (results in a better API for consumers).
 */


var wrapChildWithContextProvider = function wrapChildWithContextProvider(child) {
  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : emptyContext;
  return /*#__PURE__*/React__default.createElement(ExitingContext.Provider, {
    key: "".concat(child.key, "-provider"),
    value: value
  }, child);
};

var childrenToObj = function childrenToObj(children) {
  return children.reduce(function (acc, child) {
    acc[child.key] = child;
    return acc;
  }, {});
};

var spliceNewElementsIntoPrevious = function spliceNewElementsIntoPrevious(current, previous) {
  var splicedChildren = previous.concat([]);
  var previousMap = childrenToObj(previous);

  for (var i = 0; i < current.length; i++) {
    var child = current[i];
    var childIsNew = !previousMap[child.key];

    if (childIsNew) {
      // This will insert the new element after the previous element.
      splicedChildren.splice(i + 1, 0, child);
    }
  }

  return splicedChildren;
};
/**
 * This function will convert all children types to an array while also filtering out non-valid React elements.
 */


var childrenToArray = function childrenToArray(children) {
  var childrenAsArray = []; // We convert children to an array using this helper method as it will add keys to children that do not
  // have them, such as when we have hardcoded children that are conditionally rendered.

  Children.toArray(children).forEach(function (child) {
    // We ignore any boolean children to make our code a little more simple later on,
    // and also filter out any falsies (empty strings, nulls, and undefined).
    if (typeof child !== 'boolean' && Boolean(child)) {
      // Children WILL have a key after being forced into an array using the React.Children helper.
      childrenAsArray.push(child);
    }
  });
  return childrenAsArray;
};
/**
 * This handles the case when a render updates during an exit motion.
 * If any child is mounted again we removed them from the exiting children object and return true.
 */


var hasAnyExitingChildMountedAgain = function hasAnyExitingChildMountedAgain(exitingChildren, children) {
  var exitingChildMountedAgain = false;
  children.forEach(function (child) {
    if (exitingChildren.current[child.key]) {
      exitingChildMountedAgain = true;
      delete exitingChildren.current[child.key];
    }
  });
  return exitingChildMountedAgain;
};

var ExitingPersistence = /*#__PURE__*/memo(function (_ref) {
  var _ref$appear = _ref.appear,
      appearFromProp = _ref$appear === void 0 ? false : _ref$appear,
      childs = _ref.children,
      exitThenEnter = _ref.exitThenEnter;
  var children = childrenToArray(childs);
  var childrenObj = childrenToObj(children);
  var previousChildren = useRef([]);
  var persistedChildren = useRef([]);
  var forceRender = useForceRender();
  var exitingChildren = useRef({});
  var appear = useRef(appearFromProp);
  var defaultContextValue = useMemo$1(function () {
    return {
      appear: appear.current,
      isExiting: false
    };
  }, // React rules of hooks says this isn't needed because mutating appear won't cause a re-render.
  // While technically true - it will trigger this to make a new object on the _next_ render which is what we want.
  // Remove this or use appear instead of appear.current and you will notice a test breaks.
  // eslint-disable-next-line react-hooks/exhaustive-deps
  [appear.current]);

  if (isReducedMotion()) {
    return children;
  }

  if (!appear.current) {
    // We always want child motions to appear after the initial mount.
    appear.current = true;
  } // This entire block can't be an effect because we need it to run synchronously during a render
  // else when elements are being removed they will be remounted instead of being updated.


  if (previousChildren.current.length && isAnyPreviousKeysMissingFromCurrent(childrenObj, previousChildren.current)) {
    if (persistedChildren.current.length === 0 || hasAnyExitingChildMountedAgain(exitingChildren, children)) {
      persistedChildren.current = previousChildren.current;
    } // We have persisted children now set from previous children.
    // Let's update previous children so we have it available next render.


    previousChildren.current = children;
    return (exitThenEnter ? persistedChildren.current : spliceNewElementsIntoPrevious(children, persistedChildren.current)).map(function (child) {
      var currentChild = childrenObj[child.key];

      if (!currentChild) {
        // We've found an exiting child - mark it!
        exitingChildren.current[child.key] = true;
        return wrapChildWithContextProvider(child, {
          isExiting: true,
          appear: true,
          onFinish: function onFinish() {
            delete exitingChildren.current[child.key]; // We will only remove the exiting elements when any subsequent exiting elements have also finished.
            // Think of removing many items from a todo list - when removing a few over a few clicks we don't
            // want the list jumping around when they exit.

            if (Object.keys(exitingChildren.current).length === 0) {
              // Set previous children to nothing.
              // This let's us skip the next render check as it's assumed children and previous will be the same.
              previousChildren.current = [];
              persistedChildren.current = []; // Re-render after the element(s) have animated away which will end up rendering the latest children.

              forceRender();
            }
          }
        });
      } // This element isn't exiting.
      // Wrap context and let's continue on our way.


      return wrapChildWithContextProvider(currentChild, defaultContextValue);
    });
  } else {
    previousChildren.current = children;
  }

  return children.map(function (child) {
    return wrapChildWithContextProvider(child, defaultContextValue);
  });
});
var useExitingPersistence = function useExitingPersistence() {
  return useContext(ExitingContext);
};
ExitingPersistence.displayName = 'ExitingPersistence';
var ExitingPersistence$1 = ExitingPersistence;

/**
 * Needed to supress the SSR warning when running use layout effect on the server.
 */

var useLayoutEffect = typeof window === 'undefined' ? useEffect : useLayoutEffect$1;

/**
 * Will return a tuple of the element and the callback ref to set.
 * This is used as a work around for using `useRef` directly with Typescript
 * as the types don't flow through as one would expect.
 */
var useElementRef = function useElementRef() {
  var elementRef = useRef(null);
  var setRef = useCallback$1(function (ref) {
    elementRef.current = ref;
  }, []);
  return [elementRef.current, setRef];
};

var ShrinkOut = function ShrinkOut(_ref) {
  var children = _ref.children,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? smallDurationMs : _ref$duration,
      onFinish = _ref.onFinish;

  var _useElementRef = useElementRef(),
      _useElementRef2 = _slicedToArray(_useElementRef, 2),
      element = _useElementRef2[0],
      setElementRef = _useElementRef2[1];

  var exiting = useExitingPersistence();
  var requestAnimationFrame = useRequestAnimationFrame();
  var setTimeout = useSetTimeout();
  var direction = exiting.isExiting ? 'exiting' : 'entering';
  useLayoutEffect(function () {
    if (exiting.isExiting && element) {
      var newStyles = {
        // We fix both width and height because when changing box sizing to border-box.
        width: "".concat(element.offsetWidth, "px"),
        height: "".concat(element.offsetHeight, "px"),
        boxSizing: 'border-box',
        willChange: 'width,margin'
      };
      Object.assign(element.style, newStyles);
      requestAnimationFrame(function () {
        requestAnimationFrame(function () {
          var newStyles = {
            width: '0px',
            margin: '0px',
            // We animate margin down to zero so it doesn't take any space.
            transitionTimingFunction: easeIn,
            transitionDuration: "".concat(duration, "ms"),
            transitionProperty: 'width,margin'
          };
          Object.assign(element.style, newStyles);
          setTimeout(function () {
            exiting.onFinish && exiting.onFinish();
            onFinish && onFinish('exiting');
          }, duration);
        });
      });
    }
  });
  return children({
    ref: setElementRef
  }, direction);
};

var ShrinkOut$1 = ShrinkOut;

function mergeRefs() {
  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {
    refs[_key] = arguments[_key];
  }

  return function (ref) {
    refs.forEach(function (resolvableRef) {
      if (!resolvableRef) {
        return;
      }

      if (typeof resolvableRef === 'function') {
        resolvableRef(ref);
      } else {
        resolvableRef.current = ref;
      }
    });
  };
}

// "-moz-focus-inner" removes some inbuilt padding that Firefox adds (taken from reduced-ui-pack)
// the focus ring is red unless combined with hover, then uses default blue

var removeButtonStyles = function removeButtonStyles(_ref) {
  var backgroundColor = _ref.backgroundColor,
      backgroundColorHover = _ref.backgroundColorHover,
      focusBoxShadowColor = _ref.focusBoxShadowColor;
      _ref.hoverBoxShadowColor;
  return {
    position: 'absolute',
    right: 0,
    backgroundColor: backgroundColor,
    alignItems: 'center',
    alignSelf: 'center',
    appearance: 'none',
    border: 'none',
    borderRadius: defaultBorderRadius,
    color: N500$1,
    display: 'flex',
    justifyContent: 'center',
    height: '16px',
    margin: 0,
    padding: 0,
    cursor: 'pointer',
    '&::-moz-focus-inner': {
      border: 0,
      margin: 0,
      padding: 0
    },
    '&:focus': {
      boxShadow: "0 0 0 2px ".concat(focusBoxShadowColor, " inset"),
      outline: 'none'
    },
    '&:hover': {
      backgroundColor: "".concat(backgroundColorHover, " !important"),
      color: R500
    }
  };
};

function ownKeys$d(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$c(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$d(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$d(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var packageName$3 = "@atlaskit/tag";
var packageVersion$3 = "11.1.3";

var defaultBeforeRemoveAction = function defaultBeforeRemoveAction() {
  return true;
};

var noop$3 = function noop() {};

var TagStatus;

(function (TagStatus) {
  TagStatus["Showing"] = "showing";
  TagStatus["Removing"] = "removing";
  TagStatus["Removed"] = "removed";
})(TagStatus || (TagStatus = {}));

var InnerRemovableTag = /*#__PURE__*/forwardRef(function (props, ref) {
  var _useState = useState(TagStatus.Showing),
      _useState2 = _slicedToArray(_useState, 2),
      status = _useState2[0],
      setStatus = _useState2[1];

  var _props$appearance = props.appearance,
      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,
      _props$elemBefore = props.elemBefore,
      elemBefore = _props$elemBefore === void 0 ? null : _props$elemBefore,
      _props$isRemovable = props.isRemovable,
      isRemovable = _props$isRemovable === void 0 ? true : _props$isRemovable,
      _props$text = props.text,
      text = _props$text === void 0 ? '' : _props$text,
      _props$color = props.color,
      color = _props$color === void 0 ? 'standard' : _props$color,
      _props$mode = props.mode,
      mode = _props$mode === void 0 ? 'light' : _props$mode,
      href = props.href,
      removeButtonLabel = props.removeButtonLabel,
      testId = props.testId,
      _props$onBeforeRemove = props.onBeforeRemoveAction,
      onBeforeRemoveAction = _props$onBeforeRemove === void 0 ? defaultBeforeRemoveAction : _props$onBeforeRemove,
      _props$onAfterRemoveA = props.onAfterRemoveAction,
      onAfterRemoveAction = _props$onAfterRemoveA === void 0 ? noop$3 : _props$onAfterRemoveA;
  var isRounded = appearance === 'rounded';
  var isLink = Boolean(href);
  var onAfterRemoveActionWithAnalytics = useCallbackWithAnalytics(onAfterRemoveAction, {
    action: 'removed',
    actionSubject: 'tag',
    attributes: {
      componentName: 'tag',
      packageName: packageName$3,
      packageVersion: packageVersion$3
    }
  }, 'atlaskit');
  var handleRemoveComplete = useCallback$1(function () {
    onAfterRemoveActionWithAnalytics(text);
    setStatus(TagStatus.Removed);
  }, [onAfterRemoveActionWithAnalytics, text]);
  var handleRemoveRequest = useCallback$1(function () {
    if (onBeforeRemoveAction && onBeforeRemoveAction()) {
      handleRemoveComplete();
    }
  }, [handleRemoveComplete, onBeforeRemoveAction]);
  var onKeyPress = useCallback$1(function (e) {
    var spacebarOrEnter = e.key === ' ' || e.key === 'Enter';

    if (spacebarOrEnter) {
      e.stopPropagation();
      handleRemoveRequest();
    }
  }, [handleRemoveRequest]);
  var removingTag = useCallback$1(function () {
    return setStatus(TagStatus.Removing);
  }, []);
  var showingTag = useCallback$1(function () {
    return setStatus(TagStatus.Showing);
  }, []);

  var _useMemo = useMemo$1(function () {
    return getThemeColors(color, mode, true);
  }, [color, mode]),
      chromeColors = _useMemo.chromeColors,
      chromeLinkColors = _useMemo.chromeLinkColors,
      buttonColors = _useMemo.buttonColors,
      linkHoverColor = _useMemo.linkHoverColor;

  var chromeContainerForLinkStyles = [chromeLinkStyles(chromeLinkColors), isRounded ? roundedBorderStyles : undefined];
  var chromeContainerStyles = [chromeStyles(_objectSpread$c({}, chromeColors)), isRounded ? roundedBorderStyles : undefined];
  var removeButton = isRemovable ? jsx("button", {
    css: [removeButtonStyles(_objectSpread$c({}, buttonColors)), isRounded ? roundedBorderStyles : undefined],
    tabIndex: 0,
    "aria-label": "".concat(removeButtonLabel, " ").concat(text),
    onClick: handleRemoveRequest,
    onFocus: removingTag,
    onBlur: showingTag,
    onKeyPress: onKeyPress,
    type: "button",
    "data-testid": "close-button-".concat(testId)
  }, jsx(default_1$4, {
    label: "close tag",
    size: "small"
  })) : undefined;
  var tagCss = [].concat(chromeContainerStyles, [isLink ? chromeContainerForLinkStyles : undefined]);
  var content = jsx(Content$6, _extends$d({}, props, {
    isRemovable: isRemovable,
    isLink: isLink,
    isRounded: isRounded,
    linkHoverColor: linkHoverColor
  }));
  return jsx(ExitingPersistence$1, null, !(status === TagStatus.Removed) && jsx(ShrinkOut$1, null, function (motion) {
    return jsx(BaseTag$1, {
      ref: mergeRefs(motion.ref, ref),
      testId: testId,
      tagCss: tagCss,
      "data-removable": true,
      "data-removing": status === TagStatus.Removing,
      before: jsx(Before$3, {
        isRounded: isRounded,
        elemBefore: elemBefore,
        styles: chromeColors
      }),
      contentElement: content,
      after: removeButton
    });
  }));
});
var RemovableTag = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function (props, ref) {
  return jsx(GlobalTheme$1.Consumer, null, function (tokens) {
    return jsx(InnerRemovableTag, _extends$d({}, props, {
      mode: tokens.mode,
      ref: ref
    }));
  });
}));
var AkTag = RemovableTag;

var css_248z$F = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.styled-atlaskit-tag{display:inline;margin-right:.5rem}.styled-atlaskit-tag>span{background-color:#0b6cff;color:#fff;height:25px;margin:0}.styled-atlaskit-tag>span:hover{background-color:#4c93ff;color:#fff}.styled-atlaskit-tag>span:hover button{background-color:#4c93ff}.styled-atlaskit-tag>span>span{margin:auto 5px;padding-right:0}.styled-atlaskit-tag>span>span:hover{background-color:#4c93ff;color:#fff}.styled-atlaskit-tag>span button{background-color:#0b6cff;margin-right:5px;position:relative}.styled-atlaskit-tag>span button:hover{background-color:#4c93ff!important}.styled-atlaskit-tag>span button span{color:#fff;height:24px;width:24px}.styled-atlaskit-tag>span button span>svg{height:24px;width:24px}.styled-atlaskit-tag:not(.isRemovable)>span>span{padding-right:4px}";
styleInject(css_248z$F);

var Tag = function (_a) {
    var props = __rest$8(_a, []);
    return (jsx$1("div", __assign$a({ className: classNames$1("styled-atlaskit-tag", { isRemovable: props.isRemovable }) }, { children: jsx$1(AkTag, __assign$a({}, props), void 0) }), void 0));
};

var css_248z$E = ".styled-atlaskit-tag-list{display:flex;flex-direction:row;flex-wrap:wrap}.styled-atlaskit-tag-list .styled-atlaskit-tag:not(:last-child){margin-right:8px}";
styleInject(css_248z$E);

var TagList = function (_a) {
    var children = _a.children;
    return jsx$1("div", __assign$a({ className: "styled-atlaskit-tag-list" }, { children: children }), void 0);
};

function ownKeys$c(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$b(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$c(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$c(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var AnalyticsEvent$2 = /*#__PURE__*/function () {
  function AnalyticsEvent(props) {
    var _this = this;

    _classCallCheck$8(this, AnalyticsEvent);

    _defineProperty$3(this, "clone", function () {
      // just a shallow clone, don't change sub refs unless you want to
      // affect the original's too
      var payload = _objectSpread$b({}, _this.payload);

      return new AnalyticsEvent({
        payload: payload
      });
    });

    this.payload = props.payload;
  }

  _createClass$8(AnalyticsEvent, [{
    key: "update",
    value: function update(updater) {
      if (typeof updater === 'function') {
        this.payload = updater(this.payload);
      }

      if (_typeof$3(updater) === 'object') {
        this.payload = _objectSpread$b(_objectSpread$b({}, this.payload), updater);
      }

      return this;
    }
  }]);

  return AnalyticsEvent;
}();

function _createSuper$d(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$d(); return function _createSuperInternal() { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$8(this, result); }; }

function _isNativeReflectConstruct$d() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var UIAnalyticsEvent$2 = /*#__PURE__*/function (_AnalyticsEvent) {
  _inherits$8(UIAnalyticsEvent, _AnalyticsEvent);

  var _super = _createSuper$d(UIAnalyticsEvent);

  function UIAnalyticsEvent(props) {
    var _this;

    _classCallCheck$8(this, UIAnalyticsEvent);

    _this = _super.call(this, props);

    _defineProperty$3(_assertThisInitialized$4(_this), "clone", function () {
      if (_this.hasFired) {
        if (process.env.NODE_ENV !== 'production' && !process.env.CI) {
          // eslint-disable-next-line no-console
          console.warn("Cannot clone an event after it's been fired.");
        }

        return null;
      }

      var context = _toConsumableArray$2(_this.context);

      var handlers = _toConsumableArray$2(_this.handlers);
      /**
       * A hacky "deep clone" of the object. This is limited in that it wont
       * support functions, regexs, Maps, Sets, etc, but none of those need to
       * be represented in our payload.
       */


      var payload = JSON.parse(JSON.stringify(_this.payload));
      return new UIAnalyticsEvent({
        context: context,
        handlers: handlers,
        payload: payload
      });
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "fire", function (channel) {
      if (_this.hasFired) {
        if (process.env.NODE_ENV !== 'production' && !process.env.CI) {
          // eslint-disable-next-line no-console
          console.warn('Cannot fire an event twice.');
        }

        return;
      }

      _this.handlers.forEach(function (handler) {
        return handler(_assertThisInitialized$4(_this), channel);
      });

      _this.hasFired = true;
    });

    _this.context = props.context || [];
    _this.handlers = props.handlers || [];
    _this.hasFired = false;
    return _this;
  }

  _createClass$8(UIAnalyticsEvent, [{
    key: "update",
    value: function update(updater) {
      if (this.hasFired) {
        if (process.env.NODE_ENV !== 'production' && !process.env.CI) {
          // eslint-disable-next-line no-console
          console.warn("Cannot update an event after it's been fired.");
        }

        return this;
      }

      return _get(_getPrototypeOf$2(UIAnalyticsEvent.prototype), "update", this).call(this, updater);
    }
  }]);

  return UIAnalyticsEvent;
}(AnalyticsEvent$2);

var useAnalyticsContext$2 = function useAnalyticsContext() {
  return useContext(AnalyticsNextContext$1);
};

var useTrackedRef$2 = function useTrackedRef(value) {
  var ref = useRef(value);
  useEffect(function () {
    ref.current = value;
  }, [value]);
  return ref;
};

function _createSuper$c(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$c(); return function _createSuperInternal() { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$8(this, result); }; }

function _isNativeReflectConstruct$c() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var ContextTypes$2 = {
  getAtlaskitAnalyticsContext: PropTypes$3.func,
  getAtlaskitAnalyticsEventHandlers: PropTypes$3.func
};

var noop$2 = function noop() {
  return [];
}; // eslint-disable-next-line @repo/internal/react/no-class-components


var AnalyticsContext$a = /*#__PURE__*/function (_Component) {
  _inherits$8(AnalyticsContext, _Component);

  var _super = _createSuper$c(AnalyticsContext);

  function AnalyticsContext(props) {
    var _this;

    _classCallCheck$8(this, AnalyticsContext);

    _this = _super.call(this, props);

    _defineProperty$3(_assertThisInitialized$4(_this), "getChildContext", function () {
      return {
        getAtlaskitAnalyticsContext: _this.getAnalyticsContext
      };
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "getAnalyticsContext", function () {
      var data = _this.props.data;
      var _this$context$getAtla = _this.context.getAtlaskitAnalyticsContext,
          getAtlaskitAnalyticsContext = _this$context$getAtla === void 0 ? noop$2 : _this$context$getAtla;
      return [].concat(_toConsumableArray$2(getAtlaskitAnalyticsContext()), [data]);
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "getAnalyticsEventHandlers", function () {
      var _this$context$getAtla2 = _this.context.getAtlaskitAnalyticsEventHandlers,
          getAtlaskitAnalyticsEventHandlers = _this$context$getAtla2 === void 0 ? noop$2 : _this$context$getAtla2;
      return getAtlaskitAnalyticsEventHandlers();
    });

    _this.contextValue = {
      getAtlaskitAnalyticsContext: _this.getAnalyticsContext,
      getAtlaskitAnalyticsEventHandlers: _this.getAnalyticsEventHandlers
    };
    return _this;
  }

  _createClass$8(AnalyticsContext, [{
    key: "render",
    value: function render() {
      var children = this.props.children;
      return /*#__PURE__*/React__default.createElement(AnalyticsNextContext$1.Provider, {
        value: this.contextValue
      }, children);
    }
  }]);

  return AnalyticsContext;
}(Component$1);

_defineProperty$3(AnalyticsContext$a, "contextTypes", ContextTypes$2);

_defineProperty$3(AnalyticsContext$a, "childContextTypes", ContextTypes$2);

var AnalyticsContext$b = AnalyticsContext$a;

var AnalyticsContext$9 = function AnalyticsContext(_ref) {
  var data = _ref.data,
      children = _ref.children;
  var dataRef = useTrackedRef$2(data);
  var analyticsContext = useAnalyticsContext$2();
  var getAtlaskitAnalyticsContext = useCallback$1(function () {
    return [].concat(_toConsumableArray$2(analyticsContext.getAtlaskitAnalyticsContext()), [dataRef.current]);
  }, [analyticsContext, dataRef]);
  var value = useMemo$1(function () {
    return {
      getAtlaskitAnalyticsContext: getAtlaskitAnalyticsContext,
      getAtlaskitAnalyticsEventHandlers: analyticsContext.getAtlaskitAnalyticsEventHandlers
    };
  }, [analyticsContext, getAtlaskitAnalyticsContext]);
  return /*#__PURE__*/React__default.createElement(AnalyticsNextContext$1.Provider, {
    value: value
  }, children);
};

var ModernAnalyticsContext$2 = AnalyticsContext$9;

var ExportedAnalyticsContext$2;

if (typeof process !== 'undefined' && process.env['ANALYTICS_NEXT_MODERN_CONTEXT']) {
  ExportedAnalyticsContext$2 = ModernAnalyticsContext$2;
} else {
  ExportedAnalyticsContext$2 = AnalyticsContext$b;
}

var AnalyticsContext$8 = ExportedAnalyticsContext$2;

function ownKeys$b(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$a(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$b(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$b(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var withAnalyticsContext$4 = function withAnalyticsContext(defaultData) {
  return function (WrappedComponent) {
    var WithAnalyticsContext = /*#__PURE__*/forwardRef(function (_ref, ref) {
      var analyticsContext = _ref.analyticsContext,
          rest = _objectWithoutProperties$3(_ref, ["analyticsContext"]);

      var analyticsData = useMemo$1(function () {
        return _objectSpread$a(_objectSpread$a({}, defaultData), analyticsContext);
      }, [analyticsContext]);
      return /*#__PURE__*/React__default.createElement(AnalyticsContext$8, {
        data: analyticsData
      }, /*#__PURE__*/React__default.createElement(WrappedComponent, _extends$d({}, rest, {
        ref: ref
      })));
    }); // @ts-ignore

    WithAnalyticsContext.displayName = "WithAnalyticsContext(".concat( // @ts-ignore disneyName doesn't exist on type
    WrappedComponent.displayName || WrappedComponent.name, ")");
    return WithAnalyticsContext;
  };
};

var withAnalyticsContext$5 = withAnalyticsContext$4;

function useAnalyticsEvents$2() {
  var analyticsContext = useAnalyticsContext$2();
  var createAnalyticsEvent = useCallbackOne(function (payload) {
    return new UIAnalyticsEvent$2({
      context: analyticsContext.getAtlaskitAnalyticsContext(),
      handlers: analyticsContext.getAtlaskitAnalyticsEventHandlers(),
      payload: payload
    });
  }, [analyticsContext]);
  return {
    createAnalyticsEvent: createAnalyticsEvent
  };
}

function ownKeys$a(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$9(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$a(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$a(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
function usePatchedProps$2() {
  var createEventMap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var wrappedComponentProps = arguments.length > 1 ? arguments[1] : undefined;

  var _useAnalyticsEvents = useAnalyticsEvents$2(),
      createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;

  var handlerCache = useRef({});
  var patchedProps = useMemo$1(function () {
    var cache = handlerCache.current; // Clean up no longer used handlers in cache

    Object.keys(cache).filter(function (key) {
      return !(key in createEventMap);
    }).forEach(function (key) {
      return delete cache[key];
    });
    return Object.keys(createEventMap).reduce(function (p, k) {
      var eventCreator = createEventMap[k];

      if (!['object', 'function'].includes(_typeof$3(eventCreator))) {
        return p;
      }

      var propValue = wrappedComponentProps[k];

      if (k in cache && cache[k].eventCreator === eventCreator && cache[k].propValue === propValue) {
        return _objectSpread$9(_objectSpread$9({}, p), {}, _defineProperty$3({}, k, cache[k].wrappedCallback));
      }

      var wrappedCallback = function wrappedCallback() {
        var analyticsEvent = typeof eventCreator === 'function' ? eventCreator(createAnalyticsEvent, wrappedComponentProps) : createAnalyticsEvent(eventCreator);

        if (propValue && typeof propValue === 'function') {
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          propValue.apply(void 0, args.concat([analyticsEvent]));
        }
      };

      cache[k] = {
        eventCreator: eventCreator,
        wrappedCallback: wrappedCallback,
        propValue: propValue
      };
      return _objectSpread$9(_objectSpread$9({}, p), {}, _defineProperty$3({}, k, wrappedCallback));
    }, {});
  }, [createEventMap, wrappedComponentProps, createAnalyticsEvent, handlerCache]);
  return {
    patchedEventProps: patchedProps
  };
}

var withAnalyticsEvents$4 = function withAnalyticsEvents() {
  var createEventMap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return function (WrappedComponent) {
    var WithAnalyticsEvents = /*#__PURE__*/forwardRef(function (props, ref) {
      var _usePatchedProps = usePatchedProps$2(createEventMap, props),
          patchedEventProps = _usePatchedProps.patchedEventProps;

      var _useAnalyticsEvents = useAnalyticsEvents$2(),
          createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;

      return /*#__PURE__*/React__default.createElement(WrappedComponent, _extends$d({}, props, patchedEventProps, {
        createAnalyticsEvent: createAnalyticsEvent,
        ref: ref
      }));
    }); // @ts-ignore

    WithAnalyticsEvents.displayName = "WithAnalyticsEvents(".concat( // @ts-ignore disneyName doesn't exist on type
    WrappedComponent.displayName || WrappedComponent.name, ")");
    return WithAnalyticsEvents;
  };
};

var withAnalyticsEvents$5 = withAnalyticsEvents$4;

var createAndFireEvent$2 = (function (channel) {
  return function (payload) {
    return function (createAnalyticsEvent) {
      var consumerEvent = createAnalyticsEvent(payload);
      var clonedEvent = consumerEvent.clone();

      if (clonedEvent) {
        clonedEvent.fire(channel);
      }

      return consumerEvent;
    };
  };
});

function ownKeys$9(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$8(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$9(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$9(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var AnalyticsEvent$1 = /*#__PURE__*/function () {
  function AnalyticsEvent(props) {
    var _this = this;

    _classCallCheck$8(this, AnalyticsEvent);

    _defineProperty$3(this, "clone", function () {
      // just a shallow clone, don't change sub refs unless you want to
      // affect the original's too
      var payload = _objectSpread$8({}, _this.payload);

      return new AnalyticsEvent({
        payload: payload
      });
    });

    this.payload = props.payload;
  }

  _createClass$8(AnalyticsEvent, [{
    key: "update",
    value: function update(updater) {
      if (typeof updater === 'function') {
        this.payload = updater(this.payload);
      }

      if (_typeof$3(updater) === 'object') {
        this.payload = _objectSpread$8(_objectSpread$8({}, this.payload), updater);
      }

      return this;
    }
  }]);

  return AnalyticsEvent;
}();

function _createSuper$b(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$b(); return function _createSuperInternal() { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$8(this, result); }; }

function _isNativeReflectConstruct$b() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var UIAnalyticsEvent$1 = /*#__PURE__*/function (_AnalyticsEvent) {
  _inherits$8(UIAnalyticsEvent, _AnalyticsEvent);

  var _super = _createSuper$b(UIAnalyticsEvent);

  function UIAnalyticsEvent(props) {
    var _this;

    _classCallCheck$8(this, UIAnalyticsEvent);

    _this = _super.call(this, props);

    _defineProperty$3(_assertThisInitialized$4(_this), "clone", function () {
      if (_this.hasFired) {
        if (process.env.NODE_ENV !== 'production' && !process.env.CI) {
          // eslint-disable-next-line no-console
          console.warn("Cannot clone an event after it's been fired.");
        }

        return null;
      }

      var context = _toConsumableArray$2(_this.context);

      var handlers = _toConsumableArray$2(_this.handlers);
      /**
       * A hacky "deep clone" of the object. This is limited in that it wont
       * support functions, regexs, Maps, Sets, etc, but none of those need to
       * be represented in our payload.
       */


      var payload = JSON.parse(JSON.stringify(_this.payload));
      return new UIAnalyticsEvent({
        context: context,
        handlers: handlers,
        payload: payload
      });
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "fire", function (channel) {
      if (_this.hasFired) {
        if (process.env.NODE_ENV !== 'production' && !process.env.CI) {
          // eslint-disable-next-line no-console
          console.warn('Cannot fire an event twice.');
        }

        return;
      }

      _this.handlers.forEach(function (handler) {
        return handler(_assertThisInitialized$4(_this), channel);
      });

      _this.hasFired = true;
    });

    _this.context = props.context || [];
    _this.handlers = props.handlers || [];
    _this.hasFired = false;
    return _this;
  }

  _createClass$8(UIAnalyticsEvent, [{
    key: "update",
    value: function update(updater) {
      if (this.hasFired) {
        if (process.env.NODE_ENV !== 'production' && !process.env.CI) {
          // eslint-disable-next-line no-console
          console.warn("Cannot update an event after it's been fired.");
        }

        return this;
      }

      return _get(_getPrototypeOf$2(UIAnalyticsEvent.prototype), "update", this).call(this, updater);
    }
  }]);

  return UIAnalyticsEvent;
}(AnalyticsEvent$1);

var useAnalyticsContext$1 = function useAnalyticsContext() {
  return useContext(AnalyticsNextContext$1);
};

var useTrackedRef$1 = function useTrackedRef(value) {
  var ref = useRef(value);
  useEffect(function () {
    ref.current = value;
  }, [value]);
  return ref;
};

function _createSuper$a(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$a(); return function _createSuperInternal() { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$8(this, result); }; }

function _isNativeReflectConstruct$a() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var ContextTypes$1 = {
  getAtlaskitAnalyticsContext: PropTypes$3.func,
  getAtlaskitAnalyticsEventHandlers: PropTypes$3.func
};

var noop$1 = function noop() {
  return [];
}; // eslint-disable-next-line @repo/internal/react/no-class-components


var AnalyticsContext$6 = /*#__PURE__*/function (_Component) {
  _inherits$8(AnalyticsContext, _Component);

  var _super = _createSuper$a(AnalyticsContext);

  function AnalyticsContext(props) {
    var _this;

    _classCallCheck$8(this, AnalyticsContext);

    _this = _super.call(this, props);

    _defineProperty$3(_assertThisInitialized$4(_this), "getChildContext", function () {
      return {
        getAtlaskitAnalyticsContext: _this.getAnalyticsContext
      };
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "getAnalyticsContext", function () {
      var data = _this.props.data;
      var _this$context$getAtla = _this.context.getAtlaskitAnalyticsContext,
          getAtlaskitAnalyticsContext = _this$context$getAtla === void 0 ? noop$1 : _this$context$getAtla;
      return [].concat(_toConsumableArray$2(getAtlaskitAnalyticsContext()), [data]);
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "getAnalyticsEventHandlers", function () {
      var _this$context$getAtla2 = _this.context.getAtlaskitAnalyticsEventHandlers,
          getAtlaskitAnalyticsEventHandlers = _this$context$getAtla2 === void 0 ? noop$1 : _this$context$getAtla2;
      return getAtlaskitAnalyticsEventHandlers();
    });

    _this.contextValue = {
      getAtlaskitAnalyticsContext: _this.getAnalyticsContext,
      getAtlaskitAnalyticsEventHandlers: _this.getAnalyticsEventHandlers
    };
    return _this;
  }

  _createClass$8(AnalyticsContext, [{
    key: "render",
    value: function render() {
      var children = this.props.children;
      return /*#__PURE__*/React__default.createElement(AnalyticsNextContext$1.Provider, {
        value: this.contextValue
      }, children);
    }
  }]);

  return AnalyticsContext;
}(Component$1);

_defineProperty$3(AnalyticsContext$6, "contextTypes", ContextTypes$1);

_defineProperty$3(AnalyticsContext$6, "childContextTypes", ContextTypes$1);

var AnalyticsContext$7 = AnalyticsContext$6;

var AnalyticsContext$5 = function AnalyticsContext(_ref) {
  var data = _ref.data,
      children = _ref.children;
  var dataRef = useTrackedRef$1(data);
  var analyticsContext = useAnalyticsContext$1();
  var getAtlaskitAnalyticsContext = useCallback$1(function () {
    return [].concat(_toConsumableArray$2(analyticsContext.getAtlaskitAnalyticsContext()), [dataRef.current]);
  }, [analyticsContext, dataRef]);
  var value = useMemo$1(function () {
    return {
      getAtlaskitAnalyticsContext: getAtlaskitAnalyticsContext,
      getAtlaskitAnalyticsEventHandlers: analyticsContext.getAtlaskitAnalyticsEventHandlers
    };
  }, [analyticsContext, getAtlaskitAnalyticsContext]);
  return /*#__PURE__*/React__default.createElement(AnalyticsNextContext$1.Provider, {
    value: value
  }, children);
};

var ModernAnalyticsContext$1 = AnalyticsContext$5;

var ExportedAnalyticsContext$1;

if (typeof process !== 'undefined' && process.env['ANALYTICS_NEXT_MODERN_CONTEXT']) {
  ExportedAnalyticsContext$1 = ModernAnalyticsContext$1;
} else {
  ExportedAnalyticsContext$1 = AnalyticsContext$7;
}

var AnalyticsContext$4 = ExportedAnalyticsContext$1;

function ownKeys$8(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$7(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$8(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$8(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var withAnalyticsContext$2 = function withAnalyticsContext(defaultData) {
  return function (WrappedComponent) {
    var WithAnalyticsContext = /*#__PURE__*/forwardRef(function (_ref, ref) {
      var analyticsContext = _ref.analyticsContext,
          rest = _objectWithoutProperties$3(_ref, ["analyticsContext"]);

      var analyticsData = useMemo$1(function () {
        return _objectSpread$7(_objectSpread$7({}, defaultData), analyticsContext);
      }, [analyticsContext]);
      return /*#__PURE__*/React__default.createElement(AnalyticsContext$4, {
        data: analyticsData
      }, /*#__PURE__*/React__default.createElement(WrappedComponent, _extends$d({}, rest, {
        ref: ref
      })));
    }); // @ts-ignore

    WithAnalyticsContext.displayName = "WithAnalyticsContext(".concat( // @ts-ignore disneyName doesn't exist on type
    WrappedComponent.displayName || WrappedComponent.name, ")");
    return WithAnalyticsContext;
  };
};

var withAnalyticsContext$3 = withAnalyticsContext$2;

function useAnalyticsEvents$1() {
  var analyticsContext = useAnalyticsContext$1();
  var createAnalyticsEvent = useCallbackOne(function (payload) {
    return new UIAnalyticsEvent$1({
      context: analyticsContext.getAtlaskitAnalyticsContext(),
      handlers: analyticsContext.getAtlaskitAnalyticsEventHandlers(),
      payload: payload
    });
  }, [analyticsContext]);
  return {
    createAnalyticsEvent: createAnalyticsEvent
  };
}

function ownKeys$7(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$6(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$7(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$7(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
function usePatchedProps$1() {
  var createEventMap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var wrappedComponentProps = arguments.length > 1 ? arguments[1] : undefined;

  var _useAnalyticsEvents = useAnalyticsEvents$1(),
      createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;

  var handlerCache = useRef({});
  var patchedProps = useMemo$1(function () {
    var cache = handlerCache.current; // Clean up no longer used handlers in cache

    Object.keys(cache).filter(function (key) {
      return !(key in createEventMap);
    }).forEach(function (key) {
      return delete cache[key];
    });
    return Object.keys(createEventMap).reduce(function (p, k) {
      var eventCreator = createEventMap[k];

      if (!['object', 'function'].includes(_typeof$3(eventCreator))) {
        return p;
      }

      var propValue = wrappedComponentProps[k];

      if (k in cache && cache[k].eventCreator === eventCreator && cache[k].propValue === propValue) {
        return _objectSpread$6(_objectSpread$6({}, p), {}, _defineProperty$3({}, k, cache[k].wrappedCallback));
      }

      var wrappedCallback = function wrappedCallback() {
        var analyticsEvent = typeof eventCreator === 'function' ? eventCreator(createAnalyticsEvent, wrappedComponentProps) : createAnalyticsEvent(eventCreator);

        if (propValue && typeof propValue === 'function') {
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          propValue.apply(void 0, args.concat([analyticsEvent]));
        }
      };

      cache[k] = {
        eventCreator: eventCreator,
        wrappedCallback: wrappedCallback,
        propValue: propValue
      };
      return _objectSpread$6(_objectSpread$6({}, p), {}, _defineProperty$3({}, k, wrappedCallback));
    }, {});
  }, [createEventMap, wrappedComponentProps, createAnalyticsEvent, handlerCache]);
  return {
    patchedEventProps: patchedProps
  };
}

var withAnalyticsEvents$2 = function withAnalyticsEvents() {
  var createEventMap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return function (WrappedComponent) {
    var WithAnalyticsEvents = /*#__PURE__*/forwardRef(function (props, ref) {
      var _usePatchedProps = usePatchedProps$1(createEventMap, props),
          patchedEventProps = _usePatchedProps.patchedEventProps;

      var _useAnalyticsEvents = useAnalyticsEvents$1(),
          createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;

      return /*#__PURE__*/React__default.createElement(WrappedComponent, _extends$d({}, props, patchedEventProps, {
        createAnalyticsEvent: createAnalyticsEvent,
        ref: ref
      }));
    }); // @ts-ignore

    WithAnalyticsEvents.displayName = "WithAnalyticsEvents(".concat( // @ts-ignore disneyName doesn't exist on type
    WrappedComponent.displayName || WrappedComponent.name, ")");
    return WithAnalyticsEvents;
  };
};

var withAnalyticsEvents$3 = withAnalyticsEvents$2;

var createAndFireEvent$1 = (function (channel) {
  return function (payload) {
    return function (createAnalyticsEvent) {
      var consumerEvent = createAnalyticsEvent(payload);
      var clonedEvent = consumerEvent.clone();

      if (clonedEvent) {
        clonedEvent.fire(channel);
      }

      return consumerEvent;
    };
  };
});

var constantModifiers = [{
  name: 'flip',
  options: {
    flipVariations: false,
    padding: 5,
    boundary: 'clippingParents',
    rootBoundary: 'viewport'
  }
}, {
  name: 'preventOverflow',
  options: {
    padding: 5,
    rootBoundary: 'document'
  }
}];

function defaultChildrenFn() {
  return null;
}

var defaultOffset = [0, 8];
function Popper$3(_ref) {
  var _ref$children = _ref.children,
      children = _ref$children === void 0 ? defaultChildrenFn : _ref$children,
      _ref$offset = _ref.offset,
      offset = _ref$offset === void 0 ? defaultOffset : _ref$offset,
      _ref$placement = _ref.placement,
      placement = _ref$placement === void 0 ? 'bottom-start' : _ref$placement,
      _ref$referenceElement = _ref.referenceElement,
      referenceElement = _ref$referenceElement === void 0 ? undefined : _ref$referenceElement,
      modifiers = _ref.modifiers,
      _ref$strategy = _ref.strategy,
      strategy = _ref$strategy === void 0 ? 'fixed' : _ref$strategy;

  var _offset = _slicedToArray(offset, 2),
      offsetX = _offset[0],
      offsetY = _offset[1];

  // Merge a new offset modifier only if new offset values passed in
  var internalModifiers = useMemo$1(function () {
    var offsetModifier = {
      name: 'offset',
      options: {
        offset: [offsetX, offsetY]
      }
    };
    return [].concat(constantModifiers, [offsetModifier]);
  }, [offsetX, offsetY]); // Merge custom props and memoize

  var mergedModifiers = useMemo$1(function () {
    if (modifiers == null) {
      return internalModifiers;
    }

    return [].concat(_toConsumableArray$2(internalModifiers), _toConsumableArray$2(modifiers));
  }, [internalModifiers, modifiers]);
  return /*#__PURE__*/React__default.createElement(Popper$4, {
    modifiers: mergedModifiers,
    placement: placement,
    strategy: strategy,
    referenceElement: referenceElement
  }, children);
}

// ideally this would be fetched from ../constants but that causes a
// circular dep loop. This will be refactored as part of a breaking
// change in the future.
var DEFAULT_THEME_MODE$2 = 'light';
var THEME_MODES$2 = ['light', 'dark']; // Resolves the different types of theme objects in the current API

function getTheme$2(props) {
  if (props && props.theme) {
    // Theme is the global Atlaskit theme
    if ('__ATLASKIT_THEME__' in props.theme) {
      return props.theme.__ATLASKIT_THEME__;
    } // User has provided alternative modes
    else if ('mode' in props.theme && THEME_MODES$2.includes(props.theme.mode)) {
        return props.theme;
      }
  } // If format not supported (or no theme provided), return standard theme


  return {
    mode: DEFAULT_THEME_MODE$2
  };
}

/* eslint-disable prefer-rest-params */

// Unpack custom variants, and get correct value for the current theme
function themedVariants$2(variantProp, variants) {
  return function (props) {
    var theme = getTheme$2(props);

    if (props && props[variantProp] && variants) {
      var modes = variants[props[variantProp]];

      if (modes && modes[theme.mode]) {
        var value = modes[theme.mode];

        if (value) {
          return value;
        } // TS believes value can be undefined

      }
    }

    return '';
  };
}

function themed$2(modesOrVariant, variantModes) {
  if (typeof modesOrVariant === 'string') {
    return themedVariants$2(modesOrVariant, variantModes);
  }

  var modes = modesOrVariant;
  return function (props) {
    // Get theme from the user's props
    var theme = getTheme$2(props); // User isn't required to provide both light and dark values

    if (theme.mode in modes) {
      var value = modes[theme.mode]; // TS believes value can be undefined

      if (value) {
        return value;
      }
    }

    return '';
  };
}

var R300 = '#FF5630';
var R400 = '#DE350B';
var Y300 = '#FFAB00';
var B75 = '#B3D4FF';
var B100 = '#4C9AFF';

var N0$1 = '#FFFFFF';
var N10 = '#FAFBFC';
var N20 = '#F4F5F7';
var N30 = '#EBECF0';
var N40 = '#DFE1E6';
var N60 = '#B3BAC5';
var N70$1 = '#A5ADBA';
var N200 = '#6B778C';
var N500 = '#42526E';

var N900 = '#091E42'; // Each tint is made of N900 and an alpha channel
var N50A = 'rgba(9, 30, 66, 0.25)';
var N60A = 'rgba(9, 30, 66, 0.31)';

var DN900 = '#E6EDFA';
var DN600 = '#B8C7E0';
var DN500 = '#ABBBD6';
var DN300 = '#8C9CB8';
var DN90$1 = '#56637A';
var DN50 = '#283447';
var DN40 = '#202B3D';
var DN30$1 = '#1B2638';
var DN20 = '#121A29';
var DN10 = '#0E1624'; // ATTENTION: update the tints if you update this
var DN60A = 'rgba(13, 20, 36, 0.81)';
var DN50A = 'rgba(13, 20, 36, 0.85)';
var red$1 = themed$2({
  light: R300,
  dark: R300
});
var yellow = themed$2({
  light: Y300,
  dark: Y300
});

/*
  These theme values are expressed as functions so that if we decide to make
  them dependent on props in the future, it wouldn't require a significant
  refactor everywhere they are being used.
*/

var borderRadius$2 = function borderRadius() {
  return 3;
};
var gridSize$2 = function gridSize() {
  return 8;
};
var fontSize$3 = function fontSize() {
  return 14;
};
var layers = {
  card: function card() {
    return 100;
  },
  navigation: function navigation() {
    return 200;
  },
  dialog: function dialog() {
    return 300;
  },
  layer: function layer() {
    return 400;
  },
  blanket: function blanket() {
    return 500;
  },
  modal: function modal() {
    return 510;
  },
  flag: function flag() {
    return 600;
  },
  spotlight: function spotlight() {
    return 700;
  },
  tooltip: function tooltip() {
    return 800;
  }
};

/**
 * createTheme is used to create a set of Providers and Consumers for theming components.
 * - Takes a default theme function; this theme function gets a set of props, and returns tokens
 *  based on those props. An example of this default theme function is one that produces the standard
 *  appearance of the component
 * - Returns three things - a Provider that allow for additional themes to be applied, a Consumer
 *  that can get the current theme and fetch it, and a custom hook - useTheme which provides an alternate (although functionally the same) API
 *  to the Consumer.
 **/
function createTheme(defaultGetTokens) {
  var emptyThemeFn = function emptyThemeFn(getTokens, props) {
    return getTokens(props);
  };
  /**
   * Internally, Theme uses React Context, with internal providers and consumers.
   * The React Context passes only a function that gets props, and turns them into tokens. This
   * function gets mixed as more Providers with their own themes are added. This mixed function
   * is ultimately picked up by Consumers, which implement a context consumer internally to fetch
   * the theme.
   **/


  var ThemeContext = /*#__PURE__*/createContext$1(defaultGetTokens);

  function useTheme(themeProps) {
    var theme = useContext(ThemeContext);
    var themeFn = theme || emptyThemeFn;
    var tokens = themeFn(themeProps);
    return tokens;
  } // The Theme Consumer takes a function as its child - this function takes tokens, and the
  // return value is generally a set of nodes with the tokens applied appropriately.


  function Consumer(props) {
    var children = props.children,
        themeProps = _objectWithoutProperties$3(props, ["children"]); // @ts-ignore See issue for more info: https://github.com/Microsoft/TypeScript/issues/10727
    // Argument of type 'Pick<ThemeProps & { children: (tokens: ThemeTokens) => ReactNode; }, Exclude<keyof ThemeProps, "children">>' is not assignable to parameter of type 'ThemeProps'.ts(2345)


    var tokens = useTheme(themeProps); // We add a fragment to ensure we don't break people upgrading.
    // Previously they may have been able to pass in undefined without things blowing up.

    return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, children(tokens));
  }
  /**
   * The Theme Provider takes regular nodes as its children, but also takes a *theme function*
   * - The theme function takes a set of props, as well as a function (getTokens) that can turn props into tokens.
   * - The getTokens function isn't called immediately - instead the props are passed
   *    through a mix of parent theming functions
   * Children of this provider will receive this mixed theme
   */


  function Provider(props) {
    var themeFn = useContext(ThemeContext);
    var valueFn = props.value || emptyThemeFn;
    var mixedFn = useCallback$1(function (themeProps) {
      return valueFn(themeFn, themeProps);
    }, [themeFn, valueFn]);
    return /*#__PURE__*/React__default.createElement(ThemeContext.Provider, {
      value: mixedFn
    }, props.children);
  }

  return {
    Consumer: Consumer,
    Provider: Provider,
    useTheme: useTheme
  };
}

// Create default global light theme
var _createTheme = createTheme(function () {
  return {
    mode: 'light'
  };
}),
    Provider = _createTheme.Provider,
    Consumer = _createTheme.Consumer,
    useTheme = _createTheme.useTheme;

var useGlobalTheme = function useGlobalTheme() {
  return useTheme();
};
var GlobalTheme = {
  Provider: Provider,
  Consumer: Consumer
};

// THIS IS AN AUTO-GENERATED FILE DO NOT MODIFY DIRECTLY
// Re-generate by running `yarn build tokens`.
var tokens$2 = {
  'color.accent.subtleBlue': '--accent-subtleBlue',
  'color.accent.subtleGreen': '--accent-subtleGreen',
  'color.accent.subtleMagenta': '--accent-subtleMagenta',
  'color.accent.subtleOrange': '--accent-subtleOrange',
  'color.accent.subtlePurple': '--accent-subtlePurple',
  'color.accent.subtleRed': '--accent-subtleRed',
  'color.accent.subtleTeal': '--accent-subtleTeal',
  'color.background.sunken': '--background-sunken',
  'color.background.default': '--background-default',
  'color.background.card': '--background-card',
  'color.background.overlay': '--background-overlay',
  'color.background.selected.resting': '--background-selected-resting',
  'color.background.selected.hover': '--background-selected-hover',
  'color.background.selected.pressed': '--background-selected-pressed',
  'color.background.blanket': '--background-blanket',
  'color.background.disabled': '--background-disabled',
  'color.background.boldBrand.resting': '--background-boldBrand-resting',
  'color.background.boldBrand.hover': '--background-boldBrand-hover',
  'color.background.boldBrand.pressed': '--background-boldBrand-pressed',
  'color.background.subtleBrand.resting': '--background-subtleBrand-resting',
  'color.background.subtleBrand.hover': '--background-subtleBrand-hover',
  'color.background.subtleBrand.pressed': '--background-subtleBrand-pressed',
  'color.background.boldDanger.resting': '--background-boldDanger-resting',
  'color.background.boldDanger.hover': '--background-boldDanger-hover',
  'color.background.boldDanger.pressed': '--background-boldDanger-pressed',
  'color.background.subtleDanger.resting': '--background-subtleDanger-resting',
  'color.background.subtleDanger.hover': '--background-subtleDanger-hover',
  'color.background.subtleDanger.pressed': '--background-subtleDanger-pressed',
  'color.background.boldWarning.resting': '--background-boldWarning-resting',
  'color.background.boldWarning.hover': '--background-boldWarning-hover',
  'color.background.boldWarning.pressed': '--background-boldWarning-pressed',
  'color.background.subtleWarning.resting': '--background-subtleWarning-resting',
  'color.background.subtleWarning.hover': '--background-subtleWarning-hover',
  'color.background.subtleWarning.pressed': '--background-subtleWarning-pressed',
  'color.background.boldSuccess.resting': '--background-boldSuccess-resting',
  'color.background.boldSuccess.hover': '--background-boldSuccess-hover',
  'color.background.boldSuccess.pressed': '--background-boldSuccess-pressed',
  'color.background.subtleSuccess.resting': '--background-subtleSuccess-resting',
  'color.background.subtleSuccess.hover': '--background-subtleSuccess-hover',
  'color.background.subtleSuccess.pressed': '--background-subtleSuccess-pressed',
  'color.background.boldDiscovery.resting': '--background-boldDiscovery-resting',
  'color.background.boldDiscovery.hover': '--background-boldDiscovery-hover',
  'color.background.boldDiscovery.pressed': '--background-boldDiscovery-pressed',
  'color.background.subtleDiscovery.resting': '--background-subtleDiscovery-resting',
  'color.background.subtleDiscovery.hover': '--background-subtleDiscovery-hover',
  'color.background.subtleDiscovery.pressed': '--background-subtleDiscovery-pressed',
  'color.background.boldNeutral.resting': '--background-boldNeutral-resting',
  'color.background.boldNeutral.hover': '--background-boldNeutral-hover',
  'color.background.boldNeutral.pressed': '--background-boldNeutral-pressed',
  'color.background.transparentNeutral.hover': '--background-transparentNeutral-hover',
  'color.background.transparentNeutral.pressed': '--background-transparentNeutral-pressed',
  'color.background.subtleNeutral.resting': '--background-subtleNeutral-resting',
  'color.background.subtleNeutral.hover': '--background-subtleNeutral-hover',
  'color.background.subtleNeutral.pressed': '--background-subtleNeutral-pressed',
  'color.background.subtleBorderedNeutral.resting': '--background-subtleBorderedNeutral-resting',
  'color.background.subtleBorderedNeutral.pressed': '--background-subtleBorderedNeutral-pressed',
  'color.border.focus': '--border-focus',
  'color.border.neutral': '--border-neutral',
  'color.iconBorder.brand': '--iconBorder-brand',
  'color.iconBorder.danger': '--iconBorder-danger',
  'color.iconBorder.warning': '--iconBorder-warning',
  'color.iconBorder.success': '--iconBorder-success',
  'color.iconBorder.discovery': '--iconBorder-discovery',
  'color.overlay.hover': '--overlay-hover',
  'color.overlay.pressed': '--overlay-pressed',
  'color.text.selected': '--text-selected',
  'color.text.highEmphasis': '--text-highEmphasis',
  'color.text.mediumEmphasis': '--text-mediumEmphasis',
  'color.text.lowEmphasis': '--text-lowEmphasis',
  'color.text.onBold': '--text-onBold',
  'color.text.onBoldWarning': '--text-onBoldWarning',
  'color.text.link.resting': '--text-link-resting',
  'color.text.link.pressed': '--text-link-pressed',
  'color.text.brand': '--text-brand',
  'color.text.warning': '--text-warning',
  'color.text.danger': '--text-danger',
  'color.text.success': '--text-success',
  'color.text.discovery': '--text-discovery',
  'color.text.disabled': '--text-disabled',
  'shadow.card': '--card',
  'shadow.overlay': '--overlay'
};
var tokens$3 = tokens$2;

function token$1(path, fallback) {
  if (process.env.NODE_ENV !== 'production' && !tokens$3[path]) {
    throw new Error("Unknown token at path: ".concat(path));
  }

  var token = tokens$3[path];
  var tokenCall = fallback ? "var(".concat(token, ", ").concat(fallback, ")") : "var(".concat(token, ")");
  return tokenCall;
}

function ownKeys$6(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$5(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$6(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$6(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var themedBackground$1 = themed$2({
  light: token$1('color.background.overlay', N0$1),
  dark: token$1('color.background.overlay', DN50)
});
var themedColor = themed$2({
  light: token$1('color.text.highEmphasis', N900),
  dark: token$1('color.text.highEmphasis', DN600)
});
var themedBoxShadow = themed$2({
  light: token$1('shadow.overlay', "0 4px 8px -2px ".concat(N50A, ", 0 0 1px ").concat(N60A)),
  dark: token$1('shadow.overlay', "0 4px 8px -2px ".concat(DN50A, ", 0 0 1px ").concat(DN60A))
});
var borderRadius$1 = borderRadius$2();
var gridSize$1 = gridSize$2();
var CSS_THEME_BACKGROUND = '--theme-background';
var CSS_THEME_COLOR = '--theme-color';
var CSS_THEME_BOX_SHADOW = '--theme-box-shadow';
var containerStyles = css$2({
  boxSizing: 'content-box',
  maxWidth: "".concat(gridSize$1 * 56, "px"),
  maxHeight: "".concat(gridSize$1 * 56, "px"),
  padding: "".concat(gridSize$1 * 2, "px ").concat(gridSize$1 * 3, "px;"),
  zIndex: layers.dialog(),
  background: "var(".concat(CSS_THEME_BACKGROUND, ")"),
  borderRadius: "".concat(borderRadius$1, "px"),
  boxShadow: "var(".concat(CSS_THEME_BOX_SHADOW, ")"),
  color: "var(".concat(CSS_THEME_COLOR, ")"),
  '&:focus': {
    outline: 'none'
  }
});

/**
 * __Container__
 *
 * A container is used as a styled wrapper around the contents of an inline dialog.
 * Note that the styles here are merged with the style prop that comes from the popper.js library.
 */
var Container$1 = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var _objectSpread2;

  var children = _ref.children,
      onBlur = _ref.onBlur,
      onClick = _ref.onClick,
      onFocus = _ref.onFocus,
      style = _ref.style,
      testId = _ref.testId;
  var theme = useGlobalTheme();
  return jsx("div", {
    css: containerStyles,
    "data-testid": testId,
    onBlur: onBlur,
    onClick: onClick,
    onFocus: onFocus,
    ref: ref,
    style: _objectSpread$5((_objectSpread2 = {}, _defineProperty$3(_objectSpread2, CSS_THEME_BACKGROUND, themedBackground$1(theme)), _defineProperty$3(_objectSpread2, CSS_THEME_COLOR, themedColor(theme)), _defineProperty$3(_objectSpread2, CSS_THEME_BOX_SHADOW, themedBoxShadow(theme)), _objectSpread2), style)
  }, children);
});

function _createSuper$9(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$9(); return function _createSuperInternal() { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$8(this, result); }; }

function _isNativeReflectConstruct$9() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var packageName$2 = "@atlaskit/inline-dialog";
var packageVersion$2 = "13.1.0";

var InlineDialog$2 = /*#__PURE__*/function (_Component) {
  _inherits$8(InlineDialog, _Component);

  var _super = _createSuper$9(InlineDialog);

  function InlineDialog() {
    var _this;

    _classCallCheck$8(this, InlineDialog);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty$3(_assertThisInitialized$4(_this), "handleClickOutside", function (event) {
      var _this$props = _this.props,
          isOpen = _this$props.isOpen,
          onClose = _this$props.onClose;

      if (event.defaultPrevented) {
        return;
      }

      var container = _this.containerRef;
      var trigger = _this.triggerRef;
      var target = event.target; // exit if we click outside but on the trigger — it can handle the clicks itself

      if (trigger && trigger.contains(target)) {
        return;
      } // call onClose if the click originated from outside the dialog


      if (isOpen && container && !container.contains(target)) {
        onClose && onClose({
          isOpen: false,
          event: event
        });
      }
    });

    return _this;
  }

  _createClass$8(InlineDialog, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (typeof window === 'undefined') {
        return;
      } // added here to clean up component unmounting, which is not done in ref


      this.containerRef = null;

      if (!prevProps.isOpen && this.props.isOpen) {
        window.addEventListener('click', this.handleClickOutside, true);
      } else if (prevProps.isOpen && !this.props.isOpen) {
        window.removeEventListener('click', this.handleClickOutside, true);
      }
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      if (typeof window === 'undefined') {
        return;
      }

      if (this.props.isOpen) {
        window.addEventListener('click', this.handleClickOutside, true);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (typeof window === 'undefined') {
        return;
      }

      window.removeEventListener('click', this.handleClickOutside, true);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props2 = this.props,
          children = _this$props2.children,
          placement = _this$props2.placement,
          isOpen = _this$props2.isOpen,
          content = _this$props2.content,
          onContentBlur = _this$props2.onContentBlur,
          onContentFocus = _this$props2.onContentFocus,
          onContentClick = _this$props2.onContentClick,
          testId = _this$props2.testId;
      var popper = isOpen ? jsx(Popper$3, {
        placement: placement
      }, function (_ref) {
        var _ref2 = _ref.ref,
            style = _ref.style;
        return jsx(Container$1, {
          onBlur: onContentBlur,
          onFocus: onContentFocus,
          onClick: onContentClick,
          ref: function ref(node) {
            if (node) {
              _this2.containerRef = node;

              if (typeof _ref2 === 'function') {
                _ref2(node);
              } else {
                _ref2.current = node;
              }
            }
          },
          style: style,
          testId: testId
        }, content);
      }) : null;
      return jsx(Manager$1, null, jsx(Reference$1, null, function (_ref3) {
        var ref = _ref3.ref;
        return jsx(NodeResolver, {
          innerRef: function innerRef(node) {
            _this2.triggerRef = node;

            if (typeof ref === 'function') {
              ref(node);
            } else {
              ref.current = node;
            }
          }
        }, children);
      }), popper);
    }
  }]);

  return InlineDialog;
}(Component$1);

_defineProperty$3(InlineDialog$2, "defaultProps", {
  isOpen: false,
  onContentBlur: function onContentBlur() {},
  onContentClick: function onContentClick() {},
  onContentFocus: function onContentFocus() {},
  onClose: function onClose() {},
  placement: 'bottom-start'
});
var createAndFireEventOnAtlaskit$8 = createAndFireEvent$1('atlaskit');
var InlineDialog$3 = withAnalyticsContext$3({
  componentName: 'inlineDialog',
  packageName: packageName$2,
  packageVersion: packageVersion$2
})(withAnalyticsEvents$3({
  onClose: createAndFireEventOnAtlaskit$8({
    action: 'closed',
    actionSubject: 'inlineDialog',
    attributes: {
      componentName: 'inlineDialog',
      packageName: packageName$2,
      packageVersion: packageVersion$2
    }
  })
})(InlineDialog$2));

// The exports are the functions, not the objects, so could not be used here

var disabled = {
  light: N20,
  dark: DN20
}; // For validation red is the new 'yellow' which was { light: colors.Y300, dark: colors.Y300 }

var red = {
  light: R400,
  dark: R400
}; // The following do not yet have a darkmode 'map': N20A, N10

var getBackgroundColor = themed$2('appearance', {
  standard: {
    light: N10,
    dark: DN10
  },
  disabled: disabled,
  invalid: {
    light: N10,
    dark: DN10
  },
  subtle: {
    light: 'transparent',
    dark: 'transparent'
  },
  none: {
    light: 'transparent',
    dark: 'transparent'
  }
});
var getBackgroundColorFocus = themed$2('appearance', {
  standard: {
    light: N0$1,
    dark: DN10
  },
  disabled: disabled,
  invalid: {
    light: N0$1,
    dark: DN10
  },
  subtle: {
    light: N0$1,
    dark: DN10
  },
  none: {
    light: 'transparent',
    dark: 'transparent'
  }
});
var getBackgroundColorHover = themed$2('appearance', {
  standard: {
    light: N30,
    dark: DN30$1
  },
  disabled: disabled,
  invalid: {
    light: N30,
    dark: DN30$1
  },
  subtle: {
    light: N30,
    dark: DN30$1
  },
  none: {
    light: 'transparent',
    dark: 'transparent'
  }
});
var getBorderColor = themed$2('appearance', {
  standard: {
    light: N40,
    dark: DN40
  },
  disabled: {
    light: N40,
    dark: DN40
  },
  invalid: red,
  subtle: {
    light: 'transparent',
    dark: 'transparent'
  },
  none: {
    light: 'transparent',
    dark: 'transparent'
  }
});
var getBorderColorFocus = themed$2('appearance', {
  standard: {
    light: B100,
    dark: B75
  },
  disabled: {
    light: B100,
    dark: B75
  },
  invalid: {
    light: B100,
    dark: B75
  },
  subtle: {
    light: B100,
    dark: B75
  },
  none: {
    light: 'transparent',
    dark: 'transparent'
  }
});

var borderRadius = '3px';
var borderWidth = 2;
var grid = gridSize$2();
var lineHeightBase = grid * 2.5;
var lineHeightCompact = grid * 2;
var heightBase = grid * 5;
var heightCompact = grid * 4;
var horizontalPadding = grid;
var innerHeight$1 = grid * 3;
var transitionDuration = '0.2s';

var getBorderAndPadding = function getBorderAndPadding(_ref) {
  var paddingDisabled = _ref.paddingDisabled,
      compact = _ref.compact;
  var height = compact ? heightCompact : heightBase;
  var padding = paddingDisabled ? "0" : "".concat((height - 2 * borderWidth - innerHeight$1) / 2, "px ").concat(horizontalPadding - borderWidth, "px");
  return css$3(["\n    border-width: ", "px;\n    padding: ", ";\n  "], borderWidth, padding);
};

var getLineHeight$1 = function getLineHeight(props) {
  var currentLineHeight = props.compact ? lineHeightCompact : lineHeightBase;
  return currentLineHeight / fontSize$3();
};

var getDisabledColor$1 = themed$2({
  light: N70$1,
  dark: DN90$1
});

var getDisabledState = function getDisabledState(props) {
  return props.disabled && css$3(["\n    color: ", ";\n    pointer-events: none;\n  "], getDisabledColor$1(props));
};

var getHoverState = function getHoverState(props) {
  if (props.readOnly || props.isFocused || props.none) return null;
  return css$3(["\n    &:hover {\n      background-color: ", ";\n    }\n  "], getBackgroundColorHover(props));
};

var getBorderStyle = function getBorderStyle(props) {
  return props.appearance === 'none' ? 'none' : 'solid';
};

var getMinHeight = function getMinHeight(_ref2) {
  var compact = _ref2.compact;
  var minHeight = compact ? heightCompact : heightBase;
  return css$3(["\n    min-height: ", "px;\n  "], minHeight);
}; // need an element wrapping the children because IE11 doesn't apply min-height correctly
// to flex-elements. See https://github.com/philipwalton/flexbugs#3-min-height-on-a-flex-container-wont-apply-to-its-flex-items


var ChildWrapper = styled$1.div.withConfig({
  displayName: "Content__ChildWrapper",
  componentId: "ve26fj-0"
})(["\n  display: flex;\n  flex-direction: column;\n  flex: 1 0 auto;\n  max-width: 100%;\n  ", ";\n"], function (p) {
  return getMinHeight(p);
});
var getColor$2 = themed$2({
  light: N900,
  dark: DN600
});
var Content$4 = styled$1.div.withConfig({
  displayName: "Content",
  componentId: "ve26fj-1"
})(["\n  align-items: center;\n  background-color: ", ";\n  border-color: ", ";\n  border-radius: ", ";\n  border-style: ", ";\n  box-sizing: border-box;\n  color: ", ";\n  display: flex;\n  flex: 1 0 auto;\n  font-size: ", "px;\n  justify-content: space-between;\n  line-height: ", ";\n  max-width: 100%;\n  overflow: hidden;\n  transition: background-color ", " ease-in-out,\n    border-color ", " ease-in-out;\n  word-wrap: break-word;\n  ", " ", " ", ";\n"], function (props) {
  return props.isFocused ? getBackgroundColorFocus(props) : getBackgroundColor(props);
}, function (props) {
  return props.isFocused ? getBorderColorFocus(props) : getBorderColor(props);
}, borderRadius, getBorderStyle, getColor$2, fontSize$3, getLineHeight$1, transitionDuration, transitionDuration, getBorderAndPadding, getHoverState, getDisabledState);

var getMaxWidth = function getMaxWidth(maxWidth) {
  return maxWidth ? "".concat(maxWidth, "px") : '100%';
};
/* IE11 does not respect max-width when using flex-grow + nested flex content, similar to https://github.com/philipwalton/flexbugs#flexbug-11
 * and https://github.com/philipwalton/flexbugs#flexbug-17.
 * This can be fixed by setting the basis to 100%, allowing shrinking and setting the min-width to the original flex-basis value
 * (or 0 if it was auto).
 * Alternatively since we're just setting the contents to fit parent container when grow is set to true, we can just change flex-basis
 * to 100% and not worry about shrinking or growing.
 * See AK-4285.
 */


var ContentWrapper$2 = styled$1.div.withConfig({
  displayName: "Content__ContentWrapper",
  componentId: "ve26fj-2"
})(["\n  ", " ", " ", " max-width: ", ";\n"], function (props) {
  return props.disabled && "\n      cursor: not-allowed;\n    ";
}, function (props) {
  return props.grow ? css$3(["\n          flex: 0 0 ", ";\n        "], getMaxWidth(props.maxWidth)) : "\n          flex: 0 0 auto;\n        ";
}, function (props) {
  return props.grow ? "\n          display: block;\n        " : "\n          display: inline-block;\n          vertical-align: top;\n        ";
}, function (props) {
  return getMaxWidth(props.maxWidth);
});

// THIS IS AN AUTO-GENERATED FILE DO NOT MODIFY DIRECTLY
// Re-generate by running `yarn build tokens`.
var tokens = {
  'color.accent.subtleBlue': '--accent-subtleBlue',
  'color.accent.subtleGreen': '--accent-subtleGreen',
  'color.accent.subtleMagenta': '--accent-subtleMagenta',
  'color.accent.subtleOrange': '--accent-subtleOrange',
  'color.accent.subtlePurple': '--accent-subtlePurple',
  'color.accent.subtleRed': '--accent-subtleRed',
  'color.accent.subtleTeal': '--accent-subtleTeal',
  'color.background.sunken': '--background-sunken',
  'color.background.default': '--background-default',
  'color.background.card': '--background-card',
  'color.background.overlay': '--background-overlay',
  'color.background.selected.resting': '--background-selected-resting',
  'color.background.selected.hover': '--background-selected-hover',
  'color.background.selected.pressed': '--background-selected-pressed',
  'color.background.blanket': '--background-blanket',
  'color.background.disabled': '--background-disabled',
  'color.background.boldBrand.resting': '--background-boldBrand-resting',
  'color.background.boldBrand.hover': '--background-boldBrand-hover',
  'color.background.boldBrand.pressed': '--background-boldBrand-pressed',
  'color.background.subtleBrand.resting': '--background-subtleBrand-resting',
  'color.background.subtleBrand.hover': '--background-subtleBrand-hover',
  'color.background.subtleBrand.pressed': '--background-subtleBrand-pressed',
  'color.background.boldDanger.resting': '--background-boldDanger-resting',
  'color.background.boldDanger.hover': '--background-boldDanger-hover',
  'color.background.boldDanger.pressed': '--background-boldDanger-pressed',
  'color.background.subtleDanger.resting': '--background-subtleDanger-resting',
  'color.background.subtleDanger.hover': '--background-subtleDanger-hover',
  'color.background.subtleDanger.pressed': '--background-subtleDanger-pressed',
  'color.background.boldWarning.resting': '--background-boldWarning-resting',
  'color.background.boldWarning.hover': '--background-boldWarning-hover',
  'color.background.boldWarning.pressed': '--background-boldWarning-pressed',
  'color.background.subtleWarning.resting': '--background-subtleWarning-resting',
  'color.background.subtleWarning.hover': '--background-subtleWarning-hover',
  'color.background.subtleWarning.pressed': '--background-subtleWarning-pressed',
  'color.background.boldSuccess.resting': '--background-boldSuccess-resting',
  'color.background.boldSuccess.hover': '--background-boldSuccess-hover',
  'color.background.boldSuccess.pressed': '--background-boldSuccess-pressed',
  'color.background.subtleSuccess.resting': '--background-subtleSuccess-resting',
  'color.background.subtleSuccess.hover': '--background-subtleSuccess-hover',
  'color.background.subtleSuccess.pressed': '--background-subtleSuccess-pressed',
  'color.background.boldDiscovery.resting': '--background-boldDiscovery-resting',
  'color.background.boldDiscovery.hover': '--background-boldDiscovery-hover',
  'color.background.boldDiscovery.pressed': '--background-boldDiscovery-pressed',
  'color.background.subtleDiscovery.resting': '--background-subtleDiscovery-resting',
  'color.background.subtleDiscovery.hover': '--background-subtleDiscovery-hover',
  'color.background.subtleDiscovery.pressed': '--background-subtleDiscovery-pressed',
  'color.background.boldNeutral.resting': '--background-boldNeutral-resting',
  'color.background.boldNeutral.hover': '--background-boldNeutral-hover',
  'color.background.boldNeutral.pressed': '--background-boldNeutral-pressed',
  'color.background.transparentNeutral.hover': '--background-transparentNeutral-hover',
  'color.background.transparentNeutral.pressed': '--background-transparentNeutral-pressed',
  'color.background.subtleNeutral.resting': '--background-subtleNeutral-resting',
  'color.background.subtleNeutral.hover': '--background-subtleNeutral-hover',
  'color.background.subtleNeutral.pressed': '--background-subtleNeutral-pressed',
  'color.background.subtleBorderedNeutral.resting': '--background-subtleBorderedNeutral-resting',
  'color.background.subtleBorderedNeutral.pressed': '--background-subtleBorderedNeutral-pressed',
  'color.border.focus': '--border-focus',
  'color.border.neutral': '--border-neutral',
  'color.iconBorder.brand': '--iconBorder-brand',
  'color.iconBorder.danger': '--iconBorder-danger',
  'color.iconBorder.warning': '--iconBorder-warning',
  'color.iconBorder.success': '--iconBorder-success',
  'color.iconBorder.discovery': '--iconBorder-discovery',
  'color.overlay.hover': '--overlay-hover',
  'color.overlay.pressed': '--overlay-pressed',
  'color.text.selected': '--text-selected',
  'color.text.highEmphasis': '--text-highEmphasis',
  'color.text.mediumEmphasis': '--text-mediumEmphasis',
  'color.text.lowEmphasis': '--text-lowEmphasis',
  'color.text.onBold': '--text-onBold',
  'color.text.onBoldWarning': '--text-onBoldWarning',
  'color.text.link.resting': '--text-link-resting',
  'color.text.link.pressed': '--text-link-pressed',
  'color.text.brand': '--text-brand',
  'color.text.warning': '--text-warning',
  'color.text.danger': '--text-danger',
  'color.text.success': '--text-success',
  'color.text.discovery': '--text-discovery',
  'color.text.disabled': '--text-disabled',
  'shadow.card': '--card',
  'shadow.overlay': '--overlay'
};
var tokens$1 = tokens;

function token(path, fallback) {
  if (process.env.NODE_ENV !== 'production' && !tokens$1[path]) {
    throw new Error("Unknown token at path: ".concat(path));
  }

  var token = tokens$1[path];
  var tokenCall = fallback ? "var(".concat(token, ", ").concat(fallback, ")") : "var(".concat(token, ")");
  return tokenCall;
}

var presetSizes = {
  xsmall: 8,
  small: 16,
  medium: 24,
  large: 48,
  xlarge: 96
};

var _templateObject, _templateObject2, _templateObject3, _templateObject4;
var rotate = keyframes(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  to { transform: rotate(360deg); }\n"]))); // There are three parts to the load in animation:
// 1. Fade in
// 2. Accelerated spin
// 3. Stretch the spinner line

var loadIn = keyframes(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  from {\n    transform: rotate(50deg);\n    opacity: 0;\n    stroke-dashoffset: 60;\n  }\n  to {\n    transform: rotate(230deg);\n    opacity: 1;\n    stroke-dashoffset: 50;\n  }\n"])));

function getStrokeColor(_ref) {
  var mode = _ref.mode,
      appearance = _ref.appearance;

  if (mode === 'light') {
    return appearance === 'inherit' ? token('color.text.mediumEmphasis', N500) : token('color.text.onBold', N0$1);
  }

  return appearance === 'inherit' ? token('color.text.mediumEmphasis', DN900) : token('color.text.onBold', DN500);
}

var Spinner$1 = /*#__PURE__*/React__default.memo( /*#__PURE__*/React__default.forwardRef(function Spinner(_ref2, ref) {
  var testId = _ref2.testId,
      _ref2$appearance = _ref2.appearance,
      appearance = _ref2$appearance === void 0 ? 'inherit' : _ref2$appearance,
      _ref2$delay = _ref2.delay,
      delay = _ref2$delay === void 0 ? 0 : _ref2$delay,
      _ref2$size = _ref2.size,
      providedSize = _ref2$size === void 0 ? 'medium' : _ref2$size;
  var size = typeof providedSize === 'number' ? providedSize : presetSizes[providedSize];
  return jsx(GlobalTheme.Consumer, null, function (tokens) {
    var strokeColor = getStrokeColor({
      mode: tokens.mode,
      appearance: appearance
    }); // The Spinner animation uses a combination of two
    // css animations on two separate elements.

    return jsx("span", {
      /* This span exists to off-load animations from the circle element,
       which were causing performance issues (style recalculations) on Safari and older versions of Chrome.
       This can be removed and styles placed back on the circle element once Safari fixes this bug and off-loads rendering to the GPU from the CPU.
       */
      css: css$2(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n                transform-origin: center;\n                animation: ", " 0.86s infinite;\n                animation-delay: ", "ms;\n                animation-timing-function: cubic-bezier(0.4, 0.15, 0.6, 0.85);\n                height: ", "px;\n                width: ", "px;\n                display: inline-flex;\n                /* align better inline with text */\n                vertical-align: middle;\n              "])), rotate, delay, size, size),
      "data-testid": testId && "".concat(testId, "-wrapper")
    }, jsx("svg", {
      height: size,
      width: size,
      viewBox: "0 0 16 16",
      xmlns: "http://www.w3.org/2000/svg",
      "data-testid": testId,
      ref: ref,
      css: css$2(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n                  /* We are going to animate this in */\n                  opacity: 0;\n                  animation: ", " 1s ease-in-out;\n                  /* When the animation completes, stay at the last frame of the animation */\n                  animation-fill-mode: forwards;\n                  animation-delay: ", "ms;\n                  fill: none;\n                  stroke: ", ";\n                  stroke-width: 1.5;\n                  stroke-linecap: round;\n                  stroke-dasharray: 60;\n                  stroke-dashoffset: inherit;\n                  @media screen and (forced-colors: active) {\n                    filter: grayscale(100%);\n                    stroke: CanvasText;\n                  }\n                "])), loadIn, delay, strokeColor)
    }, jsx("circle", {
      cx: "8",
      cy: "8",
      r: "7"
    })));
  });
}));

var warning$2 = {};

// These are duplicates of colors imports -
// Not bringing in colors to reduce dependency on theme
// These values are enforced via unit tests
var DN30 = '#1B2638';
var N0 = '#FFFFFF';
var themedBackground = {
  light: N0,
  dark: DN30
};
/**
 * Returns the background color depending on the passed through mode.
 * @param mode
 */

var getBackground$1 = function getBackground() {
  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';
  return themedBackground[mode];
};

var sizes = {
  small: '16px',
  medium: '24px',
  large: '32px',
  xlarge: '48px'
};
var dimensions = {
  small: {
    width: sizes.small,
    height: sizes.small
  },
  medium: {
    width: sizes.medium,
    height: sizes.medium
  },
  large: {
    width: sizes.large,
    height: sizes.large
  },
  xlarge: {
    width: sizes.xlarge,
    height: sizes.xlarge
  }
};

var commonSVGStyles = {
  overflow: 'hidden',
  pointerEvents: 'none',

  /**
   * Stop-color doesn't properly apply in chrome when the inherited/current color changes.
   * We have to initially set stop-color to inherit (either via DOM attribute or an initial CSS
   * rule) and then override it with currentColor for the color changes to be picked up.
   */
  stop: {
    stopColor: 'currentColor'
  }
};
css$2(dimensions.small);
css$2(dimensions.medium);
css$2(dimensions.large);
css$2(dimensions.xlarge); // pre-built css style-size map
/**
 * Returns the width of the icon's parent span. This function has
 * special behaviour to deal with icon-file-type specifically.
 *
 * The reality is the SVG still has its own dimensions, so this is
 * a secondary fallback which in 95% of cases is not required.
 * It's only really being kept to maintain backward compatability.
 */

var getIconSize = function getIconSize(_ref) {
  var width = _ref.width,
      height = _ref.height,
      size = _ref.size;

  if (width && height) {
    return {
      width: width,
      height: height
    };
  }

  if (size) {
    return dimensions[size];
  }

  return undefined;
};

function ownKeys$5(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$4(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$5(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$5(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
/**
 * We are hiding these props from consumers as they're used to
 * hack around icon sizing specifically for icon-file-type.
 */

var iconStyles = css$2({
  display: 'inline-block',
  flexShrink: 0,
  lineHeight: 1,
  // eslint-disable-next-line @repo/internal/styles/no-nested-styles
  '> svg': _objectSpread$4(_objectSpread$4({}, commonSVGStyles), {}, {
    maxWidth: '100%',
    maxHeight: '100%',
    color: 'var(--icon-primary-color)',
    fill: 'var(--icon-secondary-color)',
    verticalAlign: 'bottom'
  })
});
/**
 * For windows high contrast mode
 */

var baseHcmStyles = css$2({
  '@media screen and (forced-colors: active)': {
    // eslint-disable-next-line @repo/internal/styles/no-nested-styles
    '> svg': {
      filter: 'grayscale(1)',
      '--icon-primary-color': 'CanvasText',
      // foreground
      '--icon-secondary-color': 'Canvas' // background

    }
  }
});
var primaryEqualsSecondaryHcmStyles = css$2({
  '@media screen and (forced-colors: active)': {
    // eslint-disable-next-line @repo/internal/styles/no-nested-styles
    '> svg': {
      // if the primaryColor is the same as the secondaryColor we
      // set the --icon-primary-color to Canvas
      // this is usually to convey state i.e. Checkbox checked -> not checked
      '--icon-primary-color': 'Canvas' // foreground

    }
  }
});
var secondaryTransparentHcmStyles = css$2({
  '@media screen and (forced-colors: active)': {
    // eslint-disable-next-line @repo/internal/styles/no-nested-styles
    '> svg': {
      '--icon-secondary-color': 'transparent' // background

    }
  }
});
/**
 * __Icon__
 *
 * An icon is used as a visual representation of common actions and commands to provide context.
 *
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)
 */

var Icon$1 = /*#__PURE__*/memo(function Icon(props) {
  var _ref = props,
      Glyph = _ref.glyph,
      dangerouslySetGlyph = _ref.dangerouslySetGlyph,
      _ref$primaryColor = _ref.primaryColor,
      primaryColor = _ref$primaryColor === void 0 ? 'currentColor' : _ref$primaryColor,
      secondaryColor = _ref.secondaryColor,
      size = _ref.size,
      testId = _ref.testId,
      label = _ref.label,
      width = _ref.width,
      height = _ref.height;
  var glyphProps = dangerouslySetGlyph ? {
    dangerouslySetInnerHTML: {
      __html: dangerouslySetGlyph
    }
  } : {
    children: Glyph ? jsx(Glyph, {
      role: "presentation"
    }) : null
  };
  var dimensions = getIconSize({
    width: width,
    height: height,
    size: size
  });

  var _useGlobalTheme = useGlobalTheme(),
      mode = _useGlobalTheme.mode;

  return jsx("span", _extends$d({
    "data-testid": testId,
    role: label ? 'img' : 'presentation',
    "aria-label": label ? label : undefined,
    "aria-hidden": label ? undefined : true,
    style: {
      '--icon-primary-color': primaryColor,
      '--icon-secondary-color': secondaryColor || getBackground$1(mode)
    }
  }, glyphProps, {
    css: [iconStyles, baseHcmStyles, primaryColor === secondaryColor && primaryEqualsSecondaryHcmStyles, secondaryColor === 'transparent' && secondaryTransparentHcmStyles, // NB: This can be resolved if this component, composes base SVG / and/or skeleton
    // We could then simplify how common styles are dealt with simply by encapsualting them
    // at their appropriate level and/or having a singular approach to css variables in the package
    dimensions && // eslint-disable-next-line @repo/internal/react/consistent-css-prop-usage
    css$2({
      width: dimensions.width,
      height: dimensions.height,
      '> svg': dimensions
    })]
  }));
});
var Icon$2 = Icon$1;

var base = /*#__PURE__*/Object.freeze({
    __proto__: null,
    'default': Icon$2,
    Icon: Icon$1
});

var require$$1 = /*@__PURE__*/getAugmentedNamespace(base);

Object.defineProperty(warning$2, "__esModule", {
  value: true
});
var default_1$3 = warning$2.default = void 0;

var _react$4 = _interopRequireDefault$4(React__default);

var _base = require$$1;

function _interopRequireDefault$4(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const WarningIcon$1 = props => /*#__PURE__*/_react$4.default.createElement(_base.Icon, Object.assign({
  dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><g fill-rule="evenodd"><path d="M12.938 4.967c-.518-.978-1.36-.974-1.876 0L3.938 18.425c-.518.978-.045 1.771 1.057 1.771h14.01c1.102 0 1.573-.797 1.057-1.771L12.938 4.967z" fill="currentColor"/><path d="M12 15a1 1 0 01-1-1V9a1 1 0 012 0v5a1 1 0 01-1 1m0 3a1 1 0 010-2 1 1 0 010 2" fill="inherit"/></g></svg>`
}, props));

WarningIcon$1.displayName = 'WarningIcon';
var _default$3 = WarningIcon$1;
default_1$3 = warning$2.default = _default$3;

function _createSuper$8(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$8(); return function _createSuperInternal() { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$8(this, result); }; }

function _isNativeReflectConstruct$8() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var WarningIcon = styled$1.div.withConfig({
  displayName: "ValidationElement__WarningIcon",
  componentId: "sc-1fk9yms-0"
})(["\n  align-items: center;\n  color: ", ";\n  display: flex;\n  flex-shrink: 0;\n"], yellow); // Spinner needs set height to avoid height jumping
// Also needs a margin so there is space between it and preceding text

var SpinnerParent = styled$1.div.withConfig({
  displayName: "ValidationElement__SpinnerParent",
  componentId: "sc-1fk9yms-1"
})(["\n  height: 20px;\n  margin-left: 10px;\n"]);

var ValidationElement = /*#__PURE__*/function (_Component) {
  _inherits$8(ValidationElement, _Component);

  var _super = _createSuper$8(ValidationElement);

  function ValidationElement() {
    _classCallCheck$8(this, ValidationElement);

    return _super.apply(this, arguments);
  }

  _createClass$8(ValidationElement, [{
    key: "render",
    value: function render() {
      if (!this.props.isDisabled && this.props.isInvalid) {
        return /*#__PURE__*/React__default.createElement(WarningIcon, null, /*#__PURE__*/React__default.createElement(default_1$3, {
          label: "warning"
        }));
      }

      return this.props.isLoading ? /*#__PURE__*/React__default.createElement(SpinnerParent, null, /*#__PURE__*/React__default.createElement(Spinner$1, {
        size: "small"
      })) : null;
    }
  }]);

  return ValidationElement;
}(Component$1);

_defineProperty$3(ValidationElement, "defaultProps", {
  isDisabled: false,
  isInvalid: false,
  isLoading: false
});

function _createSuper$7(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$7(); return function _createSuperInternal() { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$8(this, result); }; }

function _isNativeReflectConstruct$7() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

if (process.env.NODE_ENV !== 'production' && !process.env.CI) {
  // eslint-disable-next-line no-console
  console.warn('The @atlaskit/field-base package has been deprecated. Please use the Form/Textfield/Textarea/etc packages instead.');
}

var FieldBaseStateless = /*#__PURE__*/function (_Component) {
  _inherits$8(FieldBaseStateless, _Component);

  var _super = _createSuper$7(FieldBaseStateless);

  function FieldBaseStateless() {
    _classCallCheck$8(this, FieldBaseStateless);

    return _super.apply(this, arguments);
  }

  _createClass$8(FieldBaseStateless, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (this.props.shouldReset) {
        this.props.onBlur();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          appearance = _this$props.appearance,
          children = _this$props.children,
          invalidMessage = _this$props.invalidMessage,
          isCompact = _this$props.isCompact,
          isDialogOpen = _this$props.isDialogOpen,
          isDisabled = _this$props.isDisabled,
          isFitContainerWidthEnabled = _this$props.isFitContainerWidthEnabled,
          isFocused = _this$props.isFocused,
          isInvalid = _this$props.isInvalid,
          isLoading = _this$props.isLoading,
          isPaddingDisabled = _this$props.isPaddingDisabled,
          isReadOnly = _this$props.isReadOnly,
          maxWidth = _this$props.maxWidth,
          onBlur = _this$props.onBlur,
          onDialogBlur = _this$props.onDialogBlur,
          onDialogClick = _this$props.onDialogClick,
          onDialogFocus = _this$props.onDialogFocus,
          onFocus = _this$props.onFocus,
          isValidationHidden = _this$props.isValidationHidden;

      function getAppearance(a) {
        if (isDisabled) return 'disabled';
        if (isInvalid) return 'invalid';
        return a;
      }

      return /*#__PURE__*/React__default.createElement(ContentWrapper$2, {
        disabled: isDisabled,
        maxWidth: maxWidth,
        grow: isFitContainerWidthEnabled
      }, /*#__PURE__*/React__default.createElement(InlineDialog$3, {
        content: invalidMessage,
        isOpen: isDialogOpen && !!invalidMessage && !isValidationHidden,
        onContentBlur: onDialogBlur,
        onContentClick: onDialogClick,
        onContentFocus: onDialogFocus,
        placement: "right"
      }, /*#__PURE__*/React__default.createElement(ChildWrapper, {
        compact: isCompact
      }, /*#__PURE__*/React__default.createElement(Content$4, {
        appearance: getAppearance(appearance),
        compact: isCompact,
        disabled: isDisabled,
        isFocused: isFocused,
        invalid: isInvalid && !isFocused,
        none: appearance === 'none',
        onBlurCapture: onBlur,
        onFocusCapture: onFocus,
        paddingDisabled: isPaddingDisabled,
        readOnly: isReadOnly,
        subtle: appearance === 'subtle'
      }, children, !isValidationHidden ? /*#__PURE__*/React__default.createElement(ValidationElement, {
        isDisabled: isDisabled,
        isInvalid: isInvalid,
        isLoading: isLoading
      }) : null))));
    }
  }]);

  return FieldBaseStateless;
}(Component$1);

_defineProperty$3(FieldBaseStateless, "defaultProps", {
  appearance: 'standard',
  invalidMessage: '',
  isCompact: false,
  isDialogOpen: false,
  isDisabled: false,
  isFitContainerWidthEnabled: false,
  isFocused: false,
  isInvalid: false,
  isLoading: false,
  isPaddingDisabled: false,
  isReadOnly: false,
  onDialogBlur: function onDialogBlur() {},
  onDialogClick: function onDialogClick() {},
  onDialogFocus: function onDialogFocus() {},
  shouldReset: false,
  isValidationHidden: false
});

function _createSuper$6(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$6(); return function _createSuperInternal() { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$8(this, result); }; }

function _isNativeReflectConstruct$6() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var ON_BLUR_KEY = 'onBlurKey';
var ON_CONTENT_BLUR_KEY = 'onContentBlurKey';

function waitForRender(cb) {
  // Execute the callback after any upcoming render calls in the execution queue
  setTimeout(cb, 0);
}

var FieldBase = /*#__PURE__*/function (_Component) {
  _inherits$8(FieldBase, _Component);

  var _super = _createSuper$6(FieldBase);

  function FieldBase() {
    var _this;

    _classCallCheck$8(this, FieldBase);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty$3(_assertThisInitialized$4(_this), "state", {
      isFocused: _this.props.defaultIsFocused,
      isDialogFocused: false,
      shouldIgnoreNextDialogBlur: false
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "timers", void 0);

    _defineProperty$3(_assertThisInitialized$4(_this), "onFocus", function (e) {
      _this.setState({
        isFocused: true
      });

      _this.props.onFocus(e); // Escape from a possible race-condition when blur and focus happen one by one
      // (otherwise the dialog might be left closed)


      _this.cancelSchedule(ON_BLUR_KEY);
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "onBlur", function (e) {
      // Because the blur event fires before the focus event, we want to make sure that we don't
      // render and close the dialog before we can check if the dialog is focused.
      _this.reschedule(ON_BLUR_KEY, function () {
        _this.setState({
          isFocused: false
        });

        _this.props.onBlur(e);
      });
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "onContentFocus", function () {
      if (_this.state.isDialogFocused) {
        // If we are tabbing between two elements in the warning dialog, we need to prevent the
        // dialog from closing.
        _this.setState({
          shouldIgnoreNextDialogBlur: true
        });
      } else {
        _this.setState({
          isDialogFocused: true
        });
      } // Escape from a possible race-condition when blur and focus happen one by one
      // (otherwise the dialog might be left closed)


      _this.cancelSchedule(ON_CONTENT_BLUR_KEY);
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "onContentBlur", function () {
      waitForRender(function () {
        if (_this.state.shouldIgnoreNextDialogBlur) {
          // Ignore the blur event if we are still focused in the dialog.
          _this.setState({
            shouldIgnoreNextDialogBlur: false
          });
        } else {
          _this.setState({
            isDialogFocused: false
          });
        }
      });
    });

    return _this;
  }

  _createClass$8(FieldBase, [{
    key: "cancelSchedule",
    value: function cancelSchedule(key) {
      this.timers = this.timers || {};

      if (this.timers[key]) {
        clearTimeout(this.timers[key]);
        delete this.timers[key];
      }
    }
  }, {
    key: "reschedule",
    value: function reschedule(key, callback) {
      var _this2 = this;

      // Use reschedule (not just schedule) to avoid race conditions when multiple blur events
      // happen one by one.
      this.timers = this.timers || {};
      this.cancelSchedule(key);
      this.timers[key] = setTimeout(function () {
        callback();

        _this2.cancelSchedule(key);
      }, 0);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.cancelSchedule(ON_BLUR_KEY);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props;
          _this$props.defaultIsFocused;
          var props = _objectWithoutProperties$3(_this$props, ["defaultIsFocused"]);

      var _this$state = this.state,
          isFocused = _this$state.isFocused,
          isDialogFocused = _this$state.isDialogFocused;
      return /*#__PURE__*/React__default.createElement(FieldBaseStateless, _extends$d({}, props, {
        isDialogOpen: isFocused || isDialogFocused,
        isFocused: isFocused,
        onBlur: this.onBlur,
        onFocus: this.onFocus,
        onDialogFocus: this.onContentFocus,
        onDialogBlur: this.onContentBlur
      }));
    }
  }]);

  return FieldBase;
}(Component$1);

_defineProperty$3(FieldBase, "defaultProps", {
  defaultIsFocused: false,
  onFocus: function onFocus() {},
  onBlur: function onBlur() {}
});

var spacing = gridSize$2();
var fontSize$2 = 12;
var innerHeight = spacing * 2; // 16px

var lineHeight = innerHeight / fontSize$2;

var getPadding$3 = function getPadding(_ref) {
  var firstChild = _ref.firstChild,
      inlineEdit = _ref.inlineEdit;
  var right = 0;
  var bottom = spacing / 2;
  var left = 0;
  var top = spacing * 2.5;

  if (inlineEdit) {
    bottom = 0;
    left = spacing;
    top = spacing;
  }

  if (firstChild) {
    top = spacing / 2;
  }

  return css$3(["\n    padding: ", "px ", "px ", "px ", "px;\n  "], top, right, bottom, left);
};

var LabelWrapper = styled$1.label.withConfig({
  displayName: "Label__LabelWrapper",
  componentId: "sc-17towfw-0"
})(["\n  display: block;\n"]);
var getColor$1 = themed$2({
  light: N200,
  dark: DN90$1
});
var getDisabledColor = themed$2({
  light: N60,
  dark: DN300
});
var LabelInner = styled$1.div.withConfig({
  displayName: "Label__LabelInner",
  componentId: "sc-17towfw-1"
})(["\n  color: ", ";\n  font-size: ", "px;\n  font-weight: 600;\n  line-height: ", ";\n  ", ";\n\n  ", ";\n"], function (props) {
  return props.isDisabled ? getDisabledColor(props) : getColor$1(props);
}, fontSize$2, lineHeight, getPadding$3, function (p) {
  return p.isHidden && 'display: none;';
});
var RequiredIndicator = styled$1.span.withConfig({
  displayName: "Label__RequiredIndicator",
  componentId: "sc-17towfw-2"
})(["\n  color: ", ";\n  padding-left: 2px;\n"], red$1);

function _createSuper$5(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$5(); return function _createSuperInternal() { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$8(this, result); }; }

function _isNativeReflectConstruct$5() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

if (process.env.NODE_ENV !== 'production' && !process.env.CI) {
  // eslint-disable-next-line no-console
  console.warn('The @atlaskit/field-base package has been deprecated. Please use the Form/Textfield/Textarea/etc packages instead.');
}

var Label = /*#__PURE__*/function (_Component) {
  _inherits$8(Label, _Component);

  var _super = _createSuper$5(Label);

  function Label() {
    _classCallCheck$8(this, Label);

    return _super.apply(this, arguments);
  }

  _createClass$8(Label, [{
    key: "render",
    value:
    /* eslint-disable jsx-a11y/no-static-element-interactions */
    function render() {
      var _this$props = this.props,
          appearance = _this$props.appearance,
          children = _this$props.children,
          htmlFor = _this$props.htmlFor,
          isFirstChild = _this$props.isFirstChild,
          isLabelHidden = _this$props.isLabelHidden,
          isDisabled = _this$props.isDisabled,
          isRequired = _this$props.isRequired,
          label = _this$props.label,
          onClick = _this$props.onClick;
      /* eslint-disable jsx-a11y/click-events-have-key-events */

      return /*#__PURE__*/React__default.createElement(LabelWrapper, {
        htmlFor: htmlFor
      }, /*#__PURE__*/React__default.createElement(LabelInner, {
        isHidden: isLabelHidden,
        inlineEdit: appearance === 'inline-edit',
        firstChild: isFirstChild,
        isDisabled: isDisabled
      }, /*#__PURE__*/React__default.createElement("span", {
        onClick: onClick
      }, label), isRequired ? /*#__PURE__*/React__default.createElement(RequiredIndicator, {
        role: "presentation"
      }, "*") : null), children);
    }
  }]);

  return Label;
}(Component$1);

_defineProperty$3(Label, "defaultProps", {
  appearance: 'default'
});

// ideally this would be fetched from ../constants but that causes a
// circular dep loop. This will be refactored as part of a breaking
// change in the future.
var DEFAULT_THEME_MODE$1 = 'light';
var THEME_MODES$1 = ['light', 'dark']; // Resolves the different types of theme objects in the current API

function getTheme$1(props) {
  if (props && props.theme) {
    // Theme is the global Atlaskit theme
    if ('__ATLASKIT_THEME__' in props.theme) {
      return props.theme.__ATLASKIT_THEME__;
    } // User has provided alternative modes
    else if ('mode' in props.theme && THEME_MODES$1.includes(props.theme.mode)) {
        return props.theme;
      }
  } // If format not supported (or no theme provided), return standard theme


  return {
    mode: DEFAULT_THEME_MODE$1
  };
}

/* eslint-disable prefer-rest-params */

// Unpack custom variants, and get correct value for the current theme
function themedVariants$1(variantProp, variants) {
  return function (props) {
    var theme = getTheme$1(props);

    if (props && props[variantProp] && variants) {
      var modes = variants[props[variantProp]];

      if (modes && modes[theme.mode]) {
        var value = modes[theme.mode];

        if (value) {
          return value;
        } // TS believes value can be undefined

      }
    }

    return '';
  };
}

function themed$1(modesOrVariant, variantModes) {
  if (typeof modesOrVariant === 'string') {
    return themedVariants$1(modesOrVariant, variantModes);
  }

  var modes = modesOrVariant;
  return function (props) {
    // Get theme from the user's props
    var theme = getTheme$1(props); // User isn't required to provide both light and dark values

    if (theme.mode in modes) {
      var value = modes[theme.mode]; // TS believes value can be undefined

      if (value) {
        return value;
      }
    }

    return '';
  };
}

var N70 = '#A5ADBA';
var N100$1 = '#7A869A';
var DN90 = '#56637A';

var fontSize$1 = function fontSize() {
  return 14;
};
var codeFontFamily$1 = function codeFontFamily() {
  return "'SFMono-Medium', 'SF Mono', 'Segoe UI Mono', 'Roboto Mono', 'Ubuntu Mono', Menlo, Consolas, Courier, monospace";
};

var getPlaceholderColor$1 = function getPlaceholderColor(_ref) {
  var disabled = _ref.disabled;

  if (disabled) {
    return themed$1({
      light: N70,
      dark: DN90
    });
  }

  return themed$1({
    light: N100$1,
    dark: DN90
  });
}; // can't group these placeholder styles into one block because browsers drop
// entire style blocks when any single selector fails to parse


var getPlaceholderStyle$1 = function getPlaceholderStyle() {
  return css$3(["\n  &::-webkit-input-placeholder {\n    /* WebKit, Blink, Edge */\n    color: ", ";\n  }\n  &::-moz-placeholder {\n    /* Mozilla Firefox 19+ */\n    color: ", ";\n    opacity: 1;\n  }\n  &::-ms-input-placeholder {\n    /* Microsoft Edge */\n    color: ", ";\n  }\n  &:-ms-input-placeholder {\n    /* Internet Explorer 10-11 */\n    color: ", ";\n  }\n"], getPlaceholderColor$1, getPlaceholderColor$1, getPlaceholderColor$1, getPlaceholderColor$1);
}; // Safari puts on some difficult to remove styles, mainly for disabled inputs
// but we want full control so need to override them in all cases


var overrideSafariDisabledStyles$1 = "\n  -webkit-text-fill-color: unset;\n  -webkit-opacity: 1;\n";
var InputElement = styled$1.input.withConfig({
  displayName: "Input__InputElement",
  componentId: "sc-1o6bj35-0"
})(["\n  background: transparent;\n  border: 0;\n  box-sizing: border-box;\n  color: inherit;\n  cursor: inherit;\n  font-family: ", ";\n  font-size: ", "px;\n  min-width: 0;\n  outline: none;\n  width: 100%;\n\n  [disabled] {\n    ", ";\n  }\n\n  &::-ms-clear {\n    display: none;\n  }\n\n  &:invalid {\n    box-shadow: none;\n  }\n  ", ";\n"], function (p) {
  return p.isMonospaced ? codeFontFamily$1() : 'inherit';
}, fontSize$1, overrideSafariDisabledStyles$1, getPlaceholderStyle$1);
var Input$1 = InputElement;

function _createSuper$4(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$4(); return function _createSuperInternal() { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$8(this, result); }; }

function _isNativeReflectConstruct$4() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var packageName$1 = "@atlaskit/field-text";
var packageVersion$1 = "11.0.6";
var Wrapper$2 = styled$1.div.withConfig({
  displayName: "FieldTextStateless__Wrapper",
  componentId: "ynbdsh-0"
})(["\n  flex: 1 1 100%;\n"]);

if (process.env.NODE_ENV !== 'production' && !process.env.CI) {
  // eslint-disable-next-line no-console
  console.warn('@atlaskit/field-text has been deprecated. Please use the @atlaskit/textfield package instead.');
}

var FieldTextStateless = /*#__PURE__*/function (_Component) {
  _inherits$8(FieldTextStateless, _Component);

  var _super = _createSuper$4(FieldTextStateless);

  function FieldTextStateless() {
    var _this;

    _classCallCheck$8(this, FieldTextStateless);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty$3(_assertThisInitialized$4(_this), "input", void 0);

    _defineProperty$3(_assertThisInitialized$4(_this), "setInputRef", function (input) {
      _this.input = input;

      _this.props.innerRef(input);
    });

    return _this;
  }

  _createClass$8(FieldTextStateless, [{
    key: "focus",
    value: function focus() {
      if (this.input) {
        this.input.focus();
      }
    }
  }, {
    key: "render",
    value: function render() {
      return /*#__PURE__*/React__default.createElement(Wrapper$2, null, !this.props.isLabelHidden && /*#__PURE__*/React__default.createElement(Label, {
        htmlFor: this.props.id,
        isDisabled: this.props.disabled,
        isLabelHidden: this.props.isLabelHidden,
        isRequired: this.props.required,
        label: this.props.label || ''
      }), /*#__PURE__*/React__default.createElement(FieldBase, {
        invalidMessage: this.props.invalidMessage,
        isCompact: this.props.compact,
        isDisabled: this.props.disabled,
        isFitContainerWidthEnabled: this.props.shouldFitContainer,
        isInvalid: this.props.isInvalid,
        isReadOnly: this.props.isReadOnly,
        isRequired: this.props.required,
        isValidationHidden: this.props.isValidationHidden
      }, /*#__PURE__*/React__default.createElement(Input$1, {
        autoComplete: this.props.autoComplete,
        autoFocus: this.props.autoFocus,
        disabled: this.props.disabled,
        form: this.props.form,
        id: this.props.id,
        innerRef: this.setInputRef,
        isMonospaced: this.props.isMonospaced,
        maxLength: this.props.maxLength,
        min: this.props.min,
        max: this.props.max,
        name: this.props.name,
        onBlur: this.props.onBlur,
        onChange: this.props.onChange,
        onFocus: this.props.onFocus,
        onKeyDown: this.props.onKeyDown,
        onKeyPress: this.props.onKeyPress,
        onKeyUp: this.props.onKeyUp,
        pattern: this.props.pattern,
        placeholder: this.props.placeholder,
        readOnly: this.props.isReadOnly,
        required: this.props.required,
        spellCheck: this.props.isSpellCheckEnabled,
        type: this.props.type,
        value: this.props.value
      })));
    }
  }]);

  return FieldTextStateless;
}(Component$1);

_defineProperty$3(FieldTextStateless, "defaultProps", {
  compact: false,
  disabled: false,
  isInvalid: false,
  isReadOnly: false,
  isSpellCheckEnabled: true,
  onChange: function onChange() {},
  required: false,
  type: 'text',
  isValidationHidden: false,
  innerRef: function innerRef() {}
});
var createAndFireEventOnAtlaskit$7 = createAndFireEvent$2('atlaskit');
var FieldTextStateless$1 = withAnalyticsContext$5({
  componentName: 'fieldText',
  packageName: packageName$1,
  packageVersion: packageVersion$1
})(withAnalyticsEvents$5({
  onBlur: createAndFireEventOnAtlaskit$7({
    action: 'blurred',
    actionSubject: 'textField',
    attributes: {
      componentName: 'fieldText',
      packageName: packageName$1,
      packageVersion: packageVersion$1
    }
  }),
  onFocus: createAndFireEventOnAtlaskit$7({
    action: 'focused',
    actionSubject: 'textField',
    attributes: {
      componentName: 'fieldText',
      packageName: packageName$1,
      packageVersion: packageVersion$1
    }
  })
})(FieldTextStateless));

function _createSuper$3(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$3(); return function _createSuperInternal() { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$8(this, result); }; }

function _isNativeReflectConstruct$3() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var FieldText$1 = /*#__PURE__*/function (_Component) {
  _inherits$8(FieldText, _Component);

  var _super = _createSuper$3(FieldText);

  function FieldText() {
    var _this;

    _classCallCheck$8(this, FieldText);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty$3(_assertThisInitialized$4(_this), "input", void 0);

    _defineProperty$3(_assertThisInitialized$4(_this), "state", {
      value: _this.props.value
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "handleOnChange", function (e) {
      _this.setState({
        value: e.target.value
      });

      if (_this.props.onChange) {
        _this.props.onChange(e);
      }
    });

    return _this;
  }

  _createClass$8(FieldText, [{
    key: "focus",
    value: function focus() {
      if (this.input) {
        this.input.focus();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      return /*#__PURE__*/React__default.createElement(FieldTextStateless$1, _extends$d({}, this.props, {
        value: this.state.value,
        onChange: this.handleOnChange,
        innerRef: function innerRef(fieldRef) {
          _this2.input = fieldRef;
        }
      }));
    }
  }]);

  return FieldText;
}(Component$1);

_defineProperty$3(FieldText$1, "defaultProps", {
  onChange: function onChange() {}
});

var FieldText = FieldText$1;

var css_248z$D = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.styled-atlaskit-textfield label span{color:#687792;font-size:14px;font-weight:400}.styled-atlaskit-textfield div[class^=Content-]{border:1px solid #b8bfcd;border-radius:4px}.styled-atlaskit-textfield.styled-atlaskit-textfield--isFocused div[class^=Content-]{border:2px solid #0b6cff;border-radius:4px}";
styleInject(css_248z$D);

var TextField = function (_a) {
    var props = __rest$8(_a, []);
    var _b = React__default.useState(false), isFocused = _b[0], setIsFocused = _b[1];
    return (jsx$1("div", __assign$a({ className: classNames$1("styled-atlaskit-textfield", { "styled-atlaskit-textfield--isFocused": isFocused }) }, { children: jsx$1(FieldText, __assign$a({ onFocus: function () { return setIsFocused(true); }, onBlur: function () { return setIsFocused(false); } }, props), void 0) }), void 0));
};

var css_248z$C = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.styled-radio-tab-vertical{display:flex;flex-flow:column}.styled-radio-tab-vertical>div:hover{background-color:#fff!important}.styled-radio-tab-vertical .radio-container:not(:first-child){margin-top:20px}.styled-radio-tab-vertical .radio-container .render-content{margin-left:30px}.styled-radio-tab-vertical .radio-container .radio-item{cursor:pointer;margin-right:20px}.styled-radio-tab-vertical .radio-container .radio-item:hover{background-color:transparent}.styled-radio-tab-vertical .radio-container .radio-item:hover .radio-icon{border-color:#7b89a1}.styled-radio-tab-vertical .radio-container .radio-item .radio-helper{color:#687792;display:block;margin-left:30px;margin-top:8px}.styled-radio-tab-vertical .radio-container .radio-item.disabled{cursor:not-allowed}.styled-radio-tab-vertical .radio-container .radio-item.disabled .radio-label{color:#b8bfcd}.styled-radio-tab-vertical .radio-container .radio-item .radio-icon{border:1px solid #b8bfcd;border-radius:50%;display:inline-block;height:20px!important;margin-right:10px;position:relative;vertical-align:middle;width:20px!important}.styled-radio-tab-vertical .radio-container .radio-item.selected .radio-icon{border:5px solid #0b6cff}.styled-radio-tab-vertical .radio-container .radio-item.selected .radio-icon:before{display:none!important}.styled-radio-tab-vertical .radio-container .radio-item .radio-label{color:#232831;vertical-align:bottom}";
styleInject(css_248z$C);

var css_248z$B = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.field-error-message{color:#cb1a1a;display:block;font-family:Roboto,sans-serif;font-size:14px;margin:4px 0}.field-label{color:#687792;display:block;font-size:16px;font-weight:400;line-height:1.3;margin-bottom:0;padding:20px 0 10px}.field-label .__react_component_tooltip{background-color:#232831;border-radius:4px;font-size:14px;line-height:1.63;opacity:1;padding:5px 10px;text-align:left}.field-counter{color:#687792;display:block;font-size:14px}";
styleInject(css_248z$B);

Enum("START", "MIDDLE", "END");
var addLineBreaks = function (text) {
    return text.split("\n").map(function (text, key) {
        return (jsx$1("div", __assign$a({ style: { marginTop: "4px" } }, { children: text.trim() }), key + "-" + text));
    });
};

function ___$insertStyle(css) {
  if (!css) {
    return;
  }
  if (typeof window === 'undefined') {
    return;
  }

  var style = document.createElement('style');

  style.setAttribute('type', 'text/css');
  style.innerHTML = css;
  document.head.appendChild(style);
  return css;
}

function _classCallCheck$1(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties$1(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass$1(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties$1(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties$1(Constructor, staticProps);
  return Constructor;
}

function _defineProperty$1(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends$4() {
  _extends$4 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$4.apply(this, arguments);
}

function ownKeys$4(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys$4(Object(source), true).forEach(function (key) {
        _defineProperty$1(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$4(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _inherits$1(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf$2(subClass, superClass);
}

function _getPrototypeOf$1(o) {
  _getPrototypeOf$1 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf$1(o);
}

function _setPrototypeOf$2(o, p) {
  _setPrototypeOf$2 = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf$2(o, p);
}

function _assertThisInitialized$2(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _possibleConstructorReturn$1(self, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized$2(self);
}

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

var emptyFunction_1 = emptyFunction;

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat$1 = function validateFormat(format) {};

if (process.env.NODE_ENV !== 'production') {
  validateFormat$1 = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat$1(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

var invariant_1 = invariant;

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning$1 = emptyFunction_1;

if (process.env.NODE_ENV !== 'production') {
  var printWarning$1 = function printWarning(format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  warning$1 = function warning(condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return; // Ignore CompositeComponent proptype check.
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning$1.apply(undefined, [format].concat(args));
    }
  };
}

var warning_1 = warning$1;

/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty$1 = Object.prototype.hasOwnProperty;
var propIsEnumerable$1 = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

var objectAssign$1 = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty$1.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable$1.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

var ReactPropTypesSecret_1 = ReactPropTypesSecret;

if (process.env.NODE_ENV !== 'production') {
  var invariant$1 = invariant_1;
  var warning$1$1 = warning_1;
  var ReactPropTypesSecret$1 = ReactPropTypesSecret_1;
  var loggedTypeFailures = {};
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          invariant$1(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$1);
        } catch (ex) {
          error = ex;
        }
        warning$1$1(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          warning$1$1(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
        }
      }
    }
  }
}

var checkPropTypes_1 = checkPropTypes;

var factoryWithTypeCheckers = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret_1) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          invariant_1(
            false,
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            warning_1(
              false,
              'You are manually calling a React.PropTypes validation ' +
              'function for the `%s` prop on `%s`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',
              propFullName,
              componentName
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunction_1.thatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret_1);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      process.env.NODE_ENV !== 'production' ? warning_1(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
      return emptyFunction_1.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? warning_1(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunction_1.thatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        warning_1(
          false,
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received %s at index %s.',
          getPostfixForTypeWarning(checker),
          i
        );
        return emptyFunction_1.thatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret_1) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = objectAssign$1({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes_1;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

var factoryWithThrowingShims = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret_1) {
      // It is still safe when called from React.
      return;
    }
    invariant_1(
      false,
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
  }  shim.isRequired = shim;
  function getShim() {
    return shim;
  }  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim
  };

  ReactPropTypes.checkPropTypes = emptyFunction_1;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

var propTypes = createCommonjsModule(function (module) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (process.env.NODE_ENV !== 'production') {
  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
    Symbol.for &&
    Symbol.for('react.element')) ||
    0xeac7;

  var isValidElement = function(object) {
    return typeof object === 'object' &&
      object !== null &&
      object.$$typeof === REACT_ELEMENT_TYPE;
  };

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = factoryWithTypeCheckers(isValidElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = factoryWithThrowingShims();
}
});

var CONSTANT = {
  GLOBAL: {
    HIDE: "__react_tooltip_hide_event",
    REBUILD: "__react_tooltip_rebuild_event",
    SHOW: "__react_tooltip_show_event"
  }
};

/**
 * Static methods for react-tooltip
 */

var dispatchGlobalEvent = function dispatchGlobalEvent(eventName, opts) {
  // Compatible with IE
  // @see http://stackoverflow.com/questions/26596123/internet-explorer-9-10-11-event-constructor-doesnt-work
  var event;

  if (typeof window.CustomEvent === "function") {
    event = new window.CustomEvent(eventName, {
      detail: opts
    });
  } else {
    event = document.createEvent("Event");
    event.initEvent(eventName, false, true);
    event.detail = opts;
  }

  window.dispatchEvent(event);
};

function staticMethods (target) {
  /**
   * Hide all tooltip
   * @trigger ReactTooltip.hide()
   */
  target.hide = function (target) {
    dispatchGlobalEvent(CONSTANT.GLOBAL.HIDE, {
      target: target
    });
  };
  /**
   * Rebuild all tooltip
   * @trigger ReactTooltip.rebuild()
   */


  target.rebuild = function () {
    dispatchGlobalEvent(CONSTANT.GLOBAL.REBUILD);
  };
  /**
   * Show specific tooltip
   * @trigger ReactTooltip.show()
   */


  target.show = function (target) {
    dispatchGlobalEvent(CONSTANT.GLOBAL.SHOW, {
      target: target
    });
  };

  target.prototype.globalRebuild = function () {
    if (this.mount) {
      this.unbindListener();
      this.bindListener();
    }
  };

  target.prototype.globalShow = function (event) {
    if (this.mount) {
      // Create a fake event, specific show will limit the type to `solid`
      // only `float` type cares e.clientX e.clientY
      var e = {
        currentTarget: event.detail.target
      };
      this.showTooltip(e, true);
    }
  };

  target.prototype.globalHide = function (event) {
    if (this.mount) {
      var hasTarget = event && event.detail && event.detail.target && true || false;
      this.hideTooltip({
        currentTarget: hasTarget && event.detail.target
      }, hasTarget);
    }
  };
}

/**
 * Events that should be bound to the window
 */
function windowListener (target) {
  target.prototype.bindWindowEvents = function (resizeHide) {
    // ReactTooltip.hide
    window.removeEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide);
    window.addEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide, false); // ReactTooltip.rebuild

    window.removeEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild);
    window.addEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild, false); // ReactTooltip.show

    window.removeEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow);
    window.addEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow, false); // Resize

    if (resizeHide) {
      window.removeEventListener("resize", this.onWindowResize);
      window.addEventListener("resize", this.onWindowResize, false);
    }
  };

  target.prototype.unbindWindowEvents = function () {
    window.removeEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide);
    window.removeEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild);
    window.removeEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow);
    window.removeEventListener("resize", this.onWindowResize);
  };
  /**
   * invoked by resize event of window
   */


  target.prototype.onWindowResize = function () {
    if (!this.mount) return;
    this.hideTooltip();
  };
}

/**
 * Custom events to control showing and hiding of tooltip
 *
 * @attributes
 * - `event` {String}
 * - `eventOff` {String}
 */
var checkStatus = function checkStatus(dataEventOff, e) {
  var show = this.state.show;
  var id = this.props.id;
  var isCapture = this.isCapture(e.currentTarget);
  var currentItem = e.currentTarget.getAttribute("currentItem");
  if (!isCapture) e.stopPropagation();

  if (show && currentItem === "true") {
    if (!dataEventOff) this.hideTooltip(e);
  } else {
    e.currentTarget.setAttribute("currentItem", "true");
    setUntargetItems(e.currentTarget, this.getTargetArray(id));
    this.showTooltip(e);
  }
};

var setUntargetItems = function setUntargetItems(currentTarget, targetArray) {
  for (var i = 0; i < targetArray.length; i++) {
    if (currentTarget !== targetArray[i]) {
      targetArray[i].setAttribute("currentItem", "false");
    } else {
      targetArray[i].setAttribute("currentItem", "true");
    }
  }
};

var customListeners = {
  id: "9b69f92e-d3fe-498b-b1b4-c5e63a51b0cf",
  set: function set(target, event, listener) {
    if (this.id in target) {
      var map = target[this.id];
      map[event] = listener;
    } else {
      // this is workaround for WeakMap, which is not supported in older browsers, such as IE
      Object.defineProperty(target, this.id, {
        configurable: true,
        value: _defineProperty$1({}, event, listener)
      });
    }
  },
  get: function get(target, event) {
    var map = target[this.id];

    if (map !== undefined) {
      return map[event];
    }
  }
};
function customEvent (target) {
  target.prototype.isCustomEvent = function (ele) {
    var event = this.state.event;
    return event || !!ele.getAttribute("data-event");
  };
  /* Bind listener for custom event */


  target.prototype.customBindListener = function (ele) {
    var _this = this;

    var _this$state = this.state,
        event = _this$state.event,
        eventOff = _this$state.eventOff;
    var dataEvent = ele.getAttribute("data-event") || event;
    var dataEventOff = ele.getAttribute("data-event-off") || eventOff;
    dataEvent.split(" ").forEach(function (event) {
      ele.removeEventListener(event, customListeners.get(ele, event));
      var customListener = checkStatus.bind(_this, dataEventOff);
      customListeners.set(ele, event, customListener);
      ele.addEventListener(event, customListener, false);
    });

    if (dataEventOff) {
      dataEventOff.split(" ").forEach(function (event) {
        ele.removeEventListener(event, _this.hideTooltip);
        ele.addEventListener(event, _this.hideTooltip, false);
      });
    }
  };
  /* Unbind listener for custom event */


  target.prototype.customUnbindListener = function (ele) {
    var _this$state2 = this.state,
        event = _this$state2.event,
        eventOff = _this$state2.eventOff;
    var dataEvent = event || ele.getAttribute("data-event");
    var dataEventOff = eventOff || ele.getAttribute("data-event-off");
    ele.removeEventListener(dataEvent, customListeners.get(ele, event));
    if (dataEventOff) ele.removeEventListener(dataEventOff, this.hideTooltip);
  };
}

/**
 * Util method to judge if it should follow capture model
 */
function isCapture (target) {
  target.prototype.isCapture = function (currentTarget) {
    return currentTarget && currentTarget.getAttribute("data-iscapture") === "true" || this.props.isCapture || false;
  };
}

/**
 * Util method to get effect
 */
function getEffect (target) {
  target.prototype.getEffect = function (currentTarget) {
    var dataEffect = currentTarget.getAttribute("data-effect");
    return dataEffect || this.props.effect || "float";
  };
}

/**
 * Util method to get effect
 */

var makeProxy = function makeProxy(e) {
  var proxy = {};

  for (var key in e) {
    if (typeof e[key] === "function") {
      proxy[key] = e[key].bind(e);
    } else {
      proxy[key] = e[key];
    }
  }

  return proxy;
};

var bodyListener = function bodyListener(callback, options, e) {
  var _options$respectEffec = options.respectEffect,
      respectEffect = _options$respectEffec === void 0 ? false : _options$respectEffec,
      _options$customEvent = options.customEvent,
      customEvent = _options$customEvent === void 0 ? false : _options$customEvent;
  var id = this.props.id;
  var tip = e.target.getAttribute("data-tip") || null;
  var forId = e.target.getAttribute("data-for") || null;
  var target = e.target;

  if (this.isCustomEvent(target) && !customEvent) {
    return;
  }

  var isTargetBelongsToTooltip = id == null && forId == null || forId === id;

  if (tip != null && (!respectEffect || this.getEffect(target) === "float") && isTargetBelongsToTooltip) {
    var proxy = makeProxy(e);
    proxy.currentTarget = target;
    callback(proxy);
  }
};

var findCustomEvents = function findCustomEvents(targetArray, dataAttribute) {
  var events = {};
  targetArray.forEach(function (target) {
    var event = target.getAttribute(dataAttribute);
    if (event) event.split(" ").forEach(function (event) {
      return events[event] = true;
    });
  });
  return events;
};

var getBody = function getBody() {
  return document.getElementsByTagName("body")[0];
};

function bodyMode (target) {
  target.prototype.isBodyMode = function () {
    return !!this.props.bodyMode;
  };

  target.prototype.bindBodyListener = function (targetArray) {
    var _this = this;

    var _this$state = this.state,
        event = _this$state.event,
        eventOff = _this$state.eventOff,
        possibleCustomEvents = _this$state.possibleCustomEvents,
        possibleCustomEventsOff = _this$state.possibleCustomEventsOff;
    var body = getBody();
    var customEvents = findCustomEvents(targetArray, "data-event");
    var customEventsOff = findCustomEvents(targetArray, "data-event-off");
    if (event != null) customEvents[event] = true;
    if (eventOff != null) customEventsOff[eventOff] = true;
    possibleCustomEvents.split(" ").forEach(function (event) {
      return customEvents[event] = true;
    });
    possibleCustomEventsOff.split(" ").forEach(function (event) {
      return customEventsOff[event] = true;
    });
    this.unbindBodyListener(body);
    var listeners = this.bodyModeListeners = {};

    if (event == null) {
      listeners.mouseover = bodyListener.bind(this, this.showTooltip, {});
      listeners.mousemove = bodyListener.bind(this, this.updateTooltip, {
        respectEffect: true
      });
      listeners.mouseout = bodyListener.bind(this, this.hideTooltip, {});
    }

    for (var _event in customEvents) {
      listeners[_event] = bodyListener.bind(this, function (e) {
        var targetEventOff = e.currentTarget.getAttribute("data-event-off") || eventOff;
        checkStatus.call(_this, targetEventOff, e);
      }, {
        customEvent: true
      });
    }

    for (var _event2 in customEventsOff) {
      listeners[_event2] = bodyListener.bind(this, this.hideTooltip, {
        customEvent: true
      });
    }

    for (var _event3 in listeners) {
      body.addEventListener(_event3, listeners[_event3]);
    }
  };

  target.prototype.unbindBodyListener = function (body) {
    body = body || getBody();
    var listeners = this.bodyModeListeners;

    for (var event in listeners) {
      body.removeEventListener(event, listeners[event]);
    }
  };
}

/**
 * Tracking target removing from DOM.
 * It's necessary to hide tooltip when it's target disappears.
 * Otherwise, the tooltip would be shown forever until another target
 * is triggered.
 *
 * If MutationObserver is not available, this feature just doesn't work.
 */
// https://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/
var getMutationObserverClass = function getMutationObserverClass() {
  return window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;
};

function trackRemoval (target) {
  target.prototype.bindRemovalTracker = function () {
    var _this = this;

    var MutationObserver = getMutationObserverClass();
    if (MutationObserver == null) return;
    var observer = new MutationObserver(function (mutations) {
      for (var m1 = 0; m1 < mutations.length; m1++) {
        var mutation = mutations[m1];

        for (var m2 = 0; m2 < mutation.removedNodes.length; m2++) {
          var element = mutation.removedNodes[m2];

          if (element === _this.state.currentTarget) {
            _this.hideTooltip();

            return;
          }
        }
      }
    });
    observer.observe(window.document, {
      childList: true,
      subtree: true
    });
    this.removalTracker = observer;
  };

  target.prototype.unbindRemovalTracker = function () {
    if (this.removalTracker) {
      this.removalTracker.disconnect();
      this.removalTracker = null;
    }
  };
}

/**
 * Calculate the position of tooltip
 *
 * @params
 * - `e` {Event} the event of current mouse
 * - `target` {Element} the currentTarget of the event
 * - `node` {DOM} the react-tooltip object
 * - `place` {String} top / right / bottom / left
 * - `effect` {String} float / solid
 * - `offset` {Object} the offset to default position
 *
 * @return {Object}
 * - `isNewState` {Bool} required
 * - `newState` {Object}
 * - `position` {Object} {left: {Number}, top: {Number}}
 */
function getPosition (e, target, node, place, desiredPlace, effect, offset) {
  var _getDimensions = getDimensions(node),
      tipWidth = _getDimensions.width,
      tipHeight = _getDimensions.height;

  var _getDimensions2 = getDimensions(target),
      targetWidth = _getDimensions2.width,
      targetHeight = _getDimensions2.height;

  var _getCurrentOffset = getCurrentOffset(e, target, effect),
      mouseX = _getCurrentOffset.mouseX,
      mouseY = _getCurrentOffset.mouseY;

  var defaultOffset = getDefaultPosition(effect, targetWidth, targetHeight, tipWidth, tipHeight);

  var _calculateOffset = calculateOffset(offset),
      extraOffset_X = _calculateOffset.extraOffset_X,
      extraOffset_Y = _calculateOffset.extraOffset_Y;

  var windowWidth = window.innerWidth;
  var windowHeight = window.innerHeight;

  var _getParent = getParent(node),
      parentTop = _getParent.parentTop,
      parentLeft = _getParent.parentLeft; // Get the edge offset of the tooltip


  var getTipOffsetLeft = function getTipOffsetLeft(place) {
    var offset_X = defaultOffset[place].l;
    return mouseX + offset_X + extraOffset_X;
  };

  var getTipOffsetRight = function getTipOffsetRight(place) {
    var offset_X = defaultOffset[place].r;
    return mouseX + offset_X + extraOffset_X;
  };

  var getTipOffsetTop = function getTipOffsetTop(place) {
    var offset_Y = defaultOffset[place].t;
    return mouseY + offset_Y + extraOffset_Y;
  };

  var getTipOffsetBottom = function getTipOffsetBottom(place) {
    var offset_Y = defaultOffset[place].b;
    return mouseY + offset_Y + extraOffset_Y;
  }; //
  // Functions to test whether the tooltip's sides are inside
  // the client window for a given orientation p
  //
  //  _____________
  // |             | <-- Right side
  // | p = 'left'  |\
  // |             |/  |\
  // |_____________|   |_\  <-- Mouse
  //      / \           |
  //       |
  //       |
  //  Bottom side
  //


  var outsideLeft = function outsideLeft(p) {
    return getTipOffsetLeft(p) < 0;
  };

  var outsideRight = function outsideRight(p) {
    return getTipOffsetRight(p) > windowWidth;
  };

  var outsideTop = function outsideTop(p) {
    return getTipOffsetTop(p) < 0;
  };

  var outsideBottom = function outsideBottom(p) {
    return getTipOffsetBottom(p) > windowHeight;
  }; // Check whether the tooltip with orientation p is completely inside the client window


  var outside = function outside(p) {
    return outsideLeft(p) || outsideRight(p) || outsideTop(p) || outsideBottom(p);
  };

  var inside = function inside(p) {
    return !outside(p);
  };

  var placesList = ["top", "bottom", "left", "right"];
  var insideList = [];

  for (var i = 0; i < 4; i++) {
    var p = placesList[i];

    if (inside(p)) {
      insideList.push(p);
    }
  }

  var isNewState = false;
  var newPlace;
  var shouldUpdatePlace = desiredPlace !== place;

  if (inside(desiredPlace) && shouldUpdatePlace) {
    isNewState = true;
    newPlace = desiredPlace;
  } else if (insideList.length > 0 && shouldUpdatePlace && outside(desiredPlace) && outside(place)) {
    isNewState = true;
    newPlace = insideList[0];
  }

  if (isNewState) {
    return {
      isNewState: true,
      newState: {
        place: newPlace
      }
    };
  }

  return {
    isNewState: false,
    position: {
      left: parseInt(getTipOffsetLeft(place) - parentLeft, 10),
      top: parseInt(getTipOffsetTop(place) - parentTop, 10)
    }
  };
}

var getDimensions = function getDimensions(node) {
  var _node$getBoundingClie = node.getBoundingClientRect(),
      height = _node$getBoundingClie.height,
      width = _node$getBoundingClie.width;

  return {
    height: parseInt(height, 10),
    width: parseInt(width, 10)
  };
}; // Get current mouse offset


var getCurrentOffset = function getCurrentOffset(e, currentTarget, effect) {
  var boundingClientRect = currentTarget.getBoundingClientRect();
  var targetTop = boundingClientRect.top;
  var targetLeft = boundingClientRect.left;

  var _getDimensions3 = getDimensions(currentTarget),
      targetWidth = _getDimensions3.width,
      targetHeight = _getDimensions3.height;

  if (effect === "float") {
    return {
      mouseX: e.clientX,
      mouseY: e.clientY
    };
  }

  return {
    mouseX: targetLeft + targetWidth / 2,
    mouseY: targetTop + targetHeight / 2
  };
}; // List all possibility of tooltip final offset
// This is useful in judging if it is necessary for tooltip to switch position when out of window


var getDefaultPosition = function getDefaultPosition(effect, targetWidth, targetHeight, tipWidth, tipHeight) {
  var top;
  var right;
  var bottom;
  var left;
  var disToMouse = 3;
  var triangleHeight = 2;
  var cursorHeight = 12; // Optimize for float bottom only, cause the cursor will hide the tooltip

  if (effect === "float") {
    top = {
      l: -(tipWidth / 2),
      r: tipWidth / 2,
      t: -(tipHeight + disToMouse + triangleHeight),
      b: -disToMouse
    };
    bottom = {
      l: -(tipWidth / 2),
      r: tipWidth / 2,
      t: disToMouse + cursorHeight,
      b: tipHeight + disToMouse + triangleHeight + cursorHeight
    };
    left = {
      l: -(tipWidth + disToMouse + triangleHeight),
      r: -disToMouse,
      t: -(tipHeight / 2),
      b: tipHeight / 2
    };
    right = {
      l: disToMouse,
      r: tipWidth + disToMouse + triangleHeight,
      t: -(tipHeight / 2),
      b: tipHeight / 2
    };
  } else if (effect === "solid") {
    top = {
      l: -(tipWidth / 2),
      r: tipWidth / 2,
      t: -(targetHeight / 2 + tipHeight + triangleHeight),
      b: -(targetHeight / 2)
    };
    bottom = {
      l: -(tipWidth / 2),
      r: tipWidth / 2,
      t: targetHeight / 2,
      b: targetHeight / 2 + tipHeight + triangleHeight
    };
    left = {
      l: -(tipWidth + targetWidth / 2 + triangleHeight),
      r: -(targetWidth / 2),
      t: -(tipHeight / 2),
      b: tipHeight / 2
    };
    right = {
      l: targetWidth / 2,
      r: tipWidth + targetWidth / 2 + triangleHeight,
      t: -(tipHeight / 2),
      b: tipHeight / 2
    };
  }

  return {
    top: top,
    bottom: bottom,
    left: left,
    right: right
  };
}; // Consider additional offset into position calculation


var calculateOffset = function calculateOffset(offset) {
  var extraOffset_X = 0;
  var extraOffset_Y = 0;

  if (Object.prototype.toString.apply(offset) === "[object String]") {
    offset = JSON.parse(offset.toString().replace(/\'/g, '"'));
  }

  for (var key in offset) {
    if (key === "top") {
      extraOffset_Y -= parseInt(offset[key], 10);
    } else if (key === "bottom") {
      extraOffset_Y += parseInt(offset[key], 10);
    } else if (key === "left") {
      extraOffset_X -= parseInt(offset[key], 10);
    } else if (key === "right") {
      extraOffset_X += parseInt(offset[key], 10);
    }
  }

  return {
    extraOffset_X: extraOffset_X,
    extraOffset_Y: extraOffset_Y
  };
}; // Get the offset of the parent elements


var getParent = function getParent(currentTarget) {
  var currentParent = currentTarget;

  while (currentParent) {
    if (window.getComputedStyle(currentParent).getPropertyValue("transform") !== "none") break;
    currentParent = currentParent.parentElement;
  }

  var parentTop = currentParent && currentParent.getBoundingClientRect().top || 0;
  var parentLeft = currentParent && currentParent.getBoundingClientRect().left || 0;
  return {
    parentTop: parentTop,
    parentLeft: parentLeft
  };
};

/**
 * To get the tooltip content
 * it may comes from data-tip or this.props.children
 * it should support multiline
 *
 * @params
 * - `tip` {String} value of data-tip
 * - `children` {ReactElement} this.props.children
 * - `multiline` {Any} could be Bool(true/false) or String('true'/'false')
 *
 * @return
 * - String or react component
 */
function getTipContent (tip, children, getContent, multiline) {
  if (children) return children;
  if (getContent !== undefined && getContent !== null) return getContent; // getContent can be 0, '', etc.

  if (getContent === null) return null; // Tip not exist and children is null or undefined

  var regexp = /<br\s*\/?>/;

  if (!multiline || multiline === "false" || !regexp.test(tip)) {
    // No trim(), so that user can keep their input
    return tip;
  } // Multiline tooltip content


  return tip.split(regexp).map(function (d, i) {
    return React__default.createElement("span", {
      key: i,
      className: "multi-line"
    }, d);
  });
}

/**
 * Support aria- and role in ReactTooltip
 *
 * @params props {Object}
 * @return {Object}
 */
function parseAria(props) {
  var ariaObj = {};
  Object.keys(props).filter(function (prop) {
    // aria-xxx and role is acceptable
    return /(^aria-\w+$|^role$)/.test(prop);
  }).forEach(function (prop) {
    ariaObj[prop] = props[prop];
  });
  return ariaObj;
}

/**
 * Convert nodelist to array
 * @see https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/core/createArrayFromMixed.js#L24
 * NodeLists are functions in Safari
 */
function nodeListToArray (nodeList) {
  var length = nodeList.length;

  if (nodeList.hasOwnProperty) {
    return Array.prototype.slice.call(nodeList);
  }

  return new Array(length).fill().map(function (index) {
    return nodeList[index];
  });
}

___$insertStyle(".__react_component_tooltip {\n  border-radius: 3px;\n  display: inline-block;\n  font-size: 13px;\n  left: -999em;\n  opacity: 0;\n  padding: 8px 21px;\n  position: fixed;\n  pointer-events: none;\n  transition: opacity 0.3s ease-out;\n  top: -999em;\n  visibility: hidden;\n  z-index: 999;\n}\n.__react_component_tooltip.allow_hover, .__react_component_tooltip.allow_click {\n  pointer-events: auto;\n}\n.__react_component_tooltip:before, .__react_component_tooltip:after {\n  content: \"\";\n  width: 0;\n  height: 0;\n  position: absolute;\n}\n.__react_component_tooltip.show {\n  opacity: 0.9;\n  margin-top: 0px;\n  margin-left: 0px;\n  visibility: visible;\n}\n.__react_component_tooltip.type-dark {\n  color: #fff;\n  background-color: #222;\n}\n.__react_component_tooltip.type-dark.place-top:after {\n  border-top-color: #222;\n  border-top-style: solid;\n  border-top-width: 6px;\n}\n.__react_component_tooltip.type-dark.place-bottom:after {\n  border-bottom-color: #222;\n  border-bottom-style: solid;\n  border-bottom-width: 6px;\n}\n.__react_component_tooltip.type-dark.place-left:after {\n  border-left-color: #222;\n  border-left-style: solid;\n  border-left-width: 6px;\n}\n.__react_component_tooltip.type-dark.place-right:after {\n  border-right-color: #222;\n  border-right-style: solid;\n  border-right-width: 6px;\n}\n.__react_component_tooltip.type-dark.border {\n  border: 1px solid #fff;\n}\n.__react_component_tooltip.type-dark.border.place-top:before {\n  border-top: 8px solid #fff;\n}\n.__react_component_tooltip.type-dark.border.place-bottom:before {\n  border-bottom: 8px solid #fff;\n}\n.__react_component_tooltip.type-dark.border.place-left:before {\n  border-left: 8px solid #fff;\n}\n.__react_component_tooltip.type-dark.border.place-right:before {\n  border-right: 8px solid #fff;\n}\n.__react_component_tooltip.type-success {\n  color: #fff;\n  background-color: #8DC572;\n}\n.__react_component_tooltip.type-success.place-top:after {\n  border-top-color: #8DC572;\n  border-top-style: solid;\n  border-top-width: 6px;\n}\n.__react_component_tooltip.type-success.place-bottom:after {\n  border-bottom-color: #8DC572;\n  border-bottom-style: solid;\n  border-bottom-width: 6px;\n}\n.__react_component_tooltip.type-success.place-left:after {\n  border-left-color: #8DC572;\n  border-left-style: solid;\n  border-left-width: 6px;\n}\n.__react_component_tooltip.type-success.place-right:after {\n  border-right-color: #8DC572;\n  border-right-style: solid;\n  border-right-width: 6px;\n}\n.__react_component_tooltip.type-success.border {\n  border: 1px solid #fff;\n}\n.__react_component_tooltip.type-success.border.place-top:before {\n  border-top: 8px solid #fff;\n}\n.__react_component_tooltip.type-success.border.place-bottom:before {\n  border-bottom: 8px solid #fff;\n}\n.__react_component_tooltip.type-success.border.place-left:before {\n  border-left: 8px solid #fff;\n}\n.__react_component_tooltip.type-success.border.place-right:before {\n  border-right: 8px solid #fff;\n}\n.__react_component_tooltip.type-warning {\n  color: #fff;\n  background-color: #F0AD4E;\n}\n.__react_component_tooltip.type-warning.place-top:after {\n  border-top-color: #F0AD4E;\n  border-top-style: solid;\n  border-top-width: 6px;\n}\n.__react_component_tooltip.type-warning.place-bottom:after {\n  border-bottom-color: #F0AD4E;\n  border-bottom-style: solid;\n  border-bottom-width: 6px;\n}\n.__react_component_tooltip.type-warning.place-left:after {\n  border-left-color: #F0AD4E;\n  border-left-style: solid;\n  border-left-width: 6px;\n}\n.__react_component_tooltip.type-warning.place-right:after {\n  border-right-color: #F0AD4E;\n  border-right-style: solid;\n  border-right-width: 6px;\n}\n.__react_component_tooltip.type-warning.border {\n  border: 1px solid #fff;\n}\n.__react_component_tooltip.type-warning.border.place-top:before {\n  border-top: 8px solid #fff;\n}\n.__react_component_tooltip.type-warning.border.place-bottom:before {\n  border-bottom: 8px solid #fff;\n}\n.__react_component_tooltip.type-warning.border.place-left:before {\n  border-left: 8px solid #fff;\n}\n.__react_component_tooltip.type-warning.border.place-right:before {\n  border-right: 8px solid #fff;\n}\n.__react_component_tooltip.type-error {\n  color: #fff;\n  background-color: #BE6464;\n}\n.__react_component_tooltip.type-error.place-top:after {\n  border-top-color: #BE6464;\n  border-top-style: solid;\n  border-top-width: 6px;\n}\n.__react_component_tooltip.type-error.place-bottom:after {\n  border-bottom-color: #BE6464;\n  border-bottom-style: solid;\n  border-bottom-width: 6px;\n}\n.__react_component_tooltip.type-error.place-left:after {\n  border-left-color: #BE6464;\n  border-left-style: solid;\n  border-left-width: 6px;\n}\n.__react_component_tooltip.type-error.place-right:after {\n  border-right-color: #BE6464;\n  border-right-style: solid;\n  border-right-width: 6px;\n}\n.__react_component_tooltip.type-error.border {\n  border: 1px solid #fff;\n}\n.__react_component_tooltip.type-error.border.place-top:before {\n  border-top: 8px solid #fff;\n}\n.__react_component_tooltip.type-error.border.place-bottom:before {\n  border-bottom: 8px solid #fff;\n}\n.__react_component_tooltip.type-error.border.place-left:before {\n  border-left: 8px solid #fff;\n}\n.__react_component_tooltip.type-error.border.place-right:before {\n  border-right: 8px solid #fff;\n}\n.__react_component_tooltip.type-info {\n  color: #fff;\n  background-color: #337AB7;\n}\n.__react_component_tooltip.type-info.place-top:after {\n  border-top-color: #337AB7;\n  border-top-style: solid;\n  border-top-width: 6px;\n}\n.__react_component_tooltip.type-info.place-bottom:after {\n  border-bottom-color: #337AB7;\n  border-bottom-style: solid;\n  border-bottom-width: 6px;\n}\n.__react_component_tooltip.type-info.place-left:after {\n  border-left-color: #337AB7;\n  border-left-style: solid;\n  border-left-width: 6px;\n}\n.__react_component_tooltip.type-info.place-right:after {\n  border-right-color: #337AB7;\n  border-right-style: solid;\n  border-right-width: 6px;\n}\n.__react_component_tooltip.type-info.border {\n  border: 1px solid #fff;\n}\n.__react_component_tooltip.type-info.border.place-top:before {\n  border-top: 8px solid #fff;\n}\n.__react_component_tooltip.type-info.border.place-bottom:before {\n  border-bottom: 8px solid #fff;\n}\n.__react_component_tooltip.type-info.border.place-left:before {\n  border-left: 8px solid #fff;\n}\n.__react_component_tooltip.type-info.border.place-right:before {\n  border-right: 8px solid #fff;\n}\n.__react_component_tooltip.type-light {\n  color: #222;\n  background-color: #fff;\n}\n.__react_component_tooltip.type-light.place-top:after {\n  border-top-color: #fff;\n  border-top-style: solid;\n  border-top-width: 6px;\n}\n.__react_component_tooltip.type-light.place-bottom:after {\n  border-bottom-color: #fff;\n  border-bottom-style: solid;\n  border-bottom-width: 6px;\n}\n.__react_component_tooltip.type-light.place-left:after {\n  border-left-color: #fff;\n  border-left-style: solid;\n  border-left-width: 6px;\n}\n.__react_component_tooltip.type-light.place-right:after {\n  border-right-color: #fff;\n  border-right-style: solid;\n  border-right-width: 6px;\n}\n.__react_component_tooltip.type-light.border {\n  border: 1px solid #222;\n}\n.__react_component_tooltip.type-light.border.place-top:before {\n  border-top: 8px solid #222;\n}\n.__react_component_tooltip.type-light.border.place-bottom:before {\n  border-bottom: 8px solid #222;\n}\n.__react_component_tooltip.type-light.border.place-left:before {\n  border-left: 8px solid #222;\n}\n.__react_component_tooltip.type-light.border.place-right:before {\n  border-right: 8px solid #222;\n}\n.__react_component_tooltip.place-top {\n  margin-top: -10px;\n}\n.__react_component_tooltip.place-top:before {\n  border-left: 10px solid transparent;\n  border-right: 10px solid transparent;\n  bottom: -8px;\n  left: 50%;\n  margin-left: -10px;\n}\n.__react_component_tooltip.place-top:after {\n  border-left: 8px solid transparent;\n  border-right: 8px solid transparent;\n  bottom: -6px;\n  left: 50%;\n  margin-left: -8px;\n}\n.__react_component_tooltip.place-bottom {\n  margin-top: 10px;\n}\n.__react_component_tooltip.place-bottom:before {\n  border-left: 10px solid transparent;\n  border-right: 10px solid transparent;\n  top: -8px;\n  left: 50%;\n  margin-left: -10px;\n}\n.__react_component_tooltip.place-bottom:after {\n  border-left: 8px solid transparent;\n  border-right: 8px solid transparent;\n  top: -6px;\n  left: 50%;\n  margin-left: -8px;\n}\n.__react_component_tooltip.place-left {\n  margin-left: -10px;\n}\n.__react_component_tooltip.place-left:before {\n  border-top: 6px solid transparent;\n  border-bottom: 6px solid transparent;\n  right: -8px;\n  top: 50%;\n  margin-top: -5px;\n}\n.__react_component_tooltip.place-left:after {\n  border-top: 5px solid transparent;\n  border-bottom: 5px solid transparent;\n  right: -6px;\n  top: 50%;\n  margin-top: -4px;\n}\n.__react_component_tooltip.place-right {\n  margin-left: 10px;\n}\n.__react_component_tooltip.place-right:before {\n  border-top: 6px solid transparent;\n  border-bottom: 6px solid transparent;\n  left: -8px;\n  top: 50%;\n  margin-top: -5px;\n}\n.__react_component_tooltip.place-right:after {\n  border-top: 5px solid transparent;\n  border-bottom: 5px solid transparent;\n  left: -6px;\n  top: 50%;\n  margin-top: -4px;\n}\n.__react_component_tooltip .multi-line {\n  display: block;\n  padding: 2px 0px;\n  text-align: center;\n}");

var _class, _class2, _temp;

var ReactTooltip = staticMethods(_class = windowListener(_class = customEvent(_class = isCapture(_class = getEffect(_class = bodyMode(_class = trackRemoval(_class = (_temp = _class2 =
/*#__PURE__*/
function (_React$Component) {
  _inherits$1(ReactTooltip, _React$Component);

  function ReactTooltip(props) {
    var _this;

    _classCallCheck$1(this, ReactTooltip);

    _this = _possibleConstructorReturn$1(this, _getPrototypeOf$1(ReactTooltip).call(this, props));
    _this.state = {
      place: props.place || "top",
      // Direction of tooltip
      desiredPlace: props.place || "top",
      type: "dark",
      // Color theme of tooltip
      effect: "float",
      // float or fixed
      show: false,
      border: false,
      offset: {},
      extraClass: "",
      html: false,
      delayHide: 0,
      delayShow: 0,
      event: props.event || null,
      eventOff: props.eventOff || null,
      currentEvent: null,
      // Current mouse event
      currentTarget: null,
      // Current target of mouse event
      ariaProps: parseAria(props),
      // aria- and role attributes
      isEmptyTip: false,
      disable: false,
      possibleCustomEvents: props.possibleCustomEvents || "",
      possibleCustomEventsOff: props.possibleCustomEventsOff || "",
      originTooltip: null,
      isMultiline: false
    };

    _this.bind(["showTooltip", "updateTooltip", "hideTooltip", "hideTooltipOnScroll", "getTooltipContent", "globalRebuild", "globalShow", "globalHide", "onWindowResize", "mouseOnToolTip"]);

    _this.mount = true;
    _this.delayShowLoop = null;
    _this.delayHideLoop = null;
    _this.delayReshow = null;
    _this.intervalUpdateContent = null;
    return _this;
  }
  /**
   * For unify the bind and unbind listener
   */


  _createClass$1(ReactTooltip, [{
    key: "bind",
    value: function bind(methodArray) {
      var _this2 = this;

      methodArray.forEach(function (method) {
        _this2[method] = _this2[method].bind(_this2);
      });
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this$props = this.props;
          _this$props.insecure;
          var resizeHide = _this$props.resizeHide;

      this.bindListener(); // Bind listener for tooltip

      this.bindWindowEvents(resizeHide); // Bind global event for static method
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.mount = false;
      this.clearTimer();
      this.unbindListener();
      this.removeScrollListener();
      this.unbindWindowEvents();
    }
    /**
     * Return if the mouse is on the tooltip.
     * @returns {boolean} true - mouse is on the tooltip
     */

  }, {
    key: "mouseOnToolTip",
    value: function mouseOnToolTip() {
      var show = this.state.show;

      if (show && this.tooltipRef) {
        /* old IE or Firefox work around */
        if (!this.tooltipRef.matches) {
          /* old IE work around */
          if (this.tooltipRef.msMatchesSelector) {
            this.tooltipRef.matches = this.tooltipRef.msMatchesSelector;
          } else {
            /* old Firefox work around */
            this.tooltipRef.matches = this.tooltipRef.mozMatchesSelector;
          }
        }

        return this.tooltipRef.matches(":hover");
      }

      return false;
    }
    /**
     * Pick out corresponded target elements
     */

  }, {
    key: "getTargetArray",
    value: function getTargetArray(id) {
      var targetArray;

      if (!id) {
        targetArray = document.querySelectorAll("[data-tip]:not([data-for])");
      } else {
        var escaped = id.replace(/\\/g, "\\\\").replace(/"/g, '\\"');
        targetArray = document.querySelectorAll("[data-tip][data-for=\"".concat(escaped, "\"]"));
      } // targetArray is a NodeList, convert it to a real array


      return nodeListToArray(targetArray);
    }
    /**
     * Bind listener to the target elements
     * These listeners used to trigger showing or hiding the tooltip
     */

  }, {
    key: "bindListener",
    value: function bindListener() {
      var _this3 = this;

      var _this$props2 = this.props,
          id = _this$props2.id,
          globalEventOff = _this$props2.globalEventOff,
          isCapture = _this$props2.isCapture;
      var targetArray = this.getTargetArray(id);
      targetArray.forEach(function (target) {
        if (target.getAttribute("currentItem") === null) {
          target.setAttribute("currentItem", "false");
        }

        _this3.unbindBasicListener(target);

        if (_this3.isCustomEvent(target)) {
          _this3.customUnbindListener(target);
        }
      });

      if (this.isBodyMode()) {
        this.bindBodyListener(targetArray);
      } else {
        targetArray.forEach(function (target) {
          var isCaptureMode = _this3.isCapture(target);

          var effect = _this3.getEffect(target);

          if (_this3.isCustomEvent(target)) {
            _this3.customBindListener(target);

            return;
          }

          target.addEventListener("mouseenter", _this3.showTooltip, isCaptureMode);

          if (effect === "float") {
            target.addEventListener("mousemove", _this3.updateTooltip, isCaptureMode);
          }

          target.addEventListener("mouseleave", _this3.hideTooltip, isCaptureMode);
        });
      } // Global event to hide tooltip


      if (globalEventOff) {
        window.removeEventListener(globalEventOff, this.hideTooltip);
        window.addEventListener(globalEventOff, this.hideTooltip, isCapture);
      } // Track removal of targetArray elements from DOM


      this.bindRemovalTracker();
    }
    /**
     * Unbind listeners on target elements
     */

  }, {
    key: "unbindListener",
    value: function unbindListener() {
      var _this4 = this;

      var _this$props3 = this.props,
          id = _this$props3.id,
          globalEventOff = _this$props3.globalEventOff;

      if (this.isBodyMode()) {
        this.unbindBodyListener();
      } else {
        var targetArray = this.getTargetArray(id);
        targetArray.forEach(function (target) {
          _this4.unbindBasicListener(target);

          if (_this4.isCustomEvent(target)) _this4.customUnbindListener(target);
        });
      }

      if (globalEventOff) window.removeEventListener(globalEventOff, this.hideTooltip);
      this.unbindRemovalTracker();
    }
    /**
     * Invoke this before bind listener and unmount the component
     * it is necessary to invoke this even when binding custom event
     * so that the tooltip can switch between custom and default listener
     */

  }, {
    key: "unbindBasicListener",
    value: function unbindBasicListener(target) {
      var isCaptureMode = this.isCapture(target);
      target.removeEventListener("mouseenter", this.showTooltip, isCaptureMode);
      target.removeEventListener("mousemove", this.updateTooltip, isCaptureMode);
      target.removeEventListener("mouseleave", this.hideTooltip, isCaptureMode);
    }
  }, {
    key: "getTooltipContent",
    value: function getTooltipContent() {
      var _this$props4 = this.props,
          getContent = _this$props4.getContent,
          children = _this$props4.children; // Generate tooltip content

      var content;

      if (getContent) {
        if (Array.isArray(getContent)) {
          content = getContent[0] && getContent[0](this.state.originTooltip);
        } else {
          content = getContent(this.state.originTooltip);
        }
      }

      return getTipContent(this.state.originTooltip, children, content, this.state.isMultiline);
    }
  }, {
    key: "isEmptyTip",
    value: function isEmptyTip(placeholder) {
      return typeof placeholder === "string" && placeholder === "" || placeholder === null;
    }
    /**
     * When mouse enter, show the tooltip
     */

  }, {
    key: "showTooltip",
    value: function showTooltip(e, isGlobalCall) {
      if (isGlobalCall) {
        // Don't trigger other elements belongs to other ReactTooltip
        var targetArray = this.getTargetArray(this.props.id);
        var isMyElement = targetArray.some(function (ele) {
          return ele === e.currentTarget;
        });
        if (!isMyElement) return;
      } // Get the tooltip content
      // calculate in this phrase so that tip width height can be detected


      var _this$props5 = this.props,
          multiline = _this$props5.multiline,
          getContent = _this$props5.getContent;
      var originTooltip = e.currentTarget.getAttribute("data-tip");
      var isMultiline = e.currentTarget.getAttribute("data-multiline") || multiline || false; // If it is focus event or called by ReactTooltip.show, switch to `solid` effect

      var switchToSolid = e instanceof window.FocusEvent || isGlobalCall; // if it needs to skip adding hide listener to scroll

      var scrollHide = true;

      if (e.currentTarget.getAttribute("data-scroll-hide")) {
        scrollHide = e.currentTarget.getAttribute("data-scroll-hide") === "true";
      } else if (this.props.scrollHide != null) {
        scrollHide = this.props.scrollHide;
      } // Make sure the correct place is set


      var desiredPlace = e.currentTarget.getAttribute("data-place") || this.props.place || "top";
      var effect = switchToSolid && "solid" || this.getEffect(e.currentTarget);
      var offset = e.currentTarget.getAttribute("data-offset") || this.props.offset || {};
      var result = getPosition(e, e.currentTarget, this.tooltipRef, desiredPlace, desiredPlace, effect, offset);

      if (result.position && this.props.overridePosition) {
        result.position = this.props.overridePosition(result.position, e.currentTarget, this.tooltipRef, desiredPlace, desiredPlace, effect, offset);
      }

      var place = result.isNewState ? result.newState.place : desiredPlace; // To prevent previously created timers from triggering

      this.clearTimer();
      var target = e.currentTarget;
      var reshowDelay = this.state.show ? target.getAttribute("data-delay-update") || this.props.delayUpdate : 0;
      var self = this;

      var updateState = function updateState() {
        self.setState({
          originTooltip: originTooltip,
          isMultiline: isMultiline,
          desiredPlace: desiredPlace,
          place: place,
          type: target.getAttribute("data-type") || self.props.type || "dark",
          effect: effect,
          offset: offset,
          html: target.getAttribute("data-html") ? target.getAttribute("data-html") === "true" : self.props.html || false,
          delayShow: target.getAttribute("data-delay-show") || self.props.delayShow || 0,
          delayHide: target.getAttribute("data-delay-hide") || self.props.delayHide || 0,
          delayUpdate: target.getAttribute("data-delay-update") || self.props.delayUpdate || 0,
          border: target.getAttribute("data-border") ? target.getAttribute("data-border") === "true" : self.props.border || false,
          extraClass: target.getAttribute("data-class") || self.props["class"] || self.props.className || "",
          disable: target.getAttribute("data-tip-disable") ? target.getAttribute("data-tip-disable") === "true" : self.props.disable || false,
          currentTarget: target
        }, function () {
          if (scrollHide) self.addScrollListener(self.state.currentTarget);
          self.updateTooltip(e);

          if (getContent && Array.isArray(getContent)) {
            self.intervalUpdateContent = setInterval(function () {
              if (self.mount) {
                var _getContent = self.props.getContent;
                var placeholder = getTipContent(originTooltip, "", _getContent[0](), isMultiline);
                var isEmptyTip = self.isEmptyTip(placeholder);
                self.setState({
                  isEmptyTip: isEmptyTip
                });
                self.updatePosition();
              }
            }, getContent[1]);
          }
        });
      }; // If there is no delay call immediately, don't allow events to get in first.


      if (reshowDelay) {
        this.delayReshow = setTimeout(updateState, reshowDelay);
      } else {
        updateState();
      }
    }
    /**
     * When mouse hover, update tool tip
     */

  }, {
    key: "updateTooltip",
    value: function updateTooltip(e) {
      var _this5 = this;

      var _this$state = this.state,
          delayShow = _this$state.delayShow,
          disable = _this$state.disable;
      var afterShow = this.props.afterShow;
      var placeholder = this.getTooltipContent();
      var delayTime = parseInt(delayShow, 10);
      var eventTarget = e.currentTarget || e.target; // Check if the mouse is actually over the tooltip, if so don't hide the tooltip

      if (this.mouseOnToolTip()) {
        return;
      }

      if (this.isEmptyTip(placeholder) || disable) return; // if the tooltip is empty, disable the tooltip

      var updateState = function updateState() {
        if (Array.isArray(placeholder) && placeholder.length > 0 || placeholder) {
          var isInvisible = !_this5.state.show;

          _this5.setState({
            currentEvent: e,
            currentTarget: eventTarget,
            show: true
          }, function () {
            _this5.updatePosition();

            if (isInvisible && afterShow) afterShow(e);
          });
        }
      };

      clearTimeout(this.delayShowLoop);

      if (delayShow) {
        this.delayShowLoop = setTimeout(updateState, delayTime);
      } else {
        updateState();
      }
    }
    /*
     * If we're mousing over the tooltip remove it when we leave.
     */

  }, {
    key: "listenForTooltipExit",
    value: function listenForTooltipExit() {
      var show = this.state.show;

      if (show && this.tooltipRef) {
        this.tooltipRef.addEventListener("mouseleave", this.hideTooltip);
      }
    }
  }, {
    key: "removeListenerForTooltipExit",
    value: function removeListenerForTooltipExit() {
      var show = this.state.show;

      if (show && this.tooltipRef) {
        this.tooltipRef.removeEventListener("mouseleave", this.hideTooltip);
      }
    }
    /**
     * When mouse leave, hide tooltip
     */

  }, {
    key: "hideTooltip",
    value: function hideTooltip(e, hasTarget) {
      var _this6 = this;

      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
        isScroll: false
      };
      var disable = this.state.disable;
      var isScroll = options.isScroll;
      var delayHide = isScroll ? 0 : this.state.delayHide;
      var afterHide = this.props.afterHide;
      var placeholder = this.getTooltipContent();
      if (!this.mount) return;
      if (this.isEmptyTip(placeholder) || disable) return; // if the tooltip is empty, disable the tooltip

      if (hasTarget) {
        // Don't trigger other elements belongs to other ReactTooltip
        var targetArray = this.getTargetArray(this.props.id);
        var isMyElement = targetArray.some(function (ele) {
          return ele === e.currentTarget;
        });
        if (!isMyElement || !this.state.show) return;
      }

      var resetState = function resetState() {
        var isVisible = _this6.state.show; // Check if the mouse is actually over the tooltip, if so don't hide the tooltip

        if (_this6.mouseOnToolTip()) {
          _this6.listenForTooltipExit();

          return;
        }

        _this6.removeListenerForTooltipExit();

        _this6.setState({
          show: false
        }, function () {
          _this6.removeScrollListener();

          if (isVisible && afterHide) afterHide(e);
        });
      };

      this.clearTimer();

      if (delayHide) {
        this.delayHideLoop = setTimeout(resetState, parseInt(delayHide, 10));
      } else {
        resetState();
      }
    }
    /**
     * When scroll, hide tooltip
     */

  }, {
    key: "hideTooltipOnScroll",
    value: function hideTooltipOnScroll(event, hasTarget) {
      this.hideTooltip(event, hasTarget, {
        isScroll: true
      });
    }
    /**
     * Add scroll event listener when tooltip show
     * automatically hide the tooltip when scrolling
     */

  }, {
    key: "addScrollListener",
    value: function addScrollListener(currentTarget) {
      var isCaptureMode = this.isCapture(currentTarget);
      window.addEventListener("scroll", this.hideTooltipOnScroll, isCaptureMode);
    }
  }, {
    key: "removeScrollListener",
    value: function removeScrollListener() {
      window.removeEventListener("scroll", this.hideTooltipOnScroll);
    } // Calculation the position

  }, {
    key: "updatePosition",
    value: function updatePosition() {
      var _this7 = this;

      var _this$state2 = this.state,
          currentEvent = _this$state2.currentEvent,
          currentTarget = _this$state2.currentTarget,
          place = _this$state2.place,
          desiredPlace = _this$state2.desiredPlace,
          effect = _this$state2.effect,
          offset = _this$state2.offset;
      var node = this.tooltipRef;
      var result = getPosition(currentEvent, currentTarget, node, place, desiredPlace, effect, offset);

      if (result.position && this.props.overridePosition) {
        result.position = this.props.overridePosition(result.position, currentEvent, currentTarget, node, place, desiredPlace, effect, offset);
      }

      if (result.isNewState) {
        // Switch to reverse placement
        return this.setState(result.newState, function () {
          _this7.updatePosition();
        });
      } // Set tooltip position


      node.style.left = result.position.left + "px";
      node.style.top = result.position.top + "px";
    }
    /**
     * Set style tag in header
     * in this way we can insert default css
     */

    /* setStyleHeader() {
      const head = document.getElementsByTagName("head")[0];
      if (!head.querySelector('style[id="react-tooltip"]')) {
        const tag = document.createElement("style");
        tag.id = "react-tooltip";
        tag.innerHTML = cssStyle; */

    /* eslint-disable */

    /*      if (typeof __webpack_nonce__ !== 'undefined' && __webpack_nonce__) {
            tag.setAttribute('nonce', __webpack_nonce__)
          }*/

    /* eslint-enable */

    /*    head.insertBefore(tag, head.firstChild);
      }
    } */

    /**
     * CLear all kinds of timeout of interval
     */

  }, {
    key: "clearTimer",
    value: function clearTimer() {
      clearTimeout(this.delayShowLoop);
      clearTimeout(this.delayHideLoop);
      clearTimeout(this.delayReshow);
      clearInterval(this.intervalUpdateContent);
    }
  }, {
    key: "render",
    value: function render() {
      var _this8 = this;

      var _this$state3 = this.state,
          extraClass = _this$state3.extraClass,
          html = _this$state3.html,
          ariaProps = _this$state3.ariaProps,
          disable = _this$state3.disable;
      var placeholder = this.getTooltipContent();
      var isEmptyTip = this.isEmptyTip(placeholder);
      var tooltipClass = "__react_component_tooltip" + (this.state.show && !disable && !isEmptyTip ? " show" : "") + (this.state.border ? " border" : "") + " place-".concat(this.state.place) + // top, bottom, left, right
      " type-".concat(this.state.type) + ( // dark, success, warning, error, info, light
      this.props.delayUpdate ? " allow_hover" : "") + (this.props.clickable ? " allow_click" : "");
      var Wrapper = this.props.wrapper;

      if (ReactTooltip.supportedWrappers.indexOf(Wrapper) < 0) {
        Wrapper = ReactTooltip.defaultProps.wrapper;
      }

      var wrapperClassName = [tooltipClass, extraClass].filter(Boolean).join(" ");

      if (html) {
        return React__default.createElement(Wrapper, _extends$4({
          className: wrapperClassName,
          id: this.props.id,
          ref: function ref(_ref) {
            return _this8.tooltipRef = _ref;
          }
        }, ariaProps, {
          "data-id": "tooltip",
          dangerouslySetInnerHTML: {
            __html: placeholder
          }
        }));
      } else {
        return React__default.createElement(Wrapper, _extends$4({
          className: wrapperClassName,
          id: this.props.id
        }, ariaProps, {
          ref: function ref(_ref2) {
            return _this8.tooltipRef = _ref2;
          },
          "data-id": "tooltip"
        }), placeholder);
      }
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, prevState) {
      var ariaProps = prevState.ariaProps;
      var newAriaProps = parseAria(nextProps);
      var isChanged = Object.keys(newAriaProps).some(function (props) {
        return newAriaProps[props] !== ariaProps[props];
      });

      if (!isChanged) {
        return null;
      }

      return _objectSpread2({}, prevState, {
        ariaProps: newAriaProps
      });
    }
  }]);

  return ReactTooltip;
}(React__default.Component), _defineProperty$1(_class2, "propTypes", {
  children: propTypes.any,
  place: propTypes.string,
  type: propTypes.string,
  effect: propTypes.string,
  offset: propTypes.object,
  multiline: propTypes.bool,
  border: propTypes.bool,
  insecure: propTypes.bool,
  "class": propTypes.string,
  className: propTypes.string,
  id: propTypes.string,
  html: propTypes.bool,
  delayHide: propTypes.number,
  delayUpdate: propTypes.number,
  delayShow: propTypes.number,
  event: propTypes.string,
  eventOff: propTypes.string,
  watchWindow: propTypes.bool,
  isCapture: propTypes.bool,
  globalEventOff: propTypes.string,
  getContent: propTypes.any,
  afterShow: propTypes.func,
  afterHide: propTypes.func,
  overridePosition: propTypes.func,
  disable: propTypes.bool,
  scrollHide: propTypes.bool,
  resizeHide: propTypes.bool,
  wrapper: propTypes.string,
  bodyMode: propTypes.bool,
  possibleCustomEvents: propTypes.string,
  possibleCustomEventsOff: propTypes.string,
  clickable: propTypes.bool
}), _defineProperty$1(_class2, "defaultProps", {
  insecure: true,
  resizeHide: true,
  wrapper: "div",
  clickable: false
}), _defineProperty$1(_class2, "supportedWrappers", ["div", "span"]), _defineProperty$1(_class2, "displayName", "ReactTooltip"), _temp)) || _class) || _class) || _class) || _class) || _class) || _class) || _class;

var server_node = {exports: {}};

var reactDomServer_node_production_min = {};

/** @license React v17.0.2
 * react-dom-server.node.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var l=objectAssign$2,n=React__default,aa=require$$2$1;function p(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return "Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}
var q=60106,r=60107,u=60108,z=60114,B=60109,ba=60110,ca=60112,D=60113,da=60120,ea=60115,fa=60116,ha=60121,ia=60117,ja=60119,ka=60129,la=60131;
if("function"===typeof Symbol&&Symbol.for){var E=Symbol.for;q=E("react.portal");r=E("react.fragment");u=E("react.strict_mode");z=E("react.profiler");B=E("react.provider");ba=E("react.context");ca=E("react.forward_ref");D=E("react.suspense");da=E("react.suspense_list");ea=E("react.memo");fa=E("react.lazy");ha=E("react.block");ia=E("react.fundamental");ja=E("react.scope");ka=E("react.debug_trace_mode");la=E("react.legacy_hidden");}
function F(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case r:return "Fragment";case q:return "Portal";case z:return "Profiler";case u:return "StrictMode";case D:return "Suspense";case da:return "SuspenseList"}if("object"===typeof a)switch(a.$$typeof){case ba:return (a.displayName||"Context")+".Consumer";case B:return (a._context.displayName||"Context")+".Provider";case ca:var b=a.render;b=b.displayName||b.name||"";return a.displayName||
(""!==b?"ForwardRef("+b+")":"ForwardRef");case ea:return F(a.type);case ha:return F(a._render);case fa:b=a._payload;a=a._init;try{return F(a(b))}catch(c){}}return null}var ma=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,na={};function I(a,b){for(var c=a._threadCount|0;c<=b;c++)a[c]=a._currentValue2,a._threadCount=c+1;}function oa(a,b,c,d){if(d&&(d=a.contextType,"object"===typeof d&&null!==d))return I(d,c),d[c];if(a=a.contextTypes){c={};for(var f in a)c[f]=b[f];b=c;}else b=na;return b}
for(var J=new Uint16Array(16),K=0;15>K;K++)J[K]=K+1;J[15]=0;var pa=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,qa=Object.prototype.hasOwnProperty,ra={},sa={};
function ta(a){if(qa.call(sa,a))return !0;if(qa.call(ra,a))return !1;if(pa.test(a))return sa[a]=!0;ra[a]=!0;return !1}function ua(a,b,c,d){if(null!==c&&0===c.type)return !1;switch(typeof b){case "function":case "symbol":return !0;case "boolean":if(d)return !1;if(null!==c)return !c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return "data-"!==a&&"aria-"!==a;default:return !1}}
function va(a,b,c,d){if(null===b||"undefined"===typeof b||ua(a,b,c,d))return !0;if(d)return !1;if(null!==c)switch(c.type){case 3:return !b;case 4:return !1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return !1}function M(a,b,c,d,f,h,t){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=f;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=h;this.removeEmptyString=t;}var N={};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){N[a]=new M(a,0,!1,a,null,!1,!1);});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];N[b]=new M(b,1,!1,a[1],null,!1,!1);});["contentEditable","draggable","spellCheck","value"].forEach(function(a){N[a]=new M(a,2,!1,a.toLowerCase(),null,!1,!1);});
["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){N[a]=new M(a,2,!1,a,null,!1,!1);});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){N[a]=new M(a,3,!1,a.toLowerCase(),null,!1,!1);});
["checked","multiple","muted","selected"].forEach(function(a){N[a]=new M(a,3,!0,a,null,!1,!1);});["capture","download"].forEach(function(a){N[a]=new M(a,4,!1,a,null,!1,!1);});["cols","rows","size","span"].forEach(function(a){N[a]=new M(a,6,!1,a,null,!1,!1);});["rowSpan","start"].forEach(function(a){N[a]=new M(a,5,!1,a.toLowerCase(),null,!1,!1);});var wa=/[\-:]([a-z])/g;function xa(a){return a[1].toUpperCase()}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(wa,
xa);N[b]=new M(b,1,!1,a,null,!1,!1);});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(wa,xa);N[b]=new M(b,1,!1,a,"http://www.w3.org/1999/xlink",!1,!1);});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(wa,xa);N[b]=new M(b,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1,!1);});["tabIndex","crossOrigin"].forEach(function(a){N[a]=new M(a,1,!1,a.toLowerCase(),null,!1,!1);});
N.xlinkHref=new M("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(a){N[a]=new M(a,1,!1,a.toLowerCase(),null,!0,!0);});var ya=/["'&<>]/;
function O(a){if("boolean"===typeof a||"number"===typeof a)return ""+a;a=""+a;var b=ya.exec(a);if(b){var c="",d,f=0;for(d=b.index;d<a.length;d++){switch(a.charCodeAt(d)){case 34:b="&quot;";break;case 38:b="&amp;";break;case 39:b="&#x27;";break;case 60:b="&lt;";break;case 62:b="&gt;";break;default:continue}f!==d&&(c+=a.substring(f,d));f=d+1;c+=b;}a=f!==d?c+a.substring(f,d):c;}return a}
function za(a,b){var c=N.hasOwnProperty(a)?N[a]:null;var d;if(d="style"!==a)d=null!==c?0===c.type:!(2<a.length)||"o"!==a[0]&&"O"!==a[0]||"n"!==a[1]&&"N"!==a[1]?!1:!0;if(d||va(a,b,c,!1))return "";if(null!==c){a=c.attributeName;d=c.type;if(3===d||4===d&&!0===b)return a+'=""';c.sanitizeURL&&(b=""+b);return a+'="'+(O(b)+'"')}return ta(a)?a+'="'+(O(b)+'"'):""}function Aa(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}
var Ba="function"===typeof Object.is?Object.is:Aa,P=null,Q=null,R=null,S=!1,T=!1,U=null,V=0;function W(){if(null===P)throw Error(p(321));return P}function Ca(){if(0<V)throw Error(p(312));return {memoizedState:null,queue:null,next:null}}function Da(){null===R?null===Q?(S=!1,Q=R=Ca()):(S=!0,R=Q):null===R.next?(S=!1,R=R.next=Ca()):(S=!0,R=R.next);return R}function Ea(a,b,c,d){for(;T;)T=!1,V+=1,R=null,c=a(b,d);Fa();return c}function Fa(){P=null;T=!1;Q=null;V=0;R=U=null;}
function Ga(a,b){return "function"===typeof b?b(a):b}function Ha(a,b,c){P=W();R=Da();if(S){var d=R.queue;b=d.dispatch;if(null!==U&&(c=U.get(d),void 0!==c)){U.delete(d);d=R.memoizedState;do d=a(d,c.action),c=c.next;while(null!==c);R.memoizedState=d;return [d,b]}return [R.memoizedState,b]}a=a===Ga?"function"===typeof b?b():b:void 0!==c?c(b):b;R.memoizedState=a;a=R.queue={last:null,dispatch:null};a=a.dispatch=Ia.bind(null,P,a);return [R.memoizedState,a]}
function Ja(a,b){P=W();R=Da();b=void 0===b?null:b;if(null!==R){var c=R.memoizedState;if(null!==c&&null!==b){var d=c[1];a:if(null===d)d=!1;else {for(var f=0;f<d.length&&f<b.length;f++)if(!Ba(b[f],d[f])){d=!1;break a}d=!0;}if(d)return c[0]}}a=a();R.memoizedState=[a,b];return a}function Ia(a,b,c){if(!(25>V))throw Error(p(301));if(a===P)if(T=!0,a={action:c,next:null},null===U&&(U=new Map),c=U.get(b),void 0===c)U.set(b,a);else {for(b=c;null!==b.next;)b=b.next;b.next=a;}}function Ka(){}
var X=null,La={readContext:function(a){var b=X.threadID;I(a,b);return a[b]},useContext:function(a){W();var b=X.threadID;I(a,b);return a[b]},useMemo:Ja,useReducer:Ha,useRef:function(a){P=W();R=Da();var b=R.memoizedState;return null===b?(a={current:a},R.memoizedState=a):b},useState:function(a){return Ha(Ga,a)},useLayoutEffect:function(){},useCallback:function(a,b){return Ja(function(){return a},b)},useImperativeHandle:Ka,useEffect:Ka,useDebugValue:Ka,useDeferredValue:function(a){W();return a},useTransition:function(){W();
return [function(a){a();},!1]},useOpaqueIdentifier:function(){return (X.identifierPrefix||"")+"R:"+(X.uniqueID++).toString(36)},useMutableSource:function(a,b){W();return b(a._source)}},Ma={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function Na(a){switch(a){case "svg":return "http://www.w3.org/2000/svg";case "math":return "http://www.w3.org/1998/Math/MathML";default:return "http://www.w3.org/1999/xhtml"}}
var Oa={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0},Pa=l({menuitem:!0},Oa),Y={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,
gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Qa=["Webkit","ms","Moz","O"];Object.keys(Y).forEach(function(a){Qa.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Y[b]=Y[a];});});
var Ra=/([A-Z])/g,Sa=/^ms-/,Z=n.Children.toArray,Ta=ma.ReactCurrentDispatcher,Ua={listing:!0,pre:!0,textarea:!0},Va=/^[a-zA-Z][a-zA-Z:_\.\-\d]*$/,Wa={},Xa={};function Ya(a){if(void 0===a||null===a)return a;var b="";n.Children.forEach(a,function(a){null!=a&&(b+=a);});return b}var Za=Object.prototype.hasOwnProperty,$a={children:null,dangerouslySetInnerHTML:null,suppressContentEditableWarning:null,suppressHydrationWarning:null};function ab(a,b){if(void 0===a)throw Error(p(152,F(b)||"Component"));}
function bb(a,b,c){function d(d,h){var e=h.prototype&&h.prototype.isReactComponent,f=oa(h,b,c,e),t=[],g=!1,m={isMounted:function(){return !1},enqueueForceUpdate:function(){if(null===t)return null},enqueueReplaceState:function(a,b){g=!0;t=[b];},enqueueSetState:function(a,b){if(null===t)return null;t.push(b);}};if(e){if(e=new h(d.props,f,m),"function"===typeof h.getDerivedStateFromProps){var k=h.getDerivedStateFromProps.call(null,d.props,e.state);null!=k&&(e.state=l({},e.state,k));}}else if(P={},e=h(d.props,
f,m),e=Ea(h,d.props,e,f),null==e||null==e.render){a=e;ab(a,h);return}e.props=d.props;e.context=f;e.updater=m;m=e.state;void 0===m&&(e.state=m=null);if("function"===typeof e.UNSAFE_componentWillMount||"function"===typeof e.componentWillMount)if("function"===typeof e.componentWillMount&&"function"!==typeof h.getDerivedStateFromProps&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&"function"!==typeof h.getDerivedStateFromProps&&e.UNSAFE_componentWillMount(),t.length){m=t;var v=
g;t=null;g=!1;if(v&&1===m.length)e.state=m[0];else {k=v?m[0]:e.state;var H=!0;for(v=v?1:0;v<m.length;v++){var x=m[v];x="function"===typeof x?x.call(e,k,d.props,f):x;null!=x&&(H?(H=!1,k=l({},k,x)):l(k,x));}e.state=k;}}else t=null;a=e.render();ab(a,h);if("function"===typeof e.getChildContext&&(d=h.childContextTypes,"object"===typeof d)){var y=e.getChildContext();for(var A in y)if(!(A in d))throw Error(p(108,F(h)||"Unknown",A));}y&&(b=l({},b,y));}for(;n.isValidElement(a);){var f=a,h=f.type;if("function"!==
typeof h)break;d(f,h);}return {child:a,context:b}}
var cb=function(){function a(a,b,f){n.isValidElement(a)?a.type!==r?a=[a]:(a=a.props.children,a=n.isValidElement(a)?[a]:Z(a)):a=Z(a);a={type:null,domNamespace:Ma.html,children:a,childIndex:0,context:na,footer:""};var c=J[0];if(0===c){var d=J;c=d.length;var g=2*c;if(!(65536>=g))throw Error(p(304));var e=new Uint16Array(g);e.set(d);J=e;J[0]=c+1;for(d=c;d<g-1;d++)J[d]=d+1;J[g-1]=0;}else J[0]=J[c];this.threadID=c;this.stack=[a];this.exhausted=!1;this.currentSelectValue=null;this.previousWasTextNode=!1;
this.makeStaticMarkup=b;this.suspenseDepth=0;this.contextIndex=-1;this.contextStack=[];this.contextValueStack=[];this.uniqueID=0;this.identifierPrefix=f&&f.identifierPrefix||"";}var b=a.prototype;b.destroy=function(){if(!this.exhausted){this.exhausted=!0;this.clearProviders();var a=this.threadID;J[a]=J[0];J[0]=a;}};b.pushProvider=function(a){var b=++this.contextIndex,c=a.type._context,h=this.threadID;I(c,h);var t=c[h];this.contextStack[b]=c;this.contextValueStack[b]=t;c[h]=a.props.value;};b.popProvider=
function(){var a=this.contextIndex,b=this.contextStack[a],f=this.contextValueStack[a];this.contextStack[a]=null;this.contextValueStack[a]=null;this.contextIndex--;b[this.threadID]=f;};b.clearProviders=function(){for(var a=this.contextIndex;0<=a;a--)this.contextStack[a][this.threadID]=this.contextValueStack[a];};b.read=function(a){if(this.exhausted)return null;var b=X;X=this;var c=Ta.current;Ta.current=La;try{for(var h=[""],t=!1;h[0].length<a;){if(0===this.stack.length){this.exhausted=!0;var g=this.threadID;
J[g]=J[0];J[0]=g;break}var e=this.stack[this.stack.length-1];if(t||e.childIndex>=e.children.length){var L=e.footer;""!==L&&(this.previousWasTextNode=!1);this.stack.pop();if("select"===e.type)this.currentSelectValue=null;else if(null!=e.type&&null!=e.type.type&&e.type.type.$$typeof===B)this.popProvider(e.type);else if(e.type===D){this.suspenseDepth--;var G=h.pop();if(t){t=!1;var C=e.fallbackFrame;if(!C)throw Error(p(303));this.stack.push(C);h[this.suspenseDepth]+="\x3c!--$!--\x3e";continue}else h[this.suspenseDepth]+=
G;}h[this.suspenseDepth]+=L;}else {var m=e.children[e.childIndex++],k="";try{k+=this.render(m,e.context,e.domNamespace);}catch(v){if(null!=v&&"function"===typeof v.then)throw Error(p(294));throw v;}finally{}h.length<=this.suspenseDepth&&h.push("");h[this.suspenseDepth]+=k;}}return h[0]}finally{Ta.current=c,X=b,Fa();}};b.render=function(a,b,f){if("string"===typeof a||"number"===typeof a){f=""+a;if(""===f)return "";if(this.makeStaticMarkup)return O(f);if(this.previousWasTextNode)return "\x3c!-- --\x3e"+O(f);
this.previousWasTextNode=!0;return O(f)}b=bb(a,b,this.threadID);a=b.child;b=b.context;if(null===a||!1===a)return "";if(!n.isValidElement(a)){if(null!=a&&null!=a.$$typeof){f=a.$$typeof;if(f===q)throw Error(p(257));throw Error(p(258,f.toString()));}a=Z(a);this.stack.push({type:null,domNamespace:f,children:a,childIndex:0,context:b,footer:""});return ""}var c=a.type;if("string"===typeof c)return this.renderDOM(a,b,f);switch(c){case la:case ka:case u:case z:case da:case r:return a=Z(a.props.children),this.stack.push({type:null,
domNamespace:f,children:a,childIndex:0,context:b,footer:""}),"";case D:throw Error(p(294));case ja:throw Error(p(343));}if("object"===typeof c&&null!==c)switch(c.$$typeof){case ca:P={};var d=c.render(a.props,a.ref);d=Ea(c.render,a.props,d,a.ref);d=Z(d);this.stack.push({type:null,domNamespace:f,children:d,childIndex:0,context:b,footer:""});return "";case ea:return a=[n.createElement(c.type,l({ref:a.ref},a.props))],this.stack.push({type:null,domNamespace:f,children:a,childIndex:0,context:b,footer:""}),
"";case B:return c=Z(a.props.children),f={type:a,domNamespace:f,children:c,childIndex:0,context:b,footer:""},this.pushProvider(a),this.stack.push(f),"";case ba:c=a.type;d=a.props;var g=this.threadID;I(c,g);c=Z(d.children(c[g]));this.stack.push({type:a,domNamespace:f,children:c,childIndex:0,context:b,footer:""});return "";case ia:throw Error(p(338));case fa:return c=a.type,d=c._init,c=d(c._payload),a=[n.createElement(c,l({ref:a.ref},a.props))],this.stack.push({type:null,domNamespace:f,children:a,childIndex:0,
context:b,footer:""}),""}throw Error(p(130,null==c?c:typeof c,""));};b.renderDOM=function(a,b,f){var c=a.type.toLowerCase();if(!Wa.hasOwnProperty(c)){if(!Va.test(c))throw Error(p(65,c));Wa[c]=!0;}var d=a.props;if("input"===c)d=l({type:void 0},d,{defaultChecked:void 0,defaultValue:void 0,value:null!=d.value?d.value:d.defaultValue,checked:null!=d.checked?d.checked:d.defaultChecked});else if("textarea"===c){var g=d.value;if(null==g){g=d.defaultValue;var e=d.children;if(null!=e){if(null!=
g)throw Error(p(92));if(Array.isArray(e)){if(!(1>=e.length))throw Error(p(93));e=e[0];}g=""+e;}null==g&&(g="");}d=l({},d,{value:void 0,children:""+g});}else if("select"===c)this.currentSelectValue=null!=d.value?d.value:d.defaultValue,d=l({},d,{value:void 0});else if("option"===c){e=this.currentSelectValue;var L=Ya(d.children);if(null!=e){var G=null!=d.value?d.value+"":L;g=!1;if(Array.isArray(e))for(var C=0;C<e.length;C++){if(""+e[C]===G){g=!0;break}}else g=""+e===G;d=l({selected:void 0,children:void 0},
d,{selected:g,children:L});}}if(g=d){if(Pa[c]&&(null!=g.children||null!=g.dangerouslySetInnerHTML))throw Error(p(137,c));if(null!=g.dangerouslySetInnerHTML){if(null!=g.children)throw Error(p(60));if(!("object"===typeof g.dangerouslySetInnerHTML&&"__html"in g.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=g.style&&"object"!==typeof g.style)throw Error(p(62));}g=d;e=this.makeStaticMarkup;L=1===this.stack.length;G="<"+a.type;b:if(-1===c.indexOf("-"))C="string"===typeof g.is;else switch(c){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":C=
!1;break b;default:C=!0;}for(w in g)if(Za.call(g,w)){var m=g[w];if(null!=m){if("style"===w){var k=void 0,v="",H="";for(k in m)if(m.hasOwnProperty(k)){var x=0===k.indexOf("--"),y=m[k];if(null!=y){if(x)var A=k;else if(A=k,Xa.hasOwnProperty(A))A=Xa[A];else {var eb=A.replace(Ra,"-$1").toLowerCase().replace(Sa,"-ms-");A=Xa[A]=eb;}v+=H+A+":";H=k;x=null==y||"boolean"===typeof y||""===y?"":x||"number"!==typeof y||0===y||Y.hasOwnProperty(H)&&Y[H]?(""+y).trim():y+"px";v+=x;H=";";}}m=v||null;}k=null;C?$a.hasOwnProperty(w)||
(k=w,k=ta(k)&&null!=m?k+'="'+(O(m)+'"'):""):k=za(w,m);k&&(G+=" "+k);}}e||L&&(G+=' data-reactroot=""');var w=G;g="";Oa.hasOwnProperty(c)?w+="/>":(w+=">",g="</"+a.type+">");a:{e=d.dangerouslySetInnerHTML;if(null!=e){if(null!=e.__html){e=e.__html;break a}}else if(e=d.children,"string"===typeof e||"number"===typeof e){e=O(e);break a}e=null;}null!=e?(d=[],Ua.hasOwnProperty(c)&&"\n"===e.charAt(0)&&(w+="\n"),w+=e):d=Z(d.children);a=a.type;f=null==f||"http://www.w3.org/1999/xhtml"===f?Na(a):"http://www.w3.org/2000/svg"===
f&&"foreignObject"===a?"http://www.w3.org/1999/xhtml":f;this.stack.push({domNamespace:f,type:c,children:d,childIndex:0,context:b,footer:g});this.previousWasTextNode=!1;return w};return a}();function db(a,b){a.prototype=Object.create(b.prototype);a.prototype.constructor=a;a.__proto__=b;}
var fb=function(a){function b(b,c,h){var d=a.call(this,{})||this;d.partialRenderer=new cb(b,c,h);return d}db(b,a);var c=b.prototype;c._destroy=function(a,b){this.partialRenderer.destroy();b(a);};c._read=function(a){try{this.push(this.partialRenderer.read(a));}catch(f){this.destroy(f);}};return b}(aa.Readable);reactDomServer_node_production_min.renderToNodeStream=function(a,b){return new fb(a,!1,b)};reactDomServer_node_production_min.renderToStaticMarkup=function(a,b){a=new cb(a,!0,b);try{return a.read(Infinity)}finally{a.destroy();}};
reactDomServer_node_production_min.renderToStaticNodeStream=function(a,b){return new fb(a,!0,b)};reactDomServer_node_production_min.renderToString=function(a,b){a=new cb(a,!1,b);try{return a.read(Infinity)}finally{a.destroy();}};reactDomServer_node_production_min.version="17.0.2";

var reactDomServer_node_development = {};

/** @license React v17.0.2
 * react-dom-server.node.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (process.env.NODE_ENV !== "production") {
  (function() {

var React = React__default;
var _assign = objectAssign$2;
var stream = require$$2$1;

// TODO: this is special because it gets imported during build.
var ReactVersion = '17.0.2';

// Do not require this module directly! Use normal `invariant` calls with
// template literal strings. The messages will be replaced with error codes
// during build.
function formatProdErrorMessage(code) {
  var url = 'https://reactjs.org/docs/error-decoder.html?invariant=' + code;

  for (var i = 1; i < arguments.length; i++) {
    url += '&args[]=' + encodeURIComponent(arguments[i]);
  }

  return "Minified React error #" + code + "; visit " + url + " for the full message or " + 'use the non-minified dev environment for full errors and additional ' + 'helpful warnings.';
}

var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

// by calls to these methods by a Babel plugin.
//
// In PROD (or in packages without access to React internals),
// they are left as they are instead.

function warn(format) {
  {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    printWarning('warn', format, args);
  }
}
function error(format) {
  {
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }

    printWarning('error', format, args);
  }
}

function printWarning(level, format, args) {
  // When changing this logic, you might want to also
  // update consoleWithStackDev.www.js as well.
  {
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum();

    if (stack !== '') {
      format += '%s';
      args = args.concat([stack]);
    }

    var argsWithFormat = args.map(function (item) {
      return '' + item;
    }); // Careful: RN currently depends on this prefix

    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
    // breaks IE9: https://github.com/facebook/react/issues/13610
    // eslint-disable-next-line react-internal/no-production-logging

    Function.prototype.apply.call(console[level], console, argsWithFormat);
  }
}
var REACT_PORTAL_TYPE = 0xeaca;
var REACT_FRAGMENT_TYPE = 0xeacb;
var REACT_STRICT_MODE_TYPE = 0xeacc;
var REACT_PROFILER_TYPE = 0xead2;
var REACT_PROVIDER_TYPE = 0xeacd;
var REACT_CONTEXT_TYPE = 0xeace;
var REACT_FORWARD_REF_TYPE = 0xead0;
var REACT_SUSPENSE_TYPE = 0xead1;
var REACT_SUSPENSE_LIST_TYPE = 0xead8;
var REACT_MEMO_TYPE = 0xead3;
var REACT_LAZY_TYPE = 0xead4;
var REACT_BLOCK_TYPE = 0xead9;
var REACT_FUNDAMENTAL_TYPE = 0xead5;
var REACT_SCOPE_TYPE = 0xead7;
var REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;
var REACT_LEGACY_HIDDEN_TYPE = 0xeae3;

if (typeof Symbol === 'function' && Symbol.for) {
  var symbolFor = Symbol.for;
  symbolFor('react.element');
  REACT_PORTAL_TYPE = symbolFor('react.portal');
  REACT_FRAGMENT_TYPE = symbolFor('react.fragment');
  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');
  REACT_PROFILER_TYPE = symbolFor('react.profiler');
  REACT_PROVIDER_TYPE = symbolFor('react.provider');
  REACT_CONTEXT_TYPE = symbolFor('react.context');
  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');
  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
  REACT_MEMO_TYPE = symbolFor('react.memo');
  REACT_LAZY_TYPE = symbolFor('react.lazy');
  REACT_BLOCK_TYPE = symbolFor('react.block');
  symbolFor('react.server.block');
  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');
  REACT_SCOPE_TYPE = symbolFor('react.scope');
  symbolFor('react.opaque.id');
  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
  symbolFor('react.offscreen');
  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
}

function getWrappedName(outerType, innerType, wrapperName) {
  var functionName = innerType.displayName || innerType.name || '';
  return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
}

function getContextName(type) {
  return type.displayName || 'Context';
}

function getComponentName(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }

  {
    if (typeof type.tag === 'number') {
      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }

  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }

  if (typeof type === 'string') {
    return type;
  }

  switch (type) {
    case REACT_FRAGMENT_TYPE:
      return 'Fragment';

    case REACT_PORTAL_TYPE:
      return 'Portal';

    case REACT_PROFILER_TYPE:
      return 'Profiler';

    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';

    case REACT_SUSPENSE_TYPE:
      return 'Suspense';

    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        var context = type;
        return getContextName(context) + '.Consumer';

      case REACT_PROVIDER_TYPE:
        var provider = type;
        return getContextName(provider._context) + '.Provider';

      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_BLOCK_TYPE:
        return getComponentName(type._render);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            return getComponentName(init(payload));
          } catch (x) {
            return null;
          }
        }
    }
  }

  return null;
}

// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.

var enableSuspenseServerRenderer = false;

// Helpers to patch console.logs to avoid logging during side-effect free
// replaying on render function. This currently only patches the object
// lazily which won't cover if the log function was extracted eagerly.
// We could also eagerly patch the method.
var disabledDepth = 0;
var prevLog;
var prevInfo;
var prevWarn;
var prevError;
var prevGroup;
var prevGroupCollapsed;
var prevGroupEnd;

function disabledLog() {}

disabledLog.__reactDisabledLog = true;
function disableLogs() {
  {
    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      prevLog = console.log;
      prevInfo = console.info;
      prevWarn = console.warn;
      prevError = console.error;
      prevGroup = console.group;
      prevGroupCollapsed = console.groupCollapsed;
      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

      var props = {
        configurable: true,
        enumerable: true,
        value: disabledLog,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        info: props,
        log: props,
        warn: props,
        error: props,
        group: props,
        groupCollapsed: props,
        groupEnd: props
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    disabledDepth++;
  }
}
function reenableLogs() {
  {
    disabledDepth--;

    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      var props = {
        configurable: true,
        enumerable: true,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        log: _assign({}, props, {
          value: prevLog
        }),
        info: _assign({}, props, {
          value: prevInfo
        }),
        warn: _assign({}, props, {
          value: prevWarn
        }),
        error: _assign({}, props, {
          value: prevError
        }),
        group: _assign({}, props, {
          value: prevGroup
        }),
        groupCollapsed: _assign({}, props, {
          value: prevGroupCollapsed
        }),
        groupEnd: _assign({}, props, {
          value: prevGroupEnd
        })
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    if (disabledDepth < 0) {
      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
    }
  }
}

var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
var prefix;
function describeBuiltInComponentFrame(name, source, ownerFn) {
  {
    if (prefix === undefined) {
      // Extract the VM specific prefix used by each line.
      try {
        throw Error();
      } catch (x) {
        var match = x.stack.trim().match(/\n( *(at )?)/);
        prefix = match && match[1] || '';
      }
    } // We use the prefix to ensure our stacks line up with native stack frames.


    return '\n' + prefix + name;
  }
}
var reentry = false;
var componentFrameCache;

{
  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
  componentFrameCache = new PossiblyWeakMap();
}

function describeNativeComponentFrame(fn, construct) {
  // If something asked for a stack inside a fake render, it should get ignored.
  if (!fn || reentry) {
    return '';
  }

  {
    var frame = componentFrameCache.get(fn);

    if (frame !== undefined) {
      return frame;
    }
  }

  var control;
  reentry = true;
  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

  Error.prepareStackTrace = undefined;
  var previousDispatcher;

  {
    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
    // for warnings.

    ReactCurrentDispatcher.current = null;
    disableLogs();
  }

  try {
    // This should throw.
    if (construct) {
      // Something should be setting the props in the constructor.
      var Fake = function () {
        throw Error();
      }; // $FlowFixMe


      Object.defineProperty(Fake.prototype, 'props', {
        set: function () {
          // We use a throwing setter instead of frozen or non-writable props
          // because that won't throw in a non-strict mode function.
          throw Error();
        }
      });

      if (typeof Reflect === 'object' && Reflect.construct) {
        // We construct a different control for this case to include any extra
        // frames added by the construct call.
        try {
          Reflect.construct(Fake, []);
        } catch (x) {
          control = x;
        }

        Reflect.construct(fn, [], Fake);
      } else {
        try {
          Fake.call();
        } catch (x) {
          control = x;
        }

        fn.call(Fake.prototype);
      }
    } else {
      try {
        throw Error();
      } catch (x) {
        control = x;
      }

      fn();
    }
  } catch (sample) {
    // This is inlined manually because closure doesn't do it for us.
    if (sample && control && typeof sample.stack === 'string') {
      // This extracts the first frame from the sample that isn't also in the control.
      // Skipping one frame that we assume is the frame that calls the two.
      var sampleLines = sample.stack.split('\n');
      var controlLines = control.stack.split('\n');
      var s = sampleLines.length - 1;
      var c = controlLines.length - 1;

      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
        // We expect at least one stack frame to be shared.
        // Typically this will be the root most one. However, stack frames may be
        // cut off due to maximum stack limits. In this case, one maybe cut off
        // earlier than the other. We assume that the sample is longer or the same
        // and there for cut off earlier. So we should find the root most frame in
        // the sample somewhere in the control.
        c--;
      }

      for (; s >= 1 && c >= 0; s--, c--) {
        // Next we find the first one that isn't the same which should be the
        // frame that called our sample function and the control.
        if (sampleLines[s] !== controlLines[c]) {
          // In V8, the first line is describing the message but other VMs don't.
          // If we're about to return the first line, and the control is also on the same
          // line, that's a pretty good indicator that our sample threw at same line as
          // the control. I.e. before we entered the sample frame. So we ignore this result.
          // This can happen if you passed a class to function component, or non-function.
          if (s !== 1 || c !== 1) {
            do {
              s--;
              c--; // We may still have similar intermediate frames from the construct call.
              // The next one that isn't the same should be our match though.

              if (c < 0 || sampleLines[s] !== controlLines[c]) {
                // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                var _frame = '\n' + sampleLines[s].replace(' at new ', ' at ');

                {
                  if (typeof fn === 'function') {
                    componentFrameCache.set(fn, _frame);
                  }
                } // Return the line we found.


                return _frame;
              }
            } while (s >= 1 && c >= 0);
          }

          break;
        }
      }
    }
  } finally {
    reentry = false;

    {
      ReactCurrentDispatcher.current = previousDispatcher;
      reenableLogs();
    }

    Error.prepareStackTrace = previousPrepareStackTrace;
  } // Fallback to just using the name if we couldn't make it throw.


  var name = fn ? fn.displayName || fn.name : '';
  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';

  {
    if (typeof fn === 'function') {
      componentFrameCache.set(fn, syntheticFrame);
    }
  }

  return syntheticFrame;
}
function describeFunctionComponentFrame(fn, source, ownerFn) {
  {
    return describeNativeComponentFrame(fn, false);
  }
}

function shouldConstruct(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {

  if (type == null) {
    return '';
  }

  if (typeof type === 'function') {
    {
      return describeNativeComponentFrame(type, shouldConstruct(type));
    }
  }

  if (typeof type === 'string') {
    return describeBuiltInComponentFrame(type);
  }

  switch (type) {
    case REACT_SUSPENSE_TYPE:
      return describeBuiltInComponentFrame('Suspense');

    case REACT_SUSPENSE_LIST_TYPE:
      return describeBuiltInComponentFrame('SuspenseList');
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_FORWARD_REF_TYPE:
        return describeFunctionComponentFrame(type.render);

      case REACT_MEMO_TYPE:
        // Memo may contain any component type so we recursively resolve it.
        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);

      case REACT_BLOCK_TYPE:
        return describeFunctionComponentFrame(type._render);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            // Lazy may contain any component type so we recursively resolve it.
            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
          } catch (x) {}
        }
    }
  }

  return '';
}

var loggedTypeFailures = {};
var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;

function setCurrentlyValidatingElement(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      ReactDebugCurrentFrame.setExtraStackFrame(stack);
    } else {
      ReactDebugCurrentFrame.setExtraStackFrame(null);
    }
  }
}

function checkPropTypes(typeSpecs, values, location, componentName, element) {
  {
    // $FlowFixMe This is okay but Flow doesn't know it.
    var has = Function.call.bind(Object.prototype.hasOwnProperty);

    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.

        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
            err.name = 'Invariant Violation';
            throw err;
          }

          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
        } catch (ex) {
          error$1 = ex;
        }

        if (error$1 && !(error$1 instanceof Error)) {
          setCurrentlyValidatingElement(element);

          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);

          setCurrentlyValidatingElement(null);
        }

        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error$1.message] = true;
          setCurrentlyValidatingElement(element);

          error('Failed %s type: %s', location, error$1.message);

          setCurrentlyValidatingElement(null);
        }
      }
    }
  }
}

var didWarnAboutInvalidateContextType;

{
  didWarnAboutInvalidateContextType = new Set();
}

var emptyObject = {};

{
  Object.freeze(emptyObject);
}

function maskContext(type, context) {
  var contextTypes = type.contextTypes;

  if (!contextTypes) {
    return emptyObject;
  }

  var maskedContext = {};

  for (var contextName in contextTypes) {
    maskedContext[contextName] = context[contextName];
  }

  return maskedContext;
}

function checkContextTypes(typeSpecs, values, location) {
  {
    checkPropTypes(typeSpecs, values, location, 'Component');
  }
}

function validateContextBounds(context, threadID) {
  // If we don't have enough slots in this context to store this threadID,
  // fill it in without leaving any holes to ensure that the VM optimizes
  // this as non-holey index properties.
  // (Note: If `react` package is < 16.6, _threadCount is undefined.)
  for (var i = context._threadCount | 0; i <= threadID; i++) {
    // We assume that this is the same as the defaultValue which might not be
    // true if we're rendering inside a secondary renderer but they are
    // secondary because these use cases are very rare.
    context[i] = context._currentValue2;
    context._threadCount = i + 1;
  }
}
function processContext(type, context, threadID, isClass) {
  if (isClass) {
    var contextType = type.contextType;

    {
      if ('contextType' in type) {
        var isValid = // Allow null for conditional declaration
        contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>

        if (!isValid && !didWarnAboutInvalidateContextType.has(type)) {
          didWarnAboutInvalidateContextType.add(type);
          var addendum = '';

          if (contextType === undefined) {
            addendum = ' However, it is set to undefined. ' + 'This can be caused by a typo or by mixing up named and default imports. ' + 'This can also happen due to a circular dependency, so ' + 'try moving the createContext() call to a separate file.';
          } else if (typeof contextType !== 'object') {
            addendum = ' However, it is set to a ' + typeof contextType + '.';
          } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
            addendum = ' Did you accidentally pass the Context.Provider instead?';
          } else if (contextType._context !== undefined) {
            // <Context.Consumer>
            addendum = ' Did you accidentally pass the Context.Consumer instead?';
          } else {
            addendum = ' However, it is set to an object with keys {' + Object.keys(contextType).join(', ') + '}.';
          }

          error('%s defines an invalid contextType. ' + 'contextType should point to the Context object returned by React.createContext().%s', getComponentName(type) || 'Component', addendum);
        }
      }
    }

    if (typeof contextType === 'object' && contextType !== null) {
      validateContextBounds(contextType, threadID);
      return contextType[threadID];
    }

    {
      var maskedContext = maskContext(type, context);

      {
        if (type.contextTypes) {
          checkContextTypes(type.contextTypes, maskedContext, 'context');
        }
      }

      return maskedContext;
    }
  } else {
    {
      var _maskedContext = maskContext(type, context);

      {
        if (type.contextTypes) {
          checkContextTypes(type.contextTypes, _maskedContext, 'context');
        }
      }

      return _maskedContext;
    }
  }
}

var nextAvailableThreadIDs = new Uint16Array(16);

for (var i = 0; i < 15; i++) {
  nextAvailableThreadIDs[i] = i + 1;
}

nextAvailableThreadIDs[15] = 0;

function growThreadCountAndReturnNextAvailable() {
  var oldArray = nextAvailableThreadIDs;
  var oldSize = oldArray.length;
  var newSize = oldSize * 2;

  if (!(newSize <= 0x10000)) {
    {
      throw Error( "Maximum number of concurrent React renderers exceeded. This can happen if you are not properly destroying the Readable provided by React. Ensure that you call .destroy() on it if you no longer want to read from it, and did not read to the end. If you use .pipe() this should be automatic." );
    }
  }

  var newArray = new Uint16Array(newSize);
  newArray.set(oldArray);
  nextAvailableThreadIDs = newArray;
  nextAvailableThreadIDs[0] = oldSize + 1;

  for (var _i = oldSize; _i < newSize - 1; _i++) {
    nextAvailableThreadIDs[_i] = _i + 1;
  }

  nextAvailableThreadIDs[newSize - 1] = 0;
  return oldSize;
}

function allocThreadID() {
  var nextID = nextAvailableThreadIDs[0];

  if (nextID === 0) {
    return growThreadCountAndReturnNextAvailable();
  }

  nextAvailableThreadIDs[0] = nextAvailableThreadIDs[nextID];
  return nextID;
}
function freeThreadID(id) {
  nextAvailableThreadIDs[id] = nextAvailableThreadIDs[0];
  nextAvailableThreadIDs[0] = id;
}

// A reserved attribute.
// It is handled by React separately and shouldn't be written to the DOM.
var RESERVED = 0; // A simple string attribute.
// Attributes that aren't in the filter are presumed to have this type.

var STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called
// "enumerated" attributes with "true" and "false" as possible values.
// When true, it should be set to a "true" string.
// When false, it should be set to a "false" string.

var BOOLEANISH_STRING = 2; // A real boolean attribute.
// When true, it should be present (set either to an empty string or its name).
// When false, it should be omitted.

var BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.
// When true, it should be present (set either to an empty string or its name).
// When false, it should be omitted.
// For any other value, should be present with that value.

var OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.
// When falsy, it should be removed.

var NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.
// When falsy, it should be removed.

var POSITIVE_NUMERIC = 6;

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
/* eslint-enable max-len */

var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
var ROOT_ATTRIBUTE_NAME = 'data-reactroot';
var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');
var hasOwnProperty = Object.prototype.hasOwnProperty;
var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};
function isAttributeNameSafe(attributeName) {
  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
    return true;
  }

  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
    return false;
  }

  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }

  illegalAttributeNameCache[attributeName] = true;

  {
    error('Invalid attribute name: `%s`', attributeName);
  }

  return false;
}
function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
  if (propertyInfo !== null) {
    return propertyInfo.type === RESERVED;
  }

  if (isCustomComponentTag) {
    return false;
  }

  if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {
    return true;
  }

  return false;
}
function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
  if (propertyInfo !== null && propertyInfo.type === RESERVED) {
    return false;
  }

  switch (typeof value) {
    case 'function': // $FlowIssue symbol is perfectly valid here

    case 'symbol':
      // eslint-disable-line
      return true;

    case 'boolean':
      {
        if (isCustomComponentTag) {
          return false;
        }

        if (propertyInfo !== null) {
          return !propertyInfo.acceptsBooleans;
        } else {
          var prefix = name.toLowerCase().slice(0, 5);
          return prefix !== 'data-' && prefix !== 'aria-';
        }
      }

    default:
      return false;
  }
}
function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
  if (value === null || typeof value === 'undefined') {
    return true;
  }

  if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
    return true;
  }

  if (isCustomComponentTag) {
    return false;
  }

  if (propertyInfo !== null) {

    switch (propertyInfo.type) {
      case BOOLEAN:
        return !value;

      case OVERLOADED_BOOLEAN:
        return value === false;

      case NUMERIC:
        return isNaN(value);

      case POSITIVE_NUMERIC:
        return isNaN(value) || value < 1;
    }
  }

  return false;
}
function getPropertyInfo(name) {
  return properties.hasOwnProperty(name) ? properties[name] : null;
}

function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL, removeEmptyString) {
  this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
  this.attributeName = attributeName;
  this.attributeNamespace = attributeNamespace;
  this.mustUseProperty = mustUseProperty;
  this.propertyName = name;
  this.type = type;
  this.sanitizeURL = sanitizeURL;
  this.removeEmptyString = removeEmptyString;
} // When adding attributes to this list, be sure to also add them to
// the `possibleStandardNames` module to ensure casing and incorrect
// name warnings.


var properties = {}; // These props are reserved by React. They shouldn't be written to the DOM.

var reservedProps = ['children', 'dangerouslySetInnerHTML', // TODO: This prevents the assignment of defaultValue to regular
// elements (not just inputs). Now that ReactDOMInput assigns to the
// defaultValue property -- do we need this?
'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'];
reservedProps.forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // A few React string attributes have a different name.
// This is a mapping from React prop names to the attribute names.

[['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {
  var name = _ref[0],
      attributeName = _ref[1];
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are "enumerated" HTML attributes that accept "true" and "false".
// In React, we let users pass `true` and `false` even though technically
// these aren't boolean attributes (they are coerced to strings).

['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are "enumerated" SVG attributes that accept "true" and "false".
// In React, we let users pass `true` and `false` even though technically
// these aren't boolean attributes (they are coerced to strings).
// Since these are SVG attributes, their attribute names are case-sensitive.

['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are HTML boolean attributes.

['allowFullScreen', 'async', // Note: there is a special case that prevents it from being written to the DOM
// on the client side because the browsers are inconsistent. Instead we call focus().
'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'disablePictureInPicture', 'disableRemotePlayback', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless', // Microdata
'itemScope'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are the few React props that we set as DOM properties
// rather than attributes. These are all booleans.

['checked', // Note: `option.selected` is not updated if `select.multiple` is
// disabled with `removeAttribute`. We have special logic for handling this.
'multiple', 'muted', 'selected' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are HTML attributes that are "overloaded booleans": they behave like
// booleans, but can also accept a string value.

['capture', 'download' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are HTML attributes that must be positive numbers.

['cols', 'rows', 'size', 'span' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are HTML attributes that must be numbers.

['rowSpan', 'start'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
});
var CAMELIZE = /[\-\:]([a-z])/g;

var capitalize = function (token) {
  return token[1].toUpperCase();
}; // This is a list of all SVG attributes that need special casing, namespacing,
// or boolean value assignment. Regular attributes that just accept strings
// and have the same names are omitted, just like in the HTML attribute filter.
// Some of these attributes can be hard to find. This list was created by
// scraping the MDN documentation.


['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // String SVG attributes with the xlink namespace.

['xlink:actuate', 'xlink:arcrole', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, 'http://www.w3.org/1999/xlink', false, // sanitizeURL
  false);
}); // String SVG attributes with the xml namespace.

['xml:base', 'xml:lang', 'xml:space' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, 'http://www.w3.org/XML/1998/namespace', false, // sanitizeURL
  false);
}); // These attribute exists both in HTML and SVG.
// The attribute name is case-sensitive in SVG so we can't just use
// the React name like we do for attributes that exist only in HTML.

['tabIndex', 'crossOrigin'].forEach(function (attributeName) {
  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
  attributeName.toLowerCase(), // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These attributes accept URLs. These must not allow javascript: URLS.
// These will also need to accept Trusted Types object in the future.

var xlinkHref = 'xlinkHref';
properties[xlinkHref] = new PropertyInfoRecord('xlinkHref', STRING, false, // mustUseProperty
'xlink:href', 'http://www.w3.org/1999/xlink', true, // sanitizeURL
false);
['src', 'href', 'action', 'formAction'].forEach(function (attributeName) {
  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
  attributeName.toLowerCase(), // attributeName
  null, // attributeNamespace
  true, // sanitizeURL
  true);
});

// and any newline or tab are filtered out as if they're not part of the URL.
// https://url.spec.whatwg.org/#url-parsing
// Tab or newline are defined as \r\n\t:
// https://infra.spec.whatwg.org/#ascii-tab-or-newline
// A C0 control is a code point in the range \u0000 NULL to \u001F
// INFORMATION SEPARATOR ONE, inclusive:
// https://infra.spec.whatwg.org/#c0-control-or-space

/* eslint-disable max-len */

var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
var didWarn = false;

function sanitizeURL(url) {
  {
    if (!didWarn && isJavaScriptProtocol.test(url)) {
      didWarn = true;

      error('A future version of React will block javascript: URLs as a security precaution. ' + 'Use event handlers instead if you can. If you need to generate unsafe HTML try ' + 'using dangerouslySetInnerHTML instead. React was passed %s.', JSON.stringify(url));
    }
  }
}

// code copied and modified from escape-html

/**
 * Module variables.
 * @private
 */
var matchHtmlRegExp = /["'&<>]/;
/**
 * Escapes special characters and HTML entities in a given html string.
 *
 * @param  {string} string HTML string to escape for later insertion
 * @return {string}
 * @public
 */

function escapeHtml(string) {
  var str = '' + string;
  var match = matchHtmlRegExp.exec(str);

  if (!match) {
    return str;
  }

  var escape;
  var html = '';
  var index;
  var lastIndex = 0;

  for (index = match.index; index < str.length; index++) {
    switch (str.charCodeAt(index)) {
      case 34:
        // "
        escape = '&quot;';
        break;

      case 38:
        // &
        escape = '&amp;';
        break;

      case 39:
        // '
        escape = '&#x27;'; // modified from escape-html; used to be '&#39'

        break;

      case 60:
        // <
        escape = '&lt;';
        break;

      case 62:
        // >
        escape = '&gt;';
        break;

      default:
        continue;
    }

    if (lastIndex !== index) {
      html += str.substring(lastIndex, index);
    }

    lastIndex = index + 1;
    html += escape;
  }

  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
} // end code copied and modified from escape-html

/**
 * Escapes text to prevent scripting attacks.
 *
 * @param {*} text Text value to escape.
 * @return {string} An escaped string.
 */


function escapeTextForBrowser(text) {
  if (typeof text === 'boolean' || typeof text === 'number') {
    // this shortcircuit helps perf for types that we know will never have
    // special characters, especially given that this function is used often
    // for numeric dom ids.
    return '' + text;
  }

  return escapeHtml(text);
}

/**
 * Escapes attribute value to prevent scripting attacks.
 *
 * @param {*} value Value to escape.
 * @return {string} An escaped string.
 */

function quoteAttributeValueForBrowser(value) {
  return '"' + escapeTextForBrowser(value) + '"';
}

function createMarkupForRoot() {
  return ROOT_ATTRIBUTE_NAME + '=""';
}
/**
 * Creates markup for a property.
 *
 * @param {string} name
 * @param {*} value
 * @return {?string} Markup string, or null if the property was invalid.
 */

function createMarkupForProperty(name, value) {
  var propertyInfo = getPropertyInfo(name);

  if (name !== 'style' && shouldIgnoreAttribute(name, propertyInfo, false)) {
    return '';
  }

  if (shouldRemoveAttribute(name, value, propertyInfo, false)) {
    return '';
  }

  if (propertyInfo !== null) {
    var attributeName = propertyInfo.attributeName;
    var type = propertyInfo.type;

    if (type === BOOLEAN || type === OVERLOADED_BOOLEAN && value === true) {
      return attributeName + '=""';
    } else {
      if (propertyInfo.sanitizeURL) {
        value = '' + value;
        sanitizeURL(value);
      }

      return attributeName + '=' + quoteAttributeValueForBrowser(value);
    }
  } else if (isAttributeNameSafe(name)) {
    return name + '=' + quoteAttributeValueForBrowser(value);
  }

  return '';
}
/**
 * Creates markup for a custom property.
 *
 * @param {string} name
 * @param {*} value
 * @return {string} Markup string, or empty string if the property was invalid.
 */

function createMarkupForCustomAttribute(name, value) {
  if (!isAttributeNameSafe(name) || value == null) {
    return '';
  }

  return name + '=' + quoteAttributeValueForBrowser(value);
}

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare
  ;
}

var objectIs = typeof Object.is === 'function' ? Object.is : is;

var currentlyRenderingComponent = null;
var firstWorkInProgressHook = null;
var workInProgressHook = null; // Whether the work-in-progress hook is a re-rendered hook

var isReRender = false; // Whether an update was scheduled during the currently executing render pass.

var didScheduleRenderPhaseUpdate = false; // Lazily created map of render-phase updates

var renderPhaseUpdates = null; // Counter to prevent infinite loops.

var numberOfReRenders = 0;
var RE_RENDER_LIMIT = 25;
var isInHookUserCodeInDev = false; // In DEV, this is the name of the currently executing primitive hook

var currentHookNameInDev;

function resolveCurrentlyRenderingComponent() {
  if (!(currentlyRenderingComponent !== null)) {
    {
      throw Error( "Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem." );
    }
  }

  {
    if (isInHookUserCodeInDev) {
      error('Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' + 'You can only call Hooks at the top level of your React function. ' + 'For more information, see ' + 'https://reactjs.org/link/rules-of-hooks');
    }
  }

  return currentlyRenderingComponent;
}

function areHookInputsEqual(nextDeps, prevDeps) {
  if (prevDeps === null) {
    {
      error('%s received a final argument during this render, but not during ' + 'the previous render. Even though the final argument is optional, ' + 'its type cannot change between renders.', currentHookNameInDev);
    }

    return false;
  }

  {
    // Don't bother comparing lengths in prod because these arrays should be
    // passed inline.
    if (nextDeps.length !== prevDeps.length) {
      error('The final argument passed to %s changed size between renders. The ' + 'order and size of this array must remain constant.\n\n' + 'Previous: %s\n' + 'Incoming: %s', currentHookNameInDev, "[" + nextDeps.join(', ') + "]", "[" + prevDeps.join(', ') + "]");
    }
  }

  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
    if (objectIs(nextDeps[i], prevDeps[i])) {
      continue;
    }

    return false;
  }

  return true;
}

function createHook() {
  if (numberOfReRenders > 0) {
    {
      {
        throw Error( "Rendered more hooks than during the previous render" );
      }
    }
  }

  return {
    memoizedState: null,
    queue: null,
    next: null
  };
}

function createWorkInProgressHook() {
  if (workInProgressHook === null) {
    // This is the first hook in the list
    if (firstWorkInProgressHook === null) {
      isReRender = false;
      firstWorkInProgressHook = workInProgressHook = createHook();
    } else {
      // There's already a work-in-progress. Reuse it.
      isReRender = true;
      workInProgressHook = firstWorkInProgressHook;
    }
  } else {
    if (workInProgressHook.next === null) {
      isReRender = false; // Append to the end of the list

      workInProgressHook = workInProgressHook.next = createHook();
    } else {
      // There's already a work-in-progress. Reuse it.
      isReRender = true;
      workInProgressHook = workInProgressHook.next;
    }
  }

  return workInProgressHook;
}

function prepareToUseHooks(componentIdentity) {
  currentlyRenderingComponent = componentIdentity;

  {
    isInHookUserCodeInDev = false;
  } // The following should have already been reset
  // didScheduleRenderPhaseUpdate = false;
  // firstWorkInProgressHook = null;
  // numberOfReRenders = 0;
  // renderPhaseUpdates = null;
  // workInProgressHook = null;

}
function finishHooks(Component, props, children, refOrContext) {
  // This must be called after every function component to prevent hooks from
  // being used in classes.
  while (didScheduleRenderPhaseUpdate) {
    // Updates were scheduled during the render phase. They are stored in
    // the `renderPhaseUpdates` map. Call the component again, reusing the
    // work-in-progress hooks and applying the additional updates on top. Keep
    // restarting until no more updates are scheduled.
    didScheduleRenderPhaseUpdate = false;
    numberOfReRenders += 1; // Start over from the beginning of the list

    workInProgressHook = null;
    children = Component(props, refOrContext);
  }

  resetHooksState();
  return children;
} // Reset the internal hooks state if an error occurs while rendering a component

function resetHooksState() {
  {
    isInHookUserCodeInDev = false;
  }

  currentlyRenderingComponent = null;
  didScheduleRenderPhaseUpdate = false;
  firstWorkInProgressHook = null;
  numberOfReRenders = 0;
  renderPhaseUpdates = null;
  workInProgressHook = null;
}

function readContext(context, observedBits) {
  var threadID = currentPartialRenderer.threadID;
  validateContextBounds(context, threadID);

  {
    if (isInHookUserCodeInDev) {
      error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');
    }
  }

  return context[threadID];
}

function useContext(context, observedBits) {
  {
    currentHookNameInDev = 'useContext';
  }

  resolveCurrentlyRenderingComponent();
  var threadID = currentPartialRenderer.threadID;
  validateContextBounds(context, threadID);
  return context[threadID];
}

function basicStateReducer(state, action) {
  // $FlowFixMe: Flow doesn't like mixed types
  return typeof action === 'function' ? action(state) : action;
}

function useState(initialState) {
  {
    currentHookNameInDev = 'useState';
  }

  return useReducer(basicStateReducer, // useReducer has a special case to support lazy useState initializers
  initialState);
}
function useReducer(reducer, initialArg, init) {
  {
    if (reducer !== basicStateReducer) {
      currentHookNameInDev = 'useReducer';
    }
  }

  currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
  workInProgressHook = createWorkInProgressHook();

  if (isReRender) {
    // This is a re-render. Apply the new render phase updates to the previous
    // current hook.
    var queue = workInProgressHook.queue;
    var dispatch = queue.dispatch;

    if (renderPhaseUpdates !== null) {
      // Render phase updates are stored in a map of queue -> linked list
      var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

      if (firstRenderPhaseUpdate !== undefined) {
        renderPhaseUpdates.delete(queue);
        var newState = workInProgressHook.memoizedState;
        var update = firstRenderPhaseUpdate;

        do {
          // Process this render phase update. We don't have to check the
          // priority because it will always be the same as the current
          // render's.
          var action = update.action;

          {
            isInHookUserCodeInDev = true;
          }

          newState = reducer(newState, action);

          {
            isInHookUserCodeInDev = false;
          }

          update = update.next;
        } while (update !== null);

        workInProgressHook.memoizedState = newState;
        return [newState, dispatch];
      }
    }

    return [workInProgressHook.memoizedState, dispatch];
  } else {
    {
      isInHookUserCodeInDev = true;
    }

    var initialState;

    if (reducer === basicStateReducer) {
      // Special case for `useState`.
      initialState = typeof initialArg === 'function' ? initialArg() : initialArg;
    } else {
      initialState = init !== undefined ? init(initialArg) : initialArg;
    }

    {
      isInHookUserCodeInDev = false;
    }

    workInProgressHook.memoizedState = initialState;

    var _queue = workInProgressHook.queue = {
      last: null,
      dispatch: null
    };

    var _dispatch = _queue.dispatch = dispatchAction.bind(null, currentlyRenderingComponent, _queue);

    return [workInProgressHook.memoizedState, _dispatch];
  }
}

function useMemo(nextCreate, deps) {
  currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
  workInProgressHook = createWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;

  if (workInProgressHook !== null) {
    var prevState = workInProgressHook.memoizedState;

    if (prevState !== null) {
      if (nextDeps !== null) {
        var prevDeps = prevState[1];

        if (areHookInputsEqual(nextDeps, prevDeps)) {
          return prevState[0];
        }
      }
    }
  }

  {
    isInHookUserCodeInDev = true;
  }

  var nextValue = nextCreate();

  {
    isInHookUserCodeInDev = false;
  }

  workInProgressHook.memoizedState = [nextValue, nextDeps];
  return nextValue;
}

function useRef(initialValue) {
  currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
  workInProgressHook = createWorkInProgressHook();
  var previousRef = workInProgressHook.memoizedState;

  if (previousRef === null) {
    var ref = {
      current: initialValue
    };

    {
      Object.seal(ref);
    }

    workInProgressHook.memoizedState = ref;
    return ref;
  } else {
    return previousRef;
  }
}

function useLayoutEffect(create, inputs) {
  {
    currentHookNameInDev = 'useLayoutEffect';

    error('useLayoutEffect does nothing on the server, because its effect cannot ' + "be encoded into the server renderer's output format. This will lead " + 'to a mismatch between the initial, non-hydrated UI and the intended ' + 'UI. To avoid this, useLayoutEffect should only be used in ' + 'components that render exclusively on the client. ' + 'See https://reactjs.org/link/uselayouteffect-ssr for common fixes.');
  }
}

function dispatchAction(componentIdentity, queue, action) {
  if (!(numberOfReRenders < RE_RENDER_LIMIT)) {
    {
      throw Error( "Too many re-renders. React limits the number of renders to prevent an infinite loop." );
    }
  }

  if (componentIdentity === currentlyRenderingComponent) {
    // This is a render phase update. Stash it in a lazily-created map of
    // queue -> linked list of updates. After this render pass, we'll restart
    // and apply the stashed updates on top of the work-in-progress hook.
    didScheduleRenderPhaseUpdate = true;
    var update = {
      action: action,
      next: null
    };

    if (renderPhaseUpdates === null) {
      renderPhaseUpdates = new Map();
    }

    var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

    if (firstRenderPhaseUpdate === undefined) {
      renderPhaseUpdates.set(queue, update);
    } else {
      // Append the update to the end of the list.
      var lastRenderPhaseUpdate = firstRenderPhaseUpdate;

      while (lastRenderPhaseUpdate.next !== null) {
        lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
      }

      lastRenderPhaseUpdate.next = update;
    }
  }
}

function useCallback(callback, deps) {
  return useMemo(function () {
    return callback;
  }, deps);
} // TODO Decide on how to implement this hook for server rendering.
// If a mutation occurs during render, consider triggering a Suspense boundary
// and falling back to client rendering.

function useMutableSource(source, getSnapshot, subscribe) {
  resolveCurrentlyRenderingComponent();
  return getSnapshot(source._source);
}

function useDeferredValue(value) {
  resolveCurrentlyRenderingComponent();
  return value;
}

function useTransition() {
  resolveCurrentlyRenderingComponent();

  var startTransition = function (callback) {
    callback();
  };

  return [startTransition, false];
}

function useOpaqueIdentifier() {
  return (currentPartialRenderer.identifierPrefix || '') + 'R:' + (currentPartialRenderer.uniqueID++).toString(36);
}

function noop() {}

var currentPartialRenderer = null;
function setCurrentPartialRenderer(renderer) {
  currentPartialRenderer = renderer;
}
var Dispatcher = {
  readContext: readContext,
  useContext: useContext,
  useMemo: useMemo,
  useReducer: useReducer,
  useRef: useRef,
  useState: useState,
  useLayoutEffect: useLayoutEffect,
  useCallback: useCallback,
  // useImperativeHandle is not run in the server environment
  useImperativeHandle: noop,
  // Effects are not run in the server environment.
  useEffect: noop,
  // Debugging effect
  useDebugValue: noop,
  useDeferredValue: useDeferredValue,
  useTransition: useTransition,
  useOpaqueIdentifier: useOpaqueIdentifier,
  // Subscriptions are not setup in a server environment.
  useMutableSource: useMutableSource
};

var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';
var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';
var Namespaces = {
  html: HTML_NAMESPACE,
  mathml: MATH_NAMESPACE,
  svg: SVG_NAMESPACE
}; // Assumes there is no parent namespace.

function getIntrinsicNamespace(type) {
  switch (type) {
    case 'svg':
      return SVG_NAMESPACE;

    case 'math':
      return MATH_NAMESPACE;

    default:
      return HTML_NAMESPACE;
  }
}
function getChildNamespace(parentNamespace, type) {
  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) {
    // No (or default) parent namespace: potential entry point.
    return getIntrinsicNamespace(type);
  }

  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {
    // We're leaving SVG.
    return HTML_NAMESPACE;
  } // By default, pass namespace below.


  return parentNamespace;
}

var hasReadOnlyValue = {
  button: true,
  checkbox: true,
  image: true,
  hidden: true,
  radio: true,
  reset: true,
  submit: true
};
function checkControlledValueProps(tagName, props) {
  {
    if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) {
      error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    }

    if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) {
      error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    }
  }
}

// For HTML, certain tags should omit their close tag. We keep a list for
// those special-case tags.
var omittedCloseTags = {
  area: true,
  base: true,
  br: true,
  col: true,
  embed: true,
  hr: true,
  img: true,
  input: true,
  keygen: true,
  link: true,
  meta: true,
  param: true,
  source: true,
  track: true,
  wbr: true // NOTE: menuitem's close tag should be omitted, but that causes problems.

};

// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = _assign({
  menuitem: true
}, omittedCloseTags);

var HTML = '__html';

function assertValidProps(tag, props) {
  if (!props) {
    return;
  } // Note the use of `==` which checks for null or undefined.


  if (voidElementTags[tag]) {
    if (!(props.children == null && props.dangerouslySetInnerHTML == null)) {
      {
        throw Error( tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`." );
      }
    }
  }

  if (props.dangerouslySetInnerHTML != null) {
    if (!(props.children == null)) {
      {
        throw Error( "Can only set one of `children` or `props.dangerouslySetInnerHTML`." );
      }
    }

    if (!(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML)) {
      {
        throw Error( "`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information." );
      }
    }
  }

  {
    if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) {
      error('A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.');
    }
  }

  if (!(props.style == null || typeof props.style === 'object')) {
    {
      throw Error( "The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX." );
    }
  }
}

/**
 * CSS properties which accept numbers but are not in units of "px".
 */
var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridArea: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};
/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */

function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}
/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */


var prefixes = ['Webkit', 'ms', 'Moz', 'O']; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.

Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */

function dangerousStyleValue(name, value, isCustomProperty) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901
  var isEmpty = value == null || typeof value === 'boolean' || value === '';

  if (isEmpty) {
    return '';
  }

  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
  }

  return ('' + value).trim();
}

var uppercasePattern = /([A-Z])/g;
var msPattern = /^ms-/;
/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 */

function hyphenateStyleName(name) {
  return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');
}

function isCustomComponent(tagName, props) {
  if (tagName.indexOf('-') === -1) {
    return typeof props.is === 'string';
  }

  switch (tagName) {
    // These are reserved SVG and MathML elements.
    // We don't mind this list too much because we expect it to never grow.
    // The alternative is to track the namespace in a few places which is convoluted.
    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
    case 'annotation-xml':
    case 'color-profile':
    case 'font-face':
    case 'font-face-src':
    case 'font-face-uri':
    case 'font-face-format':
    case 'font-face-name':
    case 'missing-glyph':
      return false;

    default:
      return true;
  }
}

var warnValidStyle = function () {};

{
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
  var msPattern$1 = /^-ms-/;
  var hyphenPattern = /-(.)/g; // style values shouldn't contain a semicolon

  var badStyleValueWithSemicolonPattern = /;\s*$/;
  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;
  var warnedForInfinityValue = false;

  var camelize = function (string) {
    return string.replace(hyphenPattern, function (_, character) {
      return character.toUpperCase();
    });
  };

  var warnHyphenatedStyleName = function (name) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;

    error('Unsupported style property %s. Did you mean %s?', name, // As Andi Smith suggests
    // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
    // is converted to lowercase `ms`.
    camelize(name.replace(msPattern$1, 'ms-')));
  };

  var warnBadVendoredStyleName = function (name) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;

    error('Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));
  };

  var warnStyleValueWithSemicolon = function (name, value) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;

    error("Style property values shouldn't contain a semicolon. " + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ''));
  };

  var warnStyleValueIsNaN = function (name, value) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;

    error('`NaN` is an invalid value for the `%s` css style property.', name);
  };

  var warnStyleValueIsInfinity = function (name, value) {
    if (warnedForInfinityValue) {
      return;
    }

    warnedForInfinityValue = true;

    error('`Infinity` is an invalid value for the `%s` css style property.', name);
  };

  warnValidStyle = function (name, value) {
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value);
    }

    if (typeof value === 'number') {
      if (isNaN(value)) {
        warnStyleValueIsNaN(name, value);
      } else if (!isFinite(value)) {
        warnStyleValueIsInfinity(name, value);
      }
    }
  };
}

var warnValidStyle$1 = warnValidStyle;

var ariaProperties = {
  'aria-current': 0,
  // state
  'aria-details': 0,
  'aria-disabled': 0,
  // state
  'aria-hidden': 0,
  // state
  'aria-invalid': 0,
  // state
  'aria-keyshortcuts': 0,
  'aria-label': 0,
  'aria-roledescription': 0,
  // Widget Attributes
  'aria-autocomplete': 0,
  'aria-checked': 0,
  'aria-expanded': 0,
  'aria-haspopup': 0,
  'aria-level': 0,
  'aria-modal': 0,
  'aria-multiline': 0,
  'aria-multiselectable': 0,
  'aria-orientation': 0,
  'aria-placeholder': 0,
  'aria-pressed': 0,
  'aria-readonly': 0,
  'aria-required': 0,
  'aria-selected': 0,
  'aria-sort': 0,
  'aria-valuemax': 0,
  'aria-valuemin': 0,
  'aria-valuenow': 0,
  'aria-valuetext': 0,
  // Live Region Attributes
  'aria-atomic': 0,
  'aria-busy': 0,
  'aria-live': 0,
  'aria-relevant': 0,
  // Drag-and-Drop Attributes
  'aria-dropeffect': 0,
  'aria-grabbed': 0,
  // Relationship Attributes
  'aria-activedescendant': 0,
  'aria-colcount': 0,
  'aria-colindex': 0,
  'aria-colspan': 0,
  'aria-controls': 0,
  'aria-describedby': 0,
  'aria-errormessage': 0,
  'aria-flowto': 0,
  'aria-labelledby': 0,
  'aria-owns': 0,
  'aria-posinset': 0,
  'aria-rowcount': 0,
  'aria-rowindex': 0,
  'aria-rowspan': 0,
  'aria-setsize': 0
};

var warnedProperties = {};
var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');
var hasOwnProperty$1 = Object.prototype.hasOwnProperty;

function validateProperty(tagName, name) {
  {
    if (hasOwnProperty$1.call(warnedProperties, name) && warnedProperties[name]) {
      return true;
    }

    if (rARIACamel.test(name)) {
      var ariaName = 'aria-' + name.slice(4).toLowerCase();
      var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null; // If this is an aria-* attribute, but is not listed in the known DOM
      // DOM properties, then it is an invalid aria-* attribute.

      if (correctName == null) {
        error('Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);

        warnedProperties[name] = true;
        return true;
      } // aria-* attributes should be lowercase; suggest the lowercase version.


      if (name !== correctName) {
        error('Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);

        warnedProperties[name] = true;
        return true;
      }
    }

    if (rARIA.test(name)) {
      var lowerCasedName = name.toLowerCase();
      var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null; // If this is an aria-* attribute, but is not listed in the known DOM
      // DOM properties, then it is an invalid aria-* attribute.

      if (standardName == null) {
        warnedProperties[name] = true;
        return false;
      } // aria-* attributes should be lowercase; suggest the lowercase version.


      if (name !== standardName) {
        error('Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);

        warnedProperties[name] = true;
        return true;
      }
    }
  }

  return true;
}

function warnInvalidARIAProps(type, props) {
  {
    var invalidProps = [];

    for (var key in props) {
      var isValid = validateProperty(type, key);

      if (!isValid) {
        invalidProps.push(key);
      }
    }

    var unknownPropString = invalidProps.map(function (prop) {
      return '`' + prop + '`';
    }).join(', ');

    if (invalidProps.length === 1) {
      error('Invalid aria prop %s on <%s> tag. ' + 'For details, see https://reactjs.org/link/invalid-aria-props', unknownPropString, type);
    } else if (invalidProps.length > 1) {
      error('Invalid aria props %s on <%s> tag. ' + 'For details, see https://reactjs.org/link/invalid-aria-props', unknownPropString, type);
    }
  }
}

function validateProperties(type, props) {
  if (isCustomComponent(type, props)) {
    return;
  }

  warnInvalidARIAProps(type, props);
}

var didWarnValueNull = false;
function validateProperties$1(type, props) {
  {
    if (type !== 'input' && type !== 'textarea' && type !== 'select') {
      return;
    }

    if (props != null && props.value === null && !didWarnValueNull) {
      didWarnValueNull = true;

      if (type === 'select' && props.multiple) {
        error('`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.', type);
      } else {
        error('`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.', type);
      }
    }
  }
}

// When adding attributes to the HTML or SVG allowed attribute list, be sure to
// also add them to this module to ensure casing and incorrect name
// warnings.
var possibleStandardNames = {
  // HTML
  accept: 'accept',
  acceptcharset: 'acceptCharset',
  'accept-charset': 'acceptCharset',
  accesskey: 'accessKey',
  action: 'action',
  allowfullscreen: 'allowFullScreen',
  alt: 'alt',
  as: 'as',
  async: 'async',
  autocapitalize: 'autoCapitalize',
  autocomplete: 'autoComplete',
  autocorrect: 'autoCorrect',
  autofocus: 'autoFocus',
  autoplay: 'autoPlay',
  autosave: 'autoSave',
  capture: 'capture',
  cellpadding: 'cellPadding',
  cellspacing: 'cellSpacing',
  challenge: 'challenge',
  charset: 'charSet',
  checked: 'checked',
  children: 'children',
  cite: 'cite',
  class: 'className',
  classid: 'classID',
  classname: 'className',
  cols: 'cols',
  colspan: 'colSpan',
  content: 'content',
  contenteditable: 'contentEditable',
  contextmenu: 'contextMenu',
  controls: 'controls',
  controlslist: 'controlsList',
  coords: 'coords',
  crossorigin: 'crossOrigin',
  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
  data: 'data',
  datetime: 'dateTime',
  default: 'default',
  defaultchecked: 'defaultChecked',
  defaultvalue: 'defaultValue',
  defer: 'defer',
  dir: 'dir',
  disabled: 'disabled',
  disablepictureinpicture: 'disablePictureInPicture',
  disableremoteplayback: 'disableRemotePlayback',
  download: 'download',
  draggable: 'draggable',
  enctype: 'encType',
  enterkeyhint: 'enterKeyHint',
  for: 'htmlFor',
  form: 'form',
  formmethod: 'formMethod',
  formaction: 'formAction',
  formenctype: 'formEncType',
  formnovalidate: 'formNoValidate',
  formtarget: 'formTarget',
  frameborder: 'frameBorder',
  headers: 'headers',
  height: 'height',
  hidden: 'hidden',
  high: 'high',
  href: 'href',
  hreflang: 'hrefLang',
  htmlfor: 'htmlFor',
  httpequiv: 'httpEquiv',
  'http-equiv': 'httpEquiv',
  icon: 'icon',
  id: 'id',
  innerhtml: 'innerHTML',
  inputmode: 'inputMode',
  integrity: 'integrity',
  is: 'is',
  itemid: 'itemID',
  itemprop: 'itemProp',
  itemref: 'itemRef',
  itemscope: 'itemScope',
  itemtype: 'itemType',
  keyparams: 'keyParams',
  keytype: 'keyType',
  kind: 'kind',
  label: 'label',
  lang: 'lang',
  list: 'list',
  loop: 'loop',
  low: 'low',
  manifest: 'manifest',
  marginwidth: 'marginWidth',
  marginheight: 'marginHeight',
  max: 'max',
  maxlength: 'maxLength',
  media: 'media',
  mediagroup: 'mediaGroup',
  method: 'method',
  min: 'min',
  minlength: 'minLength',
  multiple: 'multiple',
  muted: 'muted',
  name: 'name',
  nomodule: 'noModule',
  nonce: 'nonce',
  novalidate: 'noValidate',
  open: 'open',
  optimum: 'optimum',
  pattern: 'pattern',
  placeholder: 'placeholder',
  playsinline: 'playsInline',
  poster: 'poster',
  preload: 'preload',
  profile: 'profile',
  radiogroup: 'radioGroup',
  readonly: 'readOnly',
  referrerpolicy: 'referrerPolicy',
  rel: 'rel',
  required: 'required',
  reversed: 'reversed',
  role: 'role',
  rows: 'rows',
  rowspan: 'rowSpan',
  sandbox: 'sandbox',
  scope: 'scope',
  scoped: 'scoped',
  scrolling: 'scrolling',
  seamless: 'seamless',
  selected: 'selected',
  shape: 'shape',
  size: 'size',
  sizes: 'sizes',
  span: 'span',
  spellcheck: 'spellCheck',
  src: 'src',
  srcdoc: 'srcDoc',
  srclang: 'srcLang',
  srcset: 'srcSet',
  start: 'start',
  step: 'step',
  style: 'style',
  summary: 'summary',
  tabindex: 'tabIndex',
  target: 'target',
  title: 'title',
  type: 'type',
  usemap: 'useMap',
  value: 'value',
  width: 'width',
  wmode: 'wmode',
  wrap: 'wrap',
  // SVG
  about: 'about',
  accentheight: 'accentHeight',
  'accent-height': 'accentHeight',
  accumulate: 'accumulate',
  additive: 'additive',
  alignmentbaseline: 'alignmentBaseline',
  'alignment-baseline': 'alignmentBaseline',
  allowreorder: 'allowReorder',
  alphabetic: 'alphabetic',
  amplitude: 'amplitude',
  arabicform: 'arabicForm',
  'arabic-form': 'arabicForm',
  ascent: 'ascent',
  attributename: 'attributeName',
  attributetype: 'attributeType',
  autoreverse: 'autoReverse',
  azimuth: 'azimuth',
  basefrequency: 'baseFrequency',
  baselineshift: 'baselineShift',
  'baseline-shift': 'baselineShift',
  baseprofile: 'baseProfile',
  bbox: 'bbox',
  begin: 'begin',
  bias: 'bias',
  by: 'by',
  calcmode: 'calcMode',
  capheight: 'capHeight',
  'cap-height': 'capHeight',
  clip: 'clip',
  clippath: 'clipPath',
  'clip-path': 'clipPath',
  clippathunits: 'clipPathUnits',
  cliprule: 'clipRule',
  'clip-rule': 'clipRule',
  color: 'color',
  colorinterpolation: 'colorInterpolation',
  'color-interpolation': 'colorInterpolation',
  colorinterpolationfilters: 'colorInterpolationFilters',
  'color-interpolation-filters': 'colorInterpolationFilters',
  colorprofile: 'colorProfile',
  'color-profile': 'colorProfile',
  colorrendering: 'colorRendering',
  'color-rendering': 'colorRendering',
  contentscripttype: 'contentScriptType',
  contentstyletype: 'contentStyleType',
  cursor: 'cursor',
  cx: 'cx',
  cy: 'cy',
  d: 'd',
  datatype: 'datatype',
  decelerate: 'decelerate',
  descent: 'descent',
  diffuseconstant: 'diffuseConstant',
  direction: 'direction',
  display: 'display',
  divisor: 'divisor',
  dominantbaseline: 'dominantBaseline',
  'dominant-baseline': 'dominantBaseline',
  dur: 'dur',
  dx: 'dx',
  dy: 'dy',
  edgemode: 'edgeMode',
  elevation: 'elevation',
  enablebackground: 'enableBackground',
  'enable-background': 'enableBackground',
  end: 'end',
  exponent: 'exponent',
  externalresourcesrequired: 'externalResourcesRequired',
  fill: 'fill',
  fillopacity: 'fillOpacity',
  'fill-opacity': 'fillOpacity',
  fillrule: 'fillRule',
  'fill-rule': 'fillRule',
  filter: 'filter',
  filterres: 'filterRes',
  filterunits: 'filterUnits',
  floodopacity: 'floodOpacity',
  'flood-opacity': 'floodOpacity',
  floodcolor: 'floodColor',
  'flood-color': 'floodColor',
  focusable: 'focusable',
  fontfamily: 'fontFamily',
  'font-family': 'fontFamily',
  fontsize: 'fontSize',
  'font-size': 'fontSize',
  fontsizeadjust: 'fontSizeAdjust',
  'font-size-adjust': 'fontSizeAdjust',
  fontstretch: 'fontStretch',
  'font-stretch': 'fontStretch',
  fontstyle: 'fontStyle',
  'font-style': 'fontStyle',
  fontvariant: 'fontVariant',
  'font-variant': 'fontVariant',
  fontweight: 'fontWeight',
  'font-weight': 'fontWeight',
  format: 'format',
  from: 'from',
  fx: 'fx',
  fy: 'fy',
  g1: 'g1',
  g2: 'g2',
  glyphname: 'glyphName',
  'glyph-name': 'glyphName',
  glyphorientationhorizontal: 'glyphOrientationHorizontal',
  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
  glyphorientationvertical: 'glyphOrientationVertical',
  'glyph-orientation-vertical': 'glyphOrientationVertical',
  glyphref: 'glyphRef',
  gradienttransform: 'gradientTransform',
  gradientunits: 'gradientUnits',
  hanging: 'hanging',
  horizadvx: 'horizAdvX',
  'horiz-adv-x': 'horizAdvX',
  horizoriginx: 'horizOriginX',
  'horiz-origin-x': 'horizOriginX',
  ideographic: 'ideographic',
  imagerendering: 'imageRendering',
  'image-rendering': 'imageRendering',
  in2: 'in2',
  in: 'in',
  inlist: 'inlist',
  intercept: 'intercept',
  k1: 'k1',
  k2: 'k2',
  k3: 'k3',
  k4: 'k4',
  k: 'k',
  kernelmatrix: 'kernelMatrix',
  kernelunitlength: 'kernelUnitLength',
  kerning: 'kerning',
  keypoints: 'keyPoints',
  keysplines: 'keySplines',
  keytimes: 'keyTimes',
  lengthadjust: 'lengthAdjust',
  letterspacing: 'letterSpacing',
  'letter-spacing': 'letterSpacing',
  lightingcolor: 'lightingColor',
  'lighting-color': 'lightingColor',
  limitingconeangle: 'limitingConeAngle',
  local: 'local',
  markerend: 'markerEnd',
  'marker-end': 'markerEnd',
  markerheight: 'markerHeight',
  markermid: 'markerMid',
  'marker-mid': 'markerMid',
  markerstart: 'markerStart',
  'marker-start': 'markerStart',
  markerunits: 'markerUnits',
  markerwidth: 'markerWidth',
  mask: 'mask',
  maskcontentunits: 'maskContentUnits',
  maskunits: 'maskUnits',
  mathematical: 'mathematical',
  mode: 'mode',
  numoctaves: 'numOctaves',
  offset: 'offset',
  opacity: 'opacity',
  operator: 'operator',
  order: 'order',
  orient: 'orient',
  orientation: 'orientation',
  origin: 'origin',
  overflow: 'overflow',
  overlineposition: 'overlinePosition',
  'overline-position': 'overlinePosition',
  overlinethickness: 'overlineThickness',
  'overline-thickness': 'overlineThickness',
  paintorder: 'paintOrder',
  'paint-order': 'paintOrder',
  panose1: 'panose1',
  'panose-1': 'panose1',
  pathlength: 'pathLength',
  patterncontentunits: 'patternContentUnits',
  patterntransform: 'patternTransform',
  patternunits: 'patternUnits',
  pointerevents: 'pointerEvents',
  'pointer-events': 'pointerEvents',
  points: 'points',
  pointsatx: 'pointsAtX',
  pointsaty: 'pointsAtY',
  pointsatz: 'pointsAtZ',
  prefix: 'prefix',
  preservealpha: 'preserveAlpha',
  preserveaspectratio: 'preserveAspectRatio',
  primitiveunits: 'primitiveUnits',
  property: 'property',
  r: 'r',
  radius: 'radius',
  refx: 'refX',
  refy: 'refY',
  renderingintent: 'renderingIntent',
  'rendering-intent': 'renderingIntent',
  repeatcount: 'repeatCount',
  repeatdur: 'repeatDur',
  requiredextensions: 'requiredExtensions',
  requiredfeatures: 'requiredFeatures',
  resource: 'resource',
  restart: 'restart',
  result: 'result',
  results: 'results',
  rotate: 'rotate',
  rx: 'rx',
  ry: 'ry',
  scale: 'scale',
  security: 'security',
  seed: 'seed',
  shaperendering: 'shapeRendering',
  'shape-rendering': 'shapeRendering',
  slope: 'slope',
  spacing: 'spacing',
  specularconstant: 'specularConstant',
  specularexponent: 'specularExponent',
  speed: 'speed',
  spreadmethod: 'spreadMethod',
  startoffset: 'startOffset',
  stddeviation: 'stdDeviation',
  stemh: 'stemh',
  stemv: 'stemv',
  stitchtiles: 'stitchTiles',
  stopcolor: 'stopColor',
  'stop-color': 'stopColor',
  stopopacity: 'stopOpacity',
  'stop-opacity': 'stopOpacity',
  strikethroughposition: 'strikethroughPosition',
  'strikethrough-position': 'strikethroughPosition',
  strikethroughthickness: 'strikethroughThickness',
  'strikethrough-thickness': 'strikethroughThickness',
  string: 'string',
  stroke: 'stroke',
  strokedasharray: 'strokeDasharray',
  'stroke-dasharray': 'strokeDasharray',
  strokedashoffset: 'strokeDashoffset',
  'stroke-dashoffset': 'strokeDashoffset',
  strokelinecap: 'strokeLinecap',
  'stroke-linecap': 'strokeLinecap',
  strokelinejoin: 'strokeLinejoin',
  'stroke-linejoin': 'strokeLinejoin',
  strokemiterlimit: 'strokeMiterlimit',
  'stroke-miterlimit': 'strokeMiterlimit',
  strokewidth: 'strokeWidth',
  'stroke-width': 'strokeWidth',
  strokeopacity: 'strokeOpacity',
  'stroke-opacity': 'strokeOpacity',
  suppresscontenteditablewarning: 'suppressContentEditableWarning',
  suppresshydrationwarning: 'suppressHydrationWarning',
  surfacescale: 'surfaceScale',
  systemlanguage: 'systemLanguage',
  tablevalues: 'tableValues',
  targetx: 'targetX',
  targety: 'targetY',
  textanchor: 'textAnchor',
  'text-anchor': 'textAnchor',
  textdecoration: 'textDecoration',
  'text-decoration': 'textDecoration',
  textlength: 'textLength',
  textrendering: 'textRendering',
  'text-rendering': 'textRendering',
  to: 'to',
  transform: 'transform',
  typeof: 'typeof',
  u1: 'u1',
  u2: 'u2',
  underlineposition: 'underlinePosition',
  'underline-position': 'underlinePosition',
  underlinethickness: 'underlineThickness',
  'underline-thickness': 'underlineThickness',
  unicode: 'unicode',
  unicodebidi: 'unicodeBidi',
  'unicode-bidi': 'unicodeBidi',
  unicoderange: 'unicodeRange',
  'unicode-range': 'unicodeRange',
  unitsperem: 'unitsPerEm',
  'units-per-em': 'unitsPerEm',
  unselectable: 'unselectable',
  valphabetic: 'vAlphabetic',
  'v-alphabetic': 'vAlphabetic',
  values: 'values',
  vectoreffect: 'vectorEffect',
  'vector-effect': 'vectorEffect',
  version: 'version',
  vertadvy: 'vertAdvY',
  'vert-adv-y': 'vertAdvY',
  vertoriginx: 'vertOriginX',
  'vert-origin-x': 'vertOriginX',
  vertoriginy: 'vertOriginY',
  'vert-origin-y': 'vertOriginY',
  vhanging: 'vHanging',
  'v-hanging': 'vHanging',
  videographic: 'vIdeographic',
  'v-ideographic': 'vIdeographic',
  viewbox: 'viewBox',
  viewtarget: 'viewTarget',
  visibility: 'visibility',
  vmathematical: 'vMathematical',
  'v-mathematical': 'vMathematical',
  vocab: 'vocab',
  widths: 'widths',
  wordspacing: 'wordSpacing',
  'word-spacing': 'wordSpacing',
  writingmode: 'writingMode',
  'writing-mode': 'writingMode',
  x1: 'x1',
  x2: 'x2',
  x: 'x',
  xchannelselector: 'xChannelSelector',
  xheight: 'xHeight',
  'x-height': 'xHeight',
  xlinkactuate: 'xlinkActuate',
  'xlink:actuate': 'xlinkActuate',
  xlinkarcrole: 'xlinkArcrole',
  'xlink:arcrole': 'xlinkArcrole',
  xlinkhref: 'xlinkHref',
  'xlink:href': 'xlinkHref',
  xlinkrole: 'xlinkRole',
  'xlink:role': 'xlinkRole',
  xlinkshow: 'xlinkShow',
  'xlink:show': 'xlinkShow',
  xlinktitle: 'xlinkTitle',
  'xlink:title': 'xlinkTitle',
  xlinktype: 'xlinkType',
  'xlink:type': 'xlinkType',
  xmlbase: 'xmlBase',
  'xml:base': 'xmlBase',
  xmllang: 'xmlLang',
  'xml:lang': 'xmlLang',
  xmlns: 'xmlns',
  'xml:space': 'xmlSpace',
  xmlnsxlink: 'xmlnsXlink',
  'xmlns:xlink': 'xmlnsXlink',
  xmlspace: 'xmlSpace',
  y1: 'y1',
  y2: 'y2',
  y: 'y',
  ychannelselector: 'yChannelSelector',
  z: 'z',
  zoomandpan: 'zoomAndPan'
};

var validateProperty$1 = function () {};

{
  var warnedProperties$1 = {};
  var _hasOwnProperty = Object.prototype.hasOwnProperty;
  var EVENT_NAME_REGEX = /^on./;
  var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
  var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
  var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

  validateProperty$1 = function (tagName, name, value, eventRegistry) {
    if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
      return true;
    }

    var lowerCasedName = name.toLowerCase();

    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
      error('React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');

      warnedProperties$1[name] = true;
      return true;
    } // We can't rely on the event system being injected on the server.


    if (eventRegistry != null) {
      var registrationNameDependencies = eventRegistry.registrationNameDependencies,
          possibleRegistrationNames = eventRegistry.possibleRegistrationNames;

      if (registrationNameDependencies.hasOwnProperty(name)) {
        return true;
      }

      var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;

      if (registrationName != null) {
        error('Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);

        warnedProperties$1[name] = true;
        return true;
      }

      if (EVENT_NAME_REGEX.test(name)) {
        error('Unknown event handler property `%s`. It will be ignored.', name);

        warnedProperties$1[name] = true;
        return true;
      }
    } else if (EVENT_NAME_REGEX.test(name)) {
      // If no event plugins have been injected, we are in a server environment.
      // So we can't tell if the event name is correct for sure, but we can filter
      // out known bad ones like `onclick`. We can't suggest a specific replacement though.
      if (INVALID_EVENT_NAME_REGEX.test(name)) {
        error('Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.', name);
      }

      warnedProperties$1[name] = true;
      return true;
    } // Let the ARIA attribute hook validate ARIA attributes


    if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
      return true;
    }

    if (lowerCasedName === 'innerhtml') {
      error('Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');

      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'aria') {
      error('The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');

      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
      error('Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.', typeof value);

      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'number' && isNaN(value)) {
      error('Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.', name);

      warnedProperties$1[name] = true;
      return true;
    }

    var propertyInfo = getPropertyInfo(name);
    var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED; // Known attributes should match the casing specified in the property config.

    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
      var standardName = possibleStandardNames[lowerCasedName];

      if (standardName !== name) {
        error('Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);

        warnedProperties$1[name] = true;
        return true;
      }
    } else if (!isReserved && name !== lowerCasedName) {
      // Unknown attributes should have lowercase casing since that's how they
      // will be cased anyway with server rendering.
      error('React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.', name, lowerCasedName);

      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
      if (value) {
        error('Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.', value, name, name, value, name);
      } else {
        error('Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
      }

      warnedProperties$1[name] = true;
      return true;
    } // Now that we've validated casing, do not validate
    // data types for reserved props


    if (isReserved) {
      return true;
    } // Warn when a known attribute is a bad type


    if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
      warnedProperties$1[name] = true;
      return false;
    } // Warn when passing the strings 'false' or 'true' into a boolean prop


    if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
      error('Received the string `%s` for the boolean attribute `%s`. ' + '%s ' + 'Did you mean %s={%s}?', value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string "false".', name, value);

      warnedProperties$1[name] = true;
      return true;
    }

    return true;
  };
}

var warnUnknownProperties = function (type, props, eventRegistry) {
  {
    var unknownProps = [];

    for (var key in props) {
      var isValid = validateProperty$1(type, key, props[key], eventRegistry);

      if (!isValid) {
        unknownProps.push(key);
      }
    }

    var unknownPropString = unknownProps.map(function (prop) {
      return '`' + prop + '`';
    }).join(', ');

    if (unknownProps.length === 1) {
      error('Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://reactjs.org/link/attribute-behavior ', unknownPropString, type);
    } else if (unknownProps.length > 1) {
      error('Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://reactjs.org/link/attribute-behavior ', unknownPropString, type);
    }
  }
};

function validateProperties$2(type, props, eventRegistry) {
  if (isCustomComponent(type, props)) {
    return;
  }

  warnUnknownProperties(type, props, eventRegistry);
}

var toArray = React.Children.toArray; // This is only used in DEV.
// Each entry is `this.stack` from a currently executing renderer instance.
// (There may be more than one because ReactDOMServer is reentrant).
// Each stack is an array of frames which may contain nested stacks of elements.

var currentDebugStacks = [];
var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
var ReactDebugCurrentFrame$1;
var prevGetCurrentStackImpl = null;

var getCurrentServerStackImpl = function () {
  return '';
};

var describeStackFrame = function (element) {
  return '';
};

var validatePropertiesInDevelopment = function (type, props) {};

var pushCurrentDebugStack = function (stack) {};

var pushElementToDebugStack = function (element) {};

var popCurrentDebugStack = function () {};

var hasWarnedAboutUsingContextAsConsumer = false;

{
  ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;

  validatePropertiesInDevelopment = function (type, props) {
    validateProperties(type, props);
    validateProperties$1(type, props);
    validateProperties$2(type, props, null);
  };

  describeStackFrame = function (element) {
    return describeUnknownElementTypeFrameInDEV(element.type, element._source, null);
  };

  pushCurrentDebugStack = function (stack) {
    currentDebugStacks.push(stack);

    if (currentDebugStacks.length === 1) {
      // We are entering a server renderer.
      // Remember the previous (e.g. client) global stack implementation.
      prevGetCurrentStackImpl = ReactDebugCurrentFrame$1.getCurrentStack;
      ReactDebugCurrentFrame$1.getCurrentStack = getCurrentServerStackImpl;
    }
  };

  pushElementToDebugStack = function (element) {
    // For the innermost executing ReactDOMServer call,
    var stack = currentDebugStacks[currentDebugStacks.length - 1]; // Take the innermost executing frame (e.g. <Foo>),

    var frame = stack[stack.length - 1]; // and record that it has one more element associated with it.

    frame.debugElementStack.push(element); // We only need this because we tail-optimize single-element
    // children and directly handle them in an inner loop instead of
    // creating separate frames for them.
  };

  popCurrentDebugStack = function () {
    currentDebugStacks.pop();

    if (currentDebugStacks.length === 0) {
      // We are exiting the server renderer.
      // Restore the previous (e.g. client) global stack implementation.
      ReactDebugCurrentFrame$1.getCurrentStack = prevGetCurrentStackImpl;
      prevGetCurrentStackImpl = null;
    }
  };

  getCurrentServerStackImpl = function () {
    if (currentDebugStacks.length === 0) {
      // Nothing is currently rendering.
      return '';
    } // ReactDOMServer is reentrant so there may be multiple calls at the same time.
    // Take the frames from the innermost call which is the last in the array.


    var frames = currentDebugStacks[currentDebugStacks.length - 1];
    var stack = ''; // Go through every frame in the stack from the innermost one.

    for (var i = frames.length - 1; i >= 0; i--) {
      var frame = frames[i]; // Every frame might have more than one debug element stack entry associated with it.
      // This is because single-child nesting doesn't create materialized frames.
      // Instead it would push them through `pushElementToDebugStack()`.

      var debugElementStack = frame.debugElementStack;

      for (var ii = debugElementStack.length - 1; ii >= 0; ii--) {
        stack += describeStackFrame(debugElementStack[ii]);
      }
    }

    return stack;
  };
}

var didWarnDefaultInputValue = false;
var didWarnDefaultChecked = false;
var didWarnDefaultSelectValue = false;
var didWarnDefaultTextareaValue = false;
var didWarnInvalidOptionChildren = false;
var didWarnAboutNoopUpdateForComponent = {};
var didWarnAboutBadClass = {};
var didWarnAboutModulePatternComponent = {};
var didWarnAboutDeprecatedWillMount = {};
var didWarnAboutUndefinedDerivedState = {};
var didWarnAboutUninitializedState = {};
var valuePropNames = ['value', 'defaultValue'];
var newlineEatingTags = {
  listing: true,
  pre: true,
  textarea: true
}; // We accept any tag to be rendered but since this gets injected into arbitrary
// HTML, we want to make sure that it's a safe tag.
// http://www.w3.org/TR/REC-xml/#NT-Name

var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset

var validatedTagCache = {};

function validateDangerousTag(tag) {
  if (!validatedTagCache.hasOwnProperty(tag)) {
    if (!VALID_TAG_REGEX.test(tag)) {
      {
        throw Error( "Invalid tag: " + tag );
      }
    }

    validatedTagCache[tag] = true;
  }
}

var styleNameCache = {};

var processStyleName = function (styleName) {
  if (styleNameCache.hasOwnProperty(styleName)) {
    return styleNameCache[styleName];
  }

  var result = hyphenateStyleName(styleName);
  styleNameCache[styleName] = result;
  return result;
};

function createMarkupForStyles(styles) {
  var serialized = '';
  var delimiter = '';

  for (var styleName in styles) {
    if (!styles.hasOwnProperty(styleName)) {
      continue;
    }

    var isCustomProperty = styleName.indexOf('--') === 0;
    var styleValue = styles[styleName];

    {
      if (!isCustomProperty) {
        warnValidStyle$1(styleName, styleValue);
      }
    }

    if (styleValue != null) {
      serialized += delimiter + (isCustomProperty ? styleName : processStyleName(styleName)) + ':';
      serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
      delimiter = ';';
    }
  }

  return serialized || null;
}

function warnNoop(publicInstance, callerName) {
  {
    var _constructor = publicInstance.constructor;
    var componentName = _constructor && getComponentName(_constructor) || 'ReactClass';
    var warningKey = componentName + '.' + callerName;

    if (didWarnAboutNoopUpdateForComponent[warningKey]) {
      return;
    }

    error('%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op.\n\nPlease check the code for the %s component.', callerName, callerName, componentName);

    didWarnAboutNoopUpdateForComponent[warningKey] = true;
  }
}

function shouldConstruct$1(Component) {
  return Component.prototype && Component.prototype.isReactComponent;
}

function getNonChildrenInnerMarkup(props) {
  var innerHTML = props.dangerouslySetInnerHTML;

  if (innerHTML != null) {
    if (innerHTML.__html != null) {
      return innerHTML.__html;
    }
  } else {
    var content = props.children;

    if (typeof content === 'string' || typeof content === 'number') {
      return escapeTextForBrowser(content);
    }
  }

  return null;
}

function flattenTopLevelChildren(children) {
  if (!React.isValidElement(children)) {
    return toArray(children);
  }

  var element = children;

  if (element.type !== REACT_FRAGMENT_TYPE) {
    return [element];
  }

  var fragmentChildren = element.props.children;

  if (!React.isValidElement(fragmentChildren)) {
    return toArray(fragmentChildren);
  }

  var fragmentChildElement = fragmentChildren;
  return [fragmentChildElement];
}

function flattenOptionChildren(children) {
  if (children === undefined || children === null) {
    return children;
  }

  var content = ''; // Flatten children and warn if they aren't strings or numbers;
  // invalid types are ignored.

  React.Children.forEach(children, function (child) {
    if (child == null) {
      return;
    }

    content += child;

    {
      if (!didWarnInvalidOptionChildren && typeof child !== 'string' && typeof child !== 'number') {
        didWarnInvalidOptionChildren = true;

        error('Only strings and numbers are supported as <option> children.');
      }
    }
  });
  return content;
}

var hasOwnProperty$2 = Object.prototype.hasOwnProperty;
var STYLE = 'style';
var RESERVED_PROPS = {
  children: null,
  dangerouslySetInnerHTML: null,
  suppressContentEditableWarning: null,
  suppressHydrationWarning: null
};

function createOpenTagMarkup(tagVerbatim, tagLowercase, props, namespace, makeStaticMarkup, isRootElement) {
  var ret = '<' + tagVerbatim;
  var isCustomComponent$1 = isCustomComponent(tagLowercase, props);

  for (var propKey in props) {
    if (!hasOwnProperty$2.call(props, propKey)) {
      continue;
    }

    var propValue = props[propKey];

    if (propValue == null) {
      continue;
    }

    if (propKey === STYLE) {
      propValue = createMarkupForStyles(propValue);
    }

    var markup = null;

    if (isCustomComponent$1) {
      if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
        markup = createMarkupForCustomAttribute(propKey, propValue);
      }
    } else {
      markup = createMarkupForProperty(propKey, propValue);
    }

    if (markup) {
      ret += ' ' + markup;
    }
  } // For static pages, no need to put React ID and checksum. Saves lots of
  // bytes.


  if (makeStaticMarkup) {
    return ret;
  }

  if (isRootElement) {
    ret += ' ' + createMarkupForRoot();
  }

  return ret;
}

function validateRenderResult(child, type) {
  if (child === undefined) {
    {
      {
        throw Error( (getComponentName(type) || 'Component') + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null." );
      }
    }
  }
}

function resolve(child, context, threadID) {
  while (React.isValidElement(child)) {
    // Safe because we just checked it's an element.
    var element = child;
    var Component = element.type;

    {
      pushElementToDebugStack(element);
    }

    if (typeof Component !== 'function') {
      break;
    }

    processChild(element, Component);
  } // Extra closure so queue and replace can be captured properly


  function processChild(element, Component) {
    var isClass = shouldConstruct$1(Component);
    var publicContext = processContext(Component, context, threadID, isClass);
    var queue = [];
    var replace = false;
    var updater = {
      isMounted: function (publicInstance) {
        return false;
      },
      enqueueForceUpdate: function (publicInstance) {
        if (queue === null) {
          warnNoop(publicInstance, 'forceUpdate');
          return null;
        }
      },
      enqueueReplaceState: function (publicInstance, completeState) {
        replace = true;
        queue = [completeState];
      },
      enqueueSetState: function (publicInstance, currentPartialState) {
        if (queue === null) {
          warnNoop(publicInstance, 'setState');
          return null;
        }

        queue.push(currentPartialState);
      }
    };
    var inst;

    if (isClass) {
      inst = new Component(element.props, publicContext, updater);

      if (typeof Component.getDerivedStateFromProps === 'function') {
        {
          if (inst.state === null || inst.state === undefined) {
            var componentName = getComponentName(Component) || 'Unknown';

            if (!didWarnAboutUninitializedState[componentName]) {
              error('`%s` uses `getDerivedStateFromProps` but its initial state is ' + '%s. This is not recommended. Instead, define the initial state by ' + 'assigning an object to `this.state` in the constructor of `%s`. ' + 'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.', componentName, inst.state === null ? 'null' : 'undefined', componentName);

              didWarnAboutUninitializedState[componentName] = true;
            }
          }
        }

        var partialState = Component.getDerivedStateFromProps.call(null, element.props, inst.state);

        {
          if (partialState === undefined) {
            var _componentName = getComponentName(Component) || 'Unknown';

            if (!didWarnAboutUndefinedDerivedState[_componentName]) {
              error('%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', _componentName);

              didWarnAboutUndefinedDerivedState[_componentName] = true;
            }
          }
        }

        if (partialState != null) {
          inst.state = _assign({}, inst.state, partialState);
        }
      }
    } else {
      {
        if (Component.prototype && typeof Component.prototype.render === 'function') {
          var _componentName2 = getComponentName(Component) || 'Unknown';

          if (!didWarnAboutBadClass[_componentName2]) {
            error("The <%s /> component appears to have a render method, but doesn't extend React.Component. " + 'This is likely to cause errors. Change %s to extend React.Component instead.', _componentName2, _componentName2);

            didWarnAboutBadClass[_componentName2] = true;
          }
        }
      }

      var componentIdentity = {};
      prepareToUseHooks(componentIdentity);
      inst = Component(element.props, publicContext, updater);
      inst = finishHooks(Component, element.props, inst, publicContext);

      {
        // Support for module components is deprecated and is removed behind a flag.
        // Whether or not it would crash later, we want to show a good message in DEV first.
        if (inst != null && inst.render != null) {
          var _componentName3 = getComponentName(Component) || 'Unknown';

          if (!didWarnAboutModulePatternComponent[_componentName3]) {
            error('The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + "If you can't use a class try assigning the prototype on the function as a workaround. " + "`%s.prototype = React.Component.prototype`. Don't use an arrow function since it " + 'cannot be called with `new` by React.', _componentName3, _componentName3, _componentName3);

            didWarnAboutModulePatternComponent[_componentName3] = true;
          }
        }
      } // If the flag is on, everything is assumed to be a function component.
      // Otherwise, we also do the unfortunate dynamic checks.


      if ( inst == null || inst.render == null) {
        child = inst;
        validateRenderResult(child, Component);
        return;
      }
    }

    inst.props = element.props;
    inst.context = publicContext;
    inst.updater = updater;
    var initialState = inst.state;

    if (initialState === undefined) {
      inst.state = initialState = null;
    }

    if (typeof inst.UNSAFE_componentWillMount === 'function' || typeof inst.componentWillMount === 'function') {
      if (typeof inst.componentWillMount === 'function') {
        {
          if ( inst.componentWillMount.__suppressDeprecationWarning !== true) {
            var _componentName4 = getComponentName(Component) || 'Unknown';

            if (!didWarnAboutDeprecatedWillMount[_componentName4]) {
              warn( // keep this warning in sync with ReactStrictModeWarning.js
              'componentWillMount has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move code from componentWillMount to componentDidMount (preferred in most cases) ' + 'or the constructor.\n' + '\nPlease update the following components: %s', _componentName4);

              didWarnAboutDeprecatedWillMount[_componentName4] = true;
            }
          }
        } // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for any component with the new gDSFP.


        if (typeof Component.getDerivedStateFromProps !== 'function') {
          inst.componentWillMount();
        }
      }

      if (typeof inst.UNSAFE_componentWillMount === 'function' && typeof Component.getDerivedStateFromProps !== 'function') {
        // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for any component with the new gDSFP.
        inst.UNSAFE_componentWillMount();
      }

      if (queue.length) {
        var oldQueue = queue;
        var oldReplace = replace;
        queue = null;
        replace = false;

        if (oldReplace && oldQueue.length === 1) {
          inst.state = oldQueue[0];
        } else {
          var nextState = oldReplace ? oldQueue[0] : inst.state;
          var dontMutate = true;

          for (var i = oldReplace ? 1 : 0; i < oldQueue.length; i++) {
            var partial = oldQueue[i];

            var _partialState = typeof partial === 'function' ? partial.call(inst, nextState, element.props, publicContext) : partial;

            if (_partialState != null) {
              if (dontMutate) {
                dontMutate = false;
                nextState = _assign({}, nextState, _partialState);
              } else {
                _assign(nextState, _partialState);
              }
            }
          }

          inst.state = nextState;
        }
      } else {
        queue = null;
      }
    }

    child = inst.render();

    {
      if (child === undefined && inst.render._isMockFunction) {
        // This is probably bad practice. Consider warning here and
        // deprecating this convenience.
        child = null;
      }
    }

    validateRenderResult(child, Component);
    var childContext;

    {
      if (typeof inst.getChildContext === 'function') {
        var _childContextTypes = Component.childContextTypes;

        if (typeof _childContextTypes === 'object') {
          childContext = inst.getChildContext();

          for (var contextKey in childContext) {
            if (!(contextKey in _childContextTypes)) {
              {
                throw Error( (getComponentName(Component) || 'Unknown') + ".getChildContext(): key \"" + contextKey + "\" is not defined in childContextTypes." );
              }
            }
          }
        } else {
          {
            error('%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', getComponentName(Component) || 'Unknown');
          }
        }
      }

      if (childContext) {
        context = _assign({}, context, childContext);
      }
    }
  }

  return {
    child: child,
    context: context
  };
}

var ReactDOMServerRenderer = /*#__PURE__*/function () {
  // TODO: type this more strictly:
  // DEV-only
  function ReactDOMServerRenderer(children, makeStaticMarkup, options) {
    var flatChildren = flattenTopLevelChildren(children);
    var topFrame = {
      type: null,
      // Assume all trees start in the HTML namespace (not totally true, but
      // this is what we did historically)
      domNamespace: Namespaces.html,
      children: flatChildren,
      childIndex: 0,
      context: emptyObject,
      footer: ''
    };

    {
      topFrame.debugElementStack = [];
    }

    this.threadID = allocThreadID();
    this.stack = [topFrame];
    this.exhausted = false;
    this.currentSelectValue = null;
    this.previousWasTextNode = false;
    this.makeStaticMarkup = makeStaticMarkup;
    this.suspenseDepth = 0; // Context (new API)

    this.contextIndex = -1;
    this.contextStack = [];
    this.contextValueStack = []; // useOpaqueIdentifier ID

    this.uniqueID = 0;
    this.identifierPrefix = options && options.identifierPrefix || '';

    {
      this.contextProviderStack = [];
    }
  }

  var _proto = ReactDOMServerRenderer.prototype;

  _proto.destroy = function destroy() {
    if (!this.exhausted) {
      this.exhausted = true;
      this.clearProviders();
      freeThreadID(this.threadID);
    }
  }
  /**
   * Note: We use just two stacks regardless of how many context providers you have.
   * Providers are always popped in the reverse order to how they were pushed
   * so we always know on the way down which provider you'll encounter next on the way up.
   * On the way down, we push the current provider, and its context value *before*
   * we mutated it, onto the stacks. Therefore, on the way up, we always know which
   * provider needs to be "restored" to which value.
   * https://github.com/facebook/react/pull/12985#issuecomment-396301248
   */
  ;

  _proto.pushProvider = function pushProvider(provider) {
    var index = ++this.contextIndex;
    var context = provider.type._context;
    var threadID = this.threadID;
    validateContextBounds(context, threadID);
    var previousValue = context[threadID]; // Remember which value to restore this context to on our way up.

    this.contextStack[index] = context;
    this.contextValueStack[index] = previousValue;

    {
      // Only used for push/pop mismatch warnings.
      this.contextProviderStack[index] = provider;
    } // Mutate the current value.


    context[threadID] = provider.props.value;
  };

  _proto.popProvider = function popProvider(provider) {
    var index = this.contextIndex;

    {
      if (index < 0 || provider !== this.contextProviderStack[index]) {
        error('Unexpected pop.');
      }
    }

    var context = this.contextStack[index];
    var previousValue = this.contextValueStack[index]; // "Hide" these null assignments from Flow by using `any`
    // because conceptually they are deletions--as long as we
    // promise to never access values beyond `this.contextIndex`.

    this.contextStack[index] = null;
    this.contextValueStack[index] = null;

    {
      this.contextProviderStack[index] = null;
    }

    this.contextIndex--; // Restore to the previous value we stored as we were walking down.
    // We've already verified that this context has been expanded to accommodate
    // this thread id, so we don't need to do it again.

    context[this.threadID] = previousValue;
  };

  _proto.clearProviders = function clearProviders() {
    // Restore any remaining providers on the stack to previous values
    for (var index = this.contextIndex; index >= 0; index--) {
      var context = this.contextStack[index];
      var previousValue = this.contextValueStack[index];
      context[this.threadID] = previousValue;
    }
  };

  _proto.read = function read(bytes) {
    if (this.exhausted) {
      return null;
    }

    var prevPartialRenderer = currentPartialRenderer;
    setCurrentPartialRenderer(this);
    var prevDispatcher = ReactCurrentDispatcher$1.current;
    ReactCurrentDispatcher$1.current = Dispatcher;

    try {
      // Markup generated within <Suspense> ends up buffered until we know
      // nothing in that boundary suspended
      var out = [''];
      var suspended = false;

      while (out[0].length < bytes) {
        if (this.stack.length === 0) {
          this.exhausted = true;
          freeThreadID(this.threadID);
          break;
        }

        var frame = this.stack[this.stack.length - 1];

        if (suspended || frame.childIndex >= frame.children.length) {
          var footer = frame.footer;

          if (footer !== '') {
            this.previousWasTextNode = false;
          }

          this.stack.pop();

          if (frame.type === 'select') {
            this.currentSelectValue = null;
          } else if (frame.type != null && frame.type.type != null && frame.type.type.$$typeof === REACT_PROVIDER_TYPE) {
            var provider = frame.type;
            this.popProvider(provider);
          } else if (frame.type === REACT_SUSPENSE_TYPE) {
            this.suspenseDepth--;
            var buffered = out.pop();

            if (suspended) {
              suspended = false; // If rendering was suspended at this boundary, render the fallbackFrame

              var fallbackFrame = frame.fallbackFrame;

              if (!fallbackFrame) {
                {
                  throw Error(true ? "ReactDOMServer did not find an internal fallback frame for Suspense. This is a bug in React. Please file an issue." : formatProdErrorMessage(303));
                }
              }

              this.stack.push(fallbackFrame);
              out[this.suspenseDepth] += '<!--$!-->'; // Skip flushing output since we're switching to the fallback

              continue;
            } else {
              out[this.suspenseDepth] += buffered;
            }
          } // Flush output


          out[this.suspenseDepth] += footer;
          continue;
        }

        var child = frame.children[frame.childIndex++];
        var outBuffer = '';

        if (true) {
          pushCurrentDebugStack(this.stack); // We're starting work on this frame, so reset its inner stack.

          frame.debugElementStack.length = 0;
        }

        try {
          outBuffer += this.render(child, frame.context, frame.domNamespace);
        } catch (err) {
          if (err != null && typeof err.then === 'function') {
            if (enableSuspenseServerRenderer) ; else {
              if (!false) {
                {
                  throw Error(true ? "ReactDOMServer does not yet support Suspense." : formatProdErrorMessage(294));
                }
              }
            }
          } else {
            throw err;
          }
        } finally {
          if (true) {
            popCurrentDebugStack();
          }
        }

        if (out.length <= this.suspenseDepth) {
          out.push('');
        }

        out[this.suspenseDepth] += outBuffer;
      }

      return out[0];
    } finally {
      ReactCurrentDispatcher$1.current = prevDispatcher;
      setCurrentPartialRenderer(prevPartialRenderer);
      resetHooksState();
    }
  };

  _proto.render = function render(child, context, parentNamespace) {
    if (typeof child === 'string' || typeof child === 'number') {
      var text = '' + child;

      if (text === '') {
        return '';
      }

      if (this.makeStaticMarkup) {
        return escapeTextForBrowser(text);
      }

      if (this.previousWasTextNode) {
        return '<!-- -->' + escapeTextForBrowser(text);
      }

      this.previousWasTextNode = true;
      return escapeTextForBrowser(text);
    } else {
      var nextChild;

      var _resolve = resolve(child, context, this.threadID);

      nextChild = _resolve.child;
      context = _resolve.context;

      if (nextChild === null || nextChild === false) {
        return '';
      } else if (!React.isValidElement(nextChild)) {
        if (nextChild != null && nextChild.$$typeof != null) {
          // Catch unexpected special types early.
          var $$typeof = nextChild.$$typeof;

          if (!($$typeof !== REACT_PORTAL_TYPE)) {
            {
              throw Error( "Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render." );
            }
          } // Catch-all to prevent an infinite loop if React.Children.toArray() supports some new type.


          {
            {
              throw Error( "Unknown element-like object type: " + $$typeof.toString() + ". This is likely a bug in React. Please file an issue." );
            }
          }
        }

        var nextChildren = toArray(nextChild);
        var frame = {
          type: null,
          domNamespace: parentNamespace,
          children: nextChildren,
          childIndex: 0,
          context: context,
          footer: ''
        };

        {
          frame.debugElementStack = [];
        }

        this.stack.push(frame);
        return '';
      } // Safe because we just checked it's an element.


      var nextElement = nextChild;
      var elementType = nextElement.type;

      if (typeof elementType === 'string') {
        return this.renderDOM(nextElement, context, parentNamespace);
      }

      switch (elementType) {
        // TODO: LegacyHidden acts the same as a fragment. This only works
        // because we currently assume that every instance of LegacyHidden is
        // accompanied by a host component wrapper. In the hidden mode, the host
        // component is given a `hidden` attribute, which ensures that the
        // initial HTML is not visible. To support the use of LegacyHidden as a
        // true fragment, without an extra DOM node, we would have to hide the
        // initial HTML in some other way.
        case REACT_LEGACY_HIDDEN_TYPE:
        case REACT_DEBUG_TRACING_MODE_TYPE:
        case REACT_STRICT_MODE_TYPE:
        case REACT_PROFILER_TYPE:
        case REACT_SUSPENSE_LIST_TYPE:
        case REACT_FRAGMENT_TYPE:
          {
            var _nextChildren = toArray(nextChild.props.children);

            var _frame = {
              type: null,
              domNamespace: parentNamespace,
              children: _nextChildren,
              childIndex: 0,
              context: context,
              footer: ''
            };

            {
              _frame.debugElementStack = [];
            }

            this.stack.push(_frame);
            return '';
          }

        case REACT_SUSPENSE_TYPE:
          {
            {
              {
                {
                  throw Error( "ReactDOMServer does not yet support Suspense." );
                }
              }
            }
          }
        // eslint-disable-next-line-no-fallthrough

        case REACT_SCOPE_TYPE:
          {

            {
              {
                throw Error( "ReactDOMServer does not yet support scope components." );
              }
            }
          }
      }

      if (typeof elementType === 'object' && elementType !== null) {
        switch (elementType.$$typeof) {
          case REACT_FORWARD_REF_TYPE:
            {
              var element = nextChild;

              var _nextChildren5;

              var componentIdentity = {};
              prepareToUseHooks(componentIdentity);
              _nextChildren5 = elementType.render(element.props, element.ref);
              _nextChildren5 = finishHooks(elementType.render, element.props, _nextChildren5, element.ref);
              _nextChildren5 = toArray(_nextChildren5);
              var _frame5 = {
                type: null,
                domNamespace: parentNamespace,
                children: _nextChildren5,
                childIndex: 0,
                context: context,
                footer: ''
              };

              {
                _frame5.debugElementStack = [];
              }

              this.stack.push(_frame5);
              return '';
            }

          case REACT_MEMO_TYPE:
            {
              var _element = nextChild;
              var _nextChildren6 = [React.createElement(elementType.type, _assign({
                ref: _element.ref
              }, _element.props))];
              var _frame6 = {
                type: null,
                domNamespace: parentNamespace,
                children: _nextChildren6,
                childIndex: 0,
                context: context,
                footer: ''
              };

              {
                _frame6.debugElementStack = [];
              }

              this.stack.push(_frame6);
              return '';
            }

          case REACT_PROVIDER_TYPE:
            {
              var provider = nextChild;
              var nextProps = provider.props;

              var _nextChildren7 = toArray(nextProps.children);

              var _frame7 = {
                type: provider,
                domNamespace: parentNamespace,
                children: _nextChildren7,
                childIndex: 0,
                context: context,
                footer: ''
              };

              {
                _frame7.debugElementStack = [];
              }

              this.pushProvider(provider);
              this.stack.push(_frame7);
              return '';
            }

          case REACT_CONTEXT_TYPE:
            {
              var reactContext = nextChild.type; // The logic below for Context differs depending on PROD or DEV mode. In
              // DEV mode, we create a separate object for Context.Consumer that acts
              // like a proxy to Context. This proxy object adds unnecessary code in PROD
              // so we use the old behaviour (Context.Consumer references Context) to
              // reduce size and overhead. The separate object references context via
              // a property called "_context", which also gives us the ability to check
              // in DEV mode if this property exists or not and warn if it does not.

              {
                if (reactContext._context === undefined) {
                  // This may be because it's a Context (rather than a Consumer).
                  // Or it may be because it's older React where they're the same thing.
                  // We only want to warn if we're sure it's a new React.
                  if (reactContext !== reactContext.Consumer) {
                    if (!hasWarnedAboutUsingContextAsConsumer) {
                      hasWarnedAboutUsingContextAsConsumer = true;

                      error('Rendering <Context> directly is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
                    }
                  }
                } else {
                  reactContext = reactContext._context;
                }
              }

              var _nextProps = nextChild.props;
              var threadID = this.threadID;
              validateContextBounds(reactContext, threadID);
              var nextValue = reactContext[threadID];

              var _nextChildren8 = toArray(_nextProps.children(nextValue));

              var _frame8 = {
                type: nextChild,
                domNamespace: parentNamespace,
                children: _nextChildren8,
                childIndex: 0,
                context: context,
                footer: ''
              };

              {
                _frame8.debugElementStack = [];
              }

              this.stack.push(_frame8);
              return '';
            }
          // eslint-disable-next-line-no-fallthrough

          case REACT_FUNDAMENTAL_TYPE:
            {

              {
                {
                  throw Error( "ReactDOMServer does not yet support the fundamental API." );
                }
              }
            }
          // eslint-disable-next-line-no-fallthrough

          case REACT_LAZY_TYPE:
            {
              var _element2 = nextChild;
              var lazyComponent = nextChild.type; // Attempt to initialize lazy component regardless of whether the
              // suspense server-side renderer is enabled so synchronously
              // resolved constructors are supported.

              var payload = lazyComponent._payload;
              var init = lazyComponent._init;
              var result = init(payload);
              var _nextChildren10 = [React.createElement(result, _assign({
                ref: _element2.ref
              }, _element2.props))];
              var _frame10 = {
                type: null,
                domNamespace: parentNamespace,
                children: _nextChildren10,
                childIndex: 0,
                context: context,
                footer: ''
              };

              {
                _frame10.debugElementStack = [];
              }

              this.stack.push(_frame10);
              return '';
            }
        }
      }

      var info = '';

      {
        var owner = nextElement._owner;

        if (elementType === undefined || typeof elementType === 'object' && elementType !== null && Object.keys(elementType).length === 0) {
          info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and " + 'named imports.';
        }

        var ownerName = owner ? getComponentName(owner) : null;

        if (ownerName) {
          info += '\n\nCheck the render method of `' + ownerName + '`.';
        }
      }

      {
        {
          throw Error( "Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (elementType == null ? elementType : typeof elementType) + "." + info );
        }
      }
    }
  };

  _proto.renderDOM = function renderDOM(element, context, parentNamespace) {
    var tag = element.type.toLowerCase();
    var namespace = parentNamespace;

    if (parentNamespace === Namespaces.html) {
      namespace = getIntrinsicNamespace(tag);
    }

    {
      if (namespace === Namespaces.html) {
        // Should this check be gated by parent namespace? Not sure we want to
        // allow <SVG> or <mATH>.
        if (tag !== element.type) {
          error('<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', element.type);
        }
      }
    }

    validateDangerousTag(tag);
    var props = element.props;

    if (tag === 'input') {
      {
        checkControlledValueProps('input', props);

        if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnDefaultChecked) {
          error('%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components', 'A component', props.type);

          didWarnDefaultChecked = true;
        }

        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnDefaultInputValue) {
          error('%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components', 'A component', props.type);

          didWarnDefaultInputValue = true;
        }
      }

      props = _assign({
        type: undefined
      }, props, {
        defaultChecked: undefined,
        defaultValue: undefined,
        value: props.value != null ? props.value : props.defaultValue,
        checked: props.checked != null ? props.checked : props.defaultChecked
      });
    } else if (tag === 'textarea') {
      {
        checkControlledValueProps('textarea', props);

        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnDefaultTextareaValue) {
          error('Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components');

          didWarnDefaultTextareaValue = true;
        }
      }

      var initialValue = props.value;

      if (initialValue == null) {
        var defaultValue = props.defaultValue; // TODO (yungsters): Remove support for children content in <textarea>.

        var textareaChildren = props.children;

        if (textareaChildren != null) {
          {
            error('Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');
          }

          if (!(defaultValue == null)) {
            {
              throw Error( "If you supply `defaultValue` on a <textarea>, do not pass children." );
            }
          }

          if (Array.isArray(textareaChildren)) {
            if (!(textareaChildren.length <= 1)) {
              {
                throw Error( "<textarea> can only have at most one child." );
              }
            }

            textareaChildren = textareaChildren[0];
          }

          defaultValue = '' + textareaChildren;
        }

        if (defaultValue == null) {
          defaultValue = '';
        }

        initialValue = defaultValue;
      }

      props = _assign({}, props, {
        value: undefined,
        children: '' + initialValue
      });
    } else if (tag === 'select') {
      {
        checkControlledValueProps('select', props);

        for (var i = 0; i < valuePropNames.length; i++) {
          var propName = valuePropNames[i];

          if (props[propName] == null) {
            continue;
          }

          var isArray = Array.isArray(props[propName]);

          if (props.multiple && !isArray) {
            error('The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.', propName);
          } else if (!props.multiple && isArray) {
            error('The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.', propName);
          }
        }

        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnDefaultSelectValue) {
          error('Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components');

          didWarnDefaultSelectValue = true;
        }
      }

      this.currentSelectValue = props.value != null ? props.value : props.defaultValue;
      props = _assign({}, props, {
        value: undefined
      });
    } else if (tag === 'option') {
      var selected = null;
      var selectValue = this.currentSelectValue;
      var optionChildren = flattenOptionChildren(props.children);

      if (selectValue != null) {
        var value;

        if (props.value != null) {
          value = props.value + '';
        } else {
          value = optionChildren;
        }

        selected = false;

        if (Array.isArray(selectValue)) {
          // multiple
          for (var j = 0; j < selectValue.length; j++) {
            if ('' + selectValue[j] === value) {
              selected = true;
              break;
            }
          }
        } else {
          selected = '' + selectValue === value;
        }

        props = _assign({
          selected: undefined,
          children: undefined
        }, props, {
          selected: selected,
          children: optionChildren
        });
      }
    }

    {
      validatePropertiesInDevelopment(tag, props);
    }

    assertValidProps(tag, props);
    var out = createOpenTagMarkup(element.type, tag, props, namespace, this.makeStaticMarkup, this.stack.length === 1);
    var footer = '';

    if (omittedCloseTags.hasOwnProperty(tag)) {
      out += '/>';
    } else {
      out += '>';
      footer = '</' + element.type + '>';
    }

    var children;
    var innerMarkup = getNonChildrenInnerMarkup(props);

    if (innerMarkup != null) {
      children = [];

      if (newlineEatingTags.hasOwnProperty(tag) && innerMarkup.charAt(0) === '\n') {
        // text/html ignores the first character in these tags if it's a newline
        // Prefer to break application/xml over text/html (for now) by adding
        // a newline specifically to get eaten by the parser. (Alternately for
        // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
        // \r is normalized out by HTMLTextAreaElement#value.)
        // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
        // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
        // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
        // See: Parsing of "textarea" "listing" and "pre" elements
        //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
        out += '\n';
      }

      out += innerMarkup;
    } else {
      children = toArray(props.children);
    }

    var frame = {
      domNamespace: getChildNamespace(parentNamespace, element.type),
      type: tag,
      children: children,
      childIndex: 0,
      context: context,
      footer: footer
    };

    {
      frame.debugElementStack = [];
    }

    this.stack.push(frame);
    this.previousWasTextNode = false;
    return out;
  };

  return ReactDOMServerRenderer;
}();

/**
 * Render a ReactElement to its initial HTML. This should only be used on the
 * server.
 * See https://reactjs.org/docs/react-dom-server.html#rendertostring
 */

function renderToString(element, options) {
  var renderer = new ReactDOMServerRenderer(element, false, options);

  try {
    var markup = renderer.read(Infinity);
    return markup;
  } finally {
    renderer.destroy();
  }
}
/**
 * Similar to renderToString, except this doesn't create extra DOM attributes
 * such as data-react-id that React uses internally.
 * See https://reactjs.org/docs/react-dom-server.html#rendertostaticmarkup
 */

function renderToStaticMarkup(element, options) {
  var renderer = new ReactDOMServerRenderer(element, true, options);

  try {
    var markup = renderer.read(Infinity);
    return markup;
  } finally {
    renderer.destroy();
  }
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

var ReactMarkupReadableStream = /*#__PURE__*/function (_Readable) {
  _inheritsLoose(ReactMarkupReadableStream, _Readable);

  function ReactMarkupReadableStream(element, makeStaticMarkup, options) {
    var _this;

    // Calls the stream.Readable(options) constructor. Consider exposing built-in
    // features like highWaterMark in the future.
    _this = _Readable.call(this, {}) || this;
    _this.partialRenderer = new ReactDOMServerRenderer(element, makeStaticMarkup, options);
    return _this;
  }

  var _proto = ReactMarkupReadableStream.prototype;

  _proto._destroy = function _destroy(err, callback) {
    this.partialRenderer.destroy();
    callback(err);
  };

  _proto._read = function _read(size) {
    try {
      this.push(this.partialRenderer.read(size));
    } catch (err) {
      this.destroy(err);
    }
  };

  return ReactMarkupReadableStream;
}(stream.Readable);
/**
 * Render a ReactElement to its initial HTML. This should only be used on the
 * server.
 * See https://reactjs.org/docs/react-dom-server.html#rendertonodestream
 */


function renderToNodeStream(element, options) {
  return new ReactMarkupReadableStream(element, false, options);
}
/**
 * Similar to renderToNodeStream, except this doesn't create extra DOM attributes
 * such as data-react-id that React uses internally.
 * See https://reactjs.org/docs/react-dom-server.html#rendertostaticnodestream
 */

function renderToStaticNodeStream(element, options) {
  return new ReactMarkupReadableStream(element, true, options);
}

reactDomServer_node_development.renderToNodeStream = renderToNodeStream;
reactDomServer_node_development.renderToStaticMarkup = renderToStaticMarkup;
reactDomServer_node_development.renderToStaticNodeStream = renderToStaticNodeStream;
reactDomServer_node_development.renderToString = renderToString;
reactDomServer_node_development.version = ReactVersion;
  })();
}

if (process.env.NODE_ENV === 'production') {
  server_node.exports = reactDomServer_node_production_min;
} else {
  server_node.exports = reactDomServer_node_development;
}

var server = server_node.exports;

var FieldErrorMessage = function (_a) {
    var _b = _a.message, message = _b === void 0 ? "" : _b, dataQa = _a.dataQa;
    return (jsx$1("span", __assign$a({ className: "field-error-message", "data-qa-id": dataQa && dataQa }, { children: message }), void 0));
};
var FieldLabel = function (_a) {
    var _b = _a.label, label = _b === void 0 ? "" : _b, children = _a.children, optionalLabel = _a.optionalLabel, tooltip = _a.tooltip, tooltipRef = _a.tooltipRef;
    return (jsxs("label", __assign$a({ className: classNames$1("field-label", { "d-flex align-items-center": tooltip }) }, { children: [jsxs("div", { children: [label, optionalLabel, children ? children : ""] }, void 0), tooltip && (jsxs(Fragment$2, { children: [jsx$1("i", { ref: tooltipRef, className: "fa-icon-info ml-2", "data-for": "field-label__tooltip", "data-tip": React__default.isValidElement(tooltip) ? server.renderToString(tooltip) : tooltip }, void 0), jsx$1(ReactTooltip, { effect: "solid", id: "field-label__tooltip", html: true }, void 0)] }, void 0))] }), void 0));
};
var FieldCounter = function (_a) {
    var _b = _a.value, value = _b === void 0 ? "" : _b, maxLength = _a.maxLength, className = _a.className;
    return (jsxs("span", __assign$a({ className: classNames$1("field-counter", className) }, { children: [value && value.length ? value.length : 0, "/", maxLength] }), void 0));
};
var FieldHelperText = function (_a) {
    var _b = _a.message, message = _b === void 0 ? "" : _b;
    return (jsx$1("span", __assign$a({ className: "field-helper-text" }, { children: typeof message === "string" ? addLineBreaks(message) : message }), void 0));
};

var StyledRadioTabVertical = function (_a) {
    var label = _a.label, _b = _a.options, options = _b === void 0 ? [] : _b, selectedRadio = _a.selectedRadio, onChange = _a.onChange, errMessage = _a.errMessage, isInvalid = _a.isInvalid, _c = _a.disabled, disabled = _c === void 0 ? false : _c, _d = _a.isRequired, isRequired = _d === void 0 ? false : _d, tooltip = _a.tooltip, className = _a.className;
    return (jsxs("div", __assign$a({ className: className }, { children: [!!label && (jsx$1(FieldLabel, { label: label, tooltip: tooltip && tooltip }, void 0)), jsx$1("div", __assign$a({ className: classNames$1(["styled-radio-tab-vertical"]) }, { children: options.map(function (item) { return (jsxs("div", __assign$a({ className: "radio-container" }, { children: [createElement("div", __assign$a({ className: classNames$1("radio-item", {
                                disabled: disabled,
                                selected: item.value === selectedRadio,
                            }) }, (!disabled && item.value !== selectedRadio && { onClick: onChange.bind(null, item) }), { key: String(item.value) }),
                            jsx$1("span", { className: "radio-icon" }, void 0),
                            jsx$1("span", __assign$a({ className: "radio-label" }, { children: item.label }), void 0),
                            item.value === selectedRadio && !!item.helper && (jsx$1("span", __assign$a({ className: "radio-helper" }, { children: addLineBreaks(item.helper) }), void 0))), item.value === selectedRadio && !!item.render && jsx$1("div", __assign$a({ className: "render-content" }, { children: item.render() }), void 0)] }), "radio-tab-vertical-" + item.value)); }) }), void 0), isRequired && isInvalid && errMessage && jsx$1(FieldErrorMessage, { message: errMessage }, void 0)] }), void 0));
};

var css_248z$A = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.horizontal-radio-group{display:flex;flex-wrap:wrap}.horizontal-radio-group.vertical-radio-group,.horizontal-radio-group.vertical-radio-group .radio-item{display:block}.horizontal-radio-group .radio-item{cursor:pointer;margin-right:20px}.horizontal-radio-group .radio-item:hover{background-color:transparent}.horizontal-radio-group .radio-item:hover .radio-icon{border-color:#7b89a1}.horizontal-radio-group .radio-item .radio-helper{color:#687792;display:block;font-size:14px;margin-left:30px;margin-top:8px}.horizontal-radio-group .radio-item.disabled{cursor:not-allowed}.horizontal-radio-group .radio-item.disabled .radio-label{color:#b8bfcd}.horizontal-radio-group .radio-item .radio-icon{border:1px solid #b8bfcd;border-radius:50%;display:inline-block;height:20px!important;margin-right:10px;position:relative;vertical-align:middle;width:20px!important}.horizontal-radio-group .radio-item.selected .radio-icon{border:5px solid #0b6cff}.horizontal-radio-group .radio-item.selected .radio-icon:before{display:none!important}.horizontal-radio-group .radio-item .radio-label{color:#232831;font-size:14px;vertical-align:bottom}.horizontal-radio-helper{background-color:#f5f6f8;border-radius:4px;color:#232831;font-size:14px;margin-top:16px;padding:16px 20px}";
styleInject(css_248z$A);

var StyledRadio = function (_a) {
    var label = _a.label, _b = _a.options, options = _b === void 0 ? [] : _b, selectedRadio = _a.selectedRadio, onChange = _a.onChange, errMessage = _a.errMessage, isInvalid = _a.isInvalid, _c = _a.disabled, disabled = _c === void 0 ? false : _c, _d = _a.isRequired, isRequired = _d === void 0 ? false : _d, _e = _a.isList, isList = _e === void 0 ? false : _e, tooltip = _a.tooltip, _f = _a.isHorizontal, isHorizontal = _f === void 0 ? true : _f, className = _a.className, dataQa = _a.dataQa, dataQaProps = _a.dataQaProps;
    return (jsxs("div", __assign$a({ className: className }, { children: [!!label && jsx$1(FieldLabel, { label: label, tooltip: tooltip }, void 0), jsx$1("div", __assign$a({ className: classNames$1(["horizontal-radio-group"], { "vertical-radio-group": !isHorizontal }) }, { children: options.map(function (item) { return (createElement("div", __assign$a({ className: classNames$1("radio-item", {
                        disabled: disabled,
                        selected: item.value === selectedRadio,
                    }) }, (!disabled && item.value !== selectedRadio && { onClick: onChange.bind(null, item) }), { key: String(item.value), "data-qa": dataQa, "data-qa-props": dataQaProps }),
                    jsx$1("span", { className: "radio-icon" }, void 0),
                    jsx$1("span", __assign$a({ className: "radio-label" }, { children: item.label }), void 0),
                    !isHorizontal &&
                        item.helper &&
                        (isList ? (jsx$1(LineBreakToList, { text: item.helper, className: "radio-helper ml-2" }, void 0)) : (jsx$1("span", __assign$a({ className: "radio-helper" }, { children: addLineBreaks(item.helper) }), void 0))),
                    item.customChild && jsx$1("div", { children: item.customChild }, void 0))); }) }), void 0), isRequired && isInvalid && errMessage && jsx$1(FieldErrorMessage, { message: errMessage }, void 0), isHorizontal &&
                options.map(function (item) {
                    return selectedRadio === item.value &&
                        item.helper && (jsx$1("div", __assign$a({ className: "horizontal-radio-helper" }, { children: addLineBreaks(item.helper) }), String(item.value)));
                })] }), void 0));
};

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics$3 = function(d, b) {
    extendStatics$3 = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics$3(d, b);
};

function __extends$3(d, b) {
    extendStatics$3(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign$2 = function() {
    __assign$2 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign$2.apply(this, arguments);
};

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __makeTemplateObject$2(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
}

var compactButtonHeight = (gridSize$5() * 3) / fontSize$5() + "em";
var buttonHeight = (gridSize$5() * 4) / fontSize$5() + "em";
/** Background */
var getBackground = function (props) {
    return applyPropertyStyle('background', props, baseTheme);
};
/** Box Shadow */
var getBoxShadow = function (props) {
    var boxShadowColor = applyPropertyStyle('boxShadowColor', props, baseTheme);
    return "0 0 0 2px " + boxShadowColor;
};
/** Color */
var getColor = function (props) {
    return applyPropertyStyle('color', props, baseTheme);
};
/** Cursor */
var getCursor = function (_a) {
    var _b = _a.state, state = _b === void 0 ? 'default' : _b;
    return state === 'hover' || state === 'active' || state === 'selected'
        ? 'pointer'
        : state === 'disabled'
            ? 'not-allowed'
            : 'default';
};
/** Height */
var getHeight = function (_a) {
    var _b = _a.spacing, spacing = _b === void 0 ? 'default' : _b;
    return spacing === 'compact'
        ? compactButtonHeight
        : spacing === 'none'
            ? 'auto'
            : buttonHeight;
};
/** Line Height */
var getLineHeight = function (_a) {
    var _b = _a.spacing, spacing = _b === void 0 ? 'default' : _b;
    return spacing === 'compact'
        ? compactButtonHeight
        : spacing === 'none'
            ? 'inherit'
            : buttonHeight;
};
/** Padding */
var getPadding$2 = function (_a) {
    var _b = _a.spacing, spacing = _b === void 0 ? 'default' : _b;
    return spacing === 'none' ? 0 : "0 " + gridSize$5() + "px";
};
/** Text Decoration */
var getTextDecoration = function (_a) {
    var _b = _a.appearance, appearance = _b === void 0 ? 'default' : _b, _c = _a.state, state = _c === void 0 ? 'default' : _c;
    return state === 'hover' && (appearance === 'link' || appearance === 'subtle-link')
        ? 'underline'
        : 'inherit';
};
/** Transition */
var getTransition = function (_a) {
    var _b = _a.state, state = _b === void 0 ? 'default' : _b;
    return state === 'hover'
        ? 'background 0s ease-out, box-shadow 0.15s cubic-bezier(0.47, 0.03, 0.49, 1.38)'
        : 'background 0.1s ease-out, box-shadow 0.15s cubic-bezier(0.47, 0.03, 0.49, 1.38)';
};
/** Transition Duration */
var getTransitionDuration = function (_a) {
    var _b = _a.state, state = _b === void 0 ? 'default' : _b;
    return state === 'active' ? '0s' : state === 'focus' ? '0s, 0.2s' : '0.1s, 0.15s';
};
/** Vertical Align */
var getVerticalAlign = function (_a) {
    var _b = _a.spacing, spacing = _b === void 0 ? 'default' : _b;
    return spacing === 'none' ? 'baseline' : 'middle';
};
/** Width */
var getWidth = function (_a) {
    var shouldFitContainer = _a.shouldFitContainer;
    return shouldFitContainer ? '100%' : 'auto';
};
/** Base styles */
var staticStyles = {
    alignItems: 'baseline',
    borderWidth: 0,
    boxSizing: 'border-box',
    display: 'inline-flex',
    fontSize: 'inherit',
    fontStyle: 'normal',
    fontWeight: '500',
    maxWidth: '100%',
    outline: 'none !important',
    textAlign: 'center',
    textDecoration: 'none',
    whiteSpace: 'nowrap',
};
/**
 * BUTTON STYLES
 */
var getButtonStyles = function (props) { return (__assign$2(__assign$2(__assign$2({}, staticStyles), { background: getBackground(props), borderRadius: borderRadius$5() + "px", boxShadow: getBoxShadow(props), color: getColor(props) + " !important", cursor: getCursor(props), height: getHeight(props), lineHeight: getLineHeight(props), padding: getPadding$2(props), transition: getTransition(props), transitionDuration: getTransitionDuration(props), verticalAlign: getVerticalAlign(props), width: getWidth(props), '&::-moz-focus-inner': {
        border: 0,
        margin: 0,
        padding: 0,
    }, '&:hover': {
        textDecoration: getTextDecoration(props),
    } }), (props.isLoading && { pointerEvents: 'none' }))); };
/**
 * SPINNER STYLES
 */
var getSpinnerStyles = function () { return ({
    display: 'flex',
    position: 'absolute',
    left: '50%',
    top: '50%',
    transform: 'translate(-50%, -50%)',
}); };

var mapAttributesToState = function (_a) {
    var _b = _a.isDisabled, isDisabled = _b === void 0 ? false : _b, _c = _a.isActive, isActive = _c === void 0 ? false : _c, _d = _a.isFocus, isFocus = _d === void 0 ? false : _d, _e = _a.isHover, isHover = _e === void 0 ? false : _e, _f = _a.isSelected, isSelected = _f === void 0 ? false : _f;
    if (isDisabled) {
        return 'disabled';
    }
    if (isSelected && isFocus) {
        return 'focusSelected';
    }
    if (isSelected) {
        return 'selected';
    }
    if (isActive) {
        return 'active';
    }
    if (isHover) {
        return 'hover';
    }
    if (isFocus) {
        return 'focus';
    }
    return 'default';
};
var filterProps = function (
// @ts-ignore - createAnalyticsEvent is injected from WithAnalyticsEvents HOC
_a, type) {
    _a.createAnalyticsEvent; var props = __rest(_a, 
    // @ts-ignore - createAnalyticsEvent is injected from WithAnalyticsEvents HOC
    ["createAnalyticsEvent"]);
    if (type === 'span') {
        props.target; props.href; var rest = __rest(props, ["target", "href"]);
        return rest;
    }
    return props;
};
var getLoadingStyle = function (isLoading) { return ({
    transition: 'opacity 0.3s',
    opacity: isLoading ? 0 : 1,
}); };
var composeRefs = function () {
    var refs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        refs[_i] = arguments[_i];
    }
    return function (x) {
        refs
            .filter(function (r) { return !!r; })
            .forEach(function (ref) {
            if (typeof ref === 'function') {
                ref(x);
            }
            else {
                ref.current = x;
            }
        });
    };
};
/**
 * Convert a hex colour code to RGBA.
 * @param {String} hex Hex colour code.
 * @param {Number} alpha Optional alpha value (defaults to 1).
 */
function hex2rgba(hex, alpha) {
    if (alpha === void 0) { alpha = 1; }
    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {
        var colorArr = hex.substring(1).split('');
        if (colorArr.length === 3) {
            colorArr = [
                colorArr[0],
                colorArr[0],
                colorArr[1],
                colorArr[1],
                colorArr[2],
                colorArr[2],
            ];
        }
        var color = "0x" + colorArr.join('');
        // FIXME: `>>` operand can validly take a string value
        var r = (color >> 16) & 255;
        var g = (color >> 8) & 255;
        var b = color & 255;
        return "rgba(" + [r, g, b].join(',') + ", " + alpha + ")";
    }
    throw new Error('Bad Hex');
}

var fallbacks = {
    background: { light: N20A, dark: DN70 },
    color: { light: N400, dark: DN400 },
    textDecoration: { light: 'none', dark: 'none' },
};
var baseTheme = {
    // Default appearance
    background: {
        default: {
            default: { light: N20A, dark: DN70 },
            hover: { light: N30A, dark: DN60$1 },
            active: { light: hex2rgba(B75$2, 0.6), dark: B75$2 },
            disabled: { light: N20A, dark: DN70 },
            selected: { light: N700$1, dark: DN0 },
            focusSelected: { light: N700$1, dark: DN0 },
        },
        primary: {
            default: { light: B400, dark: B100$3 },
            hover: { light: B300$1, dark: B75$2 },
            active: { light: B500$1, dark: B200$1 },
            disabled: { light: N20A, dark: DN70 },
            selected: { light: N700$1, dark: DN0 },
            focusSelected: { light: N700$1, dark: DN0 },
        },
        warning: {
            default: { light: Y300$1, dark: Y300$1 },
            hover: { light: Y200$1, dark: Y200$1 },
            active: { light: Y400, dark: Y400 },
            disabled: { light: N20A, dark: DN70 },
            selected: { light: Y400, dark: Y400 },
            focusSelected: { light: Y400, dark: Y400 },
        },
        danger: {
            default: { light: R400$2, dark: R400$2 },
            hover: { light: R300$2, dark: R300$2 },
            active: { light: R500$1, dark: R500$1 },
            disabled: { light: N20A, dark: DN70 },
            selected: { light: R500$1, dark: R500$1 },
            focusSelected: { light: R500$1, dark: R500$1 },
        },
        link: {
            default: { light: 'none', dark: 'none' },
            selected: { light: N700$1, dark: N20$3 },
            focusSelected: { light: N700$1, dark: N20$3 },
        },
        subtle: {
            default: { light: 'none', dark: 'none' },
            hover: { light: N30A, dark: DN60$1 },
            active: { light: hex2rgba(B75$2, 0.6), dark: B75$2 },
            disabled: { light: 'none', dark: 'none' },
            selected: { light: N700$1, dark: DN0 },
            focusSelected: { light: N700$1, dark: DN0 },
        },
        'subtle-link': {
            default: { light: 'none', dark: 'none' },
            selected: { light: N700$1, dark: N20$3 },
            focusSelected: { light: N700$1, dark: N20$3 },
        },
    },
    boxShadowColor: {
        default: {
            focus: { light: B100$3, dark: B75$2 },
            focusSelected: {
                light: B100$3,
                dark: B75$2,
            },
        },
        primary: {
            focus: { light: B100$3, dark: B75$2 },
            focusSelected: {
                light: B100$3,
                dark: B75$2,
            },
        },
        warning: {
            focus: { light: Y500, dark: Y500 },
            focusSelected: { light: Y500, dark: Y500 },
        },
        danger: {
            focus: { light: R100$1, dark: R100$1 },
            focusSelected: { light: R100$1, dark: R100$1 },
        },
        link: {
            focus: { light: B100$3, dark: B75$2 },
            focusSelected: {
                light: B100$3,
                dark: B75$2,
            },
        },
        subtle: {
            focus: { light: B100$3, dark: B75$2 },
            focusSelected: {
                light: B100$3,
                dark: B75$2,
            },
        },
        'subtle-link': {
            focus: { light: B100$3, dark: B75$2 },
            focusSelected: {
                light: B100$3,
                dark: B75$2,
            },
        },
    },
    color: {
        default: {
            default: { light: N500$4, dark: DN400 },
            active: { light: B400, dark: B400 },
            disabled: { light: N70$3, dark: DN30$5 },
            selected: { light: N20$3, dark: DN400 },
            focusSelected: { light: N20$3, dark: DN400 },
        },
        primary: {
            default: { light: N0$7, dark: DN30$5 },
            disabled: { light: N70$3, dark: DN30$5 },
            selected: { light: N20$3, dark: DN400 },
            focusSelected: { light: N20$3, dark: DN400 },
        },
        warning: {
            default: { light: N800$2, dark: N800$2 },
            disabled: { light: N70$3, dark: DN30$5 },
            selected: { light: N800$2, dark: N800$2 },
            focusSelected: { light: N800$2, dark: N800$2 },
        },
        danger: {
            default: { light: N0$7, dark: N0$7 },
            disabled: { light: N70$3, dark: DN30$5 },
            selected: { light: N0$7, dark: N0$7 },
            focusSelected: { light: N0$7, dark: N0$7 },
        },
        link: {
            default: { light: B400, dark: B100$3 },
            hover: { light: B300$1, dark: B75$2 },
            active: { light: B500$1, dark: B200$1 },
            disabled: { light: N70$3, dark: DN100 },
            selected: { light: N20$3, dark: N700$1 },
            focusSelected: { light: N20$3, dark: N700$1 },
        },
        subtle: {
            default: { light: N500$4, dark: DN400 },
            active: { light: B400, dark: B400 },
            disabled: { light: N70$3, dark: DN100 },
            selected: { light: N20$3, dark: DN400 },
            focusSelected: { light: N20$3, dark: DN400 },
        },
        'subtle-link': {
            default: { light: N200$2, dark: DN400 },
            hover: { light: N90, dark: B50$1 },
            active: { light: N400, dark: DN300$1 },
            disabled: { light: N70$3, dark: DN100 },
            selected: { light: N20$3, dark: DN400 },
            focusSelected: { light: N20$3, dark: DN400 },
        },
    },
};
function applyPropertyStyle(property, _a, theme) {
    var _b = _a.appearance, appearance = _b === void 0 ? 'default' : _b, _c = _a.state, state = _c === void 0 ? 'default' : _c, _d = _a.mode, mode = _d === void 0 ? 'light' : _d;
    var propertyStyles = theme[property];
    if (!propertyStyles) {
        return 'initial';
    }
    // Check for relevant fallbacks
    if (!propertyStyles[appearance]) {
        if (!propertyStyles['default']) {
            return fallbacks[property][mode] ? fallbacks[property][mode] : 'initial';
        }
        appearance = 'default';
    }
    // If there is no 'state' key (ie, 'hover') defined for a given appearance,
    // return the 'default' state of that appearance.
    if (!propertyStyles[appearance][state]) {
        state = 'default';
    }
    var appearanceStyles = propertyStyles[appearance];
    var stateStyles = appearanceStyles[state];
    if (!stateStyles) {
        return 'inherit';
    }
    return stateStyles[mode] || appearanceStyles.default[mode];
}
var Theme = createTheme$4(function (themeProps) { return ({
    buttonStyles: getButtonStyles(themeProps),
    spinnerStyles: getSpinnerStyles(),
}); });

var name$4="@atlaskit/button";var version$4="13.4.2";

var Content$3 = (function (_a) {
    var children = _a.children, followsIcon = _a.followsIcon, spacing = _a.spacing, isLoading = _a.isLoading, rest = __rest(_a, ["children", "followsIcon", "spacing", "isLoading"]);
    return (jsx("span", __assign$2({ css: __assign$2({ alignItems: followsIcon ? 'baseline' : 'center', alignSelf: followsIcon ? 'baseline' : 'center', flex: '1 1 auto', margin: spacing === 'none' ? 0 : "0 " + gridSize$5() / 2 + "px", maxWidth: '100%', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap' }, getLoadingStyle(isLoading)) }, rest), children));
});

var IconWrapper = (function (_a) {
    var spacing = _a.spacing, icon = _a.icon, isOnlyChild = _a.isOnlyChild, isLoading = _a.isLoading, rest = __rest(_a, ["spacing", "icon", "isOnlyChild", "isLoading"]);
    return (jsx("span", __assign$2({ css: __assign$2({ alignSelf: 'center', display: 'flex', flexShrink: 0, lineHeight: 0, fontSize: 0, userSelect: 'none', margin: spacing === 'none'
                ? 0
                : isOnlyChild
                    ? "0 -" + gridSize$5() / 4 + "px"
                    : "0 " + gridSize$5() / 2 + "px" }, getLoadingStyle(isLoading)) }, rest), icon));
});

var InnerWrapper = (function (_a) {
    var fit = _a.fit, children = _a.children, rest = __rest(_a, ["fit", "children"]);
    return (jsx("span", __assign$2({ css: __assign$2(__assign$2({ alignSelf: 'center', display: 'inline-flex', flexWrap: 'nowrap', maxWidth: '100%', position: 'relative' }, (fit && { width: '100%' })), (fit && { justifyContent: 'center' })) }, rest), children));
});

var appearances = ['primary', 'danger'];
var LoadingSpinner = /** @class */ (function (_super) {
    __extends$3(LoadingSpinner, _super);
    function LoadingSpinner() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.invertSpinner = function () {
            var _a = _this.props, appearance = _a.appearance, isSelected = _a.isSelected, isDisabled = _a.isDisabled;
            if (isSelected) {
                return true;
            }
            if (isDisabled) {
                return false;
            }
            if (appearance !== undefined) {
                if (appearances.indexOf(appearance) !== -1) {
                    return true;
                }
            }
            return false;
        };
        return _this;
    }
    LoadingSpinner.prototype.render = function () {
        var _a = this.props, spacing = _a.spacing, styles = _a.styles;
        var spinnerSize = spacing !== 'default' ? 'small' : 'medium';
        return (jsx("div", { css: styles },
            jsx(Spinner$3, { size: spinnerSize, appearance: this.invertSpinner() ? 'invert' : 'inherit' })));
    };
    return LoadingSpinner;
}(React__default.Component));
var LoadingSpinner$1 = LoadingSpinner;

var Button = /** @class */ (function (_super) {
    __extends$3(Button, _super);
    function Button() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // ref can be a range of things because we render button, a, span or other React components
        _this.button = React__default.createRef();
        // Makes sure we don't call ref every render.
        _this.getComposedRefs = memoizeOne(composeRefs);
        _this.state = {
            isActive: false,
            isFocus: false,
            isHover: false,
        };
        _this.isInteractive = function () { return !_this.props.isDisabled && !_this.props.isLoading; };
        _this.onMouseEnter = function (e) {
            _this.setState({ isHover: true });
            if (_this.props.onMouseEnter) {
                _this.props.onMouseEnter(e);
            }
        };
        _this.onMouseLeave = function (e) {
            _this.setState({ isHover: false, isActive: false });
            if (_this.props.onMouseLeave) {
                _this.props.onMouseLeave(e);
            }
        };
        _this.onMouseDown = function (e) {
            e.preventDefault();
            _this.setState({ isActive: true });
            if (_this.props.onMouseDown) {
                _this.props.onMouseDown(e);
            }
        };
        _this.onMouseUp = function (e) {
            _this.setState({ isActive: false });
            if (_this.props.onMouseUp) {
                _this.props.onMouseUp(e);
            }
        };
        _this.onFocus = function (event) {
            _this.setState({ isFocus: true });
            if (_this.props.onFocus) {
                _this.props.onFocus(event);
            }
        };
        _this.onBlur = function (event) {
            _this.setState({ isFocus: false });
            if (_this.props.onBlur) {
                _this.props.onBlur(event);
            }
        };
        _this.getElement = function () {
            var _a = _this.props, href = _a.href, isDisabled = _a.isDisabled;
            if (href) {
                return isDisabled ? 'span' : 'a';
            }
            return 'button';
        };
        // Swallow click events when the button is disabled
        // to prevent inner child clicks bubbling up.
        _this.onInnerClick = function (e) {
            if (!_this.isInteractive()) {
                e.stopPropagation();
            }
            return true;
        };
        return _this;
    }
    Button.prototype.componentDidMount = function () {
        if (this.props.autoFocus && this.button instanceof HTMLButtonElement) {
            this.button.focus();
        }
    };
    Button.prototype.render = function () {
        var _this = this;
        var _a = this.props, _b = _a.appearance, appearance = _b === void 0 ? 'default' : _b, children = _a.children, className = _a.className, CustomComponent = _a.component, consumerRef = _a.consumerRef, iconAfter = _a.iconAfter, iconBefore = _a.iconBefore, _c = _a.isDisabled, isDisabled = _c === void 0 ? false : _c, _d = _a.isLoading, isLoading = _d === void 0 ? false : _d, _e = _a.isSelected, isSelected = _e === void 0 ? false : _e, _f = _a.shouldFitContainer, shouldFitContainer = _f === void 0 ? false : _f, _g = _a.spacing, spacing = _g === void 0 ? 'default' : _g, _h = _a.theme, theme = _h === void 0 ? function (current, props) { return current(props); } : _h, testId = _a.testId, rest = __rest(_a, ["appearance", "children", "className", "component", "consumerRef", "iconAfter", "iconBefore", "isDisabled", "isLoading", "isSelected", "shouldFitContainer", "spacing", "theme", "testId"]);
        var attributes = __assign$2(__assign$2({}, this.state), { isSelected: isSelected, isDisabled: isDisabled });
        var StyledButton = CustomComponent || this.getElement();
        var iconIsOnlyChild = !!((iconBefore && !iconAfter && !children) ||
            (iconAfter && !iconBefore && !children));
        var specifiers = function (styles) {
            if (StyledButton === 'a') {
                return {
                    'a&': styles,
                };
            }
            else if (StyledButton === CustomComponent) {
                return {
                    '&, a&, &:hover, &:active, &:focus': styles,
                };
            }
            return styles;
        };
        return (jsx(Theme.Provider, { value: theme },
            jsx(GlobalTheme$3.Consumer, null, function (_a) {
                var mode = _a.mode;
                return (jsx(Theme.Consumer, __assign$2({ mode: mode, state: mapAttributesToState(attributes), iconIsOnlyChild: iconIsOnlyChild }, _this.props), function (_a) {
                    var buttonStyles = _a.buttonStyles, spinnerStyles = _a.spinnerStyles;
                    return (jsx(StyledButton, __assign$2({}, filterProps(rest, StyledButton), { "data-testid": testId, ref: _this.getComposedRefs(_this.button, consumerRef), onMouseEnter: _this.onMouseEnter, onMouseLeave: _this.onMouseLeave, onMouseDown: _this.onMouseDown, onMouseUp: _this.onMouseUp, onFocus: _this.onFocus, onBlur: _this.onBlur, disabled: isDisabled, className: className, css: specifiers(buttonStyles) }),
                        jsx(InnerWrapper, { onClick: _this.onInnerClick, fit: !!shouldFitContainer },
                            isLoading && (jsx(LoadingSpinner$1, { spacing: spacing, appearance: appearance, isSelected: isSelected, isDisabled: isDisabled, styles: spinnerStyles })),
                            iconBefore && (jsx(IconWrapper, { isLoading: isLoading, spacing: spacing, isOnlyChild: iconIsOnlyChild, icon: iconBefore })),
                            children && (jsx(Content$3, { isLoading: isLoading, followsIcon: !!iconBefore, spacing: spacing }, children)),
                            iconAfter && (jsx(IconWrapper, { isLoading: isLoading, spacing: spacing, isOnlyChild: iconIsOnlyChild, icon: iconAfter })))));
                }));
            })));
    };
    Button.defaultProps = {
        appearance: 'default',
        autoFocus: false,
        isDisabled: false,
        isLoading: false,
        isSelected: false,
        shouldFitContainer: false,
        spacing: 'default',
        type: 'button',
    };
    return Button;
}(React__default.Component));
var createAndFireEventOnAtlaskit$6 = createAndFireEvent$4('atlaskit');
var ButtonWithRef = React__default.forwardRef(function (props, ref) { return jsx(Button, __assign$2({}, props, { consumerRef: ref })); });
ButtonWithRef.displayName = 'Button';
var Button$1 = withAnalyticsContext$9({
    componentName: 'button',
    packageName: name$4,
    packageVersion: version$4,
})(withAnalyticsEvents$9({
    onClick: createAndFireEventOnAtlaskit$6({
        action: 'clicked',
        actionSubject: 'button',
        attributes: {
            componentName: 'button',
            packageName: name$4,
            packageVersion: version$4,
        },
    }),
})(ButtonWithRef));

/**!
 * @fileOverview Kickass library to create and place poppers near their reference elements.
 * @version 1.16.1
 * @license
 * Copyright (c) 2016 Federico Zivolo and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';

var timeoutDuration = function () {
  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];
  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {
      return 1;
    }
  }
  return 0;
}();

function microtaskDebounce(fn) {
  var called = false;
  return function () {
    if (called) {
      return;
    }
    called = true;
    window.Promise.resolve().then(function () {
      called = false;
      fn();
    });
  };
}

function taskDebounce(fn) {
  var scheduled = false;
  return function () {
    if (!scheduled) {
      scheduled = true;
      setTimeout(function () {
        scheduled = false;
        fn();
      }, timeoutDuration);
    }
  };
}

var supportsMicroTasks = isBrowser && window.Promise;

/**
* Create a debounced version of a method, that's asynchronously deferred
* but called in the minimum time possible.
*
* @method
* @memberof Popper.Utils
* @argument {Function} fn
* @returns {Function}
*/
var debounce$1 = supportsMicroTasks ? microtaskDebounce : taskDebounce;

/**
 * Check if the given variable is a function
 * @method
 * @memberof Popper.Utils
 * @argument {Any} functionToCheck - variable to check
 * @returns {Boolean} answer to: is a function?
 */
function isFunction(functionToCheck) {
  var getType = {};
  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
}

/**
 * Get CSS computed property of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Eement} element
 * @argument {String} property
 */
function getStyleComputedProperty(element, property) {
  if (element.nodeType !== 1) {
    return [];
  }
  // NOTE: 1 DOM access here
  var window = element.ownerDocument.defaultView;
  var css = window.getComputedStyle(element, null);
  return property ? css[property] : css;
}

/**
 * Returns the parentNode or the host of the element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} parent
 */
function getParentNode(element) {
  if (element.nodeName === 'HTML') {
    return element;
  }
  return element.parentNode || element.host;
}

/**
 * Returns the scrolling parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} scroll parent
 */
function getScrollParent(element) {
  // Return body, `getScroll` will take care to get the correct `scrollTop` from it
  if (!element) {
    return document.body;
  }

  switch (element.nodeName) {
    case 'HTML':
    case 'BODY':
      return element.ownerDocument.body;
    case '#document':
      return element.body;
  }

  // Firefox want us to check `-x` and `-y` variations as well

  var _getStyleComputedProp = getStyleComputedProperty(element),
      overflow = _getStyleComputedProp.overflow,
      overflowX = _getStyleComputedProp.overflowX,
      overflowY = _getStyleComputedProp.overflowY;

  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {
    return element;
  }

  return getScrollParent(getParentNode(element));
}

/**
 * Returns the reference node of the reference object, or the reference object itself.
 * @method
 * @memberof Popper.Utils
 * @param {Element|Object} reference - the reference element (the popper will be relative to this)
 * @returns {Element} parent
 */
function getReferenceNode(reference) {
  return reference && reference.referenceNode ? reference.referenceNode : reference;
}

var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);
var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);

/**
 * Determines if the browser is Internet Explorer
 * @method
 * @memberof Popper.Utils
 * @param {Number} version to check
 * @returns {Boolean} isIE
 */
function isIE(version) {
  if (version === 11) {
    return isIE11;
  }
  if (version === 10) {
    return isIE10;
  }
  return isIE11 || isIE10;
}

/**
 * Returns the offset parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} offset parent
 */
function getOffsetParent(element) {
  if (!element) {
    return document.documentElement;
  }

  var noOffsetParent = isIE(10) ? document.body : null;

  // NOTE: 1 DOM access here
  var offsetParent = element.offsetParent || null;
  // Skip hidden elements which don't have an offsetParent
  while (offsetParent === noOffsetParent && element.nextElementSibling) {
    offsetParent = (element = element.nextElementSibling).offsetParent;
  }

  var nodeName = offsetParent && offsetParent.nodeName;

  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {
    return element ? element.ownerDocument.documentElement : document.documentElement;
  }

  // .offsetParent will return the closest TH, TD or TABLE in case
  // no offsetParent is present, I hate this job...
  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {
    return getOffsetParent(offsetParent);
  }

  return offsetParent;
}

function isOffsetContainer(element) {
  var nodeName = element.nodeName;

  if (nodeName === 'BODY') {
    return false;
  }
  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;
}

/**
 * Finds the root node (document, shadowDOM root) of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} node
 * @returns {Element} root node
 */
function getRoot(node) {
  if (node.parentNode !== null) {
    return getRoot(node.parentNode);
  }

  return node;
}

/**
 * Finds the offset parent common to the two provided nodes
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element1
 * @argument {Element} element2
 * @returns {Element} common offset parent
 */
function findCommonOffsetParent(element1, element2) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
    return document.documentElement;
  }

  // Here we make sure to give as "start" the element that comes first in the DOM
  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
  var start = order ? element1 : element2;
  var end = order ? element2 : element1;

  // Get common ancestor container
  var range = document.createRange();
  range.setStart(start, 0);
  range.setEnd(end, 0);
  var commonAncestorContainer = range.commonAncestorContainer;

  // Both nodes are inside #document

  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
    if (isOffsetContainer(commonAncestorContainer)) {
      return commonAncestorContainer;
    }

    return getOffsetParent(commonAncestorContainer);
  }

  // one of the nodes is inside shadowDOM, find which one
  var element1root = getRoot(element1);
  if (element1root.host) {
    return findCommonOffsetParent(element1root.host, element2);
  } else {
    return findCommonOffsetParent(element1, getRoot(element2).host);
  }
}

/**
 * Gets the scroll value of the given element in the given side (top and left)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {String} side `top` or `left`
 * @returns {number} amount of scrolled pixels
 */
function getScroll(element) {
  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';

  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
  var nodeName = element.nodeName;

  if (nodeName === 'BODY' || nodeName === 'HTML') {
    var html = element.ownerDocument.documentElement;
    var scrollingElement = element.ownerDocument.scrollingElement || html;
    return scrollingElement[upperSide];
  }

  return element[upperSide];
}

/*
 * Sum or subtract the element scroll values (left and top) from a given rect object
 * @method
 * @memberof Popper.Utils
 * @param {Object} rect - Rect object you want to change
 * @param {HTMLElement} element - The element from the function reads the scroll values
 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
 * @return {Object} rect - The modifier rect object
 */
function includeScroll(rect, element) {
  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var scrollTop = getScroll(element, 'top');
  var scrollLeft = getScroll(element, 'left');
  var modifier = subtract ? -1 : 1;
  rect.top += scrollTop * modifier;
  rect.bottom += scrollTop * modifier;
  rect.left += scrollLeft * modifier;
  rect.right += scrollLeft * modifier;
  return rect;
}

/*
 * Helper to detect borders of a given element
 * @method
 * @memberof Popper.Utils
 * @param {CSSStyleDeclaration} styles
 * Result of `getStyleComputedProperty` on the given element
 * @param {String} axis - `x` or `y`
 * @return {number} borders - The borders size of the given axis
 */

function getBordersSize(styles, axis) {
  var sideA = axis === 'x' ? 'Left' : 'Top';
  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';

  return parseFloat(styles['border' + sideA + 'Width']) + parseFloat(styles['border' + sideB + 'Width']);
}

function getSize(axis, body, html, computedStyle) {
  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);
}

function getWindowSizes(document) {
  var body = document.body;
  var html = document.documentElement;
  var computedStyle = isIE(10) && getComputedStyle(html);

  return {
    height: getSize('Height', body, html, computedStyle),
    width: getSize('Width', body, html, computedStyle)
  };
}

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass$6 = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();





var defineProperty = function (obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

var _extends$3 = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/**
 * Given element offsets, generate an output similar to getBoundingClientRect
 * @method
 * @memberof Popper.Utils
 * @argument {Object} offsets
 * @returns {Object} ClientRect like output
 */
function getClientRect(offsets) {
  return _extends$3({}, offsets, {
    right: offsets.left + offsets.width,
    bottom: offsets.top + offsets.height
  });
}

/**
 * Get bounding client rect of given element
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} element
 * @return {Object} client rect
 */
function getBoundingClientRect(element) {
  var rect = {};

  // IE10 10 FIX: Please, don't ask, the element isn't
  // considered in DOM in some circumstances...
  // This isn't reproducible in IE10 compatibility mode of IE11
  try {
    if (isIE(10)) {
      rect = element.getBoundingClientRect();
      var scrollTop = getScroll(element, 'top');
      var scrollLeft = getScroll(element, 'left');
      rect.top += scrollTop;
      rect.left += scrollLeft;
      rect.bottom += scrollTop;
      rect.right += scrollLeft;
    } else {
      rect = element.getBoundingClientRect();
    }
  } catch (e) {}

  var result = {
    left: rect.left,
    top: rect.top,
    width: rect.right - rect.left,
    height: rect.bottom - rect.top
  };

  // subtract scrollbar size from sizes
  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};
  var width = sizes.width || element.clientWidth || result.width;
  var height = sizes.height || element.clientHeight || result.height;

  var horizScrollbar = element.offsetWidth - width;
  var vertScrollbar = element.offsetHeight - height;

  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
  // we make this check conditional for performance reasons
  if (horizScrollbar || vertScrollbar) {
    var styles = getStyleComputedProperty(element);
    horizScrollbar -= getBordersSize(styles, 'x');
    vertScrollbar -= getBordersSize(styles, 'y');

    result.width -= horizScrollbar;
    result.height -= vertScrollbar;
  }

  return getClientRect(result);
}

function getOffsetRectRelativeToArbitraryNode(children, parent) {
  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var isIE10 = isIE(10);
  var isHTML = parent.nodeName === 'HTML';
  var childrenRect = getBoundingClientRect(children);
  var parentRect = getBoundingClientRect(parent);
  var scrollParent = getScrollParent(children);

  var styles = getStyleComputedProperty(parent);
  var borderTopWidth = parseFloat(styles.borderTopWidth);
  var borderLeftWidth = parseFloat(styles.borderLeftWidth);

  // In cases where the parent is fixed, we must ignore negative scroll in offset calc
  if (fixedPosition && isHTML) {
    parentRect.top = Math.max(parentRect.top, 0);
    parentRect.left = Math.max(parentRect.left, 0);
  }
  var offsets = getClientRect({
    top: childrenRect.top - parentRect.top - borderTopWidth,
    left: childrenRect.left - parentRect.left - borderLeftWidth,
    width: childrenRect.width,
    height: childrenRect.height
  });
  offsets.marginTop = 0;
  offsets.marginLeft = 0;

  // Subtract margins of documentElement in case it's being used as parent
  // we do this only on HTML because it's the only element that behaves
  // differently when margins are applied to it. The margins are included in
  // the box of the documentElement, in the other cases not.
  if (!isIE10 && isHTML) {
    var marginTop = parseFloat(styles.marginTop);
    var marginLeft = parseFloat(styles.marginLeft);

    offsets.top -= borderTopWidth - marginTop;
    offsets.bottom -= borderTopWidth - marginTop;
    offsets.left -= borderLeftWidth - marginLeft;
    offsets.right -= borderLeftWidth - marginLeft;

    // Attach marginTop and marginLeft because in some circumstances we may need them
    offsets.marginTop = marginTop;
    offsets.marginLeft = marginLeft;
  }

  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {
    offsets = includeScroll(offsets, parent);
  }

  return offsets;
}

function getViewportOffsetRectRelativeToArtbitraryNode(element) {
  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var html = element.ownerDocument.documentElement;
  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
  var width = Math.max(html.clientWidth, window.innerWidth || 0);
  var height = Math.max(html.clientHeight, window.innerHeight || 0);

  var scrollTop = !excludeScroll ? getScroll(html) : 0;
  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;

  var offset = {
    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
    width: width,
    height: height
  };

  return getClientRect(offset);
}

/**
 * Check if the given element is fixed or is inside a fixed parent
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {Element} customContainer
 * @returns {Boolean} answer to "isFixed?"
 */
function isFixed(element) {
  var nodeName = element.nodeName;
  if (nodeName === 'BODY' || nodeName === 'HTML') {
    return false;
  }
  if (getStyleComputedProperty(element, 'position') === 'fixed') {
    return true;
  }
  var parentNode = getParentNode(element);
  if (!parentNode) {
    return false;
  }
  return isFixed(parentNode);
}

/**
 * Finds the first parent of an element that has a transformed property defined
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} first transformed parent or documentElement
 */

function getFixedPositionOffsetParent(element) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element || !element.parentElement || isIE()) {
    return document.documentElement;
  }
  var el = element.parentElement;
  while (el && getStyleComputedProperty(el, 'transform') === 'none') {
    el = el.parentElement;
  }
  return el || document.documentElement;
}

/**
 * Computed the boundaries limits and return them
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} popper
 * @param {HTMLElement} reference
 * @param {number} padding
 * @param {HTMLElement} boundariesElement - Element used to define the boundaries
 * @param {Boolean} fixedPosition - Is in fixed position mode
 * @returns {Object} Coordinates of the boundaries
 */
function getBoundaries(popper, reference, padding, boundariesElement) {
  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

  // NOTE: 1 DOM access here

  var boundaries = { top: 0, left: 0 };
  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));

  // Handle viewport case
  if (boundariesElement === 'viewport') {
    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
  } else {
    // Handle other cases based on DOM element used as boundaries
    var boundariesNode = void 0;
    if (boundariesElement === 'scrollParent') {
      boundariesNode = getScrollParent(getParentNode(reference));
      if (boundariesNode.nodeName === 'BODY') {
        boundariesNode = popper.ownerDocument.documentElement;
      }
    } else if (boundariesElement === 'window') {
      boundariesNode = popper.ownerDocument.documentElement;
    } else {
      boundariesNode = boundariesElement;
    }

    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);

    // In case of HTML, we need a different computation
    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {
      var _getWindowSizes = getWindowSizes(popper.ownerDocument),
          height = _getWindowSizes.height,
          width = _getWindowSizes.width;

      boundaries.top += offsets.top - offsets.marginTop;
      boundaries.bottom = height + offsets.top;
      boundaries.left += offsets.left - offsets.marginLeft;
      boundaries.right = width + offsets.left;
    } else {
      // for all the other DOM elements, this one is good
      boundaries = offsets;
    }
  }

  // Add paddings
  padding = padding || 0;
  var isPaddingNumber = typeof padding === 'number';
  boundaries.left += isPaddingNumber ? padding : padding.left || 0;
  boundaries.top += isPaddingNumber ? padding : padding.top || 0;
  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;
  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;

  return boundaries;
}

function getArea(_ref) {
  var width = _ref.width,
      height = _ref.height;

  return width * height;
}

/**
 * Utility used to transform the `auto` placement to the placement with more
 * available space.
 * @method
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;

  if (placement.indexOf('auto') === -1) {
    return placement;
  }

  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);

  var rects = {
    top: {
      width: boundaries.width,
      height: refRect.top - boundaries.top
    },
    right: {
      width: boundaries.right - refRect.right,
      height: boundaries.height
    },
    bottom: {
      width: boundaries.width,
      height: boundaries.bottom - refRect.bottom
    },
    left: {
      width: refRect.left - boundaries.left,
      height: boundaries.height
    }
  };

  var sortedAreas = Object.keys(rects).map(function (key) {
    return _extends$3({
      key: key
    }, rects[key], {
      area: getArea(rects[key])
    });
  }).sort(function (a, b) {
    return b.area - a.area;
  });

  var filteredAreas = sortedAreas.filter(function (_ref2) {
    var width = _ref2.width,
        height = _ref2.height;
    return width >= popper.clientWidth && height >= popper.clientHeight;
  });

  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;

  var variation = placement.split('-')[1];

  return computedPlacement + (variation ? '-' + variation : '');
}

/**
 * Get offsets to the reference element
 * @method
 * @memberof Popper.Utils
 * @param {Object} state
 * @param {Element} popper - the popper element
 * @param {Element} reference - the reference element (the popper will be relative to this)
 * @param {Element} fixedPosition - is in fixed position mode
 * @returns {Object} An object containing the offsets which will be applied to the popper
 */
function getReferenceOffsets(state, popper, reference) {
  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));
  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
}

/**
 * Get the outer sizes of the given element (offset size + margins)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Object} object containing width and height properties
 */
function getOuterSizes(element) {
  var window = element.ownerDocument.defaultView;
  var styles = window.getComputedStyle(element);
  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);
  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);
  var result = {
    width: element.offsetWidth + y,
    height: element.offsetHeight + x
  };
  return result;
}

/**
 * Get the opposite placement of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement
 * @returns {String} flipped placement
 */
function getOppositePlacement(placement) {
  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash[matched];
  });
}

/**
 * Get offsets to the popper
 * @method
 * @memberof Popper.Utils
 * @param {Object} position - CSS position the Popper will get applied
 * @param {HTMLElement} popper - the popper element
 * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
 * @param {String} placement - one of the valid placement options
 * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
 */
function getPopperOffsets(popper, referenceOffsets, placement) {
  placement = placement.split('-')[0];

  // Get popper node sizes
  var popperRect = getOuterSizes(popper);

  // Add position, width and height to our offsets object
  var popperOffsets = {
    width: popperRect.width,
    height: popperRect.height
  };

  // depending by the popper placement we have to compute its offsets slightly differently
  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;
  var mainSide = isHoriz ? 'top' : 'left';
  var secondarySide = isHoriz ? 'left' : 'top';
  var measurement = isHoriz ? 'height' : 'width';
  var secondaryMeasurement = !isHoriz ? 'height' : 'width';

  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;
  if (placement === secondarySide) {
    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
  } else {
    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
  }

  return popperOffsets;
}

/**
 * Mimics the `find` method of Array
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */
function find$1(arr, check) {
  // use native find if supported
  if (Array.prototype.find) {
    return arr.find(check);
  }

  // use `filter` to obtain the same behavior of `find`
  return arr.filter(check)[0];
}

/**
 * Return the index of the matching object
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */
function findIndex(arr, prop, value) {
  // use native findIndex if supported
  if (Array.prototype.findIndex) {
    return arr.findIndex(function (cur) {
      return cur[prop] === value;
    });
  }

  // use `find` + `indexOf` if `findIndex` isn't supported
  var match = find$1(arr, function (obj) {
    return obj[prop] === value;
  });
  return arr.indexOf(match);
}

/**
 * Loop trough the list of modifiers and run them in order,
 * each of them will then edit the data object.
 * @method
 * @memberof Popper.Utils
 * @param {dataObject} data
 * @param {Array} modifiers
 * @param {String} ends - Optional modifier name used as stopper
 * @returns {dataObject}
 */
function runModifiers(modifiers, data, ends) {
  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));

  modifiersToRun.forEach(function (modifier) {
    if (modifier['function']) {
      // eslint-disable-line dot-notation
      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
    }
    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation
    if (modifier.enabled && isFunction(fn)) {
      // Add properties to offsets to make them a complete clientRect object
      // we do this before each modifier to make sure the previous one doesn't
      // mess with these values
      data.offsets.popper = getClientRect(data.offsets.popper);
      data.offsets.reference = getClientRect(data.offsets.reference);

      data = fn(data, modifier);
    }
  });

  return data;
}

/**
 * Updates the position of the popper, computing the new offsets and applying
 * the new style.<br />
 * Prefer `scheduleUpdate` over `update` because of performance reasons.
 * @method
 * @memberof Popper
 */
function update() {
  // if popper is destroyed, don't perform any further update
  if (this.state.isDestroyed) {
    return;
  }

  var data = {
    instance: this,
    styles: {},
    arrowStyles: {},
    attributes: {},
    flipped: false,
    offsets: {}
  };

  // compute reference element offsets
  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);

  // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value
  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);

  // store the computed placement inside `originalPlacement`
  data.originalPlacement = data.placement;

  data.positionFixed = this.options.positionFixed;

  // compute the popper offsets
  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);

  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';

  // run the modifiers
  data = runModifiers(this.modifiers, data);

  // the first `update` will call `onCreate` callback
  // the other ones will call `onUpdate` callback
  if (!this.state.isCreated) {
    this.state.isCreated = true;
    this.options.onCreate(data);
  } else {
    this.options.onUpdate(data);
  }
}

/**
 * Helper used to know if the given modifier is enabled.
 * @method
 * @memberof Popper.Utils
 * @returns {Boolean}
 */
function isModifierEnabled(modifiers, modifierName) {
  return modifiers.some(function (_ref) {
    var name = _ref.name,
        enabled = _ref.enabled;
    return enabled && name === modifierName;
  });
}

/**
 * Get the prefixed supported property name
 * @method
 * @memberof Popper.Utils
 * @argument {String} property (camelCase)
 * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
 */
function getSupportedPropertyName(property) {
  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];
  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);

  for (var i = 0; i < prefixes.length; i++) {
    var prefix = prefixes[i];
    var toCheck = prefix ? '' + prefix + upperProp : property;
    if (typeof document.body.style[toCheck] !== 'undefined') {
      return toCheck;
    }
  }
  return null;
}

/**
 * Destroys the popper.
 * @method
 * @memberof Popper
 */
function destroy() {
  this.state.isDestroyed = true;

  // touch DOM only if `applyStyle` modifier is enabled
  if (isModifierEnabled(this.modifiers, 'applyStyle')) {
    this.popper.removeAttribute('x-placement');
    this.popper.style.position = '';
    this.popper.style.top = '';
    this.popper.style.left = '';
    this.popper.style.right = '';
    this.popper.style.bottom = '';
    this.popper.style.willChange = '';
    this.popper.style[getSupportedPropertyName('transform')] = '';
  }

  this.disableEventListeners();

  // remove the popper if user explicitly asked for the deletion on destroy
  // do not use `remove` because IE11 doesn't support it
  if (this.options.removeOnDestroy) {
    this.popper.parentNode.removeChild(this.popper);
  }
  return this;
}

/**
 * Get the window associated with the element
 * @argument {Element} element
 * @returns {Window}
 */
function getWindow(element) {
  var ownerDocument = element.ownerDocument;
  return ownerDocument ? ownerDocument.defaultView : window;
}

function attachToScrollParents(scrollParent, event, callback, scrollParents) {
  var isBody = scrollParent.nodeName === 'BODY';
  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
  target.addEventListener(event, callback, { passive: true });

  if (!isBody) {
    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
  }
  scrollParents.push(target);
}

/**
 * Setup needed event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */
function setupEventListeners(reference, options, state, updateBound) {
  // Resize event listener on window
  state.updateBound = updateBound;
  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });

  // Scroll event listener on scroll parents
  var scrollElement = getScrollParent(reference);
  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);
  state.scrollElement = scrollElement;
  state.eventsEnabled = true;

  return state;
}

/**
 * It will add resize/scroll events and start recalculating
 * position of the popper element when they are triggered.
 * @method
 * @memberof Popper
 */
function enableEventListeners() {
  if (!this.state.eventsEnabled) {
    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
  }
}

/**
 * Remove event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */
function removeEventListeners(reference, state) {
  // Remove resize event listener on window
  getWindow(reference).removeEventListener('resize', state.updateBound);

  // Remove scroll event listener on scroll parents
  state.scrollParents.forEach(function (target) {
    target.removeEventListener('scroll', state.updateBound);
  });

  // Reset state
  state.updateBound = null;
  state.scrollParents = [];
  state.scrollElement = null;
  state.eventsEnabled = false;
  return state;
}

/**
 * It will remove resize/scroll events and won't recalculate popper position
 * when they are triggered. It also won't trigger `onUpdate` callback anymore,
 * unless you call `update` method manually.
 * @method
 * @memberof Popper
 */
function disableEventListeners() {
  if (this.state.eventsEnabled) {
    cancelAnimationFrame(this.scheduleUpdate);
    this.state = removeEventListeners(this.reference, this.state);
  }
}

/**
 * Tells if a given input is a number
 * @method
 * @memberof Popper.Utils
 * @param {*} input to check
 * @return {Boolean}
 */
function isNumeric(n) {
  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
}

/**
 * Set the style to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the style to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */
function setStyles(element, styles) {
  Object.keys(styles).forEach(function (prop) {
    var unit = '';
    // add unit if the value is numeric and is one of the following
    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {
      unit = 'px';
    }
    element.style[prop] = styles[prop] + unit;
  });
}

/**
 * Set the attributes to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the attributes to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */
function setAttributes(element, attributes) {
  Object.keys(attributes).forEach(function (prop) {
    var value = attributes[prop];
    if (value !== false) {
      element.setAttribute(prop, attributes[prop]);
    } else {
      element.removeAttribute(prop);
    }
  });
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} data.styles - List of style properties - values to apply to popper element
 * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The same data object
 */
function applyStyle(data) {
  // any property present in `data.styles` will be applied to the popper,
  // in this way we can make the 3rd party modifiers add custom styles to it
  // Be aware, modifiers could override the properties defined in the previous
  // lines of this modifier!
  setStyles(data.instance.popper, data.styles);

  // any property present in `data.attributes` will be applied to the popper,
  // they will be set as HTML attributes of the element
  setAttributes(data.instance.popper, data.attributes);

  // if arrowElement is defined and arrowStyles has some properties
  if (data.arrowElement && Object.keys(data.arrowStyles).length) {
    setStyles(data.arrowElement, data.arrowStyles);
  }

  return data;
}

/**
 * Set the x-placement attribute before everything else because it could be used
 * to add margins to the popper margins needs to be calculated to get the
 * correct popper offsets.
 * @method
 * @memberof Popper.modifiers
 * @param {HTMLElement} reference - The reference element used to position the popper
 * @param {HTMLElement} popper - The HTML element used as popper
 * @param {Object} options - Popper.js options
 */
function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
  // compute reference element offsets
  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);

  // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value
  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);

  popper.setAttribute('x-placement', placement);

  // Apply `position` to popper before anything else because
  // without the position applied we can't guarantee correct computations
  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });

  return options;
}

/**
 * @function
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Boolean} shouldRound - If the offsets should be rounded at all
 * @returns {Object} The popper's position offsets rounded
 *
 * The tale of pixel-perfect positioning. It's still not 100% perfect, but as
 * good as it can be within reason.
 * Discussion here: https://github.com/FezVrasta/popper.js/pull/715
 *
 * Low DPI screens cause a popper to be blurry if not using full pixels (Safari
 * as well on High DPI screens).
 *
 * Firefox prefers no rounding for positioning and does not have blurriness on
 * high DPI screens.
 *
 * Only horizontal placement and left/right values need to be considered.
 */
function getRoundedOffsets(data, shouldRound) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var round = Math.round,
      floor = Math.floor;

  var noRound = function noRound(v) {
    return v;
  };

  var referenceWidth = round(reference.width);
  var popperWidth = round(popper.width);

  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;
  var isVariation = data.placement.indexOf('-') !== -1;
  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;
  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;

  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;
  var verticalToInteger = !shouldRound ? noRound : round;

  return {
    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),
    top: verticalToInteger(popper.top),
    bottom: verticalToInteger(popper.bottom),
    right: horizontalToInteger(popper.right)
  };
}

var isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function computeStyle(data, options) {
  var x = options.x,
      y = options.y;
  var popper = data.offsets.popper;

  // Remove this legacy support in Popper.js v2

  var legacyGpuAccelerationOption = find$1(data.instance.modifiers, function (modifier) {
    return modifier.name === 'applyStyle';
  }).gpuAcceleration;
  if (legacyGpuAccelerationOption !== undefined) {
    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
  }
  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;

  var offsetParent = getOffsetParent(data.instance.popper);
  var offsetParentRect = getBoundingClientRect(offsetParent);

  // Styles
  var styles = {
    position: popper.position
  };

  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);

  var sideA = x === 'bottom' ? 'top' : 'bottom';
  var sideB = y === 'right' ? 'left' : 'right';

  // if gpuAcceleration is set to `true` and transform is supported,
  //  we use `translate3d` to apply the position to the popper we
  // automatically use the supported prefixed version if needed
  var prefixedProperty = getSupportedPropertyName('transform');

  // now, let's make a step back and look at this code closely (wtf?)
  // If the content of the popper grows once it's been positioned, it
  // may happen that the popper gets misplaced because of the new content
  // overflowing its reference element
  // To avoid this problem, we provide two options (x and y), which allow
  // the consumer to define the offset origin.
  // If we position a popper on top of a reference element, we can set
  // `x` to `top` to make the popper grow towards its top instead of
  // its bottom.
  var left = void 0,
      top = void 0;
  if (sideA === 'bottom') {
    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)
    // and not the bottom of the html element
    if (offsetParent.nodeName === 'HTML') {
      top = -offsetParent.clientHeight + offsets.bottom;
    } else {
      top = -offsetParentRect.height + offsets.bottom;
    }
  } else {
    top = offsets.top;
  }
  if (sideB === 'right') {
    if (offsetParent.nodeName === 'HTML') {
      left = -offsetParent.clientWidth + offsets.right;
    } else {
      left = -offsetParentRect.width + offsets.right;
    }
  } else {
    left = offsets.left;
  }
  if (gpuAcceleration && prefixedProperty) {
    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
    styles[sideA] = 0;
    styles[sideB] = 0;
    styles.willChange = 'transform';
  } else {
    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
    var invertTop = sideA === 'bottom' ? -1 : 1;
    var invertLeft = sideB === 'right' ? -1 : 1;
    styles[sideA] = top * invertTop;
    styles[sideB] = left * invertLeft;
    styles.willChange = sideA + ', ' + sideB;
  }

  // Attributes
  var attributes = {
    'x-placement': data.placement
  };

  // Update `data` attributes, styles and arrowStyles
  data.attributes = _extends$3({}, attributes, data.attributes);
  data.styles = _extends$3({}, styles, data.styles);
  data.arrowStyles = _extends$3({}, data.offsets.arrow, data.arrowStyles);

  return data;
}

/**
 * Helper used to know if the given modifier depends from another one.<br />
 * It checks if the needed modifier is listed and enabled.
 * @method
 * @memberof Popper.Utils
 * @param {Array} modifiers - list of modifiers
 * @param {String} requestingName - name of requesting modifier
 * @param {String} requestedName - name of requested modifier
 * @returns {Boolean}
 */
function isModifierRequired(modifiers, requestingName, requestedName) {
  var requesting = find$1(modifiers, function (_ref) {
    var name = _ref.name;
    return name === requestingName;
  });

  var isRequired = !!requesting && modifiers.some(function (modifier) {
    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
  });

  if (!isRequired) {
    var _requesting = '`' + requestingName + '`';
    var requested = '`' + requestedName + '`';
    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
  }
  return isRequired;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function arrow(data, options) {
  var _data$offsets$arrow;

  // arrow depends on keepTogether in order to work
  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {
    return data;
  }

  var arrowElement = options.element;

  // if arrowElement is a string, suppose it's a CSS selector
  if (typeof arrowElement === 'string') {
    arrowElement = data.instance.popper.querySelector(arrowElement);

    // if arrowElement is not found, don't run the modifier
    if (!arrowElement) {
      return data;
    }
  } else {
    // if the arrowElement isn't a query selector we must check that the
    // provided DOM node is child of its popper node
    if (!data.instance.popper.contains(arrowElement)) {
      console.warn('WARNING: `arrow.element` must be child of its popper element!');
      return data;
    }
  }

  var placement = data.placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var isVertical = ['left', 'right'].indexOf(placement) !== -1;

  var len = isVertical ? 'height' : 'width';
  var sideCapitalized = isVertical ? 'Top' : 'Left';
  var side = sideCapitalized.toLowerCase();
  var altSide = isVertical ? 'left' : 'top';
  var opSide = isVertical ? 'bottom' : 'right';
  var arrowElementSize = getOuterSizes(arrowElement)[len];

  //
  // extends keepTogether behavior making sure the popper and its
  // reference have enough pixels in conjunction
  //

  // top/left side
  if (reference[opSide] - arrowElementSize < popper[side]) {
    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
  }
  // bottom/right side
  if (reference[side] + arrowElementSize > popper[opSide]) {
    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
  }
  data.offsets.popper = getClientRect(data.offsets.popper);

  // compute center of the popper
  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;

  // Compute the sideValue using the updated popper offsets
  // take popper margin in account because we don't have this info available
  var css = getStyleComputedProperty(data.instance.popper);
  var popperMarginSide = parseFloat(css['margin' + sideCapitalized]);
  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width']);
  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;

  // prevent arrowElement from being placed not contiguously to its popper
  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);

  data.arrowElement = arrowElement;
  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);

  return data;
}

/**
 * Get the opposite placement variation of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement variation
 * @returns {String} flipped placement variation
 */
function getOppositeVariation(variation) {
  if (variation === 'end') {
    return 'start';
  } else if (variation === 'start') {
    return 'end';
  }
  return variation;
}

/**
 * List of accepted placements to use as values of the `placement` option.<br />
 * Valid placements are:
 * - `auto`
 * - `top`
 * - `right`
 * - `bottom`
 * - `left`
 *
 * Each placement can have a variation from this list:
 * - `-start`
 * - `-end`
 *
 * Variations are interpreted easily if you think of them as the left to right
 * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
 * is right.<br />
 * Vertically (`left` and `right`), `start` is top and `end` is bottom.
 *
 * Some valid examples are:
 * - `top-end` (on top of reference, right aligned)
 * - `right-start` (on right of reference, top aligned)
 * - `bottom` (on bottom, centered)
 * - `auto-end` (on the side with more space available, alignment depends by placement)
 *
 * @static
 * @type {Array}
 * @enum {String}
 * @readonly
 * @method placements
 * @memberof Popper
 */
var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];

// Get rid of `auto` `auto-start` and `auto-end`
var validPlacements = placements.slice(3);

/**
 * Given an initial placement, returns all the subsequent placements
 * clockwise (or counter-clockwise).
 *
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement - A valid placement (it accepts variations)
 * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
 * @returns {Array} placements including their variations
 */
function clockwise(placement) {
  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var index = validPlacements.indexOf(placement);
  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
  return counter ? arr.reverse() : arr;
}

var BEHAVIORS = {
  FLIP: 'flip',
  CLOCKWISE: 'clockwise',
  COUNTERCLOCKWISE: 'counterclockwise'
};

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function flip(data, options) {
  // if `inner` modifier is enabled, we can't use the `flip` modifier
  if (isModifierEnabled(data.instance.modifiers, 'inner')) {
    return data;
  }

  if (data.flipped && data.placement === data.originalPlacement) {
    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
    return data;
  }

  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);

  var placement = data.placement.split('-')[0];
  var placementOpposite = getOppositePlacement(placement);
  var variation = data.placement.split('-')[1] || '';

  var flipOrder = [];

  switch (options.behavior) {
    case BEHAVIORS.FLIP:
      flipOrder = [placement, placementOpposite];
      break;
    case BEHAVIORS.CLOCKWISE:
      flipOrder = clockwise(placement);
      break;
    case BEHAVIORS.COUNTERCLOCKWISE:
      flipOrder = clockwise(placement, true);
      break;
    default:
      flipOrder = options.behavior;
  }

  flipOrder.forEach(function (step, index) {
    if (placement !== step || flipOrder.length === index + 1) {
      return data;
    }

    placement = data.placement.split('-')[0];
    placementOpposite = getOppositePlacement(placement);

    var popperOffsets = data.offsets.popper;
    var refOffsets = data.offsets.reference;

    // using floor because the reference offsets may contain decimals we are not going to consider here
    var floor = Math.floor;
    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);

    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);

    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;

    // flip the variation if required
    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;

    // flips variation if reference element overflows boundaries
    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);

    // flips variation if popper content overflows boundaries
    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);

    var flippedVariation = flippedVariationByRef || flippedVariationByContent;

    if (overlapsRef || overflowsBoundaries || flippedVariation) {
      // this boolean to detect any flip loop
      data.flipped = true;

      if (overlapsRef || overflowsBoundaries) {
        placement = flipOrder[index + 1];
      }

      if (flippedVariation) {
        variation = getOppositeVariation(variation);
      }

      data.placement = placement + (variation ? '-' + variation : '');

      // this object contains `position`, we want to preserve it along with
      // any additional property we may add in the future
      data.offsets.popper = _extends$3({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));

      data = runModifiers(data.instance.modifiers, data, 'flip');
    }
  });
  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function keepTogether(data) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var placement = data.placement.split('-')[0];
  var floor = Math.floor;
  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
  var side = isVertical ? 'right' : 'bottom';
  var opSide = isVertical ? 'left' : 'top';
  var measurement = isVertical ? 'width' : 'height';

  if (popper[side] < floor(reference[opSide])) {
    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
  }
  if (popper[opSide] > floor(reference[side])) {
    data.offsets.popper[opSide] = floor(reference[side]);
  }

  return data;
}

/**
 * Converts a string containing value + unit into a px value number
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} str - Value + unit string
 * @argument {String} measurement - `height` or `width`
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @returns {Number|String}
 * Value in pixels, or original string if no values were extracted
 */
function toValue(str, measurement, popperOffsets, referenceOffsets) {
  // separate value from unit
  var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
  var value = +split[1];
  var unit = split[2];

  // If it's not a number it's an operator, I guess
  if (!value) {
    return str;
  }

  if (unit.indexOf('%') === 0) {
    var element = void 0;
    switch (unit) {
      case '%p':
        element = popperOffsets;
        break;
      case '%':
      case '%r':
      default:
        element = referenceOffsets;
    }

    var rect = getClientRect(element);
    return rect[measurement] / 100 * value;
  } else if (unit === 'vh' || unit === 'vw') {
    // if is a vh or vw, we calculate the size based on the viewport
    var size = void 0;
    if (unit === 'vh') {
      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
    } else {
      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
    }
    return size / 100 * value;
  } else {
    // if is an explicit pixel unit, we get rid of the unit and keep the value
    // if is an implicit unit, it's px, and we return just the value
    return value;
  }
}

/**
 * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} offset
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @argument {String} basePlacement
 * @returns {Array} a two cells array with x and y offsets in numbers
 */
function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {
  var offsets = [0, 0];

  // Use height if placement is left or right and index is 0 otherwise use width
  // in this way the first offset will use an axis and the second one
  // will use the other one
  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;

  // Split the offset string to obtain a list of values and operands
  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)
  var fragments = offset.split(/(\+|\-)/).map(function (frag) {
    return frag.trim();
  });

  // Detect if the offset string contains a pair of values or a single one
  // they could be separated by comma or space
  var divider = fragments.indexOf(find$1(fragments, function (frag) {
    return frag.search(/,|\s/) !== -1;
  }));

  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {
    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
  }

  // If divider is found, we divide the list of values and operands to divide
  // them by ofset X and Y.
  var splitRegex = /\s*,\s*|\s+/;
  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];

  // Convert the values with units to absolute pixels to allow our computations
  ops = ops.map(function (op, index) {
    // Most of the units rely on the orientation of the popper
    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';
    var mergeWithPrevious = false;
    return op
    // This aggregates any `+` or `-` sign that aren't considered operators
    // e.g.: 10 + +5 => [10, +, +5]
    .reduce(function (a, b) {
      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {
        a[a.length - 1] = b;
        mergeWithPrevious = true;
        return a;
      } else if (mergeWithPrevious) {
        a[a.length - 1] += b;
        mergeWithPrevious = false;
        return a;
      } else {
        return a.concat(b);
      }
    }, [])
    // Here we convert the string values into number values (in px)
    .map(function (str) {
      return toValue(str, measurement, popperOffsets, referenceOffsets);
    });
  });

  // Loop trough the offsets arrays and execute the operations
  ops.forEach(function (op, index) {
    op.forEach(function (frag, index2) {
      if (isNumeric(frag)) {
        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
      }
    });
  });
  return offsets;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @argument {Number|String} options.offset=0
 * The offset value as described in the modifier description
 * @returns {Object} The data object, properly modified
 */
function offset(data, _ref) {
  var offset = _ref.offset;
  var placement = data.placement,
      _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var basePlacement = placement.split('-')[0];

  var offsets = void 0;
  if (isNumeric(+offset)) {
    offsets = [+offset, 0];
  } else {
    offsets = parseOffset(offset, popper, reference, basePlacement);
  }

  if (basePlacement === 'left') {
    popper.top += offsets[0];
    popper.left -= offsets[1];
  } else if (basePlacement === 'right') {
    popper.top += offsets[0];
    popper.left += offsets[1];
  } else if (basePlacement === 'top') {
    popper.left += offsets[0];
    popper.top -= offsets[1];
  } else if (basePlacement === 'bottom') {
    popper.left += offsets[0];
    popper.top += offsets[1];
  }

  data.popper = popper;
  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function preventOverflow(data, options) {
  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);

  // If offsetParent is the reference element, we really want to
  // go one step up and use the next offsetParent as reference to
  // avoid to make this modifier completely useless and look like broken
  if (data.instance.reference === boundariesElement) {
    boundariesElement = getOffsetParent(boundariesElement);
  }

  // NOTE: DOM access here
  // resets the popper's position so that the document size can be calculated excluding
  // the size of the popper element itself
  var transformProp = getSupportedPropertyName('transform');
  var popperStyles = data.instance.popper.style; // assignment to help minification
  var top = popperStyles.top,
      left = popperStyles.left,
      transform = popperStyles[transformProp];

  popperStyles.top = '';
  popperStyles.left = '';
  popperStyles[transformProp] = '';

  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);

  // NOTE: DOM access here
  // restores the original style properties after the offsets have been computed
  popperStyles.top = top;
  popperStyles.left = left;
  popperStyles[transformProp] = transform;

  options.boundaries = boundaries;

  var order = options.priority;
  var popper = data.offsets.popper;

  var check = {
    primary: function primary(placement) {
      var value = popper[placement];
      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
        value = Math.max(popper[placement], boundaries[placement]);
      }
      return defineProperty({}, placement, value);
    },
    secondary: function secondary(placement) {
      var mainSide = placement === 'right' ? 'left' : 'top';
      var value = popper[mainSide];
      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
      }
      return defineProperty({}, mainSide, value);
    }
  };

  order.forEach(function (placement) {
    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';
    popper = _extends$3({}, popper, check[side](placement));
  });

  data.offsets.popper = popper;

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function shift(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var shiftvariation = placement.split('-')[1];

  // if shift shiftvariation is specified, run the modifier
  if (shiftvariation) {
    var _data$offsets = data.offsets,
        reference = _data$offsets.reference,
        popper = _data$offsets.popper;

    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;
    var side = isVertical ? 'left' : 'top';
    var measurement = isVertical ? 'width' : 'height';

    var shiftOffsets = {
      start: defineProperty({}, side, reference[side]),
      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
    };

    data.offsets.popper = _extends$3({}, popper, shiftOffsets[shiftvariation]);
  }

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function hide(data) {
  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {
    return data;
  }

  var refRect = data.offsets.reference;
  var bound = find$1(data.instance.modifiers, function (modifier) {
    return modifier.name === 'preventOverflow';
  }).boundaries;

  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === true) {
      return data;
    }

    data.hide = true;
    data.attributes['x-out-of-boundaries'] = '';
  } else {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === false) {
      return data;
    }

    data.hide = false;
    data.attributes['x-out-of-boundaries'] = false;
  }

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function inner(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;

  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;

  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);

  data.placement = getOppositePlacement(placement);
  data.offsets.popper = getClientRect(popper);

  return data;
}

/**
 * Modifier function, each modifier can have a function of this type assigned
 * to its `fn` property.<br />
 * These functions will be called on each update, this means that you must
 * make sure they are performant enough to avoid performance bottlenecks.
 *
 * @function ModifierFn
 * @argument {dataObject} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {dataObject} The data object, properly modified
 */

/**
 * Modifiers are plugins used to alter the behavior of your poppers.<br />
 * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
 * needed by the library.
 *
 * Usually you don't want to override the `order`, `fn` and `onLoad` props.
 * All the other properties are configurations that could be tweaked.
 * @namespace modifiers
 */
var modifiers = {
  /**
   * Modifier used to shift the popper on the start or end of its reference
   * element.<br />
   * It will read the variation of the `placement` property.<br />
   * It can be one either `-end` or `-start`.
   * @memberof modifiers
   * @inner
   */
  shift: {
    /** @prop {number} order=100 - Index used to define the order of execution */
    order: 100,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: shift
  },

  /**
   * The `offset` modifier can shift your popper on both its axis.
   *
   * It accepts the following units:
   * - `px` or unit-less, interpreted as pixels
   * - `%` or `%r`, percentage relative to the length of the reference element
   * - `%p`, percentage relative to the length of the popper element
   * - `vw`, CSS viewport width unit
   * - `vh`, CSS viewport height unit
   *
   * For length is intended the main axis relative to the placement of the popper.<br />
   * This means that if the placement is `top` or `bottom`, the length will be the
   * `width`. In case of `left` or `right`, it will be the `height`.
   *
   * You can provide a single value (as `Number` or `String`), or a pair of values
   * as `String` divided by a comma or one (or more) white spaces.<br />
   * The latter is a deprecated method because it leads to confusion and will be
   * removed in v2.<br />
   * Additionally, it accepts additions and subtractions between different units.
   * Note that multiplications and divisions aren't supported.
   *
   * Valid examples are:
   * ```
   * 10
   * '10%'
   * '10, 10'
   * '10%, 10'
   * '10 + 10%'
   * '10 - 5vh + 3%'
   * '-10px + 5vh, 5px - 6%'
   * ```
   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).
   *
   * @memberof modifiers
   * @inner
   */
  offset: {
    /** @prop {number} order=200 - Index used to define the order of execution */
    order: 200,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: offset,
    /** @prop {Number|String} offset=0
     * The offset value as described in the modifier description
     */
    offset: 0
  },

  /**
   * Modifier used to prevent the popper from being positioned outside the boundary.
   *
   * A scenario exists where the reference itself is not within the boundaries.<br />
   * We can say it has "escaped the boundaries" — or just "escaped".<br />
   * In this case we need to decide whether the popper should either:
   *
   * - detach from the reference and remain "trapped" in the boundaries, or
   * - if it should ignore the boundary and "escape with its reference"
   *
   * When `escapeWithReference` is set to`true` and reference is completely
   * outside its boundaries, the popper will overflow (or completely leave)
   * the boundaries in order to remain attached to the edge of the reference.
   *
   * @memberof modifiers
   * @inner
   */
  preventOverflow: {
    /** @prop {number} order=300 - Index used to define the order of execution */
    order: 300,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: preventOverflow,
    /**
     * @prop {Array} [priority=['left','right','top','bottom']]
     * Popper will try to prevent overflow following these priorities by default,
     * then, it could overflow on the left and on top of the `boundariesElement`
     */
    priority: ['left', 'right', 'top', 'bottom'],
    /**
     * @prop {number} padding=5
     * Amount of pixel used to define a minimum distance between the boundaries
     * and the popper. This makes sure the popper always has a little padding
     * between the edges of its container
     */
    padding: 5,
    /**
     * @prop {String|HTMLElement} boundariesElement='scrollParent'
     * Boundaries used by the modifier. Can be `scrollParent`, `window`,
     * `viewport` or any DOM element.
     */
    boundariesElement: 'scrollParent'
  },

  /**
   * Modifier used to make sure the reference and its popper stay near each other
   * without leaving any gap between the two. Especially useful when the arrow is
   * enabled and you want to ensure that it points to its reference element.
   * It cares only about the first axis. You can still have poppers with margin
   * between the popper and its reference element.
   * @memberof modifiers
   * @inner
   */
  keepTogether: {
    /** @prop {number} order=400 - Index used to define the order of execution */
    order: 400,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: keepTogether
  },

  /**
   * This modifier is used to move the `arrowElement` of the popper to make
   * sure it is positioned between the reference element and its popper element.
   * It will read the outer size of the `arrowElement` node to detect how many
   * pixels of conjunction are needed.
   *
   * It has no effect if no `arrowElement` is provided.
   * @memberof modifiers
   * @inner
   */
  arrow: {
    /** @prop {number} order=500 - Index used to define the order of execution */
    order: 500,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: arrow,
    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
    element: '[x-arrow]'
  },

  /**
   * Modifier used to flip the popper's placement when it starts to overlap its
   * reference element.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   *
   * **NOTE:** this modifier will interrupt the current update cycle and will
   * restart it if it detects the need to flip the placement.
   * @memberof modifiers
   * @inner
   */
  flip: {
    /** @prop {number} order=600 - Index used to define the order of execution */
    order: 600,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: flip,
    /**
     * @prop {String|Array} behavior='flip'
     * The behavior used to change the popper's placement. It can be one of
     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
     * placements (with optional variations)
     */
    behavior: 'flip',
    /**
     * @prop {number} padding=5
     * The popper will flip if it hits the edges of the `boundariesElement`
     */
    padding: 5,
    /**
     * @prop {String|HTMLElement} boundariesElement='viewport'
     * The element which will define the boundaries of the popper position.
     * The popper will never be placed outside of the defined boundaries
     * (except if `keepTogether` is enabled)
     */
    boundariesElement: 'viewport',
    /**
     * @prop {Boolean} flipVariations=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the reference element overlaps its boundaries.
     *
     * The original placement should have a set variation.
     */
    flipVariations: false,
    /**
     * @prop {Boolean} flipVariationsByContent=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the popper element overlaps its reference boundaries.
     *
     * The original placement should have a set variation.
     */
    flipVariationsByContent: false
  },

  /**
   * Modifier used to make the popper flow toward the inner of the reference element.
   * By default, when this modifier is disabled, the popper will be placed outside
   * the reference element.
   * @memberof modifiers
   * @inner
   */
  inner: {
    /** @prop {number} order=700 - Index used to define the order of execution */
    order: 700,
    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
    enabled: false,
    /** @prop {ModifierFn} */
    fn: inner
  },

  /**
   * Modifier used to hide the popper when its reference element is outside of the
   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
   * be used to hide with a CSS selector the popper when its reference is
   * out of boundaries.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   * @memberof modifiers
   * @inner
   */
  hide: {
    /** @prop {number} order=800 - Index used to define the order of execution */
    order: 800,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: hide
  },

  /**
   * Computes the style that will be applied to the popper element to gets
   * properly positioned.
   *
   * Note that this modifier will not touch the DOM, it just prepares the styles
   * so that `applyStyle` modifier can apply it. This separation is useful
   * in case you need to replace `applyStyle` with a custom implementation.
   *
   * This modifier has `850` as `order` value to maintain backward compatibility
   * with previous versions of Popper.js. Expect the modifiers ordering method
   * to change in future major versions of the library.
   *
   * @memberof modifiers
   * @inner
   */
  computeStyle: {
    /** @prop {number} order=850 - Index used to define the order of execution */
    order: 850,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: computeStyle,
    /**
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: true,
    /**
     * @prop {string} [x='bottom']
     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
     * Change this if your popper should grow in a direction different from `bottom`
     */
    x: 'bottom',
    /**
     * @prop {string} [x='left']
     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
     * Change this if your popper should grow in a direction different from `right`
     */
    y: 'right'
  },

  /**
   * Applies the computed styles to the popper element.
   *
   * All the DOM manipulations are limited to this modifier. This is useful in case
   * you want to integrate Popper.js inside a framework or view library and you
   * want to delegate all the DOM manipulations to it.
   *
   * Note that if you disable this modifier, you must make sure the popper element
   * has its position set to `absolute` before Popper.js can do its work!
   *
   * Just disable this modifier and define your own to achieve the desired effect.
   *
   * @memberof modifiers
   * @inner
   */
  applyStyle: {
    /** @prop {number} order=900 - Index used to define the order of execution */
    order: 900,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: applyStyle,
    /** @prop {Function} */
    onLoad: applyStyleOnLoad,
    /**
     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: undefined
  }
};

/**
 * The `dataObject` is an object containing all the information used by Popper.js.
 * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
 * @name dataObject
 * @property {Object} data.instance The Popper.js instance
 * @property {String} data.placement Placement applied to popper
 * @property {String} data.originalPlacement Placement originally defined on init
 * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
 * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper
 * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
 * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.boundaries Offsets of the popper boundaries
 * @property {Object} data.offsets The measurements of popper, reference and arrow elements
 * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
 */

/**
 * Default options provided to Popper.js constructor.<br />
 * These can be overridden using the `options` argument of Popper.js.<br />
 * To override an option, simply pass an object with the same
 * structure of the `options` object, as the 3rd argument. For example:
 * ```
 * new Popper(ref, pop, {
 *   modifiers: {
 *     preventOverflow: { enabled: false }
 *   }
 * })
 * ```
 * @type {Object}
 * @static
 * @memberof Popper
 */
var Defaults = {
  /**
   * Popper's placement.
   * @prop {Popper.placements} placement='bottom'
   */
  placement: 'bottom',

  /**
   * Set this to true if you want popper to position it self in 'fixed' mode
   * @prop {Boolean} positionFixed=false
   */
  positionFixed: false,

  /**
   * Whether events (resize, scroll) are initially enabled.
   * @prop {Boolean} eventsEnabled=true
   */
  eventsEnabled: true,

  /**
   * Set to true if you want to automatically remove the popper when
   * you call the `destroy` method.
   * @prop {Boolean} removeOnDestroy=false
   */
  removeOnDestroy: false,

  /**
   * Callback called when the popper is created.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onCreate}
   */
  onCreate: function onCreate() {},

  /**
   * Callback called when the popper is updated. This callback is not called
   * on the initialization/creation of the popper, but only on subsequent
   * updates.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onUpdate}
   */
  onUpdate: function onUpdate() {},

  /**
   * List of modifiers used to modify the offsets before they are applied to the popper.
   * They provide most of the functionalities of Popper.js.
   * @prop {modifiers}
   */
  modifiers: modifiers
};

/**
 * @callback onCreate
 * @param {dataObject} data
 */

/**
 * @callback onUpdate
 * @param {dataObject} data
 */

// Utils
// Methods
var Popper$2 = function () {
  /**
   * Creates a new Popper.js instance.
   * @class Popper
   * @param {Element|referenceObject} reference - The reference element used to position the popper
   * @param {Element} popper - The HTML / XML element used as the popper
   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
   * @return {Object} instance - The generated Popper.js instance
   */
  function Popper(reference, popper) {
    var _this = this;

    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    classCallCheck(this, Popper);

    this.scheduleUpdate = function () {
      return requestAnimationFrame(_this.update);
    };

    // make update() debounced, so that it only runs at most once-per-tick
    this.update = debounce$1(this.update.bind(this));

    // with {} we create a new object with the options inside it
    this.options = _extends$3({}, Popper.Defaults, options);

    // init state
    this.state = {
      isDestroyed: false,
      isCreated: false,
      scrollParents: []
    };

    // get reference and popper elements (allow jQuery wrappers)
    this.reference = reference && reference.jquery ? reference[0] : reference;
    this.popper = popper && popper.jquery ? popper[0] : popper;

    // Deep merge modifiers options
    this.options.modifiers = {};
    Object.keys(_extends$3({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {
      _this.options.modifiers[name] = _extends$3({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
    });

    // Refactoring modifiers' list (Object => Array)
    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {
      return _extends$3({
        name: name
      }, _this.options.modifiers[name]);
    })
    // sort the modifiers by order
    .sort(function (a, b) {
      return a.order - b.order;
    });

    // modifiers have the ability to execute arbitrary code when Popper.js get inited
    // such code is executed in the same order of its modifier
    // they could add new properties to their options configuration
    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!
    this.modifiers.forEach(function (modifierOptions) {
      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {
        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
      }
    });

    // fire the first update to position the popper in the right place
    this.update();

    var eventsEnabled = this.options.eventsEnabled;
    if (eventsEnabled) {
      // setup event listeners, they will take care of update the position in specific situations
      this.enableEventListeners();
    }

    this.state.eventsEnabled = eventsEnabled;
  }

  // We can't use class properties because they don't get listed in the
  // class prototype and break stuff like Sinon stubs


  createClass$6(Popper, [{
    key: 'update',
    value: function update$$1() {
      return update.call(this);
    }
  }, {
    key: 'destroy',
    value: function destroy$$1() {
      return destroy.call(this);
    }
  }, {
    key: 'enableEventListeners',
    value: function enableEventListeners$$1() {
      return enableEventListeners.call(this);
    }
  }, {
    key: 'disableEventListeners',
    value: function disableEventListeners$$1() {
      return disableEventListeners.call(this);
    }

    /**
     * Schedules an update. It will run on the next UI update available.
     * @method scheduleUpdate
     * @memberof Popper
     */


    /**
     * Collection of utilities useful when writing custom modifiers.
     * Starting from version 1.7, this method is available only if you
     * include `popper-utils.js` before `popper.js`.
     *
     * **DEPRECATION**: This way to access PopperUtils is deprecated
     * and will be removed in v2! Use the PopperUtils module directly instead.
     * Due to the high instability of the methods contained in Utils, we can't
     * guarantee them to follow semver. Use them at your own risk!
     * @static
     * @private
     * @type {Object}
     * @deprecated since version 1.8
     * @member Utils
     * @memberof Popper
     */

  }]);
  return Popper;
}();

/**
 * The `referenceObject` is an object that provides an interface compatible with Popper.js
 * and lets you use it as replacement of a real DOM node.<br />
 * You can use this method to position a popper relatively to a set of coordinates
 * in case you don't have a DOM node to use as reference.
 *
 * ```
 * new Popper(referenceObject, popperNode);
 * ```
 *
 * NB: This feature isn't supported in Internet Explorer 10.
 * @name referenceObject
 * @property {Function} data.getBoundingClientRect
 * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
 * @property {number} data.clientWidth
 * An ES6 getter that will return the width of the virtual reference element.
 * @property {number} data.clientHeight
 * An ES6 getter that will return the height of the virtual reference element.
 */


Popper$2.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
Popper$2.placements = placements;
Popper$2.Defaults = Defaults;

var PopperJS = Popper$2;

var Blanket = styled$1.div.withConfig({
  displayName: "ScrollBlock__Blanket",
  componentId: "sc-1xiww8k-0"
})(["\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: transparent;\n"]);
function ScrollBlock() {
  return React__default.createElement(Blanket, null, React__default.createElement(ScrollLock$1, null));
}

var positionMap = {
  'top left': {
    position: 'top-start',
    animation: 'top'
  },
  'top center': {
    position: 'top',
    animation: 'top'
  },
  'top right': {
    position: 'top-end',
    animation: 'top'
  },
  'right top': {
    position: 'right-start',
    animation: 'right'
  },
  'right middle': {
    position: 'right',
    animation: 'right'
  },
  'right bottom': {
    position: 'right-end',
    animation: 'right'
  },
  'bottom left': {
    position: 'bottom-start',
    animation: 'bottom'
  },
  'bottom center': {
    position: 'bottom',
    animation: 'bottom'
  },
  'bottom right': {
    position: 'bottom-end',
    animation: 'bottom'
  },
  'left top': {
    position: 'left-start',
    animation: 'left'
  },
  'left middle': {
    position: 'left',
    animation: 'left'
  },
  'left bottom': {
    position: 'left-end',
    animation: 'left'
  }
};
var POSITION_ATTRIBUTE_ENUM = {
  values: ['top left', 'top center', 'top right', 'right top', 'right middle', 'right bottom', 'bottom left', 'bottom center', 'bottom right', 'left top', 'left middle', 'left bottom'],
  default: 'right middle'
};

function positionToPopper(position) {
  return position && positionMap[position] ? positionMap[position].position : null;
}
/* Convert the autoFlip property into the array format that Popper expects.
 * The first item must not include the edge-position variation, or Popper will not understand it.
 */


function getFlipBehavior$1(props) {
  return props.position && Array.isArray(props.autoFlip) ? [props.position.split(' ')[0]].concat(props.autoFlip) : null;
}
function positionPropToPopperPosition(position) {
  return positionToPopper(position) || positionMap[POSITION_ATTRIBUTE_ENUM.default].position;
}

var ContentContainer = styled$1.div.withConfig({
  displayName: "styledContentContainer",
  componentId: "p0j3f7-0"
})(["\n  [data-role='droplistContent'] {\n    ", ";\n  }\n"], function (_ref) {
  var maxHeight = _ref.maxHeight;
  return maxHeight ? "max-height: ".concat(maxHeight, "px") : '';
});

// without affecting child layout of the actual target since children of fixed position elements can't use percentage
// heights/widths.

var FixedTarget = styled$1.div.withConfig({
  displayName: "Layer__FixedTarget",
  componentId: "qunuuz-0"
})(["\n  ", ";\n"], function (_ref) {
  var fixedOffset = _ref.fixedOffset,
      targetRef = _ref.targetRef;

  if (fixedOffset && targetRef) {
    var actualTarget = targetRef.firstChild;
    var rect = actualTarget.getBoundingClientRect();
    return "\n        position: fixed;\n        top: ".concat(fixedOffset.top, "px;\n        left: ").concat(fixedOffset.left, "px;\n        height: ").concat(rect.height, "px;\n        width: ").concat(rect.width, "px;\n        z-index: -1;\n      ");
  }

  return 'display: none;';
});

if (process.env.NODE_ENV !== 'production' && !process.env.CI) {
  // eslint-disable-next-line no-console
  console.warn('@atlaskit/layer has been deprecated. It is an internal component and should not be used directly.');
}

var Layer =
/*#__PURE__*/
function (_Component) {
  _inherits$8(Layer, _Component);

  // working with extract-react-types
  function Layer(props) {
    var _this;

    _classCallCheck$8(this, Layer);

    _this = _possibleConstructorReturn$8(this, _getPrototypeOf$2(Layer).call(this, props));

    _defineProperty$3(_assertThisInitialized$4(_this), "popper", void 0);

    _defineProperty$3(_assertThisInitialized$4(_this), "targetRef", void 0);

    _defineProperty$3(_assertThisInitialized$4(_this), "contentRef", void 0);

    _defineProperty$3(_assertThisInitialized$4(_this), "fixedRef", void 0);

    _defineProperty$3(_assertThisInitialized$4(_this), "extractStyles", function (state) {
      if (state) {
        var popperHeight = state.offsets.popper.height;
        var left = Math.round(state.offsets.popper.left); // The offset position is sometimes an object and sometimes just a string...

        var cssPosition = _typeof$3(state.offsets.popper.position) === 'object' ? state.offsets.popper.position.position : state.offsets.popper.position;

        var top = _this.fixPositionTopUnderflow(state.offsets.popper.top, cssPosition);

        var originalHeight = _this.state.originalHeight || popperHeight;

        var maxHeight = _this.calculateMaxHeight(originalHeight, popperHeight, top, cssPosition);

        _this.setState({
          // position: fixed or absolute
          cssPosition: cssPosition,
          hasExtractedStyles: true,
          transform: "translate3d(".concat(left, "px, ").concat(top, "px, 0px)"),
          // state.flipped is either true or undefined
          flipped: !!state.flipped,
          actualPosition: state.position,
          originalPosition: state.originalPosition,
          originalHeight: originalHeight,
          maxHeight: maxHeight
        });
      }
    });

    _this.state = {
      hasExtractedStyles: false,
      position: null,
      transform: null,
      flipped: false,
      actualPosition: null,
      // We set these default offsets to prevent a flash of popper content in the wrong position
      // which can cause incorrect height calculations. Popper will calculate these values
      offsets: {
        popper: {
          left: -9999,
          top: -9999
        }
      },
      originalPosition: null,
      // fix Safari parent width: https://product-fabric.atlassian.net/browse/ED-1784
      cssPosition: 'absolute',
      originalHeight: null,
      maxHeight: null,
      fixedOffset: null
    };
    _this.extractStyles = rafSchedule(_this.extractStyles.bind(_assertThisInitialized$4(_this)));
    return _this;
  }

  _createClass$8(Layer, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.applyPopper(this.props);
      this.calculateFixedOffset(this.props);
    }
  }, {
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(nextProps) {
      this.applyPopper(nextProps);
      this.calculateFixedOffset(nextProps);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      var _this$props = this.props,
          onFlippedChange = _this$props.onFlippedChange,
          onPositioned = _this$props.onPositioned;
      var _this$state = this.state,
          flipped = _this$state.flipped,
          actualPosition = _this$state.actualPosition,
          originalPosition = _this$state.originalPosition,
          hasExtractedStyles = _this$state.hasExtractedStyles;

      if (prevState.flipped !== flipped && onFlippedChange) {
        onFlippedChange({
          flipped: flipped,
          actualPosition: actualPosition,
          originalPosition: originalPosition
        });
      } // This flag is set the first time the position is calculated from Popper and applied to the content


      if (!prevState.hasExtractedStyles && hasExtractedStyles && onPositioned) {
        onPositioned();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.extractStyles.cancel();

      if (this.popper) {
        this.popper.destroy();
      }
    }
    /* Calculate the max height of the popper if it's height is greater than the viewport to prevent
     * the bottom of the popper not being viewable.
     * Only works if the popper uses viewport as the boundary and has a fixed position ancestor.
     */

  }, {
    key: "calculateMaxHeight",
    value: function calculateMaxHeight(originalHeight, currentHeight, positionTop, cssPosition) {
      var DocumentElementClientHeight = 0;

      if (document.documentElement) {
        DocumentElementClientHeight = document.documentElement.clientHeight;
      }

      if (cssPosition !== 'fixed' || this.props.boundariesElement !== 'viewport') {
        return null;
      }

      var viewportHeight = Math.max(DocumentElementClientHeight, window.innerHeight || 0);
      return viewportHeight < originalHeight && currentHeight + positionTop >= viewportHeight - 50 ? // allow some spacing either side of viewport height
      viewportHeight - 12 : null;
    }
    /* Popper may return either a fixed or absolute position which would be applied to the
     * content style. In order to overcome clipping issues for overflow containing blocks when
     * the position is absolute, we create a fixed position wrapper.
     */

  }, {
    key: "calculateFixedOffset",
    value: function calculateFixedOffset(props) {
      var isAlwaysFixed = props.isAlwaysFixed;

      if (isAlwaysFixed && this.targetRef) {
        var actualTarget = this.targetRef.firstChild;
        this.setState({
          fixedOffset: {
            top: actualTarget.getBoundingClientRect().top,
            left: actualTarget.getBoundingClientRect().left
          }
        });
      } else if (!isAlwaysFixed && this.state.fixedOffset !== null) {
        this.setState({
          fixedOffset: null
        });
      }
    }
    /* Clamp fixed position to the window for fixed position poppers that flow off the top of the
     * window.
     * A fixed position popper is a popper who has an ancestor with position: fixed.
     *
     * It is too difficult to fix this for non-fixed position poppers without re-implementing popper's
     * offset functionality or fixing the issue upstream.
     */
    // eslint-disable-next-line class-methods-use-this

  }, {
    key: "fixPositionTopUnderflow",
    value: function fixPositionTopUnderflow(popperTop, cssPosition) {
      return popperTop >= 0 || cssPosition !== 'fixed' ? Math.round(popperTop) : 0;
    }
  }, {
    key: "applyPopper",
    value: function applyPopper(props) {
      if (!this.fixedRef || !this.targetRef || !this.contentRef) {
        return;
      }

      if (this.popper) {
        this.popper.destroy();
      } // "new Popper(...)" operation is very expensive when called on virtual DOM.
      // This condition reduces the number of calls so we can run our tests faster
      // (time was reduced from 100s to 13s).


      if (!props.content) {
        return;
      } // we wrap our target in a div so that we can safely get a reference to it, but we pass the
      // actual target to popper


      var actualTarget = props.isAlwaysFixed ? this.fixedRef : this.targetRef.firstChild;
      var popperOpts = {
        placement: positionPropToPopperPosition(props.position),
        onCreate: this.extractStyles,
        onUpdate: this.extractStyles,
        modifiers: {
          applyStyle: {
            enabled: false
          },
          hide: {
            enabled: false
          },
          offset: {
            enabled: true,
            offset: this.props.offset
          },
          flip: {
            enabled: !!this.props.autoFlip,
            flipVariations: true,
            boundariesElement: this.props.boundariesElement,
            padding: 0 // leave 0 pixels between popper and the boundariesElement

          },
          preventOverflow: {
            enabled: !!this.props.autoFlip,
            escapeWithReference: !(this.props.boundariesElement === 'scrollParent')
          }
        },
        positionFixed: props.isAlwaysFixed
      };
      var flipBehavior = getFlipBehavior$1(props);

      if (flipBehavior) {
        popperOpts.modifiers.flip.behavior = flipBehavior;
      }

      this.popper = new PopperJS(actualTarget, this.contentRef, popperOpts);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props2 = this.props,
          zIndex = _this$props2.zIndex,
          lockScroll = _this$props2.lockScroll;
      var _this$state2 = this.state,
          cssPosition = _this$state2.cssPosition,
          transform = _this$state2.transform,
          hasExtractedStyles = _this$state2.hasExtractedStyles,
          maxHeight = _this$state2.maxHeight,
          fixedOffset = _this$state2.fixedOffset;
      var opacity = hasExtractedStyles ? {} : {
        opacity: 0
      };
      return React__default.createElement("div", null, React__default.createElement("div", {
        ref: function ref(_ref2) {
          _this2.targetRef = _ref2;
        }
      }, this.props.children), React__default.createElement(FixedTarget, {
        targetRef: this.targetRef,
        fixedOffset: fixedOffset
      }, React__default.createElement("div", {
        style: {
          height: '100%',
          width: '100%'
        },
        ref: function ref(_ref3) {
          _this2.fixedRef = _ref3;
        }
      })), lockScroll && React__default.createElement(ScrollBlock, null), React__default.createElement(ContentContainer, {
        maxHeight: maxHeight
      }, React__default.createElement("div", {
        ref: function ref(_ref4) {
          _this2.contentRef = _ref4;
        },
        style: _objectSpread$q({
          top: 0,
          left: 0,
          position: cssPosition,
          transform: transform,
          zIndex: zIndex
        }, opacity)
      }, this.props.content)));
    }
  }]);

  return Layer;
}(Component$1);

_defineProperty$3(Layer, "defaultProps", {
  autoFlip: true,
  boundariesElement: 'viewport',
  children: null,
  content: null,
  offset: '0, 0',
  onFlippedChange: function onFlippedChange() {},
  position: 'right middle',
  zIndex: 400,
  lockScroll: false,
  isAlwaysFixed: false,
  onPositioned: function onPositioned() {}
});

/* When dropdown contains more than 9 elements (droplist items, droplist groups),
 * it should have scroll and cut off half of the 10th item to indicate that there are more
 * items then are seen. This was previously calculated by mapping over children, but with
 * the current composed API it is simpler to just assume 9 items. */

var getMaxHeight = function getMaxHeight(_ref) {
  var isTall = _ref.isTall,
      maxHeight = _ref.maxHeight;
  if (maxHeight) return "".concat(maxHeight, "px");
  var heightWithoutPadding = 17;
  var verticalPadding = gridSize$5();
  var height = heightWithoutPadding + verticalPadding * 2;
  var defaultMaxHeight = 9.5 * height + verticalPadding / 2;
  return isTall ? '90vh' : "".concat(defaultMaxHeight, "px");
};

var Wrapper$1 = styled$1.div.withConfig({
  displayName: "Droplist",
  componentId: "sc-1z05y4v-0"
})(["\n  display: inline-flex;\n\n  ", ";\n"], function (props) {
  return props.fit && "\n    display: block;\n    flex: 1 1 auto;\n  ";
});
var backgroundColor$2 = backgroundOnLayer;
var boxShadow = css$3(["\n  box-shadow: 0 ", "px ", "px -", "px\n      ", ",\n    0 0 1px ", ";\n"], divide(gridSize$5, 2), gridSize$5, divide(gridSize$5, 4), N50A$1, N60A$1);
var Content$2 = styled$1.div.withConfig({
  displayName: "Droplist__Content",
  componentId: "sc-1z05y4v-1"
})(["\n  background: ", ";\n  border-radius: ", "px;\n  ", ";\n  box-sizing: border-box;\n  overflow: auto;\n  padding: ", "px 0;\n  max-height: ", ";\n"], backgroundColor$2, borderRadius$5, boxShadow, divide(gridSize$5, 2), getMaxHeight);
var SpinnerContainer = styled$1.div.withConfig({
  displayName: "Droplist__SpinnerContainer",
  componentId: "sc-1z05y4v-2"
})(["\n  display: flex;\n  justify-content: center;\n  min-width: ", "px;\n  padding: ", "px;\n"], multiply(gridSize$5, 20), multiply(gridSize$5, 2.5));
var Trigger = styled$1.div.withConfig({
  displayName: "Droplist__Trigger",
  componentId: "sc-1z05y4v-3"
})(["\n  display: inline-flex;\n  transition-duration: 0.2s;\n  transition: box-shadow 0.15s cubic-bezier(0.47, 0.03, 0.49, 1.38);\n\n  ", ";\n"], function (props) {
  return props.fit && "\n    box-sizing: border-box;\n    display: block;\n  ";
});

var themeNamespace = '@atlaskit-shared-theme/item'; // Used for Group titles and Item descriptions

var compactSmallFontSize = 10;
var compactLineHeight = 1.2;
var gridSize = gridSize$5();
var defaultTheme = {
  afterItemSpacing: {
    compact: gridSize$5(),
    default: gridSize$5()
  },
  beforeItemSpacing: {
    compact: gridSize$5(),
    default: gridSize$5()
  },
  borderRadius: borderRadius$5(),
  focus: {
    outline: B100$3
  },
  height: {
    compact: 0,
    default: 0
  },
  width: {
    compact: 'auto',
    default: 'auto'
  },
  padding: {
    default: {
      bottom: gridSize$5() / 2,
      left: gridSize$5() / 2,
      right: gridSize$5() / 2,
      top: gridSize$5() / 2
    },
    compact: {
      bottom: gridSize$5(),
      left: gridSize$5(),
      right: gridSize$5(),
      top: gridSize$5()
    }
  },
  default: {
    background: background,
    text: text$1,
    secondaryText: N200$2
  },
  selected: {
    background: backgroundActive,
    text: N500$4,
    secondaryText: N200$2
  },
  active: {
    background: backgroundActive,
    text: textActive,
    secondaryText: N200$2
  },
  hover: {
    background: backgroundHover,
    text: textHover,
    secondaryText: N200$2
  },
  disabled: {
    background: N0$7,
    text: N200$2,
    secondaryText: N200$2
  },
  // same as hover in this case
  dragging: {
    background: N20$3,
    text: N800$2,
    secondaryText: N200$2
  }
};

var isValidCssValue = function isValidCssValue(value) {
  return value !== undefined && value !== null && value !== '';
}; // Returns the theme that contains the requested theme key(s), preferring the user-supplied
// theme if it is provided.


var themeWithKeys = function themeWithKeys(maybeTheme, key, parentKey) {
  if (parentKey) {
    return maybeTheme && maybeTheme[parentKey] && isValidCssValue(maybeTheme[parentKey][key]) ? maybeTheme : defaultTheme;
  }

  return maybeTheme && isValidCssValue(maybeTheme[key]) ? maybeTheme : defaultTheme;
}; // Returns the theme value for the requested key(s), falling back to the default theme if the
// user-supplied theme doesn't exist or doesn't contain the requested key(s)

var getThemeStyle = function getThemeStyle(maybeTheme, key, parentKey) {
  var theme = themeWithKeys(maybeTheme, key, parentKey);
  return parentKey ? theme[parentKey][key] : theme[key];
};

var getItemState = function getItemState(stateName) {
  return function (_ref) {
    var theme = _ref.theme;
    var stateStyles = getThemeStyle(theme[themeNamespace], stateName);
    return css$3(["\n    background-color: ", ";\n    color: ", ";\n    fill: ", ";\n    text-decoration: none;\n\n    &:focus {\n      color: ", ";\n    }\n  "], stateStyles.background, stateStyles.text, stateStyles.background, stateStyles.text);
  };
};

var getPadding$1 = function getPadding(_ref2) {
  var isCompact = _ref2.isCompact,
      theme = _ref2.theme,
      description = _ref2.description;
  var paddingKey = isCompact ? 'compact' : 'default';

  var _getThemeStyle = getThemeStyle(theme[themeNamespace], paddingKey, 'padding'),
      _getThemeStyle$bottom = _getThemeStyle.bottom,
      bottom = _getThemeStyle$bottom === void 0 ? 0 : _getThemeStyle$bottom,
      _getThemeStyle$left = _getThemeStyle.left,
      left = _getThemeStyle$left === void 0 ? 0 : _getThemeStyle$left,
      _getThemeStyle$right = _getThemeStyle.right,
      right = _getThemeStyle$right === void 0 ? 0 : _getThemeStyle$right,
      _getThemeStyle$top = _getThemeStyle.top,
      top = _getThemeStyle$top === void 0 ? 0 : _getThemeStyle$top;

  var adjustedTop = typeof top === 'function' ? top() : top;
  var adjustedBottom = typeof bottom === 'function' ? bottom() : bottom; // Subtract the 1px padding-bottom added to the content and description elements
  // to maintain original height

  adjustedTop = Math.max(description ? adjustedTop - 1 : adjustedTop, 0);
  adjustedBottom = Math.max(adjustedBottom - 1, 0);
  return css$3(["\n    padding: ", "px ", "px ", "px ", "px;\n  "], adjustedTop, right, adjustedBottom, left);
};

var getHeightStyles = function getHeightStyles(_ref3) {
  var isCompact = _ref3.isCompact,
      theme = _ref3.theme;
  var heightKey = isCompact ? 'compact' : 'default';
  var height = getThemeStyle(theme[themeNamespace], heightKey, 'height');
  return height ? css$3(["\n        height: ", "px;\n      "], height) : '';
};

var getWidthStyles = function getWidthStyles(_ref4) {
  var isCompact = _ref4.isCompact,
      theme = _ref4.theme;
  var widthKey = isCompact ? 'compact' : 'default';
  var width = getThemeStyle(theme[themeNamespace], widthKey, 'width');

  if (!width) {
    return '';
  }

  return typeof width === 'number' ? css$3(["\n        width: ", "px;\n      "], width) : css$3(["\n        width: ", ";\n      "], width);
}; // This function is responsible for drawing any focus styles for the element


var getInteractiveStyles = function getInteractiveStyles(_ref5) {
  var theme = _ref5.theme,
      isDisabled = _ref5.isDisabled,
      isDragging = _ref5.isDragging,
      isSelected = _ref5.isSelected;

  if (isDragging) {
    return css$3(["\n      ", " box-shadow: 0 4px 8px -2px ", ",\n        0 0 1px ", ";\n    "], getItemState('dragging'), N60A$1, N60A$1);
  }

  var standardFocus = css$3(["\n    &:focus {\n      box-shadow: 0 0 0 2px\n        ", " inset;\n      text-decoration: none;\n    }\n  "], getThemeStyle(theme[themeNamespace], 'outline', 'focus'));

  if (isDisabled) {
    return css$3(["\n      cursor: not-allowed;\n      ", " ", ";\n    "], getItemState('disabled'), standardFocus);
  }

  if (isSelected) {
    return css$3(["\n      ", " &:hover {\n        ", ";\n      }\n\n      &:active {\n        ", ";\n      }\n\n      ", ";\n    "], getItemState('selected'), getItemState('hover'), getItemState('active'), standardFocus);
  }

  return css$3(["\n    &:hover {\n      ", ";\n    }\n\n    &:active {\n      ", ";\n    }\n\n    ", ";\n  "], getItemState('hover'), getItemState('active'), standardFocus);
}; // This is the main item style. It is defined as a basic style variable so it can
// later be applied to different component types (span / a / custom link component)


var ItemBase = function ItemBase(_ref6) {
  var theme = _ref6.theme;
  return css$3(["\n  && {\n    align-items: center;\n    border-radius: ", "px;\n    box-sizing: border-box;\n    cursor: pointer;\n    display: ", ";\n    flex: none;\n    ", " ", " ", " ", " ", " &:focus {\n      /* focus shadow drawn by getInteractiveStyles */\n\n      outline: none;\n      /* relative position prevents bgcolor of a hovered element from\n      obfuscating focus ring of a focused sibling element */\n      position: relative;\n    }\n  }\n"], getThemeStyle(theme[themeNamespace], 'borderRadius'), function (_ref7) {
    var isHidden = _ref7.isHidden;
    return isHidden ? 'none' : 'flex';
  }, getItemState('default'), getPadding$1, getInteractiveStyles, getHeightStyles, getWidthStyles);
}; // Given some optional link-related props, returns the relevant styled
// component. For links, it styles the linkComponent if provided, otherwise
// falling back to a styled <a> tag. If no href is present, a styled <span>
// is returned. When we upgrade to styled-components@2.x we will be able to
// simplify this by taking advantage of the withComponent() functionality.

var styledRootElement = function styledRootElement(_ref8) {
  var href = _ref8.href,
      linkComponent = _ref8.linkComponent;

  if (linkComponent) {
    return styled$1(linkComponent).withConfig({
      displayName: "Item",
      componentId: "z6qfkt-0"
    })(["\n      ", ";\n    "], ItemBase);
  }

  if (href) {
    return styled$1.a.withConfig({
      displayName: "Item",
      componentId: "z6qfkt-1"
    })(["\n      ", ";\n    "], ItemBase);
  }

  return styled$1.span.withConfig({
    displayName: "Item",
    componentId: "z6qfkt-2"
  })(["\n    ", ";\n  "], ItemBase);
};

var styledRootElement$1 = styledRootElement;

styled$1.span.withConfig({
  displayName: "ItemParts__InputWrapper",
  componentId: "sc-14xek3m-0"
})(["\n  display: flex;\n  margin: 0 2px;\n"]); // Elements injected before/after the children

var BeforeAfterBase = styled$1.span.withConfig({
  displayName: "ItemParts__BeforeAfterBase",
  componentId: "sc-14xek3m-1"
})(["\n  align-items: center;\n  display: flex;\n  flex-shrink: 0;\n  /* Fix windows line-height issue */\n  padding-bottom: 1px;\n"]);

var getBeforeSpacing = function getBeforeSpacing(_ref) {
  var isCompact = _ref.isCompact,
      theme = _ref.theme;
  var spaceKey = isCompact ? 'compact' : 'default';
  var space = getThemeStyle(theme[themeNamespace], spaceKey, 'beforeItemSpacing');
  return css$3(["\n    margin-right: ", "px;\n  "], space);
};

var Before$1 = styled$1(BeforeAfterBase).withConfig({
  displayName: "ItemParts__Before",
  componentId: "sc-14xek3m-2"
})(["\n  ", ";\n"], getBeforeSpacing);

var getAfterSpacing = function getAfterSpacing(_ref2) {
  var isCompact = _ref2.isCompact,
      theme = _ref2.theme;
  var spaceKey = isCompact ? 'compact' : 'default';
  var space = getThemeStyle(theme[themeNamespace], spaceKey, 'afterItemSpacing');
  return css$3(["\n    margin-left: ", "px;\n  "], space);
};

var After$1 = styled$1(BeforeAfterBase).withConfig({
  displayName: "ItemParts__After",
  componentId: "sc-14xek3m-3"
})(["\n  ", ";\n"], getAfterSpacing); // Alignment and layout for the children

var ContentWrapper$1 = styled$1.span.withConfig({
  displayName: "ItemParts__ContentWrapper",
  componentId: "sc-14xek3m-4"
})(["\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  margin: 0;\n  overflow: hidden;\n\n  &:first-child {\n    margin: 0;\n  }\n"]);
var Content$1 = styled$1.span.withConfig({
  displayName: "ItemParts__Content",
  componentId: "sc-14xek3m-5"
})(["\n  display: block;\n  flex: 1 1 auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: ", ";\n  line-height: ", ";\n  /* Fix windows line-height issue */\n  padding-bottom: 1px;\n"], function (_ref3) {
  var allowMultiline = _ref3.allowMultiline;
  return allowMultiline ? 'normal' : 'nowrap';
}, 16 / fontSize$5());

var getColorStyle = function getColorStyle(_ref4) {
  var isDisabled = _ref4.isDisabled,
      theme = _ref4.theme;

  if (isDisabled) {
    return css$3(["\n      color: ", ";\n    "], getThemeStyle(theme[themeNamespace], 'secondaryText', 'disabled'));
  }

  return css$3(["\n    color: ", ";\n\n    /* This detects hover on the grandparent. Saves us having to maintain isHovered\n       state in the grandparent. */\n    *:hover > * > & {\n      color: ", ";\n    }\n\n    *:active > * > & {\n      color: ", ";\n    }\n  "], getThemeStyle(theme[themeNamespace], 'secondaryText', 'default'), function () {
    return getThemeStyle(theme[themeNamespace], 'secondaryText', 'hover');
  }, function () {
    return getThemeStyle(theme[themeNamespace], 'secondaryText', 'active');
  });
};

var getDescriptionFontStyles = function getDescriptionFontStyles(_ref5) {
  var isCompact = _ref5.isCompact;
  var descriptionFontSize = isCompact ? compactSmallFontSize : fontSizeSmall();
  var lineHeight = isCompact ? compactLineHeight : 14 / descriptionFontSize;
  return css$3(["\n    font-size: ", "px;\n    line-height: ", ";\n    /* Fix windows line-height issue */\n    padding-bottom: 1px;\n  "], descriptionFontSize, lineHeight);
}; // Description is a block element below the children, like a subtitle


var Description$1 = styled$1.span.withConfig({
  displayName: "ItemParts__Description",
  componentId: "sc-14xek3m-6"
})(["\n  flex: 1 1 auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  ", " ", ";\n"], getColorStyle, getDescriptionFontStyles);

var Item$2 =
/*#__PURE__*/
function (_Component) {
  _inherits$8(Item, _Component);

  function Item(props) {
    var _this;

    _classCallCheck$8(this, Item);

    _this = _possibleConstructorReturn$8(this, _getPrototypeOf$2(Item).call(this, props)); // The type of element rendered at the root of render() can vary based on the `href`
    // and `linkComponent` props provided. We generate this component here to avoid re-
    // generating the component inside render(). This is for performance reasons, and also
    // allows us to avoid generating a new `ref` for the root element each render().

    _defineProperty$3(_assertThisInitialized$4(_this), "setRef", function (ref) {
      _this.ref = ref;
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "href", function () {
      return _this.props.isDisabled ? null : _this.props.href;
    });

    _this.rootComponent = styledRootElement$1({
      href: _this.href(),
      linkComponent: props.linkComponent
    });
    return _this;
  }

  _createClass$8(Item, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.ref && this.props.autoFocus) {
        this.ref.focus();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          _onClick = _this$props.onClick,
          _onKeyDown = _this$props.onKeyDown,
          isCompact = _this$props.isCompact,
          isDisabled = _this$props.isDisabled,
          isDragging = _this$props.isDragging,
          isHidden = _this$props.isHidden,
          isSelected = _this$props.isSelected,
          onMouseEnter = _this$props.onMouseEnter,
          onMouseLeave = _this$props.onMouseLeave,
          role = _this$props.role,
          dnd = _this$props.dnd,
          otherProps = _objectWithoutProperties$3(_this$props, ["onClick", "onKeyDown", "isCompact", "isDisabled", "isDragging", "isHidden", "isSelected", "onMouseEnter", "onMouseLeave", "role", "dnd"]);

      var Root = this.rootComponent;
      var dragHandleProps = dnd && dnd.dragHandleProps || null;
      var patchedEventHandlers = {
        onClick: function onClick(event) {
          // rbd will use event.preventDefault() to block clicks that are used
          // as a part of the drag and drop lifecycle.
          if (event.defaultPrevented) {
            return;
          }

          if (!isDisabled && _onClick) {
            _onClick(event);
          }
        },
        onMouseDown: function onMouseDown(event) {
          // rbd 11.x support
          if (dragHandleProps && dragHandleProps.onMouseDown) {
            dragHandleProps.onMouseDown(event);
          } // We want to prevent the item from getting focus when clicked


          event.preventDefault();
        },
        onKeyDown: function onKeyDown(event) {
          // swallowing keyboard events on the element while dragging
          // rbd should already be doing this - but we are being really clear here
          if (isDragging) {
            return;
          } // rbd 11.x support


          if (dragHandleProps && dragHandleProps.onKeyDown) {
            dragHandleProps.onKeyDown(event);
          } // if default is prevented - do not fire other handlers
          // this can happen if the event is used for drag and drop by rbd


          if (event.defaultPrevented) {
            return;
          } // swallowing event if disabled


          if (isDisabled) {
            return;
          }

          if (!_onKeyDown) {
            return;
          }

          _onKeyDown(event);
        }
      };

      var patchedInnerRef = function patchedInnerRef(ref) {
        _this2.setRef(ref); // give rbd the inner ref too


        if (dnd && dnd.innerRef) {
          dnd.innerRef(ref);
        }
      };

      return React__default.createElement(Root, _extends$d({
        "aria-disabled": isDisabled,
        href: this.href(),
        isCompact: isCompact,
        isDisabled: isDisabled,
        isDragging: isDragging,
        isHidden: isHidden,
        isSelected: isSelected,
        onMouseEnter: onMouseEnter,
        onMouseLeave: onMouseLeave,
        role: role,
        tabIndex: isDisabled || isHidden || this.props.href ? null : 0,
        target: this.props.target,
        title: this.props.title,
        innerRef: patchedInnerRef
      }, dnd && dnd.draggableProps, dragHandleProps, patchedEventHandlers, otherProps), !!this.props.elemBefore && React__default.createElement(Before$1, {
        isCompact: isCompact
      }, this.props.elemBefore), React__default.createElement(ContentWrapper$1, null, React__default.createElement(Content$1, {
        allowMultiline: this.props.shouldAllowMultiline
      }, this.props.children), !!this.props.description && React__default.createElement(Description$1, {
        isCompact: this.props.isCompact,
        isDisabled: this.props.isDisabled
      }, this.props.description)), !!this.props.elemAfter && React__default.createElement(After$1, {
        isCompact: isCompact
      }, this.props.elemAfter));
    }
  }]);

  return Item;
}(Component$1);

_defineProperty$3(Item$2, "defaultProps", {
  autoFocus: false,
  description: '',
  isCompact: false,
  isDisabled: false,
  isHidden: false,
  role: 'button',
  shouldAllowMultiline: false
});

function getText(rootChild) {
  var res = '';
  var rr = function rr(child) {
    if (typeof child === 'string' || typeof child === 'number') {
      res += child;
    } else if (Array.isArray(child)) {
      child.forEach(function (c) {
        return rr(c);
      });
    } else if (child && child.props) {
      var children = child.props.children;


      if (Array.isArray(children)) {
        children.forEach(function (c) {
          return rr(c);
        });
      } else {
        rr(children);
      }
    }
  };

  rr(rootChild);

  return res;
}

var reactAddonsTextContent = getText;

var getPadding = function getPadding(_ref) {
  var isCompact = _ref.isCompact,
      theme = _ref.theme;
  var paddingType = isCompact ? 'compact' : 'default';

  var _getThemeStyle = getThemeStyle(theme[themeNamespace], paddingType, 'padding'),
      _getThemeStyle$bottom = _getThemeStyle.bottom,
      bottom = _getThemeStyle$bottom === void 0 ? 0 : _getThemeStyle$bottom,
      _getThemeStyle$left = _getThemeStyle.left,
      left = _getThemeStyle$left === void 0 ? 0 : _getThemeStyle$left,
      _getThemeStyle$right = _getThemeStyle.right,
      right = _getThemeStyle$right === void 0 ? 0 : _getThemeStyle$right,
      _getThemeStyle$top = _getThemeStyle.top,
      top = _getThemeStyle$top === void 0 ? 0 : _getThemeStyle$top;

  return css$3(["\n    padding: ", "px ", "px ", "px ", "px;\n  "], top, right, bottom, left);
}; // eslint-disable-next-line import/prefer-default-export


var GroupTitle = styled$1.div.withConfig({
  displayName: "ItemGroup__GroupTitle",
  componentId: "ofbfv9-0"
})(["\n  align-items: center;\n  color: ", ";\n  display: flex;\n  flex: 1 1 auto;\n  ", ";\n"], function (_ref2) {
  var theme = _ref2.theme;
  return getThemeStyle(theme[themeNamespace], 'secondaryText', 'default');
}, getPadding);
GroupTitle.displayName = 'ItemGroupTitle';
var GroupTitleAfter = styled$1.div.withConfig({
  displayName: "ItemGroup__GroupTitleAfter",
  componentId: "ofbfv9-1"
})(["\n  flex: 0 0 auto;\n  margin-right: -", "px;\n"], gridSize / 2);
GroupTitleAfter.displayName = 'ItemGroupTitleAfter';
var GroupTitleText = styled$1.div.withConfig({
  displayName: "ItemGroup__GroupTitleText",
  componentId: "ofbfv9-2"
})(["\n  flex: 1 1 auto;\n  font-size: ", "px;\n  line-height: 1;\n  text-transform: uppercase;\n  /* Required for children to truncate */\n  min-width: 0;\n"], fontSizeSmall);
GroupTitleText.displayName = 'ItemGroupTitleText';

var ItemGroup =
/*#__PURE__*/
function (_Component) {
  _inherits$8(ItemGroup, _Component);

  function ItemGroup() {
    _classCallCheck$8(this, ItemGroup);

    return _possibleConstructorReturn$8(this, _getPrototypeOf$2(ItemGroup).apply(this, arguments));
  }

  _createClass$8(ItemGroup, [{
    key: "render",
    value: function render() {
      var _this = this;

      var _this$props = this.props,
          children = _this$props.children,
          elemAfter = _this$props.elemAfter,
          isCompact = _this$props.isCompact,
          title = _this$props.title,
          label = _this$props.label,
          innerRef = _this$props.innerRef,
          role = _this$props.role;

      var ariaLabel = function () {
        if (label) {
          return reactAddonsTextContent(label);
        }

        if (title) {
          return reactAddonsTextContent(title);
        }

        return '';
      }();

      return React__default.createElement("div", {
        "aria-label": ariaLabel,
        role: role,
        ref: innerRef
      }, title ? React__default.createElement(GroupTitle, {
        "aria-hidden": "true",
        isCompact: isCompact
      }, React__default.createElement(GroupTitleText, null, title), elemAfter ? React__default.createElement(GroupTitleAfter, {
        innerRef: function innerRef(r) {
          _this.headingAfterElement = r;
        }
      }, elemAfter) : null) : null, children);
    }
  }]);

  return ItemGroup;
}(Component$1);

_defineProperty$3(ItemGroup, "defaultProps", {
  role: 'group'
});

// from https://facebook.github.io/react/docs/higher-order-components.html
var getDisplayName = function getDisplayName(WrappedComponent) {
  return WrappedComponent.displayName || WrappedComponent.name || 'Component';
};

var getDisplayName$1 = getDisplayName;

// There are cases where the context is not available, such as when a dropdown item is used
// inside @atlaskit/navigation. For this reason we have this helper function which safely calls
// the context functions if they are available.
var safeContextCall = (function (instance, contextKey) {
  return function (fnToCall) {
    var _instance$context$con;

    if (!instance.context[contextKey]) {
      return null;
    }

    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return (_instance$context$con = instance.context[contextKey])[fnToCall].apply(_instance$context$con, args);
  };
});

var prefix$1 = function prefix(key) {
  return "@atlaskit-private-do-not-use/dropdown-menu:".concat(key);
};

var focusManagerContext$1 = prefix$1('focus-manager');
var clickManagerContext$1 = prefix$1('click-manager');

var withItemClick = function withItemClick(WrappedItem) {
  var _class, _temp;

  return _temp = _class =
  /*#__PURE__*/
  function (_Component) {
    _inherits$8(WithItemClick, _Component);

    function WithItemClick() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck$8(this, WithItemClick);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn$8(this, (_getPrototypeOf2 = _getPrototypeOf$2(WithItemClick)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _defineProperty$3(_assertThisInitialized$4(_this), "callContextFn", safeContextCall(_assertThisInitialized$4(_this), clickManagerContext$1));

      _defineProperty$3(_assertThisInitialized$4(_this), "shouldCloseAfterClick", function () {
        return !_this.props.isDisabled && !_this.props.href;
      });

      _defineProperty$3(_assertThisInitialized$4(_this), "handleClick", function (event) {
        _this.props.onClick(event);

        if (_this.shouldCloseAfterClick()) {
          _this.callContextFn('itemClicked');
        }
      });

      _defineProperty$3(_assertThisInitialized$4(_this), "handleKeyDown", function (event) {
        if (_this.props.onKeyDown) {
          _this.props.onKeyDown(event);
        } else if (event.key === 'Space' || event.key === 'Enter') {
          _this.handleClick(event);
        }
      });

      return _this;
    }

    _createClass$8(WithItemClick, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            children = _this$props.children,
            otherProps = _objectWithoutProperties$3(_this$props, ["children"]);

        return React__default.createElement(WrappedItem, _extends$d({}, otherProps, {
          onClick: this.handleClick,
          onKeyDown: this.handleKeyDown
        }), children);
      }
    }]);

    return WithItemClick;
  }(Component$1), _defineProperty$3(_class, "displayName", "WithItemClick(".concat(getDisplayName$1(WrappedItem), ")")), _defineProperty$3(_class, "defaultProps", {
    onClick: function onClick() {}
  }), _defineProperty$3(_class, "contextTypes", _defineProperty$3({}, clickManagerContext$1, PropTypes$3.object)), _temp;
};

var withItemClick$1 = withItemClick;

var withItemFocus = function withItemFocus(WrappedComponent) {
  var _class, _temp;

  return _temp = _class =
  /*#__PURE__*/
  function (_Component) {
    _inherits$8(WithItemFocus, _Component);

    function WithItemFocus() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck$8(this, WithItemFocus);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn$8(this, (_getPrototypeOf2 = _getPrototypeOf$2(WithItemFocus)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _defineProperty$3(_assertThisInitialized$4(_this), "contextId", void 0);

      _defineProperty$3(_assertThisInitialized$4(_this), "callContextFn", safeContextCall(_assertThisInitialized$4(_this), focusManagerContext$1));

      _defineProperty$3(_assertThisInitialized$4(_this), "isFocusable", function () {
        return !_this.props.isDisabled && !_this.props.isHidden;
      });

      _defineProperty$3(_assertThisInitialized$4(_this), "handleFocus", function () {
        if (_this.isFocusable()) {
          _this.callContextFn('itemFocused', _this.contextId);
        }
      });

      return _this;
    }

    _createClass$8(WithItemFocus, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (!this.isFocusable()) {
          return;
        }

        this.contextId = uuid_1();
        this.callContextFn('registerItem', this.contextId, ReactDOM.findDOMNode(this) // eslint-disable-line react/no-find-dom-node
        );
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate() {
        if (!this.isFocusable()) {
          return;
        }

        this.callContextFn('updateItem', this.contextId, ReactDOM.findDOMNode(this) // eslint-disable-line react/no-find-dom-node
        );
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this.isFocusable()) {
          this.callContextFn('deregisterItem', this.contextId);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            children = _this$props.children,
            otherProps = _objectWithoutProperties$3(_this$props, ["children"]);

        return React__default.createElement(WrappedComponent, _extends$d({
          onFocus: this.handleFocus,
          role: "menuitem"
        }, otherProps), children);
      }
    }]);

    return WithItemFocus;
  }(Component$1), _defineProperty$3(_class, "displayName", "WithItemFocus(".concat(getDisplayName$1(WrappedComponent), ")")), _defineProperty$3(_class, "contextTypes", _defineProperty$3({}, focusManagerContext$1, PropTypes$3.object)), _temp;
};

var withItemFocus$1 = withItemFocus;

var dropdownPadding = {
  bottom: gridSize$5,
  left: multiply(gridSize$5, 1.5),
  right: multiply(gridSize$5, 1.5),
  top: gridSize$5
};
var droplistItemTheme = {
  padding: {
    default: dropdownPadding,
    compact: dropdownPadding
  },
  borderRadius: function borderRadius() {
    return 0;
  },
  default: {
    background: themed$3({
      light: N0$7,
      dark: DN50$1
    }),
    text: themed$3({
      light: N800$2,
      dark: DN600$2
    }),
    secondaryText: themed$3({
      light: N200$2,
      dark: DN300$1
    })
  },
  hover: {
    background: themed$3({
      light: N20$3,
      dark: DN70
    }),
    text: themed$3({
      light: N800$2,
      dark: DN600$2
    }),
    secondaryText: themed$3({
      light: N200$2,
      dark: DN300$1
    })
  },
  active: {
    background: themed$3({
      light: B75$2,
      dark: B75$2
    }),
    text: themed$3({
      light: N800$2,
      dark: B400
    }),
    secondaryText: themed$3({
      light: N200$2,
      dark: DN300$1
    })
  },
  selected: {
    background: 'transparent',
    text: themed$3({
      light: N800$2,
      dark: DN600$2
    }),
    secondaryText: themed$3({
      light: N200$2,
      dark: DN300$1
    })
  },
  disabled: {
    background: 'transparent',
    text: themed$3({
      light: N70$3,
      dark: DN80
    }),
    secondaryText: themed$3({
      light: N50$1,
      dark: DN70
    })
  },
  focus: {
    outline: themed$3({
      light: B100$3,
      dark: B75$2
    })
  }
};
var itemTheme = _defineProperty$3({}, themeNamespace, droplistItemTheme);

var name$3="@atlaskit/droplist";var version$3="10.0.8";

var halfFocusRing = 1;
var dropOffset = "0, ".concat(gridSize$5(), "px");

if (process.env.NODE_ENV !== 'production' && !process.env.CI) {
  // eslint-disable-next-line no-console
  console.warn('@atlaskit/droplist has been deprecated. It is an internal component and should not be used directly.');
}

var Droplist =
/*#__PURE__*/
function (_Component) {
  _inherits$8(Droplist, _Component);

  function Droplist() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck$8(this, Droplist);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn$8(this, (_getPrototypeOf2 = _getPrototypeOf$2(Droplist)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty$3(_assertThisInitialized$4(_this), "componentDidMount", function () {
      _this.setContentWidth(); // We use a captured event here to avoid a radio or checkbox dropdown item firing its
      // click event first, which would cause a re-render of the element and prevent Droplist
      // from detecting the actual source of this original click event.


      document.addEventListener('click', _this.handleClickOutside, true);
      document.addEventListener('keydown', _this.handleEsc);
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "componentDidUpdate", function () {
      if (_this.props.isOpen) {
        _this.setContentWidth();
      }
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "componentWillUnmount", function () {
      document.removeEventListener('click', _this.handleClickOutside, true);
      document.removeEventListener('keydown', _this.handleEsc);
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "setContentWidth", function () {
      var _assertThisInitialize = _assertThisInitialized$4(_this),
          dropContentRef = _assertThisInitialize.dropContentRef,
          triggerRef = _assertThisInitialize.triggerRef;

      var shouldFitContainer = _this.props.shouldFitContainer; // We need to manually set the content width to match the trigger width
      // if props.shouldFitContainer is true

      if (shouldFitContainer && dropContentRef && triggerRef) {
        dropContentRef.style.width = "".concat(triggerRef.offsetWidth - halfFocusRing * 2, "px");
      }
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "handleEsc", function (event) {
      if ((event.key === 'Escape' || event.key === 'Esc') && _this.props.isOpen) {
        _this.close(event);
      }
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "handleClickOutside", function (event) {
      if (_this.props.isOpen) {
        if (event.target instanceof Node) {
          // Rather than check for the target within the entire Droplist, we specify the trigger/content.
          // This aids with future effort in scroll-locking Droplist when isMenuFixed is enabled; the scroll
          // blanket which stretches to the viewport should not stop 'close' from being triggered.
          var withinTrigger = _this.triggerRef && _this.triggerRef.contains(event.target);

          var withinContent = _this.dropContentRef && _this.dropContentRef.contains(event.target);

          if (!withinTrigger && !withinContent) {
            _this.close(event);
          }
        }
      }
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "close", function (event) {
      if (_this.props.onOpenChange) {
        _this.props.onOpenChange({
          isOpen: false,
          event: event
        });
      }
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "handleContentRef", function (ref) {
      _this.dropContentRef = ref; // If the dropdown has just been opened, we focus on the containing element so the
      // user can tab to the first dropdown item. We will only receive this ref if isOpen
      // is true or null, so no need to check for truthiness here.

      if (ref) {
        ref.focus();
      }
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "handleTriggerRef", function (ref) {
      _this.triggerRef = ref;
    });

    return _this;
  }

  _createClass$8(Droplist, [{
    key: "getChildContext",
    value: function getChildContext() {
      return {
        shouldAllowMultilineItems: this.props.shouldAllowMultilineItems
      };
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          appearance = _this$props.appearance,
          boundariesElement = _this$props.boundariesElement,
          children = _this$props.children,
          isLoading = _this$props.isLoading,
          isOpen = _this$props.isOpen,
          maxHeight = _this$props.maxHeight,
          onClick = _this$props.onClick,
          onKeyDown = _this$props.onKeyDown,
          position = _this$props.position,
          isMenuFixed = _this$props.isMenuFixed,
          shouldFitContainer = _this$props.shouldFitContainer,
          shouldFlip = _this$props.shouldFlip,
          trigger = _this$props.trigger,
          onPositioned = _this$props.onPositioned,
          testId = _this$props.testId;
      var layerContent = isOpen ? React__default.createElement(Content$2, {
        "data-role": "droplistContent",
        "data-testid": testId && "".concat(testId, "--content"),
        isTall: appearance === 'tall',
        innerRef: this.handleContentRef,
        maxHeight: maxHeight
      }, isLoading ? React__default.createElement(SpinnerContainer, null, React__default.createElement(Spinner$3, {
        size: "small"
      })) : React__default.createElement(ThemeProvider, {
        theme: itemTheme
      }, React__default.createElement("div", null, children))) : null;
      return React__default.createElement(Wrapper$1, {
        fit: shouldFitContainer,
        onClick: onClick,
        onKeyDown: onKeyDown
      }, React__default.createElement(Layer, {
        autoFlip: shouldFlip,
        boundariesElement: boundariesElement,
        content: layerContent,
        offset: dropOffset,
        position: position,
        isAlwaysFixed: isOpen && isMenuFixed,
        onPositioned: onPositioned
      }, React__default.createElement(Trigger, {
        fit: shouldFitContainer,
        innerRef: this.handleTriggerRef
      }, trigger)));
    }
  }]);

  return Droplist;
}(Component$1);

_defineProperty$3(Droplist, "defaultProps", {
  appearance: 'default',
  boundariesElement: 'viewport',
  children: null,
  isLoading: false,
  isOpen: false,
  onClick: function onClick() {},
  onKeyDown: function onKeyDown() {},
  onOpenChange: function onOpenChange() {},
  position: 'bottom left',
  isMenuFixed: false,
  shouldAllowMultilineItems: false,
  shouldFitContainer: false,
  shouldFlip: true,
  trigger: null,
  onPositioned: function onPositioned() {}
});

_defineProperty$3(Droplist, "childContextTypes", {
  shouldAllowMultilineItems: PropTypes$3.bool
});
var createAndFireEventOnAtlaskit$5 = createAndFireEvent$4('atlaskit');
var Droplist$1 = withAnalyticsContext$9({
  componentName: 'droplist',
  packageName: name$3,
  packageVersion: version$3
})(withAnalyticsEvents$9({
  onOpenChange: createAndFireEventOnAtlaskit$5({
    action: 'toggled',
    actionSubject: 'droplist',
    attributes: {
      componentName: 'droplist',
      packageName: name$3,
      packageVersion: version$3
    }
  })
})(Droplist));

var checkbox = {};

Object.defineProperty(checkbox, "__esModule", {
  value: true
});
var default_1$2 = checkbox.default = void 0;

var _react$3 = _interopRequireDefault$3(React__default);

var _Icon$2 = _interopRequireDefault$3(Icon$7);

function _interopRequireDefault$3(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends$2() { _extends$2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2.apply(this, arguments); }

var CheckboxIcon = function CheckboxIcon(props) {
  return _react$3.default.createElement(_Icon$2.default, _extends$2({
    dangerouslySetGlyph: "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" focusable=\"false\" role=\"presentation\"><g fill-rule=\"evenodd\"><rect fill=\"currentColor\" x=\"6\" y=\"6\" width=\"12\" height=\"12\" rx=\"2\"/><path d=\"M9.707 11.293a1 1 0 1 0-1.414 1.414l2 2a1 1 0 0 0 1.414 0l4-4a1 1 0 1 0-1.414-1.414L11 12.586l-1.293-1.293z\" fill=\"inherit\"/></g></svg>"
  }, props));
};

CheckboxIcon.displayName = 'CheckboxIcon';
var _default$2 = CheckboxIcon;
default_1$2 = checkbox.default = _default$2;

var radio = {};

Object.defineProperty(radio, "__esModule", {
  value: true
});
var default_1$1 = radio.default = void 0;

var _react$2 = _interopRequireDefault$2(React__default);

var _Icon$1 = _interopRequireDefault$2(Icon$7);

function _interopRequireDefault$2(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends$1() { _extends$1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1.apply(this, arguments); }

var RadioIcon = function RadioIcon(props) {
  return _react$2.default.createElement(_Icon$1.default, _extends$1({
    dangerouslySetGlyph: "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" focusable=\"false\" role=\"presentation\"><g fill-rule=\"evenodd\"><circle fill=\"currentColor\" cx=\"12\" cy=\"12\" r=\"6\"/><circle fill=\"inherit\" cx=\"12\" cy=\"12\" r=\"2\"/></g></svg>"
  }, props));
};

RadioIcon.displayName = 'RadioIcon';
var _default$1 = RadioIcon;
default_1$1 = radio.default = _default$1;

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics$2 = function(d, b) {
    extendStatics$2 = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics$2(d, b);
};

function __extends$2(d, b) {
    extendStatics$2(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign$1 = function() {
    __assign$1 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign$1.apply(this, arguments);
};

function __makeTemplateObject$1(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
}

// a timeout function that can be flushed and cancelled
var flushable = function flushable(onComplete, delay) {
  var timeoutId = setTimeout(function () {
    timeoutId = null;
    onComplete(false);
  }, delay);

  var clearTimer = function clearTimer() {
    if (timeoutId) {
      clearTimeout(timeoutId);
      timeoutId = null;
    }
  };

  return {
    cancel: clearTimer,
    flush: function flush() {
      if (!timeoutId) {
        return;
      }

      clearTimer();
      onComplete(true);
    },
    pending: function pending() {
      return Boolean(timeoutId);
    }
  };
};

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics$1 = function(d, b) {
    extendStatics$1 = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics$1(d, b);
};

function __extends$1(d, b) {
    extendStatics$1(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

var lib$1 = {exports: {}};

var implementation = {exports: {}};

var key = '__global_unique_id__';

var gud = function() {
  return commonjsGlobal[key] = (commonjsGlobal[key] || 0) + 1;
};

(function (module, exports) {

exports.__esModule = true;

var _react = React__default;

_interopRequireDefault(_react);

var _propTypes = propTypes$1.exports;

var _propTypes2 = _interopRequireDefault(_propTypes);

var _gud = gud;

var _gud2 = _interopRequireDefault(_gud);

var _warning = warning_1$1;

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MAX_SIGNED_31_BIT_INT = 1073741823;

// Inlined Object.is polyfill.
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
function objectIs(x, y) {
  if (x === y) {
    return x !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function createEventEmitter(value) {
  var handlers = [];
  return {
    on: function on(handler) {
      handlers.push(handler);
    },
    off: function off(handler) {
      handlers = handlers.filter(function (h) {
        return h !== handler;
      });
    },
    get: function get() {
      return value;
    },
    set: function set(newValue, changedBits) {
      value = newValue;
      handlers.forEach(function (handler) {
        return handler(value, changedBits);
      });
    }
  };
}

function onlyChild(children) {
  return Array.isArray(children) ? children[0] : children;
}

function createReactContext(defaultValue, calculateChangedBits) {
  var _Provider$childContex, _Consumer$contextType;

  var contextProp = '__create-react-context-' + (0, _gud2.default)() + '__';

  var Provider = function (_Component) {
    _inherits(Provider, _Component);

    function Provider() {
      var _temp, _this, _ret;

      _classCallCheck(this, Provider);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.emitter = createEventEmitter(_this.props.value), _temp), _possibleConstructorReturn(_this, _ret);
    }

    Provider.prototype.getChildContext = function getChildContext() {
      var _ref;

      return _ref = {}, _ref[contextProp] = this.emitter, _ref;
    };

    Provider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      if (this.props.value !== nextProps.value) {
        var oldValue = this.props.value;
        var newValue = nextProps.value;
        var changedBits = void 0;

        if (objectIs(oldValue, newValue)) {
          changedBits = 0; // No change
        } else {
          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
          if (process.env.NODE_ENV !== 'production') {
            (0, _warning2.default)((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits);
          }

          changedBits |= 0;

          if (changedBits !== 0) {
            this.emitter.set(nextProps.value, changedBits);
          }
        }
      }
    };

    Provider.prototype.render = function render() {
      return this.props.children;
    };

    return Provider;
  }(_react.Component);

  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = _propTypes2.default.object.isRequired, _Provider$childContex);

  var Consumer = function (_Component2) {
    _inherits(Consumer, _Component2);

    function Consumer() {
      var _temp2, _this2, _ret2;

      _classCallCheck(this, Consumer);

      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return _ret2 = (_temp2 = (_this2 = _possibleConstructorReturn(this, _Component2.call.apply(_Component2, [this].concat(args))), _this2), _this2.state = {
        value: _this2.getValue()
      }, _this2.onUpdate = function (newValue, changedBits) {
        var observedBits = _this2.observedBits | 0;
        if ((observedBits & changedBits) !== 0) {
          _this2.setState({ value: _this2.getValue() });
        }
      }, _temp2), _possibleConstructorReturn(_this2, _ret2);
    }

    Consumer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      var observedBits = nextProps.observedBits;

      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default
      : observedBits;
    };

    Consumer.prototype.componentDidMount = function componentDidMount() {
      if (this.context[contextProp]) {
        this.context[contextProp].on(this.onUpdate);
      }
      var observedBits = this.props.observedBits;

      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default
      : observedBits;
    };

    Consumer.prototype.componentWillUnmount = function componentWillUnmount() {
      if (this.context[contextProp]) {
        this.context[contextProp].off(this.onUpdate);
      }
    };

    Consumer.prototype.getValue = function getValue() {
      if (this.context[contextProp]) {
        return this.context[contextProp].get();
      } else {
        return defaultValue;
      }
    };

    Consumer.prototype.render = function render() {
      return onlyChild(this.props.children)(this.state.value);
    };

    return Consumer;
  }(_react.Component);

  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = _propTypes2.default.object, _Consumer$contextType);


  return {
    Provider: Provider,
    Consumer: Consumer
  };
}

exports.default = createReactContext;
module.exports = exports['default'];
}(implementation, implementation.exports));

(function (module, exports) {

exports.__esModule = true;

var _react = React__default;

var _react2 = _interopRequireDefault(_react);

var _implementation = implementation.exports;

var _implementation2 = _interopRequireDefault(_implementation);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _react2.default.createContext || _implementation2.default;
module.exports = exports['default'];
}(lib$1, lib$1.exports));

var createContext = /*@__PURE__*/getDefaultExportFromCjs(lib$1.exports);

var ManagerReferenceNodeContext = createContext();
var ManagerReferenceNodeSetterContext = createContext();

var Manager =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose$1(Manager, _React$Component);

  function Manager() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _defineProperty$3(_assertThisInitialized$4(_this), "referenceNode", void 0);

    _defineProperty$3(_assertThisInitialized$4(_this), "setReferenceNode", function (newReferenceNode) {
      if (newReferenceNode && _this.referenceNode !== newReferenceNode) {
        _this.referenceNode = newReferenceNode;

        _this.forceUpdate();
      }
    });

    return _this;
  }

  var _proto = Manager.prototype;

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.referenceNode = null;
  };

  _proto.render = function render() {
    return React$7.createElement(ManagerReferenceNodeContext.Provider, {
      value: this.referenceNode
    }, React$7.createElement(ManagerReferenceNodeSetterContext.Provider, {
      value: this.setReferenceNode
    }, this.props.children));
  };

  return Manager;
}(React$7.Component);

/**
 * Takes an argument and if it's an array, returns the first item in the array,
 * otherwise returns the argument. Used for Preact compatibility.
 */
var unwrapArray = function unwrapArray(arg) {
  return Array.isArray(arg) ? arg[0] : arg;
};
/**
 * Takes a maybe-undefined function and arbitrary args and invokes the function
 * only if it is defined.
 */

var safeInvoke = function safeInvoke(fn) {
  if (typeof fn === "function") {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return fn.apply(void 0, args);
  }
};
/**
 * Does a shallow equality check of two objects by comparing the reference
 * equality of each value.
 */

var shallowEqual = function shallowEqual(objA, objB) {
  var aKeys = Object.keys(objA);
  var bKeys = Object.keys(objB);

  if (bKeys.length !== aKeys.length) {
    return false;
  }

  for (var i = 0; i < bKeys.length; i++) {
    var key = aKeys[i];

    if (objA[key] !== objB[key]) {
      return false;
    }
  }

  return true;
};
/**
 * Sets a ref using either a ref callback or a ref object
 */

var setRef = function setRef(ref, node) {
  // if its a function call it
  if (typeof ref === "function") {
    return safeInvoke(ref, node);
  } // otherwise we should treat it as a ref object
  else if (ref != null) {
      ref.current = node;
    }
};

var initialStyle = {
  position: 'absolute',
  top: 0,
  left: 0,
  opacity: 0,
  pointerEvents: 'none'
};
var initialArrowStyle = {};
var InnerPopper =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose$1(InnerPopper, _React$Component);

  function InnerPopper() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _defineProperty$3(_assertThisInitialized$4(_this), "state", {
      data: undefined,
      placement: undefined
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "popperInstance", void 0);

    _defineProperty$3(_assertThisInitialized$4(_this), "popperNode", null);

    _defineProperty$3(_assertThisInitialized$4(_this), "arrowNode", null);

    _defineProperty$3(_assertThisInitialized$4(_this), "setPopperNode", function (popperNode) {
      if (!popperNode || _this.popperNode === popperNode) return;
      setRef(_this.props.innerRef, popperNode);
      _this.popperNode = popperNode;

      _this.updatePopperInstance();
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "setArrowNode", function (arrowNode) {
      _this.arrowNode = arrowNode;
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "updateStateModifier", {
      enabled: true,
      order: 900,
      fn: function fn(data) {
        var placement = data.placement;

        _this.setState({
          data: data,
          placement: placement
        });

        return data;
      }
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "getOptions", function () {
      return {
        placement: _this.props.placement,
        eventsEnabled: _this.props.eventsEnabled,
        positionFixed: _this.props.positionFixed,
        modifiers: _extends$d({}, _this.props.modifiers, {
          arrow: _extends$d({}, _this.props.modifiers && _this.props.modifiers.arrow, {
            enabled: !!_this.arrowNode,
            element: _this.arrowNode
          }),
          applyStyle: {
            enabled: false
          },
          updateStateModifier: _this.updateStateModifier
        })
      };
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "getPopperStyle", function () {
      return !_this.popperNode || !_this.state.data ? initialStyle : _extends$d({
        position: _this.state.data.offsets.popper.position
      }, _this.state.data.styles);
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "getPopperPlacement", function () {
      return !_this.state.data ? undefined : _this.state.placement;
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "getArrowStyle", function () {
      return !_this.arrowNode || !_this.state.data ? initialArrowStyle : _this.state.data.arrowStyles;
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "getOutOfBoundariesState", function () {
      return _this.state.data ? _this.state.data.hide : undefined;
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "destroyPopperInstance", function () {
      if (!_this.popperInstance) return;

      _this.popperInstance.destroy();

      _this.popperInstance = null;
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "updatePopperInstance", function () {
      _this.destroyPopperInstance();

      var _assertThisInitialize = _assertThisInitialized$4(_this),
          popperNode = _assertThisInitialize.popperNode;

      var referenceElement = _this.props.referenceElement;
      if (!referenceElement || !popperNode) return;
      _this.popperInstance = new PopperJS(referenceElement, popperNode, _this.getOptions());
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "scheduleUpdate", function () {
      if (_this.popperInstance) {
        _this.popperInstance.scheduleUpdate();
      }
    });

    return _this;
  }

  var _proto = InnerPopper.prototype;

  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
    // If the Popper.js options have changed, update the instance (destroy + create)
    if (this.props.placement !== prevProps.placement || this.props.referenceElement !== prevProps.referenceElement || this.props.positionFixed !== prevProps.positionFixed || this.props.modifiers !== prevProps.modifiers) {
      // develop only check that modifiers isn't being updated needlessly
      if (process.env.NODE_ENV === "development") {
        if (this.props.modifiers !== prevProps.modifiers && this.props.modifiers != null && prevProps.modifiers != null && shallowEqual(this.props.modifiers, prevProps.modifiers)) {
          console.warn("'modifiers' prop reference updated even though all values appear the same.\nConsider memoizing the 'modifiers' object to avoid needless rendering.");
        }
      }

      this.updatePopperInstance();
    } else if (this.props.eventsEnabled !== prevProps.eventsEnabled && this.popperInstance) {
      this.props.eventsEnabled ? this.popperInstance.enableEventListeners() : this.popperInstance.disableEventListeners();
    } // A placement difference in state means popper determined a new placement
    // apart from the props value. By the time the popper element is rendered with
    // the new position Popper has already measured it, if the place change triggers
    // a size change it will result in a misaligned popper. So we schedule an update to be sure.


    if (prevState.placement !== this.state.placement) {
      this.scheduleUpdate();
    }
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    setRef(this.props.innerRef, null);
    this.destroyPopperInstance();
  };

  _proto.render = function render() {
    return unwrapArray(this.props.children)({
      ref: this.setPopperNode,
      style: this.getPopperStyle(),
      placement: this.getPopperPlacement(),
      outOfBoundaries: this.getOutOfBoundariesState(),
      scheduleUpdate: this.scheduleUpdate,
      arrowProps: {
        ref: this.setArrowNode,
        style: this.getArrowStyle()
      }
    });
  };

  return InnerPopper;
}(React$7.Component);

_defineProperty$3(InnerPopper, "defaultProps", {
  placement: 'bottom',
  eventsEnabled: true,
  referenceElement: undefined,
  positionFixed: false
});

PopperJS.placements;
function Popper$1(_ref) {
  var referenceElement = _ref.referenceElement,
      props = _objectWithoutPropertiesLoose$4(_ref, ["referenceElement"]);

  return React$7.createElement(ManagerReferenceNodeContext.Consumer, null, function (referenceNode) {
    return React$7.createElement(InnerPopper, _extends$d({
      referenceElement: referenceElement !== undefined ? referenceElement : referenceNode
    }, props));
  });
}

var InnerReference =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose$1(InnerReference, _React$Component);

  function InnerReference() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _defineProperty$3(_assertThisInitialized$4(_this), "refHandler", function (node) {
      setRef(_this.props.innerRef, node);
      safeInvoke(_this.props.setReferenceNode, node);
    });

    return _this;
  }

  var _proto = InnerReference.prototype;

  _proto.componentWillUnmount = function componentWillUnmount() {
    setRef(this.props.innerRef, null);
  };

  _proto.render = function render() {
    warning_1$1(Boolean(this.props.setReferenceNode), '`Reference` should not be used outside of a `Manager` component.');
    return unwrapArray(this.props.children)({
      ref: this.refHandler
    });
  };

  return InnerReference;
}(React$7.Component);

function Reference(props) {
  return React$7.createElement(ManagerReferenceNodeSetterContext.Consumer, null, function (setReferenceNode) {
    return React$7.createElement(InnerReference, _extends$d({
      setReferenceNode: setReferenceNode
    }, props));
  });
}

var FlipBehavior = {
    auto: [],
    top: ['top', 'bottom', 'top'],
    right: ['right', 'left', 'right'],
    bottom: ['bottom', 'top', 'bottom'],
    left: ['left', 'right', 'left'],
};
var getFlipBehavior = function (side) { return FlipBehavior[side]; };
var Popper = /** @class */ (function (_super) {
    __extends$1(Popper, _super);
    function Popper() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.getModifiers = memoizeOne(function (placement) {
            var flipBehavior = getFlipBehavior(placement.split('-')[0]);
            var modifiers = {
                flip: {
                    enabled: true,
                    behavior: flipBehavior,
                    boundariesElement: 'viewport',
                },
                hide: {
                    enabled: true,
                },
                offset: {
                    enabled: true,
                    offset: _this.props.offset,
                },
                preventOverflow: {
                    enabled: true,
                    escapeWithReference: false,
                    boundariesElement: 'window',
                },
            };
            if (_this.props.modifiers) {
                return __assign(__assign({}, modifiers), _this.props.modifiers);
            }
            return modifiers;
        });
        return _this;
    }
    Popper.prototype.render = function () {
        var _a = this.props, placement = _a.placement, children = _a.children, referenceElement = _a.referenceElement;
        var modifiers = this.getModifiers(this.props.placement);
        return (React__default.createElement(Popper$1, __assign({ positionFixed: true, modifiers: modifiers, placement: placement }, (referenceElement ? { referenceElement: referenceElement } : {})), children));
    };
    Popper.defaultProps = {
        children: function () { return null; },
        offset: '0, 8px',
        placement: 'bottom-start',
    };
    return Popper;
}(React__default.Component));

var backgroundColor$1 = themed$3({
    light: N800$2,
    dark: DN0,
});
var textColor$1 = themed$3({
    light: N0$7,
    dark: DN600$2,
});
var TooltipPrimitive = styled$1.div(templateObject_1$2 || (templateObject_1$2 = __makeTemplateObject$1(["\n  z-index: ", ";\n  pointer-events: none;\n  position: fixed;\n"], ["\n  z-index: ", ";\n  pointer-events: none;\n  position: fixed;\n"])), layers$1.tooltip);
var Tooltip$3 = styled$1(TooltipPrimitive)(templateObject_2 || (templateObject_2 = __makeTemplateObject$1(["\n  background-color: ", ";\n  border-radius: ", "px;\n  box-sizing: border-box;\n  color: ", ";\n  font-size: 12px;\n  left: 0;\n  line-height: 1.3;\n  max-width: 240px;\n  padding: 2px 6px;\n  top: 0;\n  /* Edge does not support overflow-wrap */\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n\n  ", "\n"], ["\n  background-color: ", ";\n  border-radius: ", "px;\n  box-sizing: border-box;\n  color: ", ";\n  font-size: 12px;\n  left: 0;\n  line-height: 1.3;\n  max-width: 240px;\n  padding: 2px 6px;\n  top: 0;\n  /* Edge does not support overflow-wrap */\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n\n  ",
    "\n"])), backgroundColor$1, borderRadius$5, textColor$1, function (_a) {
    var truncate = _a.truncate;
    return truncate &&
        "\n      max-width: 420px;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    ";
});
// The inline-block here is needed to keep the tooltip appearing in the correct position
// when nested inside a wider parent (see position: relative example).
styled$1.div(templateObject_3 || (templateObject_3 = __makeTemplateObject$1(["\n  display: inline-block;\n"], ["\n  display: inline-block;\n"])));
var templateObject_1$2, templateObject_2, templateObject_3;

var name$2="@atlaskit/tooltip";var version$2="15.2.9";

var ENTER_DURATION = 120;
var EXIT_DURATION = 80;
var easing = 'cubic-bezier(0.23, 1, 0.32, 1)'; // easeOutQuint
var defaultStyle = function (timeout) { return ({
    transition: "transform " + timeout.enter + "ms " + easing + ", opacity " + timeout.enter + "ms linear",
    opacity: 0,
}); };
var transitionStyle = function (state) {
    var transitions = {
        entering: {},
        entered: {
            opacity: 1,
        },
        exiting: {
            opacity: 0,
        },
    };
    return transitions[state];
};
var getStyle = function (timeout, state) { return function () { return (__assign$1(__assign$1({}, defaultStyle(timeout)), transitionStyle(state))); }; };
var Animation = function (_a) {
    var children = _a.children, immediatelyHide = _a.immediatelyHide, immediatelyShow = _a.immediatelyShow, onExited = _a.onExited, inProp = _a.in;
    var timeout = {
        enter: immediatelyShow ? 0 : ENTER_DURATION,
        exit: immediatelyHide ? 0 : EXIT_DURATION,
    };
    return (React__default.createElement(Transition$1, { timeout: timeout, in: inProp, onExited: onExited, unmountOnExit: true, appear: true }, function (state) { return children(getStyle(timeout, state)); }));
};
var Animation$1 = Animation;

var hoveredPayload = {
    action: 'displayed',
    actionSubject: 'tooltip',
    attributes: {
        componentName: 'tooltip',
        packageName: name$2,
        packageVersion: version$2,
    },
};
var unhoveredPayload = {
    action: 'hidden',
    actionSubject: 'tooltip',
    attributes: {
        componentName: 'tooltip',
        packageName: name$2,
        packageVersion: version$2,
    },
};

/* eslint-disable react/require-default-props */
var SCROLL_OPTIONS = { capture: true, passive: true };
function getMousePosition(mouseCoordinates) {
    var safeMouse = mouseCoordinates || { top: 0, left: 0 };
    var getBoundingClientRect = function () {
        return {
            top: safeMouse.top,
            left: safeMouse.left,
            bottom: safeMouse.top,
            right: safeMouse.left,
            width: 0,
            height: 0,
        };
    };
    return {
        getBoundingClientRect: getBoundingClientRect,
        clientWidth: 0,
        clientHeight: 0,
    };
}
var pendingHide;
var showTooltip = function (fn, defaultDelay) {
    var isHidePending = pendingHide && pendingHide.pending();
    if (isHidePending) {
        pendingHide.flush();
    }
    var pendingShow = flushable(function () { return fn(isHidePending); }, isHidePending ? 0 : defaultDelay);
    return pendingShow.cancel;
};
var hideTooltip = function (fn, defaultDelay) {
    pendingHide = flushable(function (flushed) { return fn(flushed); }, defaultDelay);
    return pendingHide.cancel;
};
var Tooltip$1 = /** @class */ (function (_super) {
    __extends$2(Tooltip, _super);
    function Tooltip() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.wrapperRef = null;
        _this.targetRef = null;
        _this.cancelPendingSetState = function () { };
        _this.userInteraction = 'mouse';
        _this.state = {
            immediatelyHide: false,
            immediatelyShow: false,
            isVisible: false,
            renderTooltip: false,
        };
        _this.handleWindowScroll = function () {
            if (_this.state.isVisible) {
                _this.cancelPendingSetState();
                _this.setState({ isVisible: false, immediatelyHide: true });
            }
        };
        _this.handleMouseClick = function () {
            if (_this.props.hideTooltipOnClick) {
                _this.cancelPendingSetState();
                _this.setState({ isVisible: false, immediatelyHide: true });
            }
        };
        _this.handleMouseDown = function () {
            if (_this.props.hideTooltipOnMouseDown) {
                _this.cancelPendingSetState();
                _this.setState({ isVisible: false, immediatelyHide: true });
            }
        };
        _this.handleMouseOver = function (e) {
            if (e.target === _this.wrapperRef) {
                return;
            }
            _this.userInteraction = 'mouse';
            // In the case where a tooltip is newly rendered but immediately becomes hovered,
            // we need to set the coordinates in the mouseOver event.
            if (!_this.fakeMouseElement) {
                _this.fakeMouseElement = getMousePosition({
                    left: e.clientX,
                    top: e.clientY,
                });
            }
            _this.handleShowTooltip();
        };
        _this.handleFocus = function () {
            _this.userInteraction = 'keyboard';
            // We need to fake the mouse dimensions even on focus because the code path currently assumes
            // fake mouse element needs to exist before showing the tooltip.
            if (!_this.fakeMouseElement) {
                _this.fakeMouseElement = getMousePosition({
                    left: 0,
                    top: 0,
                });
            }
            _this.handleShowTooltip();
        };
        _this.handleShowTooltip = function () {
            _this.cancelPendingSetState();
            if (Boolean(_this.props.content) && !_this.state.isVisible) {
                _this.cancelPendingSetState = showTooltip(function (immediatelyShow) {
                    _this.setState({
                        isVisible: true,
                        renderTooltip: true,
                        immediatelyShow: immediatelyShow,
                    });
                }, _this.props.delay || 0);
            }
        };
        _this.handleHideTooltip = function (e) {
            if (e.target === _this.wrapperRef) {
                return;
            }
            _this.cancelPendingSetState();
            if (_this.state.isVisible) {
                _this.cancelPendingSetState = hideTooltip(function (immediatelyHide) {
                    _this.setState({ isVisible: false, immediatelyHide: immediatelyHide });
                }, _this.props.delay || 0);
            }
        };
        // Update mouse coordinates, used when position is 'mouse'.
        // We are not debouncing/throttling this function because we aren't causing any
        // re-renders or performaing any intensive calculations, we're just updating a value.
        // React also doesn't play nice debounced DOM event handlers because they pool their
        // SyntheticEvent objects. Need to use event.persist as a workaround - https://stackoverflow.com/a/24679479/893630
        _this.handleMouseMove = function (event) {
            if (!_this.state.renderTooltip) {
                _this.fakeMouseElement = getMousePosition({
                    left: event.clientX,
                    top: event.clientY,
                });
            }
        };
        return _this;
    }
    Tooltip.prototype.componentWillUnmount = function () {
        this.cancelPendingSetState();
        this.removeScrollListener();
    };
    Tooltip.prototype.componentDidUpdate = function (_prevProps, prevState) {
        if (!prevState.isVisible && this.state.isVisible) {
            if (this.props.onShow)
                this.props.onShow();
            window.addEventListener('scroll', this.handleWindowScroll, SCROLL_OPTIONS);
        }
        else if (prevState.isVisible && !this.state.isVisible) {
            if (this.props.onHide)
                this.props.onHide();
            this.removeScrollListener();
        }
    };
    Tooltip.prototype.removeScrollListener = function () {
        window.removeEventListener('scroll', this.handleWindowScroll, SCROLL_OPTIONS);
    };
    Tooltip.prototype.shouldPositionTooltipNearMouse = function () {
        var position = this.props.position;
        return position === 'mouse' && this.userInteraction === 'mouse';
    };
    Tooltip.prototype.render = function () {
        var _this = this;
        var _a = this.props, children = _a.children, position = _a.position, mousePosition = _a.mousePosition, content = _a.content, truncate = _a.truncate, TooltipContainer = _a.component, TargetContainer = _a.tag, testId = _a.testId;
        var _b = this.state, isVisible = _b.isVisible, renderTooltip = _b.renderTooltip, immediatelyShow = _b.immediatelyShow, immediatelyHide = _b.immediatelyHide;
        var tooltipPosition = position === 'mouse' ? mousePosition : position;
        return (
        /* eslint-disable jsx-a11y/mouse-events-have-key-events */
        React__default.createElement(React__default.Fragment, null,
            TargetContainer && (React__default.createElement(TargetContainer, { onClick: this.handleMouseClick, onMouseOver: this.handleMouseOver, onMouseOut: this.handleHideTooltip, onMouseMove: this.handleMouseMove, onMouseDown: this.handleMouseDown, onFocus: this.handleFocus, onBlur: this.handleHideTooltip, ref: function (wrapperRef) {
                    _this.wrapperRef = wrapperRef;
                } },
                React__default.createElement(NodeResolver, { innerRef: function (ref) {
                        _this.targetRef = ref;
                    } }, React__default.Children.only(children)))),
            renderTooltip && this.targetRef && this.fakeMouseElement ? (React__default.createElement(Portal$1, { zIndex: layers$1.tooltip() },
                React__default.createElement(Popper, { placement: tooltipPosition, referenceElement: 
                    // https://github.com/FezVrasta/react-popper#usage-without-a-reference-htmlelement
                    // We are using a popper technique to pass in a faked element when we use mouse.
                    (this.shouldPositionTooltipNearMouse()
                        ? this.fakeMouseElement
                        : this.targetRef) }, function (_a) {
                    var ref = _a.ref, style = _a.style;
                    return TooltipContainer && (React__default.createElement(Animation$1, { immediatelyShow: immediatelyShow, immediatelyHide: immediatelyHide, onExited: function () { return _this.setState({ renderTooltip: false }); }, in: isVisible }, function (getAnimationStyles) { return (React__default.createElement(TooltipContainer
                    // innerRef can't be null so shortcircuit to undefined if it is.
                    , { 
                        // innerRef can't be null so shortcircuit to undefined if it is.
                        innerRef: ref || undefined, className: "Tooltip", style: __assign$1(__assign$1({}, getAnimationStyles()), style), truncate: truncate || false, "data-placement": tooltipPosition, "data-testid": testId }, content)); }));
                }))) : null)
        /* eslint-enable */
        );
    };
    Tooltip.defaultProps = {
        component: Tooltip$3,
        delay: 300,
        mousePosition: 'bottom',
        position: 'bottom',
        tag: 'div',
    };
    return Tooltip;
}(React__default.Component));
var createAndFireEventOnAtlaskit$4 = createAndFireEvent$4('atlaskit');
var Tooltip$2 = withAnalyticsContext$9({
    componentName: 'tooltip',
    packageName: name$2,
    packageVersion: version$2,
})(withAnalyticsEvents$9({
    onHide: unhoveredPayload,
    onShow: createAndFireEventOnAtlaskit$4(__assign$1({}, hoveredPayload)),
})(Tooltip$1));

var activeBackgroundColor = themed$3({
  light: B75$2,
  dark: DN30$5
});
var hoverBackgroundColor = themed$3({
  light: N20$3,
  dark: DN60$1
});
var selectedBackgroundColor = themed$3({
  light: N0$7,
  dark: DN30$5
});
var activePrimaryTextColor = themed$3({
  light: N800$2,
  dark: DN300$1
});
var defaultPrimaryTextColor = themed$3({
  light: N800$2,
  dark: DN600$2
});
var disabledPrimaryTextColor = themed$3({
  light: N70$3,
  dark: DN70
});
var primaryPrimaryTextColor = themed$3({
  light: B400,
  dark: B400
});
var selectedPrimaryTextColor = themed$3({
  light: N800$2,
  dark: N800$2
});
var focusedStyles = css$3(["\n  box-shadow: 0 0 0 2px ", "\n    inset;\n  outline: none;\n  outline-offset: 0;\n  position: relative; /* prevents bgcolor of a hovered element from obfuscating focus ring of a focused sibling element */\n"], themed$3({
  light: B100$3,
  dark: B75$2
}));
var activeStyles = css$3(["\n  &,\n  &:hover {\n    background-color: ", ";\n    color: ", ";\n  }\n"], selectedBackgroundColor, selectedPrimaryTextColor);
var primaryStyles = css$3(["\n  color: ", ";\n"], primaryPrimaryTextColor);

var sharedStyles = function sharedStyles(props) {
  return css$3(["\n  align-items: center;\n  box-sizing: border-box;\n  color: ", ";\n  cursor: ", ";\n  display: ", ";\n  flex-wrap: nowrap;\n  font-size: ", "px;\n  font-weight: normal;\n  padding: 0 ", "px;\n  text-decoration: none;\n\n  &:hover {\n    background-color: ", ";\n    color: ", ";\n    text-decoration: none;\n\n    ", ";\n  }\n  &:active {\n    background-color: ", ";\n    color: ", ";\n\n    ", ";\n  }\n  &:focus {\n    ", ";\n  }\n\n  ", " ", " ", ";\n"], props.isDisabled ? disabledPrimaryTextColor : defaultPrimaryTextColor, props.isDisabled ? 'not-allowed' : 'pointer', props.isHidden ? 'none' : 'flex', fontSize$5, multiply(gridSize$5, 1.5), !props.isDisabled && hoverBackgroundColor, props.isDisabled ? disabledPrimaryTextColor : defaultPrimaryTextColor, props.isPrimary && primaryStyles, !props.isDisabled && activeBackgroundColor, !props.isDisabled && activePrimaryTextColor, props.isPrimary && primaryStyles, focusedStyles, props.isFocused && focusedStyles, props.isActive && activeStyles, props.isPrimary && primaryStyles);
};

var Anchor = styled$1.a.withConfig({
  displayName: "Item__Anchor",
  componentId: "aiqnor-0"
})(["\n  ", ";\n"], function (props) {
  return sharedStyles(props);
});
var Span = styled$1.span.withConfig({
  displayName: "Item__Span",
  componentId: "aiqnor-1"
})(["\n  ", ";\n"], function (props) {
  return sharedStyles(props);
}); // Checkbox/Radio wrapper -- sits left of the children

var InputWrapper = styled$1.span.withConfig({
  displayName: "Item__InputWrapper",
  componentId: "aiqnor-2"
})(["\n  display: flex;\n  margin: 0 2px;\n"]); // Elements injected before/after the children

var Before = styled$1.span.withConfig({
  displayName: "Item__Before",
  componentId: "aiqnor-3"
})(["\n  display: flex;\n"]);
var After = styled$1.span.withConfig({
  displayName: "Item__After",
  componentId: "aiqnor-4"
})(["\n  align-items: center;\n  display: flex;\n"]); // Alignment and layout for the children

var ContentWrapper = styled$1.span.withConfig({
  displayName: "Item__ContentWrapper",
  componentId: "aiqnor-5"
})(["\n  display: flex;\n  flex-direction: column;\n  margin: 0 ", "px;\n  padding: ", "px 0;\n  overflow: hidden;\n\n  &:first-child {\n    margin: 0;\n  }\n"], gridSize$5, gridSize$5);
var Content = styled$1.span.withConfig({
  displayName: "Item__Content",
  componentId: "aiqnor-6"
})(["\n  flex: 1 1 auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  ", ";\n"], function (props) {
  return props.allowMultiline && css$3(["\n      white-space: normal;\n    "]);
}); // Description is a block element below the children, like a subtitle

var Description = styled$1.span.withConfig({
  displayName: "Item__Description",
  componentId: "aiqnor-7"
})(["\n  color: ", ";\n  flex: 1 1 auto;\n  font-size: 12px;\n  line-height: 16 / 12;\n  margin-top: ", "px;\n"], subtleText, divide(gridSize$5, 2)); // NOTE: Exposed as a named export for this package

styled$1.span.withConfig({
  displayName: "Item__SecondaryText",
  componentId: "aiqnor-8"
})(["\n  color: ", ";\n"], subtleText);

function getInputBackground(_ref) {
  var isChecked = _ref.isChecked,
      isDisabled = _ref.isDisabled,
      isHovered = _ref.isHovered,
      isPressed = _ref.isPressed;
  var background = N40$2;
  if (isHovered) background = N50$1;
  if (isPressed) background = B200$1;
  if (isChecked) background = B400;
  if (isDisabled) background = N20$3;
  if (isChecked && isDisabled) background = N600;
  return background;
}
function getInputFill(appearanceProps) {
  return appearanceProps.isChecked ? N0$7 : 'transparent';
}

var supportsVoiceOver = function supportsVoiceOver() {
  return /Mac OS X/.test(navigator.userAgent);
};
var getAriaRoles = function getAriaRoles() {
  return {
    checkbox: supportsVoiceOver() ? 'checkbox' : 'menuitemcheckbox',
    link: 'menuitem',
    option: 'option',
    radio: supportsVoiceOver() ? 'radio' : 'menuitemradio'
  };
};

var Element$1 =
/*#__PURE__*/
function (_PureComponent) {
  _inherits$8(Element, _PureComponent);

  function Element() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck$8(this, Element);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn$8(this, (_getPrototypeOf2 = _getPrototypeOf$2(Element)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty$3(_assertThisInitialized$4(_this), "handleMouseDown", function (e) {
      e.preventDefault();

      _this.props.handleMouseDown();
    });

    return _this;
  }

  _createClass$8(Element, [{
    key: "render",
    value: function render() {
      var props = this.props;
      var isActive = props.isActive,
          isChecked = props.isChecked,
          isDisabled = props.isDisabled,
          isFocused = props.isFocused,
          isHidden = props.isHidden,
          isSelected = props.isSelected,
          isPrimary = props.isPrimary;
      var type = this.props.type || '';
      var appearanceProps = {
        isActive: isActive,
        isChecked: isChecked,
        isDisabled: isDisabled,
        isFocused: isFocused,
        isHidden: isHidden,
        isSelected: isSelected,
        isPrimary: isPrimary
      };
      var ariaProps = {
        'aria-checked': !!isChecked,
        'aria-disabled': !!isDisabled,
        'aria-hidden': !!isHidden,
        'aria-selected': !!isSelected
      };
      var ariaRoles = getAriaRoles();
      var commonProps = {
        'data-role': 'droplistItem',
        onClick: props.handleClick,
        onKeyPress: props.handleKeyPress,
        onMouseDown: this.handleMouseDown,
        onMouseOut: props.handleMouseOut,
        onMouseOver: props.handleMouseOver,
        onMouseUp: props.handleMouseUp,
        role: ariaRoles[type],
        title: props.title,
        tabIndex: props.type === 'option' ? null : 0
      };
      var testingProps = process.env.NODE_ENV === 'test' ? {
        'data-test-active': isActive,
        'data-test-checked': isChecked,
        'data-test-disabled': isDisabled,
        'data-test-hidden': isHidden,
        'data-test-selected': isSelected
      } : {};

      var consolidatedProps = _objectSpread$q({}, appearanceProps, ariaProps, commonProps, testingProps);

      if (props.href && !isDisabled) {
        return React__default.createElement(Anchor, _extends$d({
          href: props.href,
          target: props.target
        }, consolidatedProps), props.children);
      }

      return React__default.createElement(Span, consolidatedProps, props.children);
    }
  }]);

  return Element;
}(PureComponent);

var inputTypes = {
  checkbox: default_1$2,
  radio: default_1$1
};

var Item =
/*#__PURE__*/
function (_PureComponent) {
  _inherits$8(Item, _PureComponent);

  function Item() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck$8(this, Item);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn$8(this, (_getPrototypeOf2 = _getPrototypeOf$2(Item)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty$3(_assertThisInitialized$4(_this), "state", {
      isHovered: false,
      isPressed: false
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "componentDidMount", function () {
      return document.addEventListener('mouseup', _this.handleMouseUp);
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "componentWillUnmount", function () {
      return document.removeEventListener('mouseup', _this.handleMouseUp);
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "guardedActivate", function (event) {
      var _this$props = _this.props,
          isDisabled = _this$props.isDisabled,
          onActivate = _this$props.onActivate;
      if (!isDisabled && onActivate) onActivate({
        item: _assertThisInitialized$4(_this),
        event: event
      });
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "handleClick", function (event) {
      return _this.guardedActivate(event);
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "handleKeyPress", function (event) {
      var keyIsValid = ['Enter', ' '].indexOf(event.key) > -1;
      if (keyIsValid) _this.guardedActivate(event);
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "handleMouseDown", function () {
      return _this.setState({
        isPressed: true
      });
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "handleMouseUp", function () {
      return _this.setState({
        isPressed: false
      });
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "handleMouseOut", function () {
      return _this.setState({
        isHovered: false
      });
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "handleMouseOver", function () {
      return _this.setState({
        isHovered: true
      });
    });

    return _this;
  }

  _createClass$8(Item, [{
    key: "render",
    value: function render() {
      var props = this.props;
      var _this$state = this.state,
          isHovered = _this$state.isHovered,
          isPressed = _this$state.isPressed;
      var type = props.type || '';
      var hasInput = ['checkbox', 'radio'].indexOf(type) > -1;
      var Input = inputTypes[type];
      var appearanceProps = {
        isActive: props.type === 'link' && props.isActive || props.type === 'option' && props.isSelected,
        isChecked: ['checkbox', 'radio'].indexOf(type) > -1 && props.isChecked,
        isDisabled: props.isDisabled,
        isFocused: props.isFocused,
        isHidden: props.isHidden,
        isHovered: isHovered,
        isPressed: isPressed,
        isSelected: type === 'option' && props.isSelected,
        isPrimary: props.appearance === 'primary'
      };
      var element = React__default.createElement(Element$1, _extends$d({}, appearanceProps, {
        handleClick: this.handleClick,
        handleKeyPress: this.handleKeyPress,
        handleMouseOut: this.handleMouseOut,
        handleMouseOver: this.handleMouseOver,
        handleMouseUp: this.handleMouseUp,
        handleMouseDown: this.handleMouseDown,
        href: props.href,
        target: props.target,
        title: props.title,
        type: props.type
      }), hasInput && React__default.createElement(InputWrapper, appearanceProps, React__default.createElement(Input, {
        label: "",
        primaryColor: getInputBackground(appearanceProps),
        secondaryColor: getInputFill(appearanceProps),
        size: "medium"
      })), !!props.elemBefore && React__default.createElement(Before, null, props.elemBefore), React__default.createElement(ContentWrapper, null, React__default.createElement(Content, {
        allowMultiline: this.context.shouldAllowMultilineItems
      }, props.children), !!props.description && React__default.createElement(Description, null, props.description)), !!props.elemAfter && React__default.createElement(After, null, props.elemAfter));
      return React__default.createElement("span", {
        role: "presentation"
      }, props.tooltipDescription ? React__default.createElement(Tooltip$2, {
        content: props.tooltipDescription,
        position: props.tooltipPosition
      }, element) : element);
    }
  }]);

  return Item;
}(PureComponent);

_defineProperty$3(Item, "defaultProps", {
  appearance: 'default',
  children: null,
  description: '',
  elemAfter: null,
  elemBefore: null,
  href: null,
  isActive: false,
  isChecked: false,
  isDisabled: false,
  isFocused: false,
  isHidden: false,
  isSelected: false,
  itemContext: 'menu',
  onActivate: function onActivate() {},
  target: null,
  title: null,
  tooltipDescription: null,
  tooltipPosition: 'right',
  type: 'link'
});

_defineProperty$3(Item, "contextTypes", {
  shouldAllowMultilineItems: PropTypes$3.bool
});
var createAndFireEventOnAtlaskit$3 = createAndFireEvent$4('atlaskit');
var Item$1 = withAnalyticsContext$9({
  componentName: 'droplistItem',
  packageName: name$3,
  packageVersion: version$3
})(withAnalyticsEvents$9({
  onActivate: createAndFireEventOnAtlaskit$3({
    action: 'selected',
    actionSubject: 'droplistItem',
    attributes: {
      componentName: 'droplistItem',
      packageName: name$3,
      packageVersion: version$3
    }
  })
})(Item));

var Group$1 = styled$1.div.withConfig({
  displayName: "Group",
  componentId: "sc-1q26u8b-0"
})(["\n  box-sizing: border-box;\n  display: block;\n  margin-top: ", "px;\n\n  &:first-child {\n    margin-top: 0;\n  }\n"], gridSize$5);
var Heading = styled$1.div.withConfig({
  displayName: "Group__Heading",
  componentId: "sc-1q26u8b-1"
})(["\n  align-items: baseline;\n  color: ", ";\n  display: flex;\n  flex: 1 1 auto;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 1;\n  margin: 0;\n  padding: ", "px ", "px;\n"], themed$3({
  light: N300,
  dark: DN300$1
}), gridSize$5, multiply(gridSize$5, 1.5));
var HeadingAfter = styled$1.div.withConfig({
  displayName: "Group__HeadingAfter",
  componentId: "sc-1q26u8b-2"
})(["\n  flex: 0 0 auto;\n"]);
var HeadingText = styled$1.div.withConfig({
  displayName: "Group__HeadingText",
  componentId: "sc-1q26u8b-3"
})(["\n  flex: 1 1 auto;\n  font-size: 12px;\n  text-transform: uppercase;\n"]);

var DroplistGroup =
/*#__PURE__*/
function (_PureComponent) {
  _inherits$8(DroplistGroup, _PureComponent);

  function DroplistGroup() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck$8(this, DroplistGroup);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn$8(this, (_getPrototypeOf2 = _getPrototypeOf$2(DroplistGroup)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty$3(_assertThisInitialized$4(_this), "state", {
      ariaLabel: _this.props.heading
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "componentDidMount", function () {
      if (_this.props.heading || _this.props.elemAfter) {
        _this.setState({
          ariaLabel: _this.getAriaLabel()
        });
      }
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "componentDidUpdate", function () {
      if (_this.props.heading || _this.props.elemAfter) {
        // eslint-disable-next-line react/no-did-update-set-state
        _this.setState({
          ariaLabel: _this.getAriaLabel()
        });
      }
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "getAriaLabel", function () {
      var _this$props = _this.props,
          elemAfter = _this$props.elemAfter,
          heading = _this$props.heading;
      var afterText = elemAfter && typeof elemAfter === 'string' ? elemAfter : _this.headingElement && _this.headingElement.textContent;
      return "".concat(heading || '', " ").concat(afterText || '');
    });

    return _this;
  }

  _createClass$8(DroplistGroup, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props2 = this.props,
          children = _this$props2.children,
          elemAfter = _this$props2.elemAfter,
          heading = _this$props2.heading;
      var ariaLabel = this.state.ariaLabel;
      return React__default.createElement(Group$1, {
        "aria-label": ariaLabel,
        role: "group"
      }, heading ? React__default.createElement(Heading, {
        "aria-hidden": "true",
        "data-role": "droplistGroupHeading"
      }, React__default.createElement(HeadingText, null, heading), elemAfter ? React__default.createElement(HeadingAfter, {
        innerRef: function innerRef(r) {
          _this2.headingElement = r;
        }
      }, elemAfter) : null) : null, children);
    }
  }]);

  return DroplistGroup;
}(PureComponent);

DroplistGroup.displayName = 'Group';
var Group = DroplistGroup;

var chevronDown = {};

Object.defineProperty(chevronDown, "__esModule", {
  value: true
});
var default_1 = chevronDown.default = void 0;

var _react$1 = _interopRequireDefault$1(React__default);

var _Icon = _interopRequireDefault$1(Icon$7);

function _interopRequireDefault$1(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var ChevronDownIcon = function ChevronDownIcon(props) {
  return _react$1.default.createElement(_Icon.default, _extends({
    dangerouslySetGlyph: "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" focusable=\"false\" role=\"presentation\"><path d=\"M8.292 10.293a1.009 1.009 0 0 0 0 1.419l2.939 2.965c.218.215.5.322.779.322s.556-.107.769-.322l2.93-2.955a1.01 1.01 0 0 0 0-1.419.987.987 0 0 0-1.406 0l-2.298 2.317-2.307-2.327a.99.99 0 0 0-1.406 0z\" fill=\"currentColor\" fill-rule=\"evenodd\"/></svg>"
  }, props));
};

ChevronDownIcon.displayName = 'ChevronDownIcon';
var _default = ChevronDownIcon;
default_1 = chevronDown.default = _default;

var WidthConstrainer = styled$1.div(templateObject_1$1 || (templateObject_1$1 = __makeTemplateObject$2(["\n  ", ";\n"], ["\n  ",
    ";\n"])), function (_a) {
    var shouldFitContainer = _a.shouldFitContainer;
    return shouldFitContainer ? '' : 'max-width: 300px;';
});
var templateObject_1$1;

var KEY_UP = 'ArrowUp';
var KEY_DOWN = 'ArrowDown';
var KEY_SPACE = ' ';
var KEY_ENTER = 'Enter';
var KEY_TAB = 'Tab';

var name$1="@atlaskit/dropdown-menu";var version$1="9.0.6";

var prefix = function (key) {
    return "@atlaskit-private-do-not-use/dropdown-menu:" + key;
};
var focusManagerContext = prefix('focus-manager');
var selectionCacheContext = prefix('selection-cache');
var clickManagerContext = prefix('click-manager');

var _a$2;
var DropdownItemClickManager = /** @class */ (function (_super) {
    __extends$3(DropdownItemClickManager, _super);
    function DropdownItemClickManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleItemClicked = function (event) {
            _this.props.onItemClicked(event);
        };
        return _this;
    }
    DropdownItemClickManager.prototype.getChildContext = function () {
        var _a;
        return _a = {},
            _a[clickManagerContext] = {
                itemClicked: this.handleItemClicked,
            },
            _a;
    };
    DropdownItemClickManager.prototype.render = function () {
        return this.props.children;
    };
    DropdownItemClickManager.childContextTypes = (_a$2 = {},
        // eslint-disable-next-line react/forbid-prop-types
        _a$2[clickManagerContext] = PropTypes$3.object,
        _a$2);
    return DropdownItemClickManager;
}(Component$1));
var DropdownItemClickManager$1 = DropdownItemClickManager;

var _a$1;
var DropdownItemFocusManager = /** @class */ (function (_super) {
    __extends$3(DropdownItemFocusManager, _super);
    function DropdownItemFocusManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.registeredItems = [];
        _this.handleItemRegistered = function (itemId, itemNode) {
            _this.registeredItems.push({ itemId: itemId, itemNode: itemNode });
            if (_this.props.autoFocus && _this.registeredItems.length === 1) {
                _this.focusedItemId = itemId;
                itemNode.focus();
            }
        };
        _this.handleItemDeregistered = function (itemId) {
            _this.registeredItems = _this.registeredItems.filter(function (item) { return item.itemId !== itemId; });
        };
        _this.handleItemFocused = function (itemId) {
            _this.focusedItemId = itemId;
        };
        _this.handleItemUpdated = function (itemId, itemNode) {
            var matchingIndex = -1;
            for (var i = 0; i < _this.registeredItems.length; i++) {
                if (_this.registeredItems[i].itemId === itemId) {
                    matchingIndex = i;
                    break;
                }
            }
            if (matchingIndex === -1) {
                _this.handleItemRegistered(itemId, itemNode);
                return;
            }
            _this.registeredItems[matchingIndex].itemNode = itemNode;
            if (_this.focusedItemIndex() === matchingIndex) {
                itemNode.focus();
            }
        };
        _this.focusedItemIndex = function () {
            var _a = _this, focusedItemId = _a.focusedItemId, registeredItems = _a.registeredItems;
            for (var i = 0; i < registeredItems.length; i++) {
                if (registeredItems[i].itemId === focusedItemId) {
                    return i;
                }
            }
            return -1;
        };
        _this.handleKeyboard = function (event) {
            var key = event.key, shiftKey = event.shiftKey;
            var focusedItemIndex = _this.focusedItemIndex();
            if (key === KEY_UP || key === KEY_DOWN) {
                // We prevent default here to avoid page scrolling when up/down
                // pressed while dropdown is focused.
                event.preventDefault();
                if (focusedItemIndex < 0) {
                    return;
                }
                var nextItemIndex = key === KEY_UP
                    ? Math.max(0, focusedItemIndex - 1)
                    : Math.min(_this.registeredItems.length - 1, focusedItemIndex + 1);
                _this.registeredItems[nextItemIndex].itemNode.focus();
            }
            if (key === KEY_TAB) {
                if (!shiftKey && focusedItemIndex === _this.registeredItems.length - 1) {
                    if (_this.props.close)
                        _this.props.close({ event: event, source: 'keydown' });
                }
                if (shiftKey && focusedItemIndex === 0) {
                    if (_this.props.close)
                        _this.props.close({ event: event, source: 'keydown' });
                }
            }
        };
        return _this;
    }
    DropdownItemFocusManager.prototype.getChildContext = function () {
        var _a;
        return _a = {},
            _a[focusManagerContext] = {
                itemFocused: this.handleItemFocused,
                registerItem: this.handleItemRegistered,
                deregisterItem: this.handleItemDeregistered,
                updateItem: this.handleItemUpdated,
            },
            _a;
    };
    DropdownItemFocusManager.prototype.render = function () {
        // eslint-disable-next-line jsx-a11y/no-static-element-interactions
        return React__default.createElement("div", { onKeyDown: this.handleKeyboard }, this.props.children);
    };
    DropdownItemFocusManager.childContextTypes = (_a$1 = {},
        // eslint-disable-next-line react/forbid-prop-types
        _a$1[focusManagerContext] = PropTypes$3.object,
        _a$1);
    return DropdownItemFocusManager;
}(Component$1));
var DropdownItemFocusManager$1 = DropdownItemFocusManager;

function find(array, predicate, context) {
  if (typeof Array.prototype.find === 'function') {
    return array.find(predicate, context);
  }

  context = context || this;
  var length = array.length;
  var i;

  if (typeof predicate !== 'function') {
    throw new TypeError(predicate + ' is not a function');
  }

  for (i = 0; i < length; i++) {
    if (predicate.call(context, array[i], i, array)) {
      return array[i];
    }
  }
}

var find_1 = find;

var _a;
var isItemInList = function (itemList, itemId, groupId) {
    return Boolean(find_1(itemList, function (item) { return item.id === itemId && item.groupId === groupId; }));
};
var DropdownItemSelectionCache = /** @class */ (function (_super) {
    __extends$3(DropdownItemSelectionCache, _super);
    function DropdownItemSelectionCache() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // Need to store selectedItemValues in state rather than component instance property
        // to ensure that re-render happens down the tree via context when selectedItemValues
        // is updated.
        _this.state = {
            lastCacheUpdate: 0,
        };
        _this.selectedItems = []; // eslint-disable-line react/sort-comp
        // If any radio/checkbox items have defaultSelected applied, we need to keep track of whether
        // each of those items has had it's state set to 'selected'. This is because when the dropdown
        // menu is closed and then opened again, all of the radio/checkbox items re-mount so they
        // try to again apply their defaultSelected status. defaultSelected should only be applied on
        // the initial mount, as users can change the value post-mount. Alternatively, products can use
        // the isSelected prop with the onClick handler to control the selected state manually if needed.
        _this.alreadyDefaultedItems = []; // eslint-disable-line react/sort-comp
        _this.handleItemSelectionsChanged = function (groupId, newGroupSelections) {
            var newSelectedItems = __spread(_this.selectedItems.filter(function (item) { return item.groupId !== groupId; }), newGroupSelections);
            _this.selectedItems = newSelectedItems;
            // We store selectedItems in an instance variable (this.selectedItems) instead of state,
            // because if multiple children update the cache at the same time it causes unexpected
            // behaviour due to the asynchronous behaviour of setState. So we need to trigger setState
            // with a different value to cause the children to be updated with their new selection values.
            _this.setState({ lastCacheUpdate: Date.now() });
        };
        return _this;
    }
    DropdownItemSelectionCache.prototype.getChildContext = function () {
        var _a;
        var _this = this;
        return _a = {},
            _a[selectionCacheContext] = {
                // This function returns true/false describing whether the supplied navigation item
                // (which must have a unique item and group ID) is currently selected - this is used
                // by radio and checkbox dropdown items to retreive their 'selected' state when they
                // re-mount, which happens when the dropdown is closed and then re-opened.
                isItemSelected: function (groupId, itemId) {
                    return isItemInList(_this.selectedItems, itemId, groupId);
                },
                itemsInGroup: function (groupId) {
                    return _this.selectedItems.filter(function (item) { return item.groupId === groupId; });
                },
                itemSelectionsChanged: this.handleItemSelectionsChanged,
                hasItemAlreadyHadDefaultSelectedApplied: function (groupId, itemId) { return isItemInList(_this.alreadyDefaultedItems, itemId, groupId); },
                markItemAsDefaultApplied: function (groupId, itemId) {
                    _this.alreadyDefaultedItems.push({ id: itemId, groupId: groupId });
                },
            },
            _a;
    };
    DropdownItemSelectionCache.prototype.render = function () {
        return React__default.createElement("div", null, this.props.children);
    };
    DropdownItemSelectionCache.childContextTypes = (_a = {},
        _a[selectionCacheContext] = PropTypes$3.shape({
            isItemSelected: PropTypes$3.func,
            itemsInGroup: PropTypes$3.func,
            itemSelectionsChanged: PropTypes$3.func,
        }),
        _a);
    return DropdownItemSelectionCache;
}(Component$1));
var DropdownItemSelectionCache$1 = DropdownItemSelectionCache;

var DropdownMenuStateless = /** @class */ (function (_super) {
    __extends$3(DropdownMenuStateless, _super);
    function DropdownMenuStateless() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.dropdownListPositioned = false;
        _this.state = {
            id: uid$1({ id: _this.constructor.name }),
            autoFocusDropdownItems: false,
        };
        _this.componentDidMount = function () {
            if (_this.isUsingDeprecatedAPI()) {
                if (process.env.NODE_ENV !== 'test' &&
                    process.env.NODE_ENV !== 'production' &&
                    !process.env.CI) {
                    // eslint-disable-next-line no-console
                    console.log('DropdownMenu.items is deprecated. Please switch to the declarative API.');
                }
                if (_this.domItemsList) {
                    _this.focusFirstItem();
                }
            }
        };
        _this.componentDidUpdate = function (prevProp) {
            if (_this.isUsingDeprecatedAPI() && _this.props.isOpen && !prevProp.isOpen) {
                _this.focusFirstItem();
            }
        };
        _this.getNextFocusable = function (indexItem, available) {
            if (!_this.domItemsList) {
                return null;
            }
            var currentItem = typeof indexItem !== 'number' ? -1 : indexItem;
            var latestAvailable = typeof available !== 'number' ? currentItem : available;
            if (currentItem < _this.domItemsList.length - 1) {
                currentItem++;
                if (_this.domItemsList[currentItem].getAttribute('aria-hidden') !== 'true') {
                    return currentItem;
                }
                return _this.getNextFocusable(currentItem, latestAvailable);
            }
            return latestAvailable;
        };
        _this.getPrevFocusable = function (indexItem, available) {
            if (!_this.domItemsList) {
                return null;
            }
            var currentItem = typeof indexItem !== 'number' ? -1 : indexItem;
            var latestAvailable = typeof available !== 'number' ? currentItem : available;
            if (currentItem && currentItem > 0) {
                currentItem--;
                if (_this.domItemsList[currentItem].getAttribute('aria-hidden') !== 'true') {
                    return currentItem;
                }
                return _this.getPrevFocusable(currentItem, latestAvailable);
            }
            return latestAvailable || currentItem;
        };
        _this.focusFirstItem = function () {
            if (_this.sourceOfIsOpen === 'keydown') {
                _this.focusItem(_this.getNextFocusable());
            }
        };
        _this.focusNextItem = function () {
            _this.focusItem(_this.getNextFocusable(_this.focusedItem));
        };
        _this.focusPreviousItem = function () {
            _this.focusItem(_this.getPrevFocusable(_this.focusedItem));
        };
        _this.focusItem = function (index) {
            if (!_this.domItemsList || !index) {
                return;
            }
            _this.focusedItem = index;
            _this.domItemsList[_this.focusedItem].focus();
        };
        _this.isTargetChildItem = function (target) {
            if (!target)
                return false;
            var isDroplistItem = target.getAttribute('data-role') === 'droplistItem';
            // eslint-disable-next-line react/no-find-dom-node
            var thisDom = reactDom.exports.findDOMNode(_this);
            return isDroplistItem && thisDom ? thisDom.contains(target) : false;
        };
        _this.handleKeyboardInteractionForClosed = function (event) {
            if (_this.props.isOpen) {
                return;
            }
            switch (event.key) {
                case KEY_DOWN:
                case KEY_SPACE:
                case KEY_ENTER:
                    event.preventDefault();
                    _this.open({ event: event, source: 'keydown' });
                    break;
            }
        };
        _this.handleKeyboardInteractionsDeprecated = function (event) {
            if (_this.props.isOpen) {
                if (_this.isTargetChildItem(event.target)) {
                    switch (event.key) {
                        case 'ArrowUp':
                            event.preventDefault();
                            _this.focusPreviousItem();
                            break;
                        case 'ArrowDown':
                            event.preventDefault();
                            _this.focusNextItem();
                            break;
                        case 'Tab':
                            event.preventDefault();
                            _this.close({ event: event });
                            break;
                    }
                }
                else if (event.key === 'ArrowDown') {
                    _this.sourceOfIsOpen = 'keydown';
                    _this.focusFirstItem();
                }
                else if (event.key === 'Tab') {
                    _this.close({ event: event });
                }
            }
            else {
                switch (event.key) {
                    case KEY_DOWN:
                    case KEY_SPACE:
                    case KEY_ENTER:
                        event.preventDefault();
                        _this.open({ event: event, source: 'keydown' });
                        break;
                }
            }
        };
        _this.domMenuContainer = null;
        _this.isUsingDeprecatedAPI = function () { return Boolean(_this.props.items.length); };
        _this.handleOpenChange = function (args) {
            _this.props.onOpenChange(args);
        };
        _this.triggerContent = function () {
            var _a = _this.props, children = _a.children, trigger = _a.trigger, isOpen = _a.isOpen, triggerButtonProps = _a.triggerButtonProps, triggerType = _a.triggerType, testId = _a.testId;
            var insideTriggerContent = _this.isUsingDeprecatedAPI()
                ? children
                : trigger;
            if (triggerType !== 'button') {
                return insideTriggerContent;
            }
            // we probably don't need to object copying
            // ts doesn't like destructuring copy - so converting to object.assign
            var triggerProps = Object.assign({}, triggerButtonProps);
            var defaultButtonProps = {
                'aria-controls': _this.state.id,
                'aria-expanded': isOpen,
                'aria-haspopup': true,
                isSelected: isOpen,
            };
            if (!triggerProps.iconAfter && !triggerProps.iconBefore) {
                triggerProps.iconAfter = React__default.createElement(default_1, { size: "medium", label: "" });
            }
            return (React__default.createElement(Button$1, __assign$2({}, defaultButtonProps, triggerProps, { testId: testId && testId + "--trigger" }), insideTriggerContent));
        };
        _this.open = function (attrs) {
            _this.sourceOfIsOpen = attrs.source;
            _this.props.onOpenChange({ isOpen: true, event: attrs.event });
            // Dropdown opened via keyboard gets auto focussed
            _this.setState({
                autoFocusDropdownItems: _this.sourceOfIsOpen === 'keydown',
            });
        };
        _this.close = function (attrs) {
            _this.sourceOfIsOpen = null;
            _this.props.onOpenChange({ isOpen: false, event: attrs.event });
        };
        _this.toggle = function (attrs) {
            if (attrs.source === 'keydown')
                return;
            if (_this.props.isOpen) {
                _this.close(attrs);
            }
            else {
                _this.open(attrs);
            }
        };
        _this.renderTrigger = function () {
            var triggerContent = _this.triggerContent();
            return _this.isUsingDeprecatedAPI() ? (triggerContent) : (React__default.createElement("div", { ref: function (ref) {
                    _this.triggerContainer = ref;
                } }, triggerContent));
        };
        _this.renderItems = function (items) {
            return items.map(function (item, itemIndex) { return (React__default.createElement(Item$1, __assign$2({}, item, { key: itemIndex, onActivate: function (_a) {
                    var event = _a.event;
                    _this.props.onItemActivated({ item: item, event: event });
                } }), item.content)); });
        };
        _this.renderGroups = function (groups) {
            return groups.map(function (group, groupIndex) { return (React__default.createElement(Group, { heading: group.heading, elemAfter: group.elemAfter, key: groupIndex }, _this.renderItems(group.items))); });
        };
        _this.renderDeprecated = function () {
            var _a = _this.props, items = _a.items, shouldFitContainer = _a.shouldFitContainer;
            var id = _this.state.id;
            return (React__default.createElement("div", { id: id, ref: function (ref) {
                    _this.domMenuContainer = ref;
                    _this.domItemsList = ref
                        ? ref.querySelectorAll('[data-role="droplistItem"]')
                        : null;
                }, role: "menu", style: shouldFitContainer ? undefined : { maxWidth: 300 } }, _this.renderGroups(items)));
        };
        /** Ensure droplist is positioned before focussing to avoid container scrolling to top */
        _this.onDroplistPositioned = function () {
            _this.dropdownListPositioned = true;
            // Trigger render so item focus manager can auto focus for keyboard trigger
            _this.setState({
                autoFocusDropdownItems: _this.sourceOfIsOpen === 'keydown',
            });
            if (_this.props.onPositioned)
                _this.props.onPositioned();
        };
        /** Render focusManager only after droplist has been positioned when trigger via keyboard */
        _this.renderDropdownItems = function () {
            if (_this.sourceOfIsOpen === 'keydown' && _this.dropdownListPositioned) {
                return (React__default.createElement(DropdownItemFocusManager$1, { autoFocus: _this.state.autoFocusDropdownItems, close: _this.close }, _this.props.children));
            }
            return React__default.createElement(Fragment$1, null, _this.props.children);
        };
        return _this;
    }
    DropdownMenuStateless.prototype.handleClickDeprecated = function (event) {
        var menuContainer = this.domMenuContainer;
        if (!menuContainer ||
            (menuContainer && !menuContainer.contains(event.target))) {
            this.toggle({ source: 'click', event: event });
        }
    };
    DropdownMenuStateless.prototype.handleClick = function (event) {
        // For any clicks we don't want autofocus
        this.setState({ autoFocusDropdownItems: false });
        if (this.isUsingDeprecatedAPI()) {
            this.handleClickDeprecated(event);
            return;
        }
        if (this.triggerContainer &&
            this.triggerContainer.contains(event.target) &&
            event.target.disabled !== true) {
            var isOpen = this.props.isOpen;
            this.sourceOfIsOpen = 'mouse';
            this.props.onOpenChange({ isOpen: !isOpen, event: event });
        }
    };
    DropdownMenuStateless.prototype.render = function () {
        var _this = this;
        var _a = this.props, appearance = _a.appearance, boundariesElement = _a.boundariesElement, isLoading = _a.isLoading, isOpen = _a.isOpen, onOpenChange = _a.onOpenChange, position = _a.position, isMenuFixed = _a.isMenuFixed, shouldAllowMultilineItems = _a.shouldAllowMultilineItems, shouldFitContainer = _a.shouldFitContainer, shouldFlip = _a.shouldFlip, testId = _a.testId;
        var id = this.state.id;
        var isDeprecated = this.isUsingDeprecatedAPI();
        var deprecatedProps = isDeprecated
            ? {
                onKeyDown: this.handleKeyboardInteractionsDeprecated,
                shouldAllowMultilineItems: shouldAllowMultilineItems,
            }
            : {
                onKeyDown: this.handleKeyboardInteractionForClosed,
            };
        return (React__default.createElement(DropdownItemSelectionCache$1, null,
            React__default.createElement(Droplist$1, __assign$2({ appearance: appearance, boundariesElement: boundariesElement, isLoading: isLoading, isOpen: isOpen, onClick: function (e) { return _this.handleClick(e); }, onOpenChange: this.handleOpenChange, position: position, isMenuFixed: isMenuFixed, shouldFitContainer: shouldFitContainer, shouldFlip: shouldFlip, trigger: this.renderTrigger(), onPositioned: this.onDroplistPositioned }, deprecatedProps, { analyticsContext: {
                    componentName: 'dropdownMenu',
                    packageName: name$1,
                    packageVersion: version$1,
                }, testId: testId }), isDeprecated ? (this.renderDeprecated()) : (React__default.createElement(WidthConstrainer, { id: id, role: "menu", shouldFitContainer: shouldFitContainer },
                React__default.createElement(DropdownItemClickManager$1, { onItemClicked: function (event) {
                        return onOpenChange({ isOpen: false, event: event });
                    } }, this.renderDropdownItems()))))));
    };
    DropdownMenuStateless.defaultProps = {
        appearance: 'default',
        boundariesElement: 'viewport',
        isLoading: false,
        isOpen: false,
        items: [],
        onItemActivated: function () { },
        onOpenChange: function () { },
        position: 'bottom left',
        isMenuFixed: false,
        shouldAllowMultilineItems: false,
        shouldFitContainer: false,
        shouldFlip: true,
        triggerType: 'default',
        onPositioned: function () { },
    };
    return DropdownMenuStateless;
}(Component$1));
var createAndFireEventOnAtlaskit$2 = createAndFireEvent$4('atlaskit');
var StatelessMenu = withAnalyticsContext$9({
    componentName: 'dropdownMenu',
    packageName: name$1,
    packageVersion: version$1,
})(withAnalyticsEvents$9({
    onOpenChange: createAndFireEventOnAtlaskit$2({
        action: 'toggled',
        actionSubject: 'dropdownMenu',
        attributes: {
            componentName: 'dropdownMenu',
            packageName: name$1,
            packageVersion: version$1,
        },
    }),
})(DropdownMenuStateless));

var DropdownMenu = /** @class */ (function (_super) {
    __extends$3(DropdownMenu, _super);
    function DropdownMenu() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            isOpen: _this.props.defaultOpen,
            items: __spread(_this.props.items),
        };
        _this.findActivatedGroup = function (item) {
            return _this.state.items.filter(function (group) { return group.items.indexOf(item) > -1; })[0];
        }; // eslint-disable-line
        _this.handleItemActivation = function (attrs) {
            var activatedItem = attrs.item;
            var activatedGroup = _this.findActivatedGroup(activatedItem);
            var items = __spread(_this.state.items);
            switch (activatedItem.type) {
                case 'checkbox':
                    activatedItem.isChecked = !activatedItem.isChecked;
                    _this.props.onItemActivated({ item: activatedItem });
                    _this.setState({ items: items });
                    break;
                case 'radio':
                    activatedGroup.items.forEach(function (i) {
                        if (i === activatedItem) {
                            i.isChecked = true; // eslint-disable-line no-param-reassign
                        }
                        else {
                            i.isChecked = false; // eslint-disable-line no-param-reassign
                        }
                    });
                    _this.props.onItemActivated({ item: activatedItem });
                    _this.setState({ items: items });
                    break;
                case 'link':
                default:
                    _this.props.onItemActivated({ item: activatedItem });
                    _this.close();
                    break;
            }
        };
        _this.handleOpenChange = function (attrs) {
            var _a;
            var args = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                args[_i - 1] = arguments[_i];
            }
            if (_this.state.isOpen === attrs.isOpen)
                return;
            _this.setState({ isOpen: attrs.isOpen });
            (_a = _this.props).onOpenChange.apply(_a, __spread([attrs], args));
        };
        _this.close = function () {
            var _a;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            if (_this.state.isOpen === false)
                return;
            _this.setState({ isOpen: false });
            (_a = _this.props).onOpenChange.apply(_a, __spread([{ isOpen: false }], args));
        };
        return _this;
    }
    DropdownMenu.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {
        if (nextProps.items !== this.state.items) {
            this.setState({ items: __spread(nextProps.items) });
        }
        if (nextProps.isOpen !== this.props.isOpen) {
            this.setState({ isOpen: nextProps.isOpen });
        }
    };
    DropdownMenu.prototype.render = function () {
        var isOpen = this.state.isOpen;
        var _a = this.props, appearance = _a.appearance, boundariesElement = _a.boundariesElement, children = _a.children, isLoading = _a.isLoading, items = _a.items, position = _a.position, isMenuFixed = _a.isMenuFixed, shouldAllowMultilineItems = _a.shouldAllowMultilineItems, shouldFitContainer = _a.shouldFitContainer, shouldFlip = _a.shouldFlip, testId = _a.testId, trigger = _a.trigger, triggerButtonProps = _a.triggerButtonProps, triggerType = _a.triggerType, onPositioned = _a.onPositioned;
        return (React__default.createElement(StatelessMenu, { appearance: appearance, boundariesElement: boundariesElement, isOpen: isOpen, isLoading: isLoading, items: items, onItemActivated: this.handleItemActivation, onOpenChange: this.handleOpenChange, position: position, isMenuFixed: isMenuFixed, shouldAllowMultilineItems: shouldAllowMultilineItems, shouldFitContainer: shouldFitContainer, shouldFlip: shouldFlip, trigger: trigger, triggerButtonProps: triggerButtonProps, triggerType: triggerType, onPositioned: onPositioned, testId: testId }, children));
    };
    DropdownMenu.defaultProps = {
        appearance: 'default',
        boundariesElement: 'viewport',
        defaultOpen: false,
        isLoading: false,
        isOpen: false,
        items: [],
        onItemActivated: function () { },
        onOpenChange: function () { },
        position: 'bottom left',
        isMenuFixed: false,
        shouldAllowMultilineItems: false,
        shouldFitContainer: false,
        shouldFlip: true,
        triggerType: 'default',
        onPositioned: function () { },
    };
    return DropdownMenu;
}(Component$1));
var DropdownMenu$1 = DropdownMenu;

// We need to type this with the above type - currently this component is has "any" for its props.
var DropdownItem = withItemClick$1(withItemFocus$1(Item$2));

var DropdownItemGroup = /** @class */ (function (_super) {
    __extends$3(DropdownItemGroup, _super);
    function DropdownItemGroup() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DropdownItemGroup.prototype.render = function () {
        var _a = this.props, children = _a.children, elemAfter = _a.elemAfter, title = _a.title;
        return (React__default.createElement(ItemGroup, { elemAfter: elemAfter, title: title, role: "menu" }, children));
    };
    return DropdownItemGroup;
}(Component$1));
var DropdownItemGroup$1 = DropdownItemGroup;

var css_248z$z = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.badge-container{border-radius:2px;color:#4c576b;font-size:10px;font-weight:500;letter-spacing:.02em;padding:2px 5px}.badge-container.basic{color:#fff}.badge-container.basic.error{background-color:#cb1a1a}.badge-container.basic.warning{background-color:#b17707}.badge-container.basic.success{background-color:#00642e}.badge-container.basic.info{background-color:#025896}.badge-container.basic.inactive{background-color:#687792}.badge-container.basic.general{background-color:#232831}.badge-container.light.error{background-color:#fdf1f1;color:#cb1a1a}.badge-container.light.warning{background-color:#fef9ee;color:#232831}.badge-container.light.success{background-color:#eef7f2;color:#00642e}.badge-container.light.info{background-color:#eef6fb;color:#025896}.badge-container.light.inactive{background-color:#e1e4e9;color:#4c576b}.badge-container.light.general{background-color:#e1e4e9;color:#232831}.badge-container.outline{border-style:solid;border-width:1px}.badge-container.outline.error{border-color:#fdf1f1;color:#cb1a1a}.badge-container.outline.warning{border-color:#b17707;color:#b17707}.badge-container.outline.success{border-color:#00642e;color:#00642e}.badge-container.outline.info{border-color:#025896;color:#025896}.badge-container.outline.inactive{border-color:#687792;color:#687792}.badge-container.outline.general{border-color:#232831;color:#232831}";
styleInject(css_248z$z);

var BADGE_TYPE = Enum("BASIC", "LIGHT", "OUTLINE");
var BADGE_APPEARANCE = Enum("INFO", "INACTIVE", "WARNING", "ERROR", "SUCCESS", "GENERAL");
var Badge = function (_a) {
    var text = _a.text, _b = _a.appearance, appearance = _b === void 0 ? BADGE_APPEARANCE.GENERAL : _b, customClassName = _a.className, _c = _a.type, type = _c === void 0 ? BADGE_TYPE.BASIC : _c;
    return (jsx$1("span", __assign$a({ className: classNames$1("badge-container", customClassName, {
            basic: type === BADGE_TYPE.BASIC,
            light: type === BADGE_TYPE.LIGHT,
            outline: type === BADGE_TYPE.OUTLINE,
        }, {
            info: appearance === BADGE_APPEARANCE.INFO,
            inactive: appearance === BADGE_APPEARANCE.INACTIVE,
            warning: appearance === BADGE_APPEARANCE.WARNING,
            error: appearance === BADGE_APPEARANCE.ERROR,
            success: appearance === BADGE_APPEARANCE.SUCCESS,
            general: appearance === BADGE_APPEARANCE.GENERAL,
        }) }, { children: text }), void 0));
};

var ButtonWithIcon = function (props) {
    var buttonIcon = props.buttonIcon, _a = props.appearance, appearance = _a === void 0 ? "primary" : _a, isDisabled = props.isDisabled, _b = props.isLoading, isLoading = _b === void 0 ? false : _b, className = props.className, buttonProps = __rest$8(props, ["buttonIcon", "appearance", "isDisabled", "isLoading", "className"]);
    return (jsxs(Button$6, __assign$a({ appearance: appearance, isLoading: isLoading, className: classNames$1(className, { disabled: isDisabled }) }, buttonProps, { children: [!!buttonIcon && jsx$1("span", { className: classNames$1("icon", buttonIcon) }, void 0), buttonProps.children] }), void 0));
};

var css_248z$y = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.card{background-color:#fff;border:0;border-radius:4px;box-shadow:0 1px 2px rgba(0,0,0,.25);font-family:Roboto,sans-serif;margin:20px 30px}.card.w-620{margin-left:auto;margin-right:auto;max-width:620px}.card.small-card .card-title-wrap{border-bottom:none;color:#4c576b;font-size:14px;min-height:45px;padding:0 20px}.card.small-card .card-title-wrap button span{font-size:11px!important}.card.small-card .card-content{padding:10px 20px}.card.small-card .card-footer{border-top:none;color:#4c576b;font-size:12px;height:32px;padding:0;padding-top:9px!important;text-align:center}.card.small-card .justice-search-no-result p{font-size:14px}.card .card-info{color:#687792;font-size:14px}.card .card-title-wrap{align-items:center;border-bottom:1px solid #e1e4e9;box-sizing:border-box;color:#232831;display:flex;font-size:18px;font-weight:500;justify-content:space-between;line-height:24px;min-height:60px;padding:10px 25px}.card .card-title-wrap .card-sub-title{color:#687792;font-size:12px;font-weight:500;line-height:16px;margin-left:8px;padding-bottom:12px}.card .card-title-wrap>div{align-items:center;display:flex;flex:1;justify-content:space-between}.card .card-title-wrap>div>span{align-items:center;display:flex;justify-content:flex-start}.card .card-title-wrap>div>span>i{margin-left:7px}.card .card-title-wrap .icon{display:inline-block;transform:translateY(2px);vertical-align:baseline}.card .card-title-wrap button{font-size:16px;font-weight:400}.card .card-title-wrap span[role=menuitem]{font-weight:400}.card .card-content{flex:1;padding:16px 32px}.card .card-content .table{padding-top:10px}.card .card-content .table table{width:100%}.card .card-content .table table th,.card .card-content .table table thead{border-bottom:1px solid #e1e4e9;border-top:0}.card .card-content .table table td{border-top:1px solid #e1e4e9}.card .card-content .table table tbody{border-bottom:1px solid #e1e4e9}.card .card-content .table table .sc-jqCOkK.gcbJoU,.card .card-content .table table .sc-uJMKN.xfBlv{font-size:16px;letter-spacing:normal;line-height:normal;text-align:left}.card .card-content .table table .sc-jqCOkK.gcbJoU{color:#687792;font-weight:600}.card .card-content .table table .sc-uJMKN.xfBlv{color:#232831}.card .styled-information-message{color:#687792}.card .styled-information-table{margin-bottom:30px}.card .styled-information-table .row{align-items:center;display:flex;margin:0;min-height:45px}.card .styled-information-table .row.multi-line-row{height:auto!important;min-height:50px}.card .styled-information-table .row.label-hidden .cell-2{padding-left:0}.card .styled-information-table .row .cell-1{align-self:flex-start;color:#687792;font-size:14px;line-height:24px;min-width:110px;padding-top:11px;text-align:right;width:20%}.card .styled-information-table .row .cell-1 i{font-size:15px;position:relative}.card .styled-information-table .row .cell-1.left{text-align:left}.card .styled-information-table .row .cell-1.left i.icon-info[data-tip]{font-size:20px;position:relative}.card .styled-information-table .row .cell-1.left i.icon-info[data-tip]:before{position:absolute;top:3px}.card .styled-information-table .row .cell-1.center{text-align:center}.card .styled-information-table .row .cell-1.right{text-align:right}.card .styled-information-table .row .cell-2{color:#232831;flex:1;font-family:Roboto,sans-serif;font-size:16px;padding-left:30px;word-break:break-word}.card .styled-information-table .row .styled-atlaskit-select{border-color:#b8bfcd;font-size:16px;margin-left:-8px}.card .styled-information-table .row .styled-atlaskit-select .react-select__control{background-color:#fff}.card .styled-information-table .row .styled-atlaskit-select .react-select__control:hover{background-color:#f5f6f8}.card .styled-information-table .row .styled-atlaskit-select .react-select__menu{background-color:#fff;z-index:602}.card .styled-information-table .row .styled-atlaskit-select .react-select__value-container{overflow:hidden}.card .styled-information-table .row .styled-atlaskit-select .react-select__value-container.react-select__value-container--hasValue .react-select__single-value{color:#b8bfcd}.card .styled-information-table .row .styled-atlaskit-select>div{margin:0}.card .styled-information-table .row .styled-atlaskit-select>div>div:first-child{display:none}.card .styled-information-table .row .styled-atlaskit-select>div>div>div{display:inline-block;min-width:120px;width:auto}.card .styled-information-table .row .styled-atlaskit-select>div>div>div>div>div>div>div>div>div:hover{background-color:#f5f6f8}.card .styled-information-table .row .styled-atlaskit-select .styled-select-read-view{align-items:center;cursor:pointer;display:flex;font-size:16px;padding:0 4px}.card .styled-information-table .row .styled-atlaskit-select .styled-select-read-view>.text-value{display:block;max-width:155px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.card .styled-information-table .row .styled-atlaskit-select .styled-select-read-view>.icon{color:#687792;display:block;margin-left:10px}.card .styled-information-table .row .styled-atlaskit-select .react-select__option{max-width:200px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.card .styled-information-table .row .styled-atlaskit-date-picker{border-color:#b8bfcd;font-size:16px;margin-left:-8px}.card .styled-information-table .row .styled-atlaskit-date-picker>div{margin:0}.card .styled-information-table .row .styled-atlaskit-date-picker>div>div:first-child{display:none}.card .styled-information-table .row .styled-atlaskit-date-picker>div>div>div{display:inline-block;width:100%}.card .styled-information-table .row .styled-atlaskit-date-picker>div tr>th.dow{font-size:.8em;white-space:nowrap}.card .styled-information-table .row .styled-atlaskit-date-picker>div tr>td{font-size:14px}.card .styled-information-table .row .styled-atlaskit-date-picker .styled-date-picker-read-view{font-size:16px;max-width:260px;overflow:hidden;padding:0 4px;text-overflow:ellipsis;white-space:nowrap}.card .styled-information-table .row .styled-atlaskit-date-picker .styled-date-picker-read-view .icon{color:#687792;display:inline;margin-left:10px}.card .styled-information-table .row .field-text{margin-bottom:10px;margin-top:10px}.card .styled-information-table .row .field-error-message{color:#e32626;display:block;font-size:14px;margin-bottom:10px;word-break:break-word}.card .styled-information-table .row .field-helper-text{color:#687792;display:block;font-size:14px;margin-top:4px}.card .styled-information-table .row .styled-atlaskit-button button{height:30px}.card .styled-information-table .row .styled-atlaskit-button button span{font-size:14px}.card .styled-information-table .row .styled-atlaskit-button-enable button{background-color:#fff;border:1px solid #00642e;border-radius:4px;color:#00642e!important;height:30px;justify-content:center;width:80px}.card .styled-information-table .row .styled-atlaskit-button-enable span{font-family:Roboto,sans-serif;font-size:14px;line-height:30px}.card .styled-information-table .row .styled-atlaskit-button-disable button{border-radius:4px;height:30px;justify-content:center;width:80px}.card .styled-information-table .row .styled-atlaskit-button-disable span{font-family:Roboto,sans-serif;font-size:14px;line-height:30px}.card .styled-information-table .row .styled-atlaskit-inline-edit>div{font-size:14px!important;margin-top:-14px;padding-right:20px}.card .styled-information-table .row .styled-atlaskit-inline-edit>div div{color:#232831;font-size:16px}.card .styled-information-table .row .styled-atlaskit-inline-edit>div div.input-footer-info{color:#4c576b;font-size:12px;word-break:break-word}.card .styled-information-table .row .styled-atlaskit-inline-edit>div .editable-field-text{cursor:pointer}.card .styled-information-table .row .styled-atlaskit-inline-edit>div>div>div>div>div>div>div>div>div.bZkwxw,.card .styled-information-table .row .styled-atlaskit-inline-edit>div>div>div>div>div>div>div>div>div.drSQCl{background-color:#fff}.card .styled-information-table .row .styled-atlaskit-inline-edit>div>div>div>div>div>div>div>div>div.bZkwxw:hover,.card .styled-information-table .row .styled-atlaskit-inline-edit>div>div>div>div>div>div>div>div>div.drSQCl:hover{background-color:#f5f6f8}.card .styled-information-table .row .styled-atlaskit-inline-edit>div>div>div>div>div>div>div>div>div span.editable-field-text-icon{color:#687792;display:inline;margin-left:10px}.card .styled-information-table .row .styled-atlaskit-inline-edit>div>div>div>div>div>div>div>div>div:hover{background-color:#f5f6f8}.card .styled-information-table .row .styled-datetime-picker{margin-left:-8px;max-width:280px}.card .styled-information-table .row .styled-datetime-picker>div>div>div{background-color:#fff;border:none}.card .styled-information-table .row .styled-datetime-picker>div>div>div:hover{background-color:#f5f6f8}.card .styled-information-table .tips{margin-bottom:20px;margin-top:0!important}.card .styled-information-table .tips .link{color:#0b6cff;cursor:pointer;font-family:Roboto,sans-serif;font-size:12px;line-height:14px;margin-left:10px}.card.no-padding>.card-content{padding:0}.card.no-horizontal-margin{margin-left:0;margin-right:0}.card.no-title .card-title-wrap{display:none}.styled-atlaskit-table{padding-bottom:16px}.styled-atlaskit-table.no-padding{padding-bottom:0}.styled-atlaskit-table.no-padding tbody td:first-child,.styled-atlaskit-table.no-padding thead th:first-child{padding-left:0}.styled-atlaskit-table.no-padding tbody td:last-child,.styled-atlaskit-table.no-padding thead th:last-child{padding-right:0}.styled-atlaskit-table thead{border-bottom:1px solid #e1e4e9}.styled-atlaskit-table thead>tr th>span:before{border-bottom-width:6px;border-left:6px solid transparent;border-right:6px solid transparent;border-top:6px solid transparent;bottom:10px;display:block;height:0;position:absolute;right:-15px;width:0}.styled-atlaskit-table thead>tr th:hover>span:before{border:6px solid transparent;border-bottom-color:#dfe1e6;bottom:10px;display:block;height:0;position:absolute;right:-15px;width:0}.styled-atlaskit-table thead>tr th>span:after{border-bottom:6px solid transparent;border-left:6px solid transparent;border-right:6px solid transparent;border-top-width:6px;bottom:-4px;display:block;height:0;position:absolute;right:-15px;width:0}.styled-atlaskit-table thead>tr th:hover>span:after{border:6px solid transparent;border-top-color:#dfe1e6;bottom:-4px;display:block;height:0;position:absolute;right:-15px;width:0}.styled-atlaskit-table tbody,.styled-atlaskit-table tfoot{border-bottom:0}.styled-atlaskit-table thead th{color:#4c576b;font-size:14px;font-weight:500;height:60px;text-align:left;vertical-align:middle}.styled-atlaskit-table thead th:first-child{padding-left:30px}.styled-atlaskit-table thead th:last-child{padding-right:30px}.styled-atlaskit-table tbody td{border-bottom:1px solid #e1e4e9;color:#232831;font-size:16px;height:50px;max-width:320px;text-align:left;vertical-align:middle;word-break:break-word}.styled-atlaskit-table tbody td .elipsis{overflow:hidden;text-overflow:ellipsis}.styled-atlaskit-table tbody td>a{color:#232831}.styled-atlaskit-table tbody td:first-child{padding-left:30px}.styled-atlaskit-table tbody td:last-child{padding-right:30px}.styled-atlaskit-table tbody td .faint-color{color:#687792}.styled-atlaskit-table .action-wrap{font-size:16px;font-weight:400}.styled-atlaskit-table .action-wrap button{transform:translateX(10px)}.styled-atlaskit-table .action-wrap button.plain-button{padding:0;transform:translateX(0)}.styled-atlaskit-table .action-wrap button:not(:first-child){margin-left:10px}.styled-atlaskit-table .action-wrap a{color:#0b6cff;cursor:pointer}.styled-atlaskit-table .action-wrap a:hover{color:#0b6cff}.styled-atlaskit-table .action-wrap a.disabled{color:#b8bfcd;cursor:not-allowed}.styled-atlaskit-table .action-wrap .delete-button{color:#687792!important;height:auto;line-height:24px;padding:0;text-decoration:none;transform:translateX(0)}.styled-atlaskit-table .action-wrap .delete-button:not(:first-child){margin-left:21px}.styled-atlaskit-table .actions-dropdown-wrap{color:#687792}.styled-atlaskit-table .actions-dropdown-wrap .active{color:#0b6cff}.styled-atlaskit-table .actions-dropdown-wrap .disabled{color:#b8bfcd;cursor:not-allowed}.styled-atlaskit-table .actions-dropdown-wrap .actions-dropdown-wrap-link,.styled-atlaskit-table .actions-dropdown-wrap>span{cursor:pointer;margin-right:10px}.styled-atlaskit-table .actions-dropdown-wrap>div{display:inline}.styled-atlaskit-table .active{color:#0b6cff}.styled-atlaskit-table.last-td-align-right tbody td:last-child,.styled-atlaskit-table.last-td-align-right thead th:last-child{text-align:right}.styled-atlaskit-table.last-td-align-right thead th:last-child{padding-right:40px}";
styleInject(css_248z$y);

var css_248z$x = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.justice-search-no-result{background-color:#fff;display:flex;font-family:Roboto,sans-serif;height:40vh;min-height:fit-content;text-align:center}.justice-search-no-result.boxShadow{box-shadow:0 3px 5px 0 rgba(0,0,0,.1)}.justice-search-no-result .justice-search-no-result-wrapper{color:#687792;margin:auto}.justice-search-no-result .justice-search-no-result-wrapper.boxShadow{box-shadow:0 3px 5px 0 rgba(0,0,0,.1)}.justice-search-no-result .justice-search-no-result-wrapper img{margin-bottom:25px;width:73px}.justice-search-no-result .justice-search-no-result-wrapper.inModal{background-color:#f5f6f8;border-top:0;box-shadow:none;margin-top:10px;padding:30px 10px}.justice-search-no-result .justice-search-no-result-wrapper h4{color:#687792;font-size:20px;font-weight:500;line-height:1.4;margin:0;padding:0}.justice-search-no-result .justice-search-no-result-wrapper p{color:#687792;font-size:16px;line-height:1.63;margin:10px 0 0;padding:0;text-align:center}";
styleInject(css_248z$x);

var NoResultTip = function (_a) {
    var title = _a.title, primaryText = _a.primaryText, secondaryText = _a.secondaryText, className = _a.className, errorImage = _a.errorImage, errorImageClass = _a.errorImageClass, _b = _a.boxShadow, boxShadow = _b === void 0 ? true : _b, _c = _a.inModal, inModal = _c === void 0 ? false : _c, dataQa = _a.dataQa, additionalComponent = _a.additionalComponent;
    return (jsx$1("div", __assign$a({ "data-qa-id": dataQa, className: classNames$1("justice-search-no-result", className, { boxShadow: boxShadow }, { inModal: inModal }) }, { children: jsxs("div", __assign$a({ className: "justice-search-no-result-wrapper" }, { children: [!!errorImage && jsx$1("img", { className: errorImageClass, src: errorImage }, void 0), !!title && jsx$1("h4", { children: title }, void 0), typeof primaryText === "string" ? addLineBreaks(primaryText) : jsxs("p", { children: [" ", primaryText, " "] }, void 0), !!secondaryText && jsx$1("p", { children: secondaryText }, void 0), additionalComponent] }), void 0) }), void 0));
};

var Card = /** @class */ (function (_super) {
    __extends$d(Card, _super);
    function Card() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Card.prototype.componentDidMount = function () {
        setTimeout(function () {
            ReactTooltip.rebuild();
        }, 100);
    };
    Card.prototype.render = function () {
        var _a;
        var _b = this.props, cardTitle = _b.cardTitle, cardInfo = _b.cardInfo, cardDataQa = _b.cardDataQa, className = _b.className, customHeader = _b.customHeader, customFooter = _b.customFooter, buttonOnClick = _b.buttonOnClick, buttonText = _b.buttonText, buttonIcon = _b.buttonIcon, buttonDataQa = _b.buttonDataQa, _c = _b.buttonDisabled, buttonDisabled = _c === void 0 ? false : _c, _d = _b.buttonAppearance, buttonAppearance = _d === void 0 ? "primary" : _d, _e = _b.noPadding, noPadding = _e === void 0 ? false : _e, _f = _b.noHorizontalMargin, noHorizontalMargin = _f === void 0 ? false : _f, _g = _b.noTitle, noTitle = _g === void 0 ? false : _g, titleTip = _b.titleTip, children = _b.children, _h = _b.isAuthorized, isAuthorized = _h === void 0 ? true : _h, Tips = _b.Tips, _j = _b.smallCard, smallCard = _j === void 0 ? false : _j, cardSubTitle = _b.cardSubTitle, customStyleTitleWrapper = _b.customStyleTitleWrapper, noResultText = _b.noResultText;
        var dataTip = React$7.isValidElement(Tips) ? server.renderToString(Tips) : Tips;
        return (jsxs("div", __assign$a({ className: classNames$1("card", className, {
                "no-padding": noPadding,
                "no-horizontal-margin": noHorizontalMargin,
                "no-title": noTitle,
                "small-card": smallCard,
            }), "data-qa-id": cardDataQa }, { children: [!noTitle && (jsxs("div", __assign$a({ className: classNames$1("card-title-wrap", customStyleTitleWrapper) }, { children: [cardTitle && !buttonOnClick && !cardInfo && (jsx$1("div", { children: jsxs("span", { children: [jsx$1("span", { children: cardTitle }, void 0), cardSubTitle && jsx$1("small", __assign$a({ className: "card-sub-title" }, { children: cardSubTitle }), void 0), Tips && (jsxs(Fragment$2, { children: [jsx$1("i", { className: "fa-icon-info", "data-for": "cardInfo__tooltip", "data-tip": dataTip }, void 0), jsx$1(ReactTooltip, { effect: "solid", id: "cardInfo__tooltip", html: true }, void 0)] }, void 0)), titleTip] }, void 0) }, void 0)), cardTitle && buttonOnClick && (jsxs("div", { children: [jsxs("span", { children: [jsx$1("span", { children: cardTitle }, void 0), Tips && (jsxs(Fragment$2, { children: [jsx$1("i", { className: "fa-icon-info", "data-for": "cardInfo__tooltip", "data-tip": dataTip }, void 0), jsx$1(ReactTooltip, { effect: "solid", id: "cardInfo__tooltip", html: true }, void 0)] }, void 0)), titleTip] }, void 0), jsx$1("div", __assign$a({ className: classNames$1("styled-atlaskit-button", (_a = {},
                                        _a["" + buttonAppearance] = !buttonDisabled,
                                        _a)), "data-qa-id": buttonDataQa }, { children: jsx$1(ButtonWithIcon, __assign$a({ appearance: smallCard ? "link" : buttonAppearance, buttonIcon: buttonIcon, onClick: buttonOnClick, isDisabled: buttonDisabled }, { children: buttonText }), void 0) }), void 0)] }, void 0)), cardTitle && cardInfo && (jsxs("div", { children: [jsxs("span", { children: [jsx$1("span", { children: cardTitle }, void 0), Tips && (jsxs(Fragment$2, { children: [jsx$1("i", { className: "fa-icon-info", "data-for": "cardInfo__tooltip", "data-tip": dataTip }, void 0), jsx$1(ReactTooltip, { effect: "solid", id: "cardInfo__tooltip", html: true }, void 0)] }, void 0)), titleTip] }, void 0), jsx$1("div", __assign$a({ className: "card-info" }, { children: cardInfo }), void 0)] }, void 0)), customHeader && customHeader] }), void 0)), isAuthorized ? (jsx$1("div", __assign$a({ className: "card-content" }, { children: children }), void 0)) : (jsx$1(NoResultTip, { primaryText: noResultText, boxShadow: false }, void 0)), customFooter] }), void 0));
    };
    return Card;
}(React$7.Component));

var css_248z$w = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.information-table .horizontalFieldText{min-height:45px}.information-table .horizontalFieldText.label-hidden .cell-2{padding-left:0}.information-table .cell-1{align-self:flex-start;color:#687792;font-size:14px;line-height:24px;min-width:110px;padding-top:11px;width:20%}.information-table .cell-1.left{text-align:left}.information-table .cell-1.center{text-align:center}.information-table .cell-1.right{text-align:right}.information-table .cell-2{color:#232831;flex:1;font-family:Roboto,sans-serif;font-size:16px;padding-left:30px;word-break:break-all}";
styleInject(css_248z$w);

var CardInformationTable = function (_a) {
    var children = _a.children;
    return jsx$1("div", __assign$a({ className: "information-table" }, { children: children }), void 0);
};

var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function ToObject(val) {
	if (val == null) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function ownEnumerableKeys(obj) {
	var keys = Object.getOwnPropertyNames(obj);

	if (Object.getOwnPropertySymbols) {
		keys = keys.concat(Object.getOwnPropertySymbols(obj));
	}

	return keys.filter(function (key) {
		return propIsEnumerable.call(obj, key);
	});
}

var objectAssign = Object.assign || function (target, source) {
	var from;
	var keys;
	var to = ToObject(target);

	for (var s = 1; s < arguments.length; s++) {
		from = arguments[s];
		keys = ownEnumerableKeys(Object(from));

		for (var i = 0; i < keys.length; i++) {
			to[keys[i]] = from[keys[i]];
		}
	}

	return to;
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

var _assign = objectAssign$2;

// -- Inlined from fbjs --

var emptyObject = {};

if (process.env.NODE_ENV !== 'production') {
  Object.freeze(emptyObject);
}

var validateFormat = function validateFormat(format) {};

if (process.env.NODE_ENV !== 'production') {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function _invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

var warning = function(){};

if (process.env.NODE_ENV !== 'production') {
  var printWarning = function printWarning(format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  warning = function warning(condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return; // Ignore CompositeComponent proptype check.
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

// /-- Inlined from fbjs --

var MIXINS_KEY = 'mixins';

// Helper function to allow the creation of anonymous functions which do not
// have .name set to the name of the variable being assigned to.
function identity(fn) {
  return fn;
}

var ReactPropTypeLocationNames;
if (process.env.NODE_ENV !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
} else {
  ReactPropTypeLocationNames = {};
}

function factory$1(ReactComponent, isValidElement, ReactNoopUpdateQueue) {
  /**
   * Policies that describe methods in `ReactClassInterface`.
   */

  var injectedMixins = [];

  /**
   * Composite components are higher-level components that compose other composite
   * or host components.
   *
   * To create a new type of `ReactClass`, pass a specification of
   * your new class to `React.createClass`. The only requirement of your class
   * specification is that you implement a `render` method.
   *
   *   var MyComponent = React.createClass({
   *     render: function() {
   *       return <div>Hello World</div>;
   *     }
   *   });
   *
   * The class specification supports a specific protocol of methods that have
   * special meaning (e.g. `render`). See `ReactClassInterface` for
   * more the comprehensive protocol. Any other properties and methods in the
   * class specification will be available on the prototype.
   *
   * @interface ReactClassInterface
   * @internal
   */
  var ReactClassInterface = {
    /**
     * An array of Mixin objects to include when defining your component.
     *
     * @type {array}
     * @optional
     */
    mixins: 'DEFINE_MANY',

    /**
     * An object containing properties and methods that should be defined on
     * the component's constructor instead of its prototype (static methods).
     *
     * @type {object}
     * @optional
     */
    statics: 'DEFINE_MANY',

    /**
     * Definition of prop types for this component.
     *
     * @type {object}
     * @optional
     */
    propTypes: 'DEFINE_MANY',

    /**
     * Definition of context types for this component.
     *
     * @type {object}
     * @optional
     */
    contextTypes: 'DEFINE_MANY',

    /**
     * Definition of context types this component sets for its children.
     *
     * @type {object}
     * @optional
     */
    childContextTypes: 'DEFINE_MANY',

    // ==== Definition methods ====

    /**
     * Invoked when the component is mounted. Values in the mapping will be set on
     * `this.props` if that prop is not specified (i.e. using an `in` check).
     *
     * This method is invoked before `getInitialState` and therefore cannot rely
     * on `this.state` or use `this.setState`.
     *
     * @return {object}
     * @optional
     */
    getDefaultProps: 'DEFINE_MANY_MERGED',

    /**
     * Invoked once before the component is mounted. The return value will be used
     * as the initial value of `this.state`.
     *
     *   getInitialState: function() {
     *     return {
     *       isOn: false,
     *       fooBaz: new BazFoo()
     *     }
     *   }
     *
     * @return {object}
     * @optional
     */
    getInitialState: 'DEFINE_MANY_MERGED',

    /**
     * @return {object}
     * @optional
     */
    getChildContext: 'DEFINE_MANY_MERGED',

    /**
     * Uses props from `this.props` and state from `this.state` to render the
     * structure of the component.
     *
     * No guarantees are made about when or how often this method is invoked, so
     * it must not have side effects.
     *
     *   render: function() {
     *     var name = this.props.name;
     *     return <div>Hello, {name}!</div>;
     *   }
     *
     * @return {ReactComponent}
     * @required
     */
    render: 'DEFINE_ONCE',

    // ==== Delegate methods ====

    /**
     * Invoked when the component is initially created and about to be mounted.
     * This may have side effects, but any external subscriptions or data created
     * by this method must be cleaned up in `componentWillUnmount`.
     *
     * @optional
     */
    componentWillMount: 'DEFINE_MANY',

    /**
     * Invoked when the component has been mounted and has a DOM representation.
     * However, there is no guarantee that the DOM node is in the document.
     *
     * Use this as an opportunity to operate on the DOM when the component has
     * been mounted (initialized and rendered) for the first time.
     *
     * @param {DOMElement} rootNode DOM element representing the component.
     * @optional
     */
    componentDidMount: 'DEFINE_MANY',

    /**
     * Invoked before the component receives new props.
     *
     * Use this as an opportunity to react to a prop transition by updating the
     * state using `this.setState`. Current props are accessed via `this.props`.
     *
     *   componentWillReceiveProps: function(nextProps, nextContext) {
     *     this.setState({
     *       likesIncreasing: nextProps.likeCount > this.props.likeCount
     *     });
     *   }
     *
     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
     * transition may cause a state change, but the opposite is not true. If you
     * need it, you are probably looking for `componentWillUpdate`.
     *
     * @param {object} nextProps
     * @optional
     */
    componentWillReceiveProps: 'DEFINE_MANY',

    /**
     * Invoked while deciding if the component should be updated as a result of
     * receiving new props, state and/or context.
     *
     * Use this as an opportunity to `return false` when you're certain that the
     * transition to the new props/state/context will not require a component
     * update.
     *
     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
     *     return !equal(nextProps, this.props) ||
     *       !equal(nextState, this.state) ||
     *       !equal(nextContext, this.context);
     *   }
     *
     * @param {object} nextProps
     * @param {?object} nextState
     * @param {?object} nextContext
     * @return {boolean} True if the component should update.
     * @optional
     */
    shouldComponentUpdate: 'DEFINE_ONCE',

    /**
     * Invoked when the component is about to update due to a transition from
     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
     * and `nextContext`.
     *
     * Use this as an opportunity to perform preparation before an update occurs.
     *
     * NOTE: You **cannot** use `this.setState()` in this method.
     *
     * @param {object} nextProps
     * @param {?object} nextState
     * @param {?object} nextContext
     * @param {ReactReconcileTransaction} transaction
     * @optional
     */
    componentWillUpdate: 'DEFINE_MANY',

    /**
     * Invoked when the component's DOM representation has been updated.
     *
     * Use this as an opportunity to operate on the DOM when the component has
     * been updated.
     *
     * @param {object} prevProps
     * @param {?object} prevState
     * @param {?object} prevContext
     * @param {DOMElement} rootNode DOM element representing the component.
     * @optional
     */
    componentDidUpdate: 'DEFINE_MANY',

    /**
     * Invoked when the component is about to be removed from its parent and have
     * its DOM representation destroyed.
     *
     * Use this as an opportunity to deallocate any external resources.
     *
     * NOTE: There is no `componentDidUnmount` since your component will have been
     * destroyed by that point.
     *
     * @optional
     */
    componentWillUnmount: 'DEFINE_MANY',

    /**
     * Replacement for (deprecated) `componentWillMount`.
     *
     * @optional
     */
    UNSAFE_componentWillMount: 'DEFINE_MANY',

    /**
     * Replacement for (deprecated) `componentWillReceiveProps`.
     *
     * @optional
     */
    UNSAFE_componentWillReceiveProps: 'DEFINE_MANY',

    /**
     * Replacement for (deprecated) `componentWillUpdate`.
     *
     * @optional
     */
    UNSAFE_componentWillUpdate: 'DEFINE_MANY',

    // ==== Advanced methods ====

    /**
     * Updates the component's currently mounted DOM representation.
     *
     * By default, this implements React's rendering and reconciliation algorithm.
     * Sophisticated clients may wish to override this.
     *
     * @param {ReactReconcileTransaction} transaction
     * @internal
     * @overridable
     */
    updateComponent: 'OVERRIDE_BASE'
  };

  /**
   * Similar to ReactClassInterface but for static methods.
   */
  var ReactClassStaticInterface = {
    /**
     * This method is invoked after a component is instantiated and when it
     * receives new props. Return an object to update state in response to
     * prop changes. Return null to indicate no change to state.
     *
     * If an object is returned, its keys will be merged into the existing state.
     *
     * @return {object || null}
     * @optional
     */
    getDerivedStateFromProps: 'DEFINE_MANY_MERGED'
  };

  /**
   * Mapping from class specification keys to special processing functions.
   *
   * Although these are declared like instance properties in the specification
   * when defining classes using `React.createClass`, they are actually static
   * and are accessible on the constructor instead of the prototype. Despite
   * being static, they must be defined outside of the "statics" key under
   * which all other static methods are defined.
   */
  var RESERVED_SPEC_KEYS = {
    displayName: function(Constructor, displayName) {
      Constructor.displayName = displayName;
    },
    mixins: function(Constructor, mixins) {
      if (mixins) {
        for (var i = 0; i < mixins.length; i++) {
          mixSpecIntoComponent(Constructor, mixins[i]);
        }
      }
    },
    childContextTypes: function(Constructor, childContextTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, childContextTypes, 'childContext');
      }
      Constructor.childContextTypes = _assign(
        {},
        Constructor.childContextTypes,
        childContextTypes
      );
    },
    contextTypes: function(Constructor, contextTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, contextTypes, 'context');
      }
      Constructor.contextTypes = _assign(
        {},
        Constructor.contextTypes,
        contextTypes
      );
    },
    /**
     * Special case getDefaultProps which should move into statics but requires
     * automatic merging.
     */
    getDefaultProps: function(Constructor, getDefaultProps) {
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps = createMergedResultFunction(
          Constructor.getDefaultProps,
          getDefaultProps
        );
      } else {
        Constructor.getDefaultProps = getDefaultProps;
      }
    },
    propTypes: function(Constructor, propTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, propTypes, 'prop');
      }
      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
    },
    statics: function(Constructor, statics) {
      mixStaticSpecIntoComponent(Constructor, statics);
    },
    autobind: function() {}
  };

  function validateTypeDef(Constructor, typeDef, location) {
    for (var propName in typeDef) {
      if (typeDef.hasOwnProperty(propName)) {
        // use a warning instead of an _invariant so components
        // don't show up in prod but only in __DEV__
        if (process.env.NODE_ENV !== 'production') {
          warning(
            typeof typeDef[propName] === 'function',
            '%s: %s type `%s` is invalid; it must be a function, usually from ' +
              'React.PropTypes.',
            Constructor.displayName || 'ReactClass',
            ReactPropTypeLocationNames[location],
            propName
          );
        }
      }
    }
  }

  function validateMethodOverride(isAlreadyDefined, name) {
    var specPolicy = ReactClassInterface.hasOwnProperty(name)
      ? ReactClassInterface[name]
      : null;

    // Disallow overriding of base class methods unless explicitly allowed.
    if (ReactClassMixin.hasOwnProperty(name)) {
      _invariant(
        specPolicy === 'OVERRIDE_BASE',
        'ReactClassInterface: You are attempting to override ' +
          '`%s` from your class specification. Ensure that your method names ' +
          'do not overlap with React methods.',
        name
      );
    }

    // Disallow defining methods more than once unless explicitly allowed.
    if (isAlreadyDefined) {
      _invariant(
        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',
        'ReactClassInterface: You are attempting to define ' +
          '`%s` on your component more than once. This conflict may be due ' +
          'to a mixin.',
        name
      );
    }
  }

  /**
   * Mixin helper which handles policy validation and reserved
   * specification keys when building React classes.
   */
  function mixSpecIntoComponent(Constructor, spec) {
    if (!spec) {
      if (process.env.NODE_ENV !== 'production') {
        var typeofSpec = typeof spec;
        var isMixinValid = typeofSpec === 'object' && spec !== null;

        if (process.env.NODE_ENV !== 'production') {
          warning(
            isMixinValid,
            "%s: You're attempting to include a mixin that is either null " +
              'or not an object. Check the mixins included by the component, ' +
              'as well as any mixins they include themselves. ' +
              'Expected object but got %s.',
            Constructor.displayName || 'ReactClass',
            spec === null ? null : typeofSpec
          );
        }
      }

      return;
    }

    _invariant(
      typeof spec !== 'function',
      "ReactClass: You're attempting to " +
        'use a component class or function as a mixin. Instead, just use a ' +
        'regular object.'
    );
    _invariant(
      !isValidElement(spec),
      "ReactClass: You're attempting to " +
        'use a component as a mixin. Instead, just use a regular object.'
    );

    var proto = Constructor.prototype;
    var autoBindPairs = proto.__reactAutoBindPairs;

    // By handling mixins before any other properties, we ensure the same
    // chaining order is applied to methods with DEFINE_MANY policy, whether
    // mixins are listed before or after these methods in the spec.
    if (spec.hasOwnProperty(MIXINS_KEY)) {
      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
    }

    for (var name in spec) {
      if (!spec.hasOwnProperty(name)) {
        continue;
      }

      if (name === MIXINS_KEY) {
        // We have already handled mixins in a special case above.
        continue;
      }

      var property = spec[name];
      var isAlreadyDefined = proto.hasOwnProperty(name);
      validateMethodOverride(isAlreadyDefined, name);

      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
        RESERVED_SPEC_KEYS[name](Constructor, property);
      } else {
        // Setup methods on prototype:
        // The following member methods should not be automatically bound:
        // 1. Expected ReactClass methods (in the "interface").
        // 2. Overridden methods (that were mixed in).
        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
        var isFunction = typeof property === 'function';
        var shouldAutoBind =
          isFunction &&
          !isReactClassMethod &&
          !isAlreadyDefined &&
          spec.autobind !== false;

        if (shouldAutoBind) {
          autoBindPairs.push(name, property);
          proto[name] = property;
        } else {
          if (isAlreadyDefined) {
            var specPolicy = ReactClassInterface[name];

            // These cases should already be caught by validateMethodOverride.
            _invariant(
              isReactClassMethod &&
                (specPolicy === 'DEFINE_MANY_MERGED' ||
                  specPolicy === 'DEFINE_MANY'),
              'ReactClass: Unexpected spec policy %s for key %s ' +
                'when mixing in component specs.',
              specPolicy,
              name
            );

            // For methods which are defined more than once, call the existing
            // methods before calling the new property, merging if appropriate.
            if (specPolicy === 'DEFINE_MANY_MERGED') {
              proto[name] = createMergedResultFunction(proto[name], property);
            } else if (specPolicy === 'DEFINE_MANY') {
              proto[name] = createChainedFunction(proto[name], property);
            }
          } else {
            proto[name] = property;
            if (process.env.NODE_ENV !== 'production') {
              // Add verbose displayName to the function, which helps when looking
              // at profiling tools.
              if (typeof property === 'function' && spec.displayName) {
                proto[name].displayName = spec.displayName + '_' + name;
              }
            }
          }
        }
      }
    }
  }

  function mixStaticSpecIntoComponent(Constructor, statics) {
    if (!statics) {
      return;
    }

    for (var name in statics) {
      var property = statics[name];
      if (!statics.hasOwnProperty(name)) {
        continue;
      }

      var isReserved = name in RESERVED_SPEC_KEYS;
      _invariant(
        !isReserved,
        'ReactClass: You are attempting to define a reserved ' +
          'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' +
          'as an instance property instead; it will still be accessible on the ' +
          'constructor.',
        name
      );

      var isAlreadyDefined = name in Constructor;
      if (isAlreadyDefined) {
        var specPolicy = ReactClassStaticInterface.hasOwnProperty(name)
          ? ReactClassStaticInterface[name]
          : null;

        _invariant(
          specPolicy === 'DEFINE_MANY_MERGED',
          'ReactClass: You are attempting to define ' +
            '`%s` on your component more than once. This conflict may be ' +
            'due to a mixin.',
          name
        );

        Constructor[name] = createMergedResultFunction(Constructor[name], property);

        return;
      }

      Constructor[name] = property;
    }
  }

  /**
   * Merge two objects, but throw if both contain the same key.
   *
   * @param {object} one The first object, which is mutated.
   * @param {object} two The second object
   * @return {object} one after it has been mutated to contain everything in two.
   */
  function mergeIntoWithNoDuplicateKeys(one, two) {
    _invariant(
      one && two && typeof one === 'object' && typeof two === 'object',
      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'
    );

    for (var key in two) {
      if (two.hasOwnProperty(key)) {
        _invariant(
          one[key] === undefined,
          'mergeIntoWithNoDuplicateKeys(): ' +
            'Tried to merge two objects with the same key: `%s`. This conflict ' +
            'may be due to a mixin; in particular, this may be caused by two ' +
            'getInitialState() or getDefaultProps() methods returning objects ' +
            'with clashing keys.',
          key
        );
        one[key] = two[key];
      }
    }
    return one;
  }

  /**
   * Creates a function that invokes two functions and merges their return values.
   *
   * @param {function} one Function to invoke first.
   * @param {function} two Function to invoke second.
   * @return {function} Function that invokes the two argument functions.
   * @private
   */
  function createMergedResultFunction(one, two) {
    return function mergedResult() {
      var a = one.apply(this, arguments);
      var b = two.apply(this, arguments);
      if (a == null) {
        return b;
      } else if (b == null) {
        return a;
      }
      var c = {};
      mergeIntoWithNoDuplicateKeys(c, a);
      mergeIntoWithNoDuplicateKeys(c, b);
      return c;
    };
  }

  /**
   * Creates a function that invokes two functions and ignores their return vales.
   *
   * @param {function} one Function to invoke first.
   * @param {function} two Function to invoke second.
   * @return {function} Function that invokes the two argument functions.
   * @private
   */
  function createChainedFunction(one, two) {
    return function chainedFunction() {
      one.apply(this, arguments);
      two.apply(this, arguments);
    };
  }

  /**
   * Binds a method to the component.
   *
   * @param {object} component Component whose method is going to be bound.
   * @param {function} method Method to be bound.
   * @return {function} The bound method.
   */
  function bindAutoBindMethod(component, method) {
    var boundMethod = method.bind(component);
    if (process.env.NODE_ENV !== 'production') {
      boundMethod.__reactBoundContext = component;
      boundMethod.__reactBoundMethod = method;
      boundMethod.__reactBoundArguments = null;
      var componentName = component.constructor.displayName;
      var _bind = boundMethod.bind;
      boundMethod.bind = function(newThis) {
        for (
          var _len = arguments.length,
            args = Array(_len > 1 ? _len - 1 : 0),
            _key = 1;
          _key < _len;
          _key++
        ) {
          args[_key - 1] = arguments[_key];
        }

        // User is trying to bind() an autobound method; we effectively will
        // ignore the value of "this" that the user is trying to use, so
        // let's warn.
        if (newThis !== component && newThis !== null) {
          if (process.env.NODE_ENV !== 'production') {
            warning(
              false,
              'bind(): React component methods may only be bound to the ' +
                'component instance. See %s',
              componentName
            );
          }
        } else if (!args.length) {
          if (process.env.NODE_ENV !== 'production') {
            warning(
              false,
              'bind(): You are binding a component method to the component. ' +
                'React does this for you automatically in a high-performance ' +
                'way, so you can safely remove this call. See %s',
              componentName
            );
          }
          return boundMethod;
        }
        var reboundMethod = _bind.apply(boundMethod, arguments);
        reboundMethod.__reactBoundContext = component;
        reboundMethod.__reactBoundMethod = method;
        reboundMethod.__reactBoundArguments = args;
        return reboundMethod;
      };
    }
    return boundMethod;
  }

  /**
   * Binds all auto-bound methods in a component.
   *
   * @param {object} component Component whose method is going to be bound.
   */
  function bindAutoBindMethods(component) {
    var pairs = component.__reactAutoBindPairs;
    for (var i = 0; i < pairs.length; i += 2) {
      var autoBindKey = pairs[i];
      var method = pairs[i + 1];
      component[autoBindKey] = bindAutoBindMethod(component, method);
    }
  }

  var IsMountedPreMixin = {
    componentDidMount: function() {
      this.__isMounted = true;
    }
  };

  var IsMountedPostMixin = {
    componentWillUnmount: function() {
      this.__isMounted = false;
    }
  };

  /**
   * Add more to the ReactClass base class. These are all legacy features and
   * therefore not already part of the modern ReactComponent.
   */
  var ReactClassMixin = {
    /**
     * TODO: This will be deprecated because state should always keep a consistent
     * type signature and the only use case for this, is to avoid that.
     */
    replaceState: function(newState, callback) {
      this.updater.enqueueReplaceState(this, newState, callback);
    },

    /**
     * Checks whether or not this composite component is mounted.
     * @return {boolean} True if mounted, false otherwise.
     * @protected
     * @final
     */
    isMounted: function() {
      if (process.env.NODE_ENV !== 'production') {
        warning(
          this.__didWarnIsMounted,
          '%s: isMounted is deprecated. Instead, make sure to clean up ' +
            'subscriptions and pending requests in componentWillUnmount to ' +
            'prevent memory leaks.',
          (this.constructor && this.constructor.displayName) ||
            this.name ||
            'Component'
        );
        this.__didWarnIsMounted = true;
      }
      return !!this.__isMounted;
    }
  };

  var ReactClassComponent = function() {};
  _assign(
    ReactClassComponent.prototype,
    ReactComponent.prototype,
    ReactClassMixin
  );

  /**
   * Creates a composite component class given a class specification.
   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
   *
   * @param {object} spec Class specification (which must define `render`).
   * @return {function} Component constructor function.
   * @public
   */
  function createClass(spec) {
    // To keep our warnings more understandable, we'll use a little hack here to
    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
    // unnecessarily identify a class without displayName as 'Constructor'.
    var Constructor = identity(function(props, context, updater) {
      // This constructor gets overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (process.env.NODE_ENV !== 'production') {
        warning(
          this instanceof Constructor,
          'Something is calling a React component directly. Use a factory or ' +
            'JSX instead. See: https://fb.me/react-legacyfactory'
        );
      }

      // Wire up auto-binding
      if (this.__reactAutoBindPairs.length) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (
          initialState === undefined &&
          this.getInitialState._isMockFunction
        ) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      _invariant(
        typeof initialState === 'object' && !Array.isArray(initialState),
        '%s.getInitialState(): must return an object or null',
        Constructor.displayName || 'ReactCompositeComponent'
      );

      this.state = initialState;
    });
    Constructor.prototype = new ReactClassComponent();
    Constructor.prototype.constructor = Constructor;
    Constructor.prototype.__reactAutoBindPairs = [];

    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

    mixSpecIntoComponent(Constructor, IsMountedPreMixin);
    mixSpecIntoComponent(Constructor, spec);
    mixSpecIntoComponent(Constructor, IsMountedPostMixin);

    // Initialize the defaultProps property after all mixins have been merged.
    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    if (process.env.NODE_ENV !== 'production') {
      // This is a tag to indicate that the use of these method names is ok,
      // since it's used with createClass. If it's not, then it's likely a
      // mistake so we'll warn you to use the static property, property
      // initializer or constructor respectively.
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps.isReactClassApproved = {};
      }
      if (Constructor.prototype.getInitialState) {
        Constructor.prototype.getInitialState.isReactClassApproved = {};
      }
    }

    _invariant(
      Constructor.prototype.render,
      'createClass(...): Class specification must implement a `render` method.'
    );

    if (process.env.NODE_ENV !== 'production') {
      warning(
        !Constructor.prototype.componentShouldUpdate,
        '%s has a method called ' +
          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
          'The name is phrased as a question because the function is ' +
          'expected to return a value.',
        spec.displayName || 'A component'
      );
      warning(
        !Constructor.prototype.componentWillRecieveProps,
        '%s has a method called ' +
          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
        spec.displayName || 'A component'
      );
      warning(
        !Constructor.prototype.UNSAFE_componentWillRecieveProps,
        '%s has a method called UNSAFE_componentWillRecieveProps(). ' +
          'Did you mean UNSAFE_componentWillReceiveProps()?',
        spec.displayName || 'A component'
      );
    }

    // Reduce time spent doing lookups by setting these on the prototype.
    for (var methodName in ReactClassInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    return Constructor;
  }

  return createClass;
}

var factory_1 = factory$1;

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

var React$6 = React__default;
var factory = factory_1;

if (typeof React$6 === 'undefined') {
  throw Error(
    'create-react-class could not find the React object. If you are using script tags, ' +
      'make sure that React is being loaded before create-react-class.'
  );
}

// Hack to grab NoopUpdateQueue from isomorphic React
var ReactNoopUpdateQueue = new React$6.Component().updater;

var createReactClass = factory(
  React$6.Component,
  React$6.isValidElement,
  ReactNoopUpdateQueue
);

var moment$2 = {exports: {}};

(function (module, exports) {
(function (global, factory) {
    module.exports = factory() ;
}(commonjsGlobal, (function () {
    var hookCallback;

    function hooks() {
        return hookCallback.apply(null, arguments);
    }

    // This is done to register the method called with moment()
    // without creating circular dependencies.
    function setHookCallback(callback) {
        hookCallback = callback;
    }

    function isArray(input) {
        return (
            input instanceof Array ||
            Object.prototype.toString.call(input) === '[object Array]'
        );
    }

    function isObject(input) {
        // IE8 will treat undefined and null as object if it wasn't for
        // input != null
        return (
            input != null &&
            Object.prototype.toString.call(input) === '[object Object]'
        );
    }

    function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
    }

    function isObjectEmpty(obj) {
        if (Object.getOwnPropertyNames) {
            return Object.getOwnPropertyNames(obj).length === 0;
        } else {
            var k;
            for (k in obj) {
                if (hasOwnProp(obj, k)) {
                    return false;
                }
            }
            return true;
        }
    }

    function isUndefined(input) {
        return input === void 0;
    }

    function isNumber(input) {
        return (
            typeof input === 'number' ||
            Object.prototype.toString.call(input) === '[object Number]'
        );
    }

    function isDate(input) {
        return (
            input instanceof Date ||
            Object.prototype.toString.call(input) === '[object Date]'
        );
    }

    function map(arr, fn) {
        var res = [],
            i;
        for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i));
        }
        return res;
    }

    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i];
            }
        }

        if (hasOwnProp(b, 'toString')) {
            a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function createUTC(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
    }

    function defaultParsingFlags() {
        // We need to deep clone this object.
        return {
            empty: false,
            unusedTokens: [],
            unusedInput: [],
            overflow: -2,
            charsLeftOver: 0,
            nullInput: false,
            invalidEra: null,
            invalidMonth: null,
            invalidFormat: false,
            userInvalidated: false,
            iso: false,
            parsedDateParts: [],
            era: null,
            meridiem: null,
            rfc2822: false,
            weekdayMismatch: false,
        };
    }

    function getParsingFlags(m) {
        if (m._pf == null) {
            m._pf = defaultParsingFlags();
        }
        return m._pf;
    }

    var some;
    if (Array.prototype.some) {
        some = Array.prototype.some;
    } else {
        some = function (fun) {
            var t = Object(this),
                len = t.length >>> 0,
                i;

            for (i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                    return true;
                }
            }

            return false;
        };
    }

    function isValid(m) {
        if (m._isValid == null) {
            var flags = getParsingFlags(m),
                parsedParts = some.call(flags.parsedDateParts, function (i) {
                    return i != null;
                }),
                isNowValid =
                    !isNaN(m._d.getTime()) &&
                    flags.overflow < 0 &&
                    !flags.empty &&
                    !flags.invalidEra &&
                    !flags.invalidMonth &&
                    !flags.invalidWeekday &&
                    !flags.weekdayMismatch &&
                    !flags.nullInput &&
                    !flags.invalidFormat &&
                    !flags.userInvalidated &&
                    (!flags.meridiem || (flags.meridiem && parsedParts));

            if (m._strict) {
                isNowValid =
                    isNowValid &&
                    flags.charsLeftOver === 0 &&
                    flags.unusedTokens.length === 0 &&
                    flags.bigHour === undefined;
            }

            if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid;
            } else {
                return isNowValid;
            }
        }
        return m._isValid;
    }

    function createInvalid(flags) {
        var m = createUTC(NaN);
        if (flags != null) {
            extend(getParsingFlags(m), flags);
        } else {
            getParsingFlags(m).userInvalidated = true;
        }

        return m;
    }

    // Plugins that add properties should also add the key here (null value),
    // so we can properly clone ourselves.
    var momentProperties = (hooks.momentProperties = []),
        updateInProgress = false;

    function copyConfig(to, from) {
        var i, prop, val;

        if (!isUndefined(from._isAMomentObject)) {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (!isUndefined(from._i)) {
            to._i = from._i;
        }
        if (!isUndefined(from._f)) {
            to._f = from._f;
        }
        if (!isUndefined(from._l)) {
            to._l = from._l;
        }
        if (!isUndefined(from._strict)) {
            to._strict = from._strict;
        }
        if (!isUndefined(from._tzm)) {
            to._tzm = from._tzm;
        }
        if (!isUndefined(from._isUTC)) {
            to._isUTC = from._isUTC;
        }
        if (!isUndefined(from._offset)) {
            to._offset = from._offset;
        }
        if (!isUndefined(from._pf)) {
            to._pf = getParsingFlags(from);
        }
        if (!isUndefined(from._locale)) {
            to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
            for (i = 0; i < momentProperties.length; i++) {
                prop = momentProperties[i];
                val = from[prop];
                if (!isUndefined(val)) {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    // Moment prototype object
    function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
        if (!this.isValid()) {
            this._d = new Date(NaN);
        }
        // Prevent infinite loop in case updateOffset creates new moment
        // objects.
        if (updateInProgress === false) {
            updateInProgress = true;
            hooks.updateOffset(this);
            updateInProgress = false;
        }
    }

    function isMoment(obj) {
        return (
            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)
        );
    }

    function warn(msg) {
        if (
            hooks.suppressDeprecationWarnings === false &&
            typeof console !== 'undefined' &&
            console.warn
        ) {
            console.warn('Deprecation warning: ' + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;

        return extend(function () {
            if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(null, msg);
            }
            if (firstTime) {
                var args = [],
                    arg,
                    i,
                    key;
                for (i = 0; i < arguments.length; i++) {
                    arg = '';
                    if (typeof arguments[i] === 'object') {
                        arg += '\n[' + i + '] ';
                        for (key in arguments[0]) {
                            if (hasOwnProp(arguments[0], key)) {
                                arg += key + ': ' + arguments[0][key] + ', ';
                            }
                        }
                        arg = arg.slice(0, -2); // Remove trailing comma and space
                    } else {
                        arg = arguments[i];
                    }
                    args.push(arg);
                }
                warn(
                    msg +
                        '\nArguments: ' +
                        Array.prototype.slice.call(args).join('') +
                        '\n' +
                        new Error().stack
                );
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    var deprecations = {};

    function deprecateSimple(name, msg) {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(name, msg);
        }
        if (!deprecations[name]) {
            warn(msg);
            deprecations[name] = true;
        }
    }

    hooks.suppressDeprecationWarnings = false;
    hooks.deprecationHandler = null;

    function isFunction(input) {
        return (
            (typeof Function !== 'undefined' && input instanceof Function) ||
            Object.prototype.toString.call(input) === '[object Function]'
        );
    }

    function set(config) {
        var prop, i;
        for (i in config) {
            if (hasOwnProp(config, i)) {
                prop = config[i];
                if (isFunction(prop)) {
                    this[i] = prop;
                } else {
                    this['_' + i] = prop;
                }
            }
        }
        this._config = config;
        // Lenient ordinal parsing accepts just a number in addition to
        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
        // TODO: Remove "ordinalParse" fallback in next major release.
        this._dayOfMonthOrdinalParseLenient = new RegExp(
            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
                '|' +
                /\d{1,2}/.source
        );
    }

    function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig),
            prop;
        for (prop in childConfig) {
            if (hasOwnProp(childConfig, prop)) {
                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                    res[prop] = {};
                    extend(res[prop], parentConfig[prop]);
                    extend(res[prop], childConfig[prop]);
                } else if (childConfig[prop] != null) {
                    res[prop] = childConfig[prop];
                } else {
                    delete res[prop];
                }
            }
        }
        for (prop in parentConfig) {
            if (
                hasOwnProp(parentConfig, prop) &&
                !hasOwnProp(childConfig, prop) &&
                isObject(parentConfig[prop])
            ) {
                // make sure changes to properties don't modify parent config
                res[prop] = extend({}, res[prop]);
            }
        }
        return res;
    }

    function Locale(config) {
        if (config != null) {
            this.set(config);
        }
    }

    var keys;

    if (Object.keys) {
        keys = Object.keys;
    } else {
        keys = function (obj) {
            var i,
                res = [];
            for (i in obj) {
                if (hasOwnProp(obj, i)) {
                    res.push(i);
                }
            }
            return res;
        };
    }

    var defaultCalendar = {
        sameDay: '[Today at] LT',
        nextDay: '[Tomorrow at] LT',
        nextWeek: 'dddd [at] LT',
        lastDay: '[Yesterday at] LT',
        lastWeek: '[Last] dddd [at] LT',
        sameElse: 'L',
    };

    function calendar(key, mom, now) {
        var output = this._calendar[key] || this._calendar['sameElse'];
        return isFunction(output) ? output.call(mom, now) : output;
    }

    function zeroFill(number, targetLength, forceSign) {
        var absNumber = '' + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (
            (sign ? (forceSign ? '+' : '') : '-') +
            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +
            absNumber
        );
    }

    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
        localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
        formatFunctions = {},
        formatTokenFunctions = {};

    // token:    'M'
    // padded:   ['MM', 2]
    // ordinal:  'Mo'
    // callback: function () { this.month() + 1 }
    function addFormatToken(token, padded, ordinal, callback) {
        var func = callback;
        if (typeof callback === 'string') {
            func = function () {
                return this[callback]();
            };
        }
        if (token) {
            formatTokenFunctions[token] = func;
        }
        if (padded) {
            formatTokenFunctions[padded[0]] = function () {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
            };
        }
        if (ordinal) {
            formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(
                    func.apply(this, arguments),
                    token
                );
            };
        }
    }

    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens),
            i,
            length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '',
                i;
            for (i = 0; i < length; i++) {
                output += isFunction(array[i])
                    ? array[i].call(mom, format)
                    : array[i];
            }
            return output;
        };
    }

    // format date using native date object
    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());
        formatFunctions[format] =
            formatFunctions[format] || makeFormatFunction(format);

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(
                localFormattingTokens,
                replaceLongDateFormatTokens
            );
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }

    var defaultLongDateFormat = {
        LTS: 'h:mm:ss A',
        LT: 'h:mm A',
        L: 'MM/DD/YYYY',
        LL: 'MMMM D, YYYY',
        LLL: 'MMMM D, YYYY h:mm A',
        LLLL: 'dddd, MMMM D, YYYY h:mm A',
    };

    function longDateFormat(key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];

        if (format || !formatUpper) {
            return format;
        }

        this._longDateFormat[key] = formatUpper
            .match(formattingTokens)
            .map(function (tok) {
                if (
                    tok === 'MMMM' ||
                    tok === 'MM' ||
                    tok === 'DD' ||
                    tok === 'dddd'
                ) {
                    return tok.slice(1);
                }
                return tok;
            })
            .join('');

        return this._longDateFormat[key];
    }

    var defaultInvalidDate = 'Invalid date';

    function invalidDate() {
        return this._invalidDate;
    }

    var defaultOrdinal = '%d',
        defaultDayOfMonthOrdinalParse = /\d{1,2}/;

    function ordinal(number) {
        return this._ordinal.replace('%d', number);
    }

    var defaultRelativeTime = {
        future: 'in %s',
        past: '%s ago',
        s: 'a few seconds',
        ss: '%d seconds',
        m: 'a minute',
        mm: '%d minutes',
        h: 'an hour',
        hh: '%d hours',
        d: 'a day',
        dd: '%d days',
        w: 'a week',
        ww: '%d weeks',
        M: 'a month',
        MM: '%d months',
        y: 'a year',
        yy: '%d years',
    };

    function relativeTime(number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return isFunction(output)
            ? output(number, withoutSuffix, string, isFuture)
            : output.replace(/%d/i, number);
    }

    function pastFuture(diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
    }

    var aliases = {};

    function addUnitAlias(unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
    }

    function normalizeUnits(units) {
        return typeof units === 'string'
            ? aliases[units] || aliases[units.toLowerCase()]
            : undefined;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    var priorities = {};

    function addUnitPriority(unit, priority) {
        priorities[unit] = priority;
    }

    function getPrioritizedUnits(unitsObj) {
        var units = [],
            u;
        for (u in unitsObj) {
            if (hasOwnProp(unitsObj, u)) {
                units.push({ unit: u, priority: priorities[u] });
            }
        }
        units.sort(function (a, b) {
            return a.priority - b.priority;
        });
        return units;
    }

    function isLeapYear(year) {
        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    }

    function absFloor(number) {
        if (number < 0) {
            // -0 -> 0
            return Math.ceil(number) || 0;
        } else {
            return Math.floor(number);
        }
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            value = absFloor(coercedNumber);
        }

        return value;
    }

    function makeGetSet(unit, keepTime) {
        return function (value) {
            if (value != null) {
                set$1(this, unit, value);
                hooks.updateOffset(this, keepTime);
                return this;
            } else {
                return get(this, unit);
            }
        };
    }

    function get(mom, unit) {
        return mom.isValid()
            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()
            : NaN;
    }

    function set$1(mom, unit, value) {
        if (mom.isValid() && !isNaN(value)) {
            if (
                unit === 'FullYear' &&
                isLeapYear(mom.year()) &&
                mom.month() === 1 &&
                mom.date() === 29
            ) {
                value = toInt(value);
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](
                    value,
                    mom.month(),
                    daysInMonth(value, mom.month())
                );
            } else {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
            }
        }
    }

    // MOMENTS

    function stringGet(units) {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units]();
        }
        return this;
    }

    function stringSet(units, value) {
        if (typeof units === 'object') {
            units = normalizeObjectUnits(units);
            var prioritized = getPrioritizedUnits(units),
                i;
            for (i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit]);
            }
        } else {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
                return this[units](value);
            }
        }
        return this;
    }

    var match1 = /\d/, //       0 - 9
        match2 = /\d\d/, //      00 - 99
        match3 = /\d{3}/, //     000 - 999
        match4 = /\d{4}/, //    0000 - 9999
        match6 = /[+-]?\d{6}/, // -999999 - 999999
        match1to2 = /\d\d?/, //       0 - 99
        match3to4 = /\d\d\d\d?/, //     999 - 9999
        match5to6 = /\d\d\d\d\d\d?/, //   99999 - 999999
        match1to3 = /\d{1,3}/, //       0 - 999
        match1to4 = /\d{1,4}/, //       0 - 9999
        match1to6 = /[+-]?\d{1,6}/, // -999999 - 999999
        matchUnsigned = /\d+/, //       0 - inf
        matchSigned = /[+-]?\d+/, //    -inf - inf
        matchOffset = /Z|[+-]\d\d:?\d\d/gi, // +00:00 -00:00 +0000 -0000 or Z
        matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z
        matchTimestamp = /[+-]?\d+(\.\d{1,3})?/, // 123456789 123456789.123
        // any word (or two) characters or numbers including two/three word month in arabic.
        // includes scottish gaelic two word and hyphenated months
        matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,
        regexes;

    regexes = {};

    function addRegexToken(token, regex, strictRegex) {
        regexes[token] = isFunction(regex)
            ? regex
            : function (isStrict, localeData) {
                  return isStrict && strictRegex ? strictRegex : regex;
              };
    }

    function getParseRegexForToken(token, config) {
        if (!hasOwnProp(regexes, token)) {
            return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
    }

    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
    function unescapeFormat(s) {
        return regexEscape(
            s
                .replace('\\', '')
                .replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (
                    matched,
                    p1,
                    p2,
                    p3,
                    p4
                ) {
                    return p1 || p2 || p3 || p4;
                })
        );
    }

    function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    var tokens = {};

    function addParseToken(token, callback) {
        var i,
            func = callback;
        if (typeof token === 'string') {
            token = [token];
        }
        if (isNumber(callback)) {
            func = function (input, array) {
                array[callback] = toInt(input);
            };
        }
        for (i = 0; i < token.length; i++) {
            tokens[token[i]] = func;
        }
    }

    function addWeekParseToken(token, callback) {
        addParseToken(token, function (input, array, config, token) {
            config._w = config._w || {};
            callback(input, config._w, config, token);
        });
    }

    function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
            tokens[token](input, config._a, config, token);
        }
    }

    var YEAR = 0,
        MONTH = 1,
        DATE = 2,
        HOUR = 3,
        MINUTE = 4,
        SECOND = 5,
        MILLISECOND = 6,
        WEEK = 7,
        WEEKDAY = 8;

    function mod(n, x) {
        return ((n % x) + x) % x;
    }

    var indexOf;

    if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
    } else {
        indexOf = function (o) {
            // I know
            var i;
            for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                    return i;
                }
            }
            return -1;
        };
    }

    function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
            return NaN;
        }
        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1
            ? isLeapYear(year)
                ? 29
                : 28
            : 31 - ((modMonth % 7) % 2);
    }

    // FORMATTING

    addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
    });

    addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
    });

    addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
    });

    // ALIASES

    addUnitAlias('month', 'M');

    // PRIORITY

    addUnitPriority('month', 8);

    // PARSING

    addRegexToken('M', match1to2);
    addRegexToken('MM', match1to2, match2);
    addRegexToken('MMM', function (isStrict, locale) {
        return locale.monthsShortRegex(isStrict);
    });
    addRegexToken('MMMM', function (isStrict, locale) {
        return locale.monthsRegex(isStrict);
    });

    addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
    });

    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict);
        // if we didn't find a month name, mark the date as invalid.
        if (month != null) {
            array[MONTH] = month;
        } else {
            getParsingFlags(config).invalidMonth = input;
        }
    });

    // LOCALES

    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
        ),
        defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(
            '_'
        ),
        MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
        defaultMonthsShortRegex = matchWord,
        defaultMonthsRegex = matchWord;

    function localeMonths(m, format) {
        if (!m) {
            return isArray(this._months)
                ? this._months
                : this._months['standalone'];
        }
        return isArray(this._months)
            ? this._months[m.month()]
            : this._months[
                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)
                      ? 'format'
                      : 'standalone'
              ][m.month()];
    }

    function localeMonthsShort(m, format) {
        if (!m) {
            return isArray(this._monthsShort)
                ? this._monthsShort
                : this._monthsShort['standalone'];
        }
        return isArray(this._monthsShort)
            ? this._monthsShort[m.month()]
            : this._monthsShort[
                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'
              ][m.month()];
    }

    function handleStrictParse(monthName, format, strict) {
        var i,
            ii,
            mom,
            llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
            // this is not used
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (i = 0; i < 12; ++i) {
                mom = createUTC([2000, i]);
                this._shortMonthsParse[i] = this.monthsShort(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeMonthsParse(monthName, format, strict) {
        var i, mom, regex;

        if (this._monthsParseExact) {
            return handleStrictParse.call(this, monthName, format, strict);
        }

        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
        }

        // TODO: add sorting
        // Sorting makes sure if one month (or abbr) is a prefix of another
        // see sorting in computeMonthsParse
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp(
                    '^' + this.months(mom, '').replace('.', '') + '$',
                    'i'
                );
                this._shortMonthsParse[i] = new RegExp(
                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',
                    'i'
                );
            }
            if (!strict && !this._monthsParse[i]) {
                regex =
                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (
                strict &&
                format === 'MMMM' &&
                this._longMonthsParse[i].test(monthName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'MMM' &&
                this._shortMonthsParse[i].test(monthName)
            ) {
                return i;
            } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function setMonth(mom, value) {
        var dayOfMonth;

        if (!mom.isValid()) {
            // No op
            return mom;
        }

        if (typeof value === 'string') {
            if (/^\d+$/.test(value)) {
                value = toInt(value);
            } else {
                value = mom.localeData().monthsParse(value);
                // TODO: Another silent failure?
                if (!isNumber(value)) {
                    return mom;
                }
            }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function getSetMonth(value) {
        if (value != null) {
            setMonth(this, value);
            hooks.updateOffset(this, true);
            return this;
        } else {
            return get(this, 'Month');
        }
    }

    function getDaysInMonth() {
        return daysInMonth(this.year(), this.month());
    }

    function monthsShortRegex(isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsShortStrictRegex;
            } else {
                return this._monthsShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsShortRegex')) {
                this._monthsShortRegex = defaultMonthsShortRegex;
            }
            return this._monthsShortStrictRegex && isStrict
                ? this._monthsShortStrictRegex
                : this._monthsShortRegex;
        }
    }

    function monthsRegex(isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsStrictRegex;
            } else {
                return this._monthsRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsRegex')) {
                this._monthsRegex = defaultMonthsRegex;
            }
            return this._monthsStrictRegex && isStrict
                ? this._monthsStrictRegex
                : this._monthsRegex;
        }
    }

    function computeMonthsParse() {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom;
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            shortPieces.push(this.monthsShort(mom, ''));
            longPieces.push(this.months(mom, ''));
            mixedPieces.push(this.months(mom, ''));
            mixedPieces.push(this.monthsShort(mom, ''));
        }
        // Sorting makes sure if one month (or abbr) is a prefix of another it
        // will match the longer piece.
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 12; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
        }
        for (i = 0; i < 24; i++) {
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp(
            '^(' + longPieces.join('|') + ')',
            'i'
        );
        this._monthsShortStrictRegex = new RegExp(
            '^(' + shortPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    addFormatToken('Y', 0, 0, function () {
        var y = this.year();
        return y <= 9999 ? zeroFill(y, 4) : '+' + y;
    });

    addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
    });

    addFormatToken(0, ['YYYY', 4], 0, 'year');
    addFormatToken(0, ['YYYYY', 5], 0, 'year');
    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

    // ALIASES

    addUnitAlias('year', 'y');

    // PRIORITIES

    addUnitPriority('year', 1);

    // PARSING

    addRegexToken('Y', matchSigned);
    addRegexToken('YY', match1to2, match2);
    addRegexToken('YYYY', match1to4, match4);
    addRegexToken('YYYYY', match1to6, match6);
    addRegexToken('YYYYYY', match1to6, match6);

    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
    addParseToken('YYYY', function (input, array) {
        array[YEAR] =
            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
    });
    addParseToken('YY', function (input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input);
    });
    addParseToken('Y', function (input, array) {
        array[YEAR] = parseInt(input, 10);
    });

    // HELPERS

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    // HOOKS

    hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    // MOMENTS

    var getSetYear = makeGetSet('FullYear', true);

    function getIsLeapYear() {
        return isLeapYear(this.year());
    }

    function createDate(y, m, d, h, M, s, ms) {
        // can't just apply() to create a date:
        // https://stackoverflow.com/q/181348
        var date;
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            date = new Date(y + 400, m, d, h, M, s, ms);
            if (isFinite(date.getFullYear())) {
                date.setFullYear(y);
            }
        } else {
            date = new Date(y, m, d, h, M, s, ms);
        }

        return date;
    }

    function createUTCDate(y) {
        var date, args;
        // the Date.UTC function remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            args = Array.prototype.slice.call(arguments);
            // preserve leap years using a full 400 year cycle, then reset
            args[0] = y + 400;
            date = new Date(Date.UTC.apply(null, args));
            if (isFinite(date.getUTCFullYear())) {
                date.setUTCFullYear(y);
            }
        } else {
            date = new Date(Date.UTC.apply(null, arguments));
        }

        return date;
    }

    // start-of-first-week - start-of-year
    function firstWeekOffset(year, dow, doy) {
        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
            fwd = 7 + dow - doy,
            // first-week day local weekday -- which local weekday is fwd
            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

        return -fwdlw + fwd - 1;
    }

    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7,
            weekOffset = firstWeekOffset(year, dow, doy),
            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
            resYear,
            resDayOfYear;

        if (dayOfYear <= 0) {
            resYear = year - 1;
            resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
            resYear = year + 1;
            resDayOfYear = dayOfYear - daysInYear(year);
        } else {
            resYear = year;
            resDayOfYear = dayOfYear;
        }

        return {
            year: resYear,
            dayOfYear: resDayOfYear,
        };
    }

    function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
            resWeek,
            resYear;

        if (week < 1) {
            resYear = mom.year() - 1;
            resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
            resWeek = week - weeksInYear(mom.year(), dow, doy);
            resYear = mom.year() + 1;
        } else {
            resYear = mom.year();
            resWeek = week;
        }

        return {
            week: resWeek,
            year: resYear,
        };
    }

    function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy),
            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
    }

    // FORMATTING

    addFormatToken('w', ['ww', 2], 'wo', 'week');
    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

    // ALIASES

    addUnitAlias('week', 'w');
    addUnitAlias('isoWeek', 'W');

    // PRIORITIES

    addUnitPriority('week', 5);
    addUnitPriority('isoWeek', 5);

    // PARSING

    addRegexToken('w', match1to2);
    addRegexToken('ww', match1to2, match2);
    addRegexToken('W', match1to2);
    addRegexToken('WW', match1to2, match2);

    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (
        input,
        week,
        config,
        token
    ) {
        week[token.substr(0, 1)] = toInt(input);
    });

    // HELPERS

    // LOCALES

    function localeWeek(mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
    }

    var defaultLocaleWeek = {
        dow: 0, // Sunday is the first day of the week.
        doy: 6, // The week that contains Jan 6th is the first week of the year.
    };

    function localeFirstDayOfWeek() {
        return this._week.dow;
    }

    function localeFirstDayOfYear() {
        return this._week.doy;
    }

    // MOMENTS

    function getSetWeek(input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    function getSetISOWeek(input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    // FORMATTING

    addFormatToken('d', 0, 'do', 'day');

    addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
    });

    addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
    });

    addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
    });

    addFormatToken('e', 0, 0, 'weekday');
    addFormatToken('E', 0, 0, 'isoWeekday');

    // ALIASES

    addUnitAlias('day', 'd');
    addUnitAlias('weekday', 'e');
    addUnitAlias('isoWeekday', 'E');

    // PRIORITY
    addUnitPriority('day', 11);
    addUnitPriority('weekday', 11);
    addUnitPriority('isoWeekday', 11);

    // PARSING

    addRegexToken('d', match1to2);
    addRegexToken('e', match1to2);
    addRegexToken('E', match1to2);
    addRegexToken('dd', function (isStrict, locale) {
        return locale.weekdaysMinRegex(isStrict);
    });
    addRegexToken('ddd', function (isStrict, locale) {
        return locale.weekdaysShortRegex(isStrict);
    });
    addRegexToken('dddd', function (isStrict, locale) {
        return locale.weekdaysRegex(isStrict);
    });

    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
        var weekday = config._locale.weekdaysParse(input, token, config._strict);
        // if we didn't get a weekday name, mark the date as invalid
        if (weekday != null) {
            week.d = weekday;
        } else {
            getParsingFlags(config).invalidWeekday = input;
        }
    });

    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
    });

    // HELPERS

    function parseWeekday(input, locale) {
        if (typeof input !== 'string') {
            return input;
        }

        if (!isNaN(input)) {
            return parseInt(input, 10);
        }

        input = locale.weekdaysParse(input);
        if (typeof input === 'number') {
            return input;
        }

        return null;
    }

    function parseIsoWeekday(input, locale) {
        if (typeof input === 'string') {
            return locale.weekdaysParse(input) % 7 || 7;
        }
        return isNaN(input) ? null : input;
    }

    // LOCALES
    function shiftWeekdays(ws, n) {
        return ws.slice(n, 7).concat(ws.slice(0, n));
    }

    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_'
        ),
        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        defaultWeekdaysRegex = matchWord,
        defaultWeekdaysShortRegex = matchWord,
        defaultWeekdaysMinRegex = matchWord;

    function localeWeekdays(m, format) {
        var weekdays = isArray(this._weekdays)
            ? this._weekdays
            : this._weekdays[
                  m && m !== true && this._weekdays.isFormat.test(format)
                      ? 'format'
                      : 'standalone'
              ];
        return m === true
            ? shiftWeekdays(weekdays, this._week.dow)
            : m
            ? weekdays[m.day()]
            : weekdays;
    }

    function localeWeekdaysShort(m) {
        return m === true
            ? shiftWeekdays(this._weekdaysShort, this._week.dow)
            : m
            ? this._weekdaysShort[m.day()]
            : this._weekdaysShort;
    }

    function localeWeekdaysMin(m) {
        return m === true
            ? shiftWeekdays(this._weekdaysMin, this._week.dow)
            : m
            ? this._weekdaysMin[m.day()]
            : this._weekdaysMin;
    }

    function handleStrictParse$1(weekdayName, format, strict) {
        var i,
            ii,
            mom,
            llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];

            for (i = 0; i < 7; ++i) {
                mom = createUTC([2000, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeWeekdaysParse(weekdayName, format, strict) {
        var i, mom, regex;

        if (this._weekdaysParseExact) {
            return handleStrictParse$1.call(this, weekdayName, format, strict);
        }

        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = [];
        }

        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already

            mom = createUTC([2000, 1]).day(i);
            if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdays(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
                this._shortWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
                this._minWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
            }
            if (!this._weekdaysParse[i]) {
                regex =
                    '^' +
                    this.weekdays(mom, '') +
                    '|^' +
                    this.weekdaysShort(mom, '') +
                    '|^' +
                    this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (
                strict &&
                format === 'dddd' &&
                this._fullWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'ddd' &&
                this._shortWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'dd' &&
                this._minWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function getSetDayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, 'd');
        } else {
            return day;
        }
    }

    function getSetLocaleDayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
    }

    function getSetISODayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }

        // behaves the same as moment#day except
        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
        // as a setter, sunday should belong to the previous week.

        if (input != null) {
            var weekday = parseIsoWeekday(input, this.localeData());
            return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
            return this.day() || 7;
        }
    }

    function weekdaysRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysStrictRegex;
            } else {
                return this._weekdaysRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                this._weekdaysRegex = defaultWeekdaysRegex;
            }
            return this._weekdaysStrictRegex && isStrict
                ? this._weekdaysStrictRegex
                : this._weekdaysRegex;
        }
    }

    function weekdaysShortRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysShortStrictRegex;
            } else {
                return this._weekdaysShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
            }
            return this._weekdaysShortStrictRegex && isStrict
                ? this._weekdaysShortStrictRegex
                : this._weekdaysShortRegex;
        }
    }

    function weekdaysMinRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysMinStrictRegex;
            } else {
                return this._weekdaysMinRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
            }
            return this._weekdaysMinStrictRegex && isStrict
                ? this._weekdaysMinStrictRegex
                : this._weekdaysMinRegex;
        }
    }

    function computeWeekdaysParse() {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var minPieces = [],
            shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom,
            minp,
            shortp,
            longp;
        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, 1]).day(i);
            minp = regexEscape(this.weekdaysMin(mom, ''));
            shortp = regexEscape(this.weekdaysShort(mom, ''));
            longp = regexEscape(this.weekdays(mom, ''));
            minPieces.push(minp);
            shortPieces.push(shortp);
            longPieces.push(longp);
            mixedPieces.push(minp);
            mixedPieces.push(shortp);
            mixedPieces.push(longp);
        }
        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
        // will match the longer piece.
        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);

        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;

        this._weekdaysStrictRegex = new RegExp(
            '^(' + longPieces.join('|') + ')',
            'i'
        );
        this._weekdaysShortStrictRegex = new RegExp(
            '^(' + shortPieces.join('|') + ')',
            'i'
        );
        this._weekdaysMinStrictRegex = new RegExp(
            '^(' + minPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    function hFormat() {
        return this.hours() % 12 || 12;
    }

    function kFormat() {
        return this.hours() || 24;
    }

    addFormatToken('H', ['HH', 2], 0, 'hour');
    addFormatToken('h', ['hh', 2], 0, hFormat);
    addFormatToken('k', ['kk', 2], 0, kFormat);

    addFormatToken('hmm', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
    });

    addFormatToken('hmmss', 0, 0, function () {
        return (
            '' +
            hFormat.apply(this) +
            zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2)
        );
    });

    addFormatToken('Hmm', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2);
    });

    addFormatToken('Hmmss', 0, 0, function () {
        return (
            '' +
            this.hours() +
            zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2)
        );
    });

    function meridiem(token, lowercase) {
        addFormatToken(token, 0, 0, function () {
            return this.localeData().meridiem(
                this.hours(),
                this.minutes(),
                lowercase
            );
        });
    }

    meridiem('a', true);
    meridiem('A', false);

    // ALIASES

    addUnitAlias('hour', 'h');

    // PRIORITY
    addUnitPriority('hour', 13);

    // PARSING

    function matchMeridiem(isStrict, locale) {
        return locale._meridiemParse;
    }

    addRegexToken('a', matchMeridiem);
    addRegexToken('A', matchMeridiem);
    addRegexToken('H', match1to2);
    addRegexToken('h', match1to2);
    addRegexToken('k', match1to2);
    addRegexToken('HH', match1to2, match2);
    addRegexToken('hh', match1to2, match2);
    addRegexToken('kk', match1to2, match2);

    addRegexToken('hmm', match3to4);
    addRegexToken('hmmss', match5to6);
    addRegexToken('Hmm', match3to4);
    addRegexToken('Hmmss', match5to6);

    addParseToken(['H', 'HH'], HOUR);
    addParseToken(['k', 'kk'], function (input, array, config) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput;
    });
    addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
    });
    addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmmss', function (input, array, config) {
        var pos1 = input.length - 4,
            pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('Hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
    });
    addParseToken('Hmmss', function (input, array, config) {
        var pos1 = input.length - 4,
            pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
    });

    // LOCALES

    function localeIsPM(input) {
        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
        // Using charAt should be more compatible.
        return (input + '').toLowerCase().charAt(0) === 'p';
    }

    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i,
        // Setting the hour should keep the time, because the user explicitly
        // specified which hour they want. So trying to maintain the same hour (in
        // a new timezone) makes sense. Adding/subtracting hours does not follow
        // this rule.
        getSetHour = makeGetSet('Hours', true);

    function localeMeridiem(hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'pm' : 'PM';
        } else {
            return isLower ? 'am' : 'AM';
        }
    }

    var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,

        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,

        week: defaultLocaleWeek,

        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,

        meridiemParse: defaultLocaleMeridiemParse,
    };

    // internal storage for locale config files
    var locales = {},
        localeFamilies = {},
        globalLocale;

    function commonPrefix(arr1, arr2) {
        var i,
            minl = Math.min(arr1.length, arr2.length);
        for (i = 0; i < minl; i += 1) {
            if (arr1[i] !== arr2[i]) {
                return i;
            }
        }
        return minl;
    }

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    // pick the locale from the array
    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
    function chooseLocale(names) {
        var i = 0,
            j,
            next,
            locale,
            split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (
                    next &&
                    next.length >= j &&
                    commonPrefix(split, next) >= j - 1
                ) {
                    //the next array item is better than a shallower substring of this one
                    break;
                }
                j--;
            }
            i++;
        }
        return globalLocale;
    }

    function loadLocale(name) {
        var oldLocale = null,
            aliasedRequire;
        // TODO: Find a better way to register and load all the locales in Node
        if (
            locales[name] === undefined &&
            'object' !== 'undefined' &&
            module &&
            module.exports
        ) {
            try {
                oldLocale = globalLocale._abbr;
                aliasedRequire = commonjsRequire;
                aliasedRequire('./locale/' + name);
                getSetGlobalLocale(oldLocale);
            } catch (e) {
                // mark as not found to avoid repeating expensive file require call causing high CPU
                // when trying to find en-US, en_US, en-us for every format call
                locales[name] = null; // null means not found
            }
        }
        return locales[name];
    }

    // This function will load locale and then set the global locale.  If
    // no arguments are passed in, it will simply return the current global
    // locale key.
    function getSetGlobalLocale(key, values) {
        var data;
        if (key) {
            if (isUndefined(values)) {
                data = getLocale(key);
            } else {
                data = defineLocale(key, values);
            }

            if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data;
            } else {
                if (typeof console !== 'undefined' && console.warn) {
                    //warn user if arguments are passed but the locale could not be set
                    console.warn(
                        'Locale ' + key + ' not found. Did you forget to load it?'
                    );
                }
            }
        }

        return globalLocale._abbr;
    }

    function defineLocale(name, config) {
        if (config !== null) {
            var locale,
                parentConfig = baseConfig;
            config.abbr = name;
            if (locales[name] != null) {
                deprecateSimple(
                    'defineLocaleOverride',
                    'use moment.updateLocale(localeName, config) to change ' +
                        'an existing locale. moment.defineLocale(localeName, ' +
                        'config) should only be used for creating a new locale ' +
                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'
                );
                parentConfig = locales[name]._config;
            } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                    parentConfig = locales[config.parentLocale]._config;
                } else {
                    locale = loadLocale(config.parentLocale);
                    if (locale != null) {
                        parentConfig = locale._config;
                    } else {
                        if (!localeFamilies[config.parentLocale]) {
                            localeFamilies[config.parentLocale] = [];
                        }
                        localeFamilies[config.parentLocale].push({
                            name: name,
                            config: config,
                        });
                        return null;
                    }
                }
            }
            locales[name] = new Locale(mergeConfigs(parentConfig, config));

            if (localeFamilies[name]) {
                localeFamilies[name].forEach(function (x) {
                    defineLocale(x.name, x.config);
                });
            }

            // backwards compat for now: also set the locale
            // make sure we set the locale AFTER all child locales have been
            // created, so we won't end up with the child locale set.
            getSetGlobalLocale(name);

            return locales[name];
        } else {
            // useful for testing
            delete locales[name];
            return null;
        }
    }

    function updateLocale(name, config) {
        if (config != null) {
            var locale,
                tmpLocale,
                parentConfig = baseConfig;

            if (locales[name] != null && locales[name].parentLocale != null) {
                // Update existing child locale in-place to avoid memory-leaks
                locales[name].set(mergeConfigs(locales[name]._config, config));
            } else {
                // MERGE
                tmpLocale = loadLocale(name);
                if (tmpLocale != null) {
                    parentConfig = tmpLocale._config;
                }
                config = mergeConfigs(parentConfig, config);
                if (tmpLocale == null) {
                    // updateLocale is called for creating a new locale
                    // Set abbr so it will have a name (getters return
                    // undefined otherwise).
                    config.abbr = name;
                }
                locale = new Locale(config);
                locale.parentLocale = locales[name];
                locales[name] = locale;
            }

            // backwards compat for now: also set the locale
            getSetGlobalLocale(name);
        } else {
            // pass null for config to unupdate, useful for tests
            if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                    locales[name] = locales[name].parentLocale;
                    if (name === getSetGlobalLocale()) {
                        getSetGlobalLocale(name);
                    }
                } else if (locales[name] != null) {
                    delete locales[name];
                }
            }
        }
        return locales[name];
    }

    // returns locale data
    function getLocale(key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return globalLocale;
        }

        if (!isArray(key)) {
            //short-circuit everything else
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    }

    function listLocales() {
        return keys(locales);
    }

    function checkOverflow(m) {
        var overflow,
            a = m._a;

        if (a && getParsingFlags(m).overflow === -2) {
            overflow =
                a[MONTH] < 0 || a[MONTH] > 11
                    ? MONTH
                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])
                    ? DATE
                    : a[HOUR] < 0 ||
                      a[HOUR] > 24 ||
                      (a[HOUR] === 24 &&
                          (a[MINUTE] !== 0 ||
                              a[SECOND] !== 0 ||
                              a[MILLISECOND] !== 0))
                    ? HOUR
                    : a[MINUTE] < 0 || a[MINUTE] > 59
                    ? MINUTE
                    : a[SECOND] < 0 || a[SECOND] > 59
                    ? SECOND
                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999
                    ? MILLISECOND
                    : -1;

            if (
                getParsingFlags(m)._overflowDayOfYear &&
                (overflow < YEAR || overflow > DATE)
            ) {
                overflow = DATE;
            }
            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK;
            }
            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY;
            }

            getParsingFlags(m).overflow = overflow;
        }

        return m;
    }

    // iso 8601 regex
    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
        basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
        tzRegex = /Z|[+-]\d\d(?::?\d\d)?/,
        isoDates = [
            ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
            ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
            ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
            ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
            ['YYYY-DDD', /\d{4}-\d{3}/],
            ['YYYY-MM', /\d{4}-\d\d/, false],
            ['YYYYYYMMDD', /[+-]\d{10}/],
            ['YYYYMMDD', /\d{8}/],
            ['GGGG[W]WWE', /\d{4}W\d{3}/],
            ['GGGG[W]WW', /\d{4}W\d{2}/, false],
            ['YYYYDDD', /\d{7}/],
            ['YYYYMM', /\d{6}/, false],
            ['YYYY', /\d{4}/, false],
        ],
        // iso time formats and regexes
        isoTimes = [
            ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
            ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
            ['HH:mm:ss', /\d\d:\d\d:\d\d/],
            ['HH:mm', /\d\d:\d\d/],
            ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
            ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
            ['HHmmss', /\d\d\d\d\d\d/],
            ['HHmm', /\d\d\d\d/],
            ['HH', /\d\d/],
        ],
        aspNetJsonRegex = /^\/?Date\((-?\d+)/i,
        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
        rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
        obsOffsets = {
            UT: 0,
            GMT: 0,
            EDT: -4 * 60,
            EST: -5 * 60,
            CDT: -5 * 60,
            CST: -6 * 60,
            MDT: -6 * 60,
            MST: -7 * 60,
            PDT: -7 * 60,
            PST: -8 * 60,
        };

    // date from iso format
    function configFromISO(config) {
        var i,
            l,
            string = config._i,
            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
            allowTime,
            dateFormat,
            timeFormat,
            tzFormat;

        if (match) {
            getParsingFlags(config).iso = true;

            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                    dateFormat = isoDates[i][0];
                    allowTime = isoDates[i][2] !== false;
                    break;
                }
            }
            if (dateFormat == null) {
                config._isValid = false;
                return;
            }
            if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                    if (isoTimes[i][1].exec(match[3])) {
                        // match[2] should be 'T' or space
                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
                        break;
                    }
                }
                if (timeFormat == null) {
                    config._isValid = false;
                    return;
                }
            }
            if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return;
            }
            if (match[4]) {
                if (tzRegex.exec(match[4])) {
                    tzFormat = 'Z';
                } else {
                    config._isValid = false;
                    return;
                }
            }
            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
            configFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    function extractFromRFC2822Strings(
        yearStr,
        monthStr,
        dayStr,
        hourStr,
        minuteStr,
        secondStr
    ) {
        var result = [
            untruncateYear(yearStr),
            defaultLocaleMonthsShort.indexOf(monthStr),
            parseInt(dayStr, 10),
            parseInt(hourStr, 10),
            parseInt(minuteStr, 10),
        ];

        if (secondStr) {
            result.push(parseInt(secondStr, 10));
        }

        return result;
    }

    function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);
        if (year <= 49) {
            return 2000 + year;
        } else if (year <= 999) {
            return 1900 + year;
        }
        return year;
    }

    function preprocessRFC2822(s) {
        // Remove comments and folding whitespace and replace multiple-spaces with a single space
        return s
            .replace(/\([^)]*\)|[\n\t]/g, ' ')
            .replace(/(\s\s+)/g, ' ')
            .replace(/^\s\s*/, '')
            .replace(/\s\s*$/, '');
    }

    function checkWeekday(weekdayStr, parsedInput, config) {
        if (weekdayStr) {
            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.
            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
                weekdayActual = new Date(
                    parsedInput[0],
                    parsedInput[1],
                    parsedInput[2]
                ).getDay();
            if (weekdayProvided !== weekdayActual) {
                getParsingFlags(config).weekdayMismatch = true;
                config._isValid = false;
                return false;
            }
        }
        return true;
    }

    function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
            return obsOffsets[obsOffset];
        } else if (militaryOffset) {
            // the only allowed military tz is Z
            return 0;
        } else {
            var hm = parseInt(numOffset, 10),
                m = hm % 100,
                h = (hm - m) / 100;
            return h * 60 + m;
        }
    }

    // date and time from ref 2822 format
    function configFromRFC2822(config) {
        var match = rfc2822.exec(preprocessRFC2822(config._i)),
            parsedArray;
        if (match) {
            parsedArray = extractFromRFC2822Strings(
                match[4],
                match[3],
                match[2],
                match[5],
                match[6],
                match[7]
            );
            if (!checkWeekday(match[1], parsedArray, config)) {
                return;
            }

            config._a = parsedArray;
            config._tzm = calculateOffset(match[8], match[9], match[10]);

            config._d = createUTCDate.apply(null, config._a);
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

            getParsingFlags(config).rfc2822 = true;
        } else {
            config._isValid = false;
        }
    }

    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict
    function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);
        if (matched !== null) {
            config._d = new Date(+matched[1]);
            return;
        }

        configFromISO(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        configFromRFC2822(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        if (config._strict) {
            config._isValid = false;
        } else {
            // Final attempt, use Input Fallback
            hooks.createFromInputFallback(config);
        }
    }

    hooks.createFromInputFallback = deprecate(
        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',
        function (config) {
            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
        }
    );

    // Pick the first defined of two or three arguments.
    function defaults(a, b, c) {
        if (a != null) {
            return a;
        }
        if (b != null) {
            return b;
        }
        return c;
    }

    function currentDateArray(config) {
        // hooks is actually the exported moment object
        var nowValue = new Date(hooks.now());
        if (config._useUTC) {
            return [
                nowValue.getUTCFullYear(),
                nowValue.getUTCMonth(),
                nowValue.getUTCDate(),
            ];
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
    }

    // convert an array to a date.
    // the array should mirror the parameters below
    // note: all values past the year are optional and will default to the lowest possible value.
    // [year, month, day , hour, minute, second, millisecond]
    function configFromArray(config) {
        var i,
            date,
            input = [],
            currentDate,
            expectedWeekday,
            yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        //compute day of the year from weeks and weekdays
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        //if the day of the year is set, figure out what it is
        if (config._dayOfYear != null) {
            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

            if (
                config._dayOfYear > daysInYear(yearToUse) ||
                config._dayOfYear === 0
            ) {
                getParsingFlags(config)._overflowDayOfYear = true;
            }

            date = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        // Zero out whatever was not defaulted, including time
        for (; i < 7; i++) {
            config._a[i] = input[i] =
                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];
        }

        // Check for 24:00:00.000
        if (
            config._a[HOUR] === 24 &&
            config._a[MINUTE] === 0 &&
            config._a[SECOND] === 0 &&
            config._a[MILLISECOND] === 0
        ) {
            config._nextDay = true;
            config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(
            null,
            input
        );
        expectedWeekday = config._useUTC
            ? config._d.getUTCDay()
            : config._d.getDay();

        // Apply timezone offset from input. The actual utcOffset can be changed
        // with parseZone.
        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
            config._a[HOUR] = 24;
        }

        // check for mismatching day of week
        if (
            config._w &&
            typeof config._w.d !== 'undefined' &&
            config._w.d !== expectedWeekday
        ) {
            getParsingFlags(config).weekdayMismatch = true;
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            // TODO: We need to take the current isoWeekYear, but that depends on
            // how we interpret now (local, utc, fixed offset). So create
            // a now version of current config (take local/utc/offset flags, and
            // create now).
            weekYear = defaults(
                w.GG,
                config._a[YEAR],
                weekOfYear(createLocal(), 1, 4).year
            );
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
            if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true;
            }
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            curWeek = weekOfYear(createLocal(), dow, doy);

            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

            // Default to current week.
            week = defaults(w.w, curWeek.week);

            if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < 0 || weekday > 6) {
                    weekdayOverflow = true;
                }
            } else if (w.e != null) {
                // local weekday -- counting starts from beginning of week
                weekday = w.e + dow;
                if (w.e < 0 || w.e > 6) {
                    weekdayOverflow = true;
                }
            } else {
                // default to beginning of week
                weekday = dow;
            }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
            getParsingFlags(config)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
            getParsingFlags(config)._overflowWeekday = true;
        } else {
            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
            config._a[YEAR] = temp.year;
            config._dayOfYear = temp.dayOfYear;
        }
    }

    // constant that refers to the ISO standard
    hooks.ISO_8601 = function () {};

    // constant that refers to the RFC 2822 form
    hooks.RFC_2822 = function () {};

    // date from string and format string
    function configFromStringAndFormat(config) {
        // TODO: Move this to another part of the creation flow to prevent circular deps
        if (config._f === hooks.ISO_8601) {
            configFromISO(config);
            return;
        }
        if (config._f === hooks.RFC_2822) {
            configFromRFC2822(config);
            return;
        }
        config._a = [];
        getParsingFlags(config).empty = true;

        // This array is used to make a Date, either with `new Date` or `Date.UTC`
        var string = '' + config._i,
            i,
            parsedInput,
            tokens,
            token,
            skipped,
            stringLength = string.length,
            totalParsedInputLength = 0,
            era;

        tokens =
            expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) ||
                [])[0];
            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    getParsingFlags(config).unusedInput.push(skipped);
                }
                string = string.slice(
                    string.indexOf(parsedInput) + parsedInput.length
                );
                totalParsedInputLength += parsedInput.length;
            }
            // don't parse if it's not a known token
            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    getParsingFlags(config).empty = false;
                } else {
                    getParsingFlags(config).unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            } else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
            }
        }

        // add remaining unparsed input length to the string
        getParsingFlags(config).charsLeftOver =
            stringLength - totalParsedInputLength;
        if (string.length > 0) {
            getParsingFlags(config).unusedInput.push(string);
        }

        // clear _12h flag if hour is <= 12
        if (
            config._a[HOUR] <= 12 &&
            getParsingFlags(config).bigHour === true &&
            config._a[HOUR] > 0
        ) {
            getParsingFlags(config).bigHour = undefined;
        }

        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem;
        // handle meridiem
        config._a[HOUR] = meridiemFixWrap(
            config._locale,
            config._a[HOUR],
            config._meridiem
        );

        // handle era
        era = getParsingFlags(config).era;
        if (era !== null) {
            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);
        }

        configFromArray(config);
        checkOverflow(config);
    }

    function meridiemFixWrap(locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
            // nothing to do
            return hour;
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
            // Fallback
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12;
            }
            if (!isPm && hour === 12) {
                hour = 0;
            }
            return hour;
        } else {
            // this is not supposed to happen
            return hour;
        }
    }

    // date from string and array of format strings
    function configFromStringAndArray(config) {
        var tempConfig,
            bestMoment,
            scoreToBeat,
            i,
            currentScore,
            validFormatFound,
            bestFormatIsValid = false;

        if (config._f.length === 0) {
            getParsingFlags(config).invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            validFormatFound = false;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
            }
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);

            if (isValid(tempConfig)) {
                validFormatFound = true;
            }

            // if there is any input that was not parsed add a penalty for that format
            currentScore += getParsingFlags(tempConfig).charsLeftOver;

            //or tokens
            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

            getParsingFlags(tempConfig).score = currentScore;

            if (!bestFormatIsValid) {
                if (
                    scoreToBeat == null ||
                    currentScore < scoreToBeat ||
                    validFormatFound
                ) {
                    scoreToBeat = currentScore;
                    bestMoment = tempConfig;
                    if (validFormatFound) {
                        bestFormatIsValid = true;
                    }
                }
            } else {
                if (currentScore < scoreToBeat) {
                    scoreToBeat = currentScore;
                    bestMoment = tempConfig;
                }
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    function configFromObject(config) {
        if (config._d) {
            return;
        }

        var i = normalizeObjectUnits(config._i),
            dayOrDate = i.day === undefined ? i.date : i.day;
        config._a = map(
            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],
            function (obj) {
                return obj && parseInt(obj, 10);
            }
        );

        configFromArray(config);
    }

    function createFromConfig(config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));
        if (res._nextDay) {
            // Adding is smart enough around DST
            res.add(1, 'd');
            res._nextDay = undefined;
        }

        return res;
    }

    function prepareConfig(config) {
        var input = config._i,
            format = config._f;

        config._locale = config._locale || getLocale(config._l);

        if (input === null || (format === undefined && input === '')) {
            return createInvalid({ nullInput: true });
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
            return new Moment(checkOverflow(input));
        } else if (isDate(input)) {
            config._d = input;
        } else if (isArray(format)) {
            configFromStringAndArray(config);
        } else if (format) {
            configFromStringAndFormat(config);
        } else {
            configFromInput(config);
        }

        if (!isValid(config)) {
            config._d = null;
        }

        return config;
    }

    function configFromInput(config) {
        var input = config._i;
        if (isUndefined(input)) {
            config._d = new Date(hooks.now());
        } else if (isDate(input)) {
            config._d = new Date(input.valueOf());
        } else if (typeof input === 'string') {
            configFromString(config);
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
            });
            configFromArray(config);
        } else if (isObject(input)) {
            configFromObject(config);
        } else if (isNumber(input)) {
            // from milliseconds
            config._d = new Date(input);
        } else {
            hooks.createFromInputFallback(config);
        }
    }

    function createLocalOrUTC(input, format, locale, strict, isUTC) {
        var c = {};

        if (format === true || format === false) {
            strict = format;
            format = undefined;
        }

        if (locale === true || locale === false) {
            strict = locale;
            locale = undefined;
        }

        if (
            (isObject(input) && isObjectEmpty(input)) ||
            (isArray(input) && input.length === 0)
        ) {
            input = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;

        return createFromConfig(c);
    }

    function createLocal(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
    }

    var prototypeMin = deprecate(
            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
                var other = createLocal.apply(null, arguments);
                if (this.isValid() && other.isValid()) {
                    return other < this ? this : other;
                } else {
                    return createInvalid();
                }
            }
        ),
        prototypeMax = deprecate(
            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
                var other = createLocal.apply(null, arguments);
                if (this.isValid() && other.isValid()) {
                    return other > this ? this : other;
                } else {
                    return createInvalid();
                }
            }
        );

    // Pick a moment m from moments so that m[fn](other) is true for all
    // other. This relies on the function fn to be transitive.
    //
    // moments should either be an array of moment objects or an array, whose
    // first element is an array of moment objects.
    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return createLocal();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    // TODO: Use [].sort instead?
    function min() {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    }

    function max() {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    }

    var now = function () {
        return Date.now ? Date.now() : +new Date();
    };

    var ordering = [
        'year',
        'quarter',
        'month',
        'week',
        'day',
        'hour',
        'minute',
        'second',
        'millisecond',
    ];

    function isDurationValid(m) {
        var key,
            unitHasDecimal = false,
            i;
        for (key in m) {
            if (
                hasOwnProp(m, key) &&
                !(
                    indexOf.call(ordering, key) !== -1 &&
                    (m[key] == null || !isNaN(m[key]))
                )
            ) {
                return false;
            }
        }

        for (i = 0; i < ordering.length; ++i) {
            if (m[ordering[i]]) {
                if (unitHasDecimal) {
                    return false; // only allow non-integers for smallest unit
                }
                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                    unitHasDecimal = true;
                }
            }
        }

        return true;
    }

    function isValid$1() {
        return this._isValid;
    }

    function createInvalid$1() {
        return createDuration(NaN);
    }

    function Duration(duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        this._isValid = isDurationValid(normalizedInput);

        // representation for dateAddRemove
        this._milliseconds =
            +milliseconds +
            seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately
        this._days = +days + weeks * 7;
        // It is impossible to translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.
        this._months = +months + quarters * 3 + years * 12;

        this._data = {};

        this._locale = getLocale();

        this._bubble();
    }

    function isDuration(obj) {
        return obj instanceof Duration;
    }

    function absRound(number) {
        if (number < 0) {
            return Math.round(-1 * number) * -1;
        } else {
            return Math.round(number);
        }
    }

    // compare two arrays, return the number of differences
    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if (
                (dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))
            ) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    // FORMATTING

    function offset(token, separator) {
        addFormatToken(token, 0, 0, function () {
            var offset = this.utcOffset(),
                sign = '+';
            if (offset < 0) {
                offset = -offset;
                sign = '-';
            }
            return (
                sign +
                zeroFill(~~(offset / 60), 2) +
                separator +
                zeroFill(~~offset % 60, 2)
            );
        });
    }

    offset('Z', ':');
    offset('ZZ', '');

    // PARSING

    addRegexToken('Z', matchShortOffset);
    addRegexToken('ZZ', matchShortOffset);
    addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input);
    });

    // HELPERS

    // timezone chunker
    // '+10:00' > ['10',  '00']
    // '-1530'  > ['-15', '30']
    var chunkOffset = /([\+\-]|\d\d)/gi;

    function offsetFromString(matcher, string) {
        var matches = (string || '').match(matcher),
            chunk,
            parts,
            minutes;

        if (matches === null) {
            return null;
        }

        chunk = matches[matches.length - 1] || [];
        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        minutes = +(parts[1] * 60) + toInt(parts[2]);

        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;
    }

    // Return a moment from input, that is local/utc/zone equivalent to model.
    function cloneWithOffset(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff =
                (isMoment(input) || isDate(input)
                    ? input.valueOf()
                    : createLocal(input).valueOf()) - res.valueOf();
            // Use low-level api, because this fn is low-level api.
            res._d.setTime(res._d.valueOf() + diff);
            hooks.updateOffset(res, false);
            return res;
        } else {
            return createLocal(input).local();
        }
    }

    function getDateOffset(m) {
        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
        // https://github.com/moment/moment/pull/1871
        return -Math.round(m._d.getTimezoneOffset());
    }

    // HOOKS

    // This function will be called whenever a moment is mutated.
    // It is intended to keep the offset in sync with the timezone.
    hooks.updateOffset = function () {};

    // MOMENTS

    // keepLocalTime = true means only change the timezone, without
    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
    // +0200, so we adjust the time as needed, to be valid.
    //
    // Keeping the time actually adds/subtracts (one hour)
    // from the actual represented time. That is why we call updateOffset
    // a second time. In case it wants us to change the offset again
    // _changeInProgress == true case, then we have to adjust, because
    // there is no such time in the given timezone.
    function getSetOffset(input, keepLocalTime, keepMinutes) {
        var offset = this._offset || 0,
            localAdjust;
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        if (input != null) {
            if (typeof input === 'string') {
                input = offsetFromString(matchShortOffset, input);
                if (input === null) {
                    return this;
                }
            } else if (Math.abs(input) < 16 && !keepMinutes) {
                input = input * 60;
            }
            if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
                this.add(localAdjust, 'm');
            }
            if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                    addSubtract(
                        this,
                        createDuration(input - offset, 'm'),
                        1,
                        false
                    );
                } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    hooks.updateOffset(this, true);
                    this._changeInProgress = null;
                }
            }
            return this;
        } else {
            return this._isUTC ? offset : getDateOffset(this);
        }
    }

    function getSetZone(input, keepLocalTime) {
        if (input != null) {
            if (typeof input !== 'string') {
                input = -input;
            }

            this.utcOffset(input, keepLocalTime);

            return this;
        } else {
            return -this.utcOffset();
        }
    }

    function setOffsetToUTC(keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
    }

    function setOffsetToLocal(keepLocalTime) {
        if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;

            if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
            }
        }
        return this;
    }

    function setOffsetToParsedOffset() {
        if (this._tzm != null) {
            this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === 'string') {
            var tZone = offsetFromString(matchOffset, this._i);
            if (tZone != null) {
                this.utcOffset(tZone);
            } else {
                this.utcOffset(0, true);
            }
        }
        return this;
    }

    function hasAlignedHourOffset(input) {
        if (!this.isValid()) {
            return false;
        }
        input = input ? createLocal(input).utcOffset() : 0;

        return (this.utcOffset() - input) % 60 === 0;
    }

    function isDaylightSavingTime() {
        return (
            this.utcOffset() > this.clone().month(0).utcOffset() ||
            this.utcOffset() > this.clone().month(5).utcOffset()
        );
    }

    function isDaylightSavingTimeShifted() {
        if (!isUndefined(this._isDSTShifted)) {
            return this._isDSTShifted;
        }

        var c = {},
            other;

        copyConfig(c, this);
        c = prepareConfig(c);

        if (c._a) {
            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
            this._isDSTShifted =
                this.isValid() && compareArrays(c._a, other.toArray()) > 0;
        } else {
            this._isDSTShifted = false;
        }

        return this._isDSTShifted;
    }

    function isLocal() {
        return this.isValid() ? !this._isUTC : false;
    }

    function isUtcOffset() {
        return this.isValid() ? this._isUTC : false;
    }

    function isUtc() {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
    }

    // ASP.NET json date format regex
    var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,
        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
        // and further modified to allow for strings containing both week and day
        isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

    function createDuration(input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
            match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
            duration = {
                ms: input._milliseconds,
                d: input._days,
                M: input._months,
            };
        } else if (isNumber(input) || !isNaN(+input)) {
            duration = {};
            if (key) {
                duration[key] = +input;
            } else {
                duration.milliseconds = +input;
            }
        } else if ((match = aspNetRegex.exec(input))) {
            sign = match[1] === '-' ? -1 : 1;
            duration = {
                y: 0,
                d: toInt(match[DATE]) * sign,
                h: toInt(match[HOUR]) * sign,
                m: toInt(match[MINUTE]) * sign,
                s: toInt(match[SECOND]) * sign,
                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match
            };
        } else if ((match = isoRegex.exec(input))) {
            sign = match[1] === '-' ? -1 : 1;
            duration = {
                y: parseIso(match[2], sign),
                M: parseIso(match[3], sign),
                w: parseIso(match[4], sign),
                d: parseIso(match[5], sign),
                h: parseIso(match[6], sign),
                m: parseIso(match[7], sign),
                s: parseIso(match[8], sign),
            };
        } else if (duration == null) {
            // checks for null or undefined
            duration = {};
        } else if (
            typeof duration === 'object' &&
            ('from' in duration || 'to' in duration)
        ) {
            diffRes = momentsDifference(
                createLocal(duration.from),
                createLocal(duration.to)
            );

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
            ret._locale = input._locale;
        }

        if (isDuration(input) && hasOwnProp(input, '_isValid')) {
            ret._isValid = input._isValid;
        }

        return ret;
    }

    createDuration.fn = Duration.prototype;
    createDuration.invalid = createInvalid$1;

    function parseIso(inp, sign) {
        // We'd normally use ~~inp for this, but unfortunately it also
        // converts floats to ints.
        // inp may be undefined, so careful calling replace on it.
        var res = inp && parseFloat(inp.replace(',', '.'));
        // apply sign while we're at it
        return (isNaN(res) ? 0 : res) * sign;
    }

    function positiveMomentsDifference(base, other) {
        var res = {};

        res.months =
            other.month() - base.month() + (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +base.clone().add(res.months, 'M');

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
            return { milliseconds: 0, months: 0 };
        }

        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    // TODO: remove 'name' arg after deprecation is removed
    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;
            //invert the arguments, but complain about it
            if (period !== null && !isNaN(+period)) {
                deprecateSimple(
                    name,
                    'moment().' +
                        name +
                        '(period, number) is deprecated. Please use moment().' +
                        name +
                        '(number, period). ' +
                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'
                );
                tmp = val;
                val = period;
                period = tmp;
            }

            dur = createDuration(val, period);
            addSubtract(this, dur, direction);
            return this;
        };
    }

    function addSubtract(mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = absRound(duration._days),
            months = absRound(duration._months);

        if (!mom.isValid()) {
            // No op
            return;
        }

        updateOffset = updateOffset == null ? true : updateOffset;

        if (months) {
            setMonth(mom, get(mom, 'Month') + months * isAdding);
        }
        if (days) {
            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
        }
        if (milliseconds) {
            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
        }
        if (updateOffset) {
            hooks.updateOffset(mom, days || months);
        }
    }

    var add = createAdder(1, 'add'),
        subtract = createAdder(-1, 'subtract');

    function isString(input) {
        return typeof input === 'string' || input instanceof String;
    }

    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined
    function isMomentInput(input) {
        return (
            isMoment(input) ||
            isDate(input) ||
            isString(input) ||
            isNumber(input) ||
            isNumberOrStringArray(input) ||
            isMomentInputObject(input) ||
            input === null ||
            input === undefined
        );
    }

    function isMomentInputObject(input) {
        var objectTest = isObject(input) && !isObjectEmpty(input),
            propertyTest = false,
            properties = [
                'years',
                'year',
                'y',
                'months',
                'month',
                'M',
                'days',
                'day',
                'd',
                'dates',
                'date',
                'D',
                'hours',
                'hour',
                'h',
                'minutes',
                'minute',
                'm',
                'seconds',
                'second',
                's',
                'milliseconds',
                'millisecond',
                'ms',
            ],
            i,
            property;

        for (i = 0; i < properties.length; i += 1) {
            property = properties[i];
            propertyTest = propertyTest || hasOwnProp(input, property);
        }

        return objectTest && propertyTest;
    }

    function isNumberOrStringArray(input) {
        var arrayTest = isArray(input),
            dataTypeTest = false;
        if (arrayTest) {
            dataTypeTest =
                input.filter(function (item) {
                    return !isNumber(item) && isString(input);
                }).length === 0;
        }
        return arrayTest && dataTypeTest;
    }

    function isCalendarSpec(input) {
        var objectTest = isObject(input) && !isObjectEmpty(input),
            propertyTest = false,
            properties = [
                'sameDay',
                'nextDay',
                'lastDay',
                'nextWeek',
                'lastWeek',
                'sameElse',
            ],
            i,
            property;

        for (i = 0; i < properties.length; i += 1) {
            property = properties[i];
            propertyTest = propertyTest || hasOwnProp(input, property);
        }

        return objectTest && propertyTest;
    }

    function getCalendarFormat(myMoment, now) {
        var diff = myMoment.diff(now, 'days', true);
        return diff < -6
            ? 'sameElse'
            : diff < -1
            ? 'lastWeek'
            : diff < 0
            ? 'lastDay'
            : diff < 1
            ? 'sameDay'
            : diff < 2
            ? 'nextDay'
            : diff < 7
            ? 'nextWeek'
            : 'sameElse';
    }

    function calendar$1(time, formats) {
        // Support for single parameter, formats only overload to the calendar function
        if (arguments.length === 1) {
            if (!arguments[0]) {
                time = undefined;
                formats = undefined;
            } else if (isMomentInput(arguments[0])) {
                time = arguments[0];
                formats = undefined;
            } else if (isCalendarSpec(arguments[0])) {
                formats = arguments[0];
                time = undefined;
            }
        }
        // We want to compare the start of today, vs this.
        // Getting start-of-today depends on whether we're local/utc/offset or not.
        var now = time || createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            format = hooks.calendarFormat(this, sod) || 'sameElse',
            output =
                formats &&
                (isFunction(formats[format])
                    ? formats[format].call(this, now)
                    : formats[format]);

        return this.format(
            output || this.localeData().calendar(format, this, createLocal(now))
        );
    }

    function clone() {
        return new Moment(this);
    }

    function isAfter(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() > localInput.valueOf();
        } else {
            return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
    }

    function isBefore(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() < localInput.valueOf();
        } else {
            return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
    }

    function isBetween(from, to, units, inclusivity) {
        var localFrom = isMoment(from) ? from : createLocal(from),
            localTo = isMoment(to) ? to : createLocal(to);
        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
            return false;
        }
        inclusivity = inclusivity || '()';
        return (
            (inclusivity[0] === '('
                ? this.isAfter(localFrom, units)
                : !this.isBefore(localFrom, units)) &&
            (inclusivity[1] === ')'
                ? this.isBefore(localTo, units)
                : !this.isAfter(localTo, units))
        );
    }

    function isSame(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input),
            inputMs;
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() === localInput.valueOf();
        } else {
            inputMs = localInput.valueOf();
            return (
                this.clone().startOf(units).valueOf() <= inputMs &&
                inputMs <= this.clone().endOf(units).valueOf()
            );
        }
    }

    function isSameOrAfter(input, units) {
        return this.isSame(input, units) || this.isAfter(input, units);
    }

    function isSameOrBefore(input, units) {
        return this.isSame(input, units) || this.isBefore(input, units);
    }

    function diff(input, units, asFloat) {
        var that, zoneDelta, output;

        if (!this.isValid()) {
            return NaN;
        }

        that = cloneWithOffset(input, this);

        if (!that.isValid()) {
            return NaN;
        }

        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

        units = normalizeUnits(units);

        switch (units) {
            case 'year':
                output = monthDiff(this, that) / 12;
                break;
            case 'month':
                output = monthDiff(this, that);
                break;
            case 'quarter':
                output = monthDiff(this, that) / 3;
                break;
            case 'second':
                output = (this - that) / 1e3;
                break; // 1000
            case 'minute':
                output = (this - that) / 6e4;
                break; // 1000 * 60
            case 'hour':
                output = (this - that) / 36e5;
                break; // 1000 * 60 * 60
            case 'day':
                output = (this - that - zoneDelta) / 864e5;
                break; // 1000 * 60 * 60 * 24, negate dst
            case 'week':
                output = (this - that - zoneDelta) / 6048e5;
                break; // 1000 * 60 * 60 * 24 * 7, negate dst
            default:
                output = this - that;
        }

        return asFloat ? output : absFloor(output);
    }

    function monthDiff(a, b) {
        if (a.date() < b.date()) {
            // end-of-month calculations work correct when the start month has more
            // days than the end month.
            return -monthDiff(b, a);
        }
        // difference in months
        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),
            // b is in (anchor - 1 month, anchor + 1 month)
            anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2,
            adjust;

        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor - anchor2);
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor2 - anchor);
        }

        //check for negative zero, return zero if negative zero
        return -(wholeMonthDiff + adjust) || 0;
    }

    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

    function toString() {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
    }

    function toISOString(keepOffset) {
        if (!this.isValid()) {
            return null;
        }
        var utc = keepOffset !== true,
            m = utc ? this.clone().utc() : this;
        if (m.year() < 0 || m.year() > 9999) {
            return formatMoment(
                m,
                utc
                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'
                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'
            );
        }
        if (isFunction(Date.prototype.toISOString)) {
            // native implementation is ~50x faster, use it when we can
            if (utc) {
                return this.toDate().toISOString();
            } else {
                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)
                    .toISOString()
                    .replace('Z', formatMoment(m, 'Z'));
            }
        }
        return formatMoment(
            m,
            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'
        );
    }

    /**
     * Return a human readable representation of a moment that can
     * also be evaluated to get a new moment which is the same
     *
     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
     */
    function inspect() {
        if (!this.isValid()) {
            return 'moment.invalid(/* ' + this._i + ' */)';
        }
        var func = 'moment',
            zone = '',
            prefix,
            year,
            datetime,
            suffix;
        if (!this.isLocal()) {
            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
            zone = 'Z';
        }
        prefix = '[' + func + '("]';
        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';
        datetime = '-MM-DD[T]HH:mm:ss.SSS';
        suffix = zone + '[")]';

        return this.format(prefix + year + datetime + suffix);
    }

    function format(inputString) {
        if (!inputString) {
            inputString = this.isUtc()
                ? hooks.defaultFormatUtc
                : hooks.defaultFormat;
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
    }

    function from(time, withoutSuffix) {
        if (
            this.isValid() &&
            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())
        ) {
            return createDuration({ to: this, from: time })
                .locale(this.locale())
                .humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function fromNow(withoutSuffix) {
        return this.from(createLocal(), withoutSuffix);
    }

    function to(time, withoutSuffix) {
        if (
            this.isValid() &&
            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())
        ) {
            return createDuration({ from: this, to: time })
                .locale(this.locale())
                .humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function toNow(withoutSuffix) {
        return this.to(createLocal(), withoutSuffix);
    }

    // If passed a locale key, it will set the locale for this
    // instance.  Otherwise, it will return the locale configuration
    // variables for this instance.
    function locale(key) {
        var newLocaleData;

        if (key === undefined) {
            return this._locale._abbr;
        } else {
            newLocaleData = getLocale(key);
            if (newLocaleData != null) {
                this._locale = newLocaleData;
            }
            return this;
        }
    }

    var lang = deprecate(
        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
        function (key) {
            if (key === undefined) {
                return this.localeData();
            } else {
                return this.locale(key);
            }
        }
    );

    function localeData() {
        return this._locale;
    }

    var MS_PER_SECOND = 1000,
        MS_PER_MINUTE = 60 * MS_PER_SECOND,
        MS_PER_HOUR = 60 * MS_PER_MINUTE,
        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;

    // actual modulo - handles negative numbers (for dates before 1970):
    function mod$1(dividend, divisor) {
        return ((dividend % divisor) + divisor) % divisor;
    }

    function localStartOfDate(y, m, d) {
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return new Date(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return new Date(y, m, d).valueOf();
        }
    }

    function utcStartOfDate(y, m, d) {
        // Date.UTC remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return Date.UTC(y, m, d);
        }
    }

    function startOf(units) {
        var time, startOfDate;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year(), 0, 1);
                break;
            case 'quarter':
                time = startOfDate(
                    this.year(),
                    this.month() - (this.month() % 3),
                    1
                );
                break;
            case 'month':
                time = startOfDate(this.year(), this.month(), 1);
                break;
            case 'week':
                time = startOfDate(
                    this.year(),
                    this.month(),
                    this.date() - this.weekday()
                );
                break;
            case 'isoWeek':
                time = startOfDate(
                    this.year(),
                    this.month(),
                    this.date() - (this.isoWeekday() - 1)
                );
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date());
                break;
            case 'hour':
                time = this._d.valueOf();
                time -= mod$1(
                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
                    MS_PER_HOUR
                );
                break;
            case 'minute':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_MINUTE);
                break;
            case 'second':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_SECOND);
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function endOf(units) {
        var time, startOfDate;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year() + 1, 0, 1) - 1;
                break;
            case 'quarter':
                time =
                    startOfDate(
                        this.year(),
                        this.month() - (this.month() % 3) + 3,
                        1
                    ) - 1;
                break;
            case 'month':
                time = startOfDate(this.year(), this.month() + 1, 1) - 1;
                break;
            case 'week':
                time =
                    startOfDate(
                        this.year(),
                        this.month(),
                        this.date() - this.weekday() + 7
                    ) - 1;
                break;
            case 'isoWeek':
                time =
                    startOfDate(
                        this.year(),
                        this.month(),
                        this.date() - (this.isoWeekday() - 1) + 7
                    ) - 1;
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
                break;
            case 'hour':
                time = this._d.valueOf();
                time +=
                    MS_PER_HOUR -
                    mod$1(
                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
                        MS_PER_HOUR
                    ) -
                    1;
                break;
            case 'minute':
                time = this._d.valueOf();
                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
                break;
            case 'second':
                time = this._d.valueOf();
                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function valueOf() {
        return this._d.valueOf() - (this._offset || 0) * 60000;
    }

    function unix() {
        return Math.floor(this.valueOf() / 1000);
    }

    function toDate() {
        return new Date(this.valueOf());
    }

    function toArray() {
        var m = this;
        return [
            m.year(),
            m.month(),
            m.date(),
            m.hour(),
            m.minute(),
            m.second(),
            m.millisecond(),
        ];
    }

    function toObject() {
        var m = this;
        return {
            years: m.year(),
            months: m.month(),
            date: m.date(),
            hours: m.hours(),
            minutes: m.minutes(),
            seconds: m.seconds(),
            milliseconds: m.milliseconds(),
        };
    }

    function toJSON() {
        // new Date(NaN).toJSON() === null
        return this.isValid() ? this.toISOString() : null;
    }

    function isValid$2() {
        return isValid(this);
    }

    function parsingFlags() {
        return extend({}, getParsingFlags(this));
    }

    function invalidAt() {
        return getParsingFlags(this).overflow;
    }

    function creationData() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict,
        };
    }

    addFormatToken('N', 0, 0, 'eraAbbr');
    addFormatToken('NN', 0, 0, 'eraAbbr');
    addFormatToken('NNN', 0, 0, 'eraAbbr');
    addFormatToken('NNNN', 0, 0, 'eraName');
    addFormatToken('NNNNN', 0, 0, 'eraNarrow');

    addFormatToken('y', ['y', 1], 'yo', 'eraYear');
    addFormatToken('y', ['yy', 2], 0, 'eraYear');
    addFormatToken('y', ['yyy', 3], 0, 'eraYear');
    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');

    addRegexToken('N', matchEraAbbr);
    addRegexToken('NN', matchEraAbbr);
    addRegexToken('NNN', matchEraAbbr);
    addRegexToken('NNNN', matchEraName);
    addRegexToken('NNNNN', matchEraNarrow);

    addParseToken(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (
        input,
        array,
        config,
        token
    ) {
        var era = config._locale.erasParse(input, token, config._strict);
        if (era) {
            getParsingFlags(config).era = era;
        } else {
            getParsingFlags(config).invalidEra = input;
        }
    });

    addRegexToken('y', matchUnsigned);
    addRegexToken('yy', matchUnsigned);
    addRegexToken('yyy', matchUnsigned);
    addRegexToken('yyyy', matchUnsigned);
    addRegexToken('yo', matchEraYearOrdinal);

    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);
    addParseToken(['yo'], function (input, array, config, token) {
        var match;
        if (config._locale._eraYearOrdinalRegex) {
            match = input.match(config._locale._eraYearOrdinalRegex);
        }

        if (config._locale.eraYearOrdinalParse) {
            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);
        } else {
            array[YEAR] = parseInt(input, 10);
        }
    });

    function localeEras(m, format) {
        var i,
            l,
            date,
            eras = this._eras || getLocale('en')._eras;
        for (i = 0, l = eras.length; i < l; ++i) {
            switch (typeof eras[i].since) {
                case 'string':
                    // truncate time
                    date = hooks(eras[i].since).startOf('day');
                    eras[i].since = date.valueOf();
                    break;
            }

            switch (typeof eras[i].until) {
                case 'undefined':
                    eras[i].until = +Infinity;
                    break;
                case 'string':
                    // truncate time
                    date = hooks(eras[i].until).startOf('day').valueOf();
                    eras[i].until = date.valueOf();
                    break;
            }
        }
        return eras;
    }

    function localeErasParse(eraName, format, strict) {
        var i,
            l,
            eras = this.eras(),
            name,
            abbr,
            narrow;
        eraName = eraName.toUpperCase();

        for (i = 0, l = eras.length; i < l; ++i) {
            name = eras[i].name.toUpperCase();
            abbr = eras[i].abbr.toUpperCase();
            narrow = eras[i].narrow.toUpperCase();

            if (strict) {
                switch (format) {
                    case 'N':
                    case 'NN':
                    case 'NNN':
                        if (abbr === eraName) {
                            return eras[i];
                        }
                        break;

                    case 'NNNN':
                        if (name === eraName) {
                            return eras[i];
                        }
                        break;

                    case 'NNNNN':
                        if (narrow === eraName) {
                            return eras[i];
                        }
                        break;
                }
            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
                return eras[i];
            }
        }
    }

    function localeErasConvertYear(era, year) {
        var dir = era.since <= era.until ? +1 : -1;
        if (year === undefined) {
            return hooks(era.since).year();
        } else {
            return hooks(era.since).year() + (year - era.offset) * dir;
        }
    }

    function getEraName() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].name;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].name;
            }
        }

        return '';
    }

    function getEraNarrow() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].narrow;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].narrow;
            }
        }

        return '';
    }

    function getEraAbbr() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].abbr;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].abbr;
            }
        }

        return '';
    }

    function getEraYear() {
        var i,
            l,
            dir,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            dir = eras[i].since <= eras[i].until ? +1 : -1;

            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (
                (eras[i].since <= val && val <= eras[i].until) ||
                (eras[i].until <= val && val <= eras[i].since)
            ) {
                return (
                    (this.year() - hooks(eras[i].since).year()) * dir +
                    eras[i].offset
                );
            }
        }

        return this.year();
    }

    function erasNameRegex(isStrict) {
        if (!hasOwnProp(this, '_erasNameRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasNameRegex : this._erasRegex;
    }

    function erasAbbrRegex(isStrict) {
        if (!hasOwnProp(this, '_erasAbbrRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasAbbrRegex : this._erasRegex;
    }

    function erasNarrowRegex(isStrict) {
        if (!hasOwnProp(this, '_erasNarrowRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasNarrowRegex : this._erasRegex;
    }

    function matchEraAbbr(isStrict, locale) {
        return locale.erasAbbrRegex(isStrict);
    }

    function matchEraName(isStrict, locale) {
        return locale.erasNameRegex(isStrict);
    }

    function matchEraNarrow(isStrict, locale) {
        return locale.erasNarrowRegex(isStrict);
    }

    function matchEraYearOrdinal(isStrict, locale) {
        return locale._eraYearOrdinalRegex || matchUnsigned;
    }

    function computeErasParse() {
        var abbrPieces = [],
            namePieces = [],
            narrowPieces = [],
            mixedPieces = [],
            i,
            l,
            eras = this.eras();

        for (i = 0, l = eras.length; i < l; ++i) {
            namePieces.push(regexEscape(eras[i].name));
            abbrPieces.push(regexEscape(eras[i].abbr));
            narrowPieces.push(regexEscape(eras[i].narrow));

            mixedPieces.push(regexEscape(eras[i].name));
            mixedPieces.push(regexEscape(eras[i].abbr));
            mixedPieces.push(regexEscape(eras[i].narrow));
        }

        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');
        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');
        this._erasNarrowRegex = new RegExp(
            '^(' + narrowPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
    });

    addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
    });

    function addWeekYearFormatToken(token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
    }

    addWeekYearFormatToken('gggg', 'weekYear');
    addWeekYearFormatToken('ggggg', 'weekYear');
    addWeekYearFormatToken('GGGG', 'isoWeekYear');
    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

    // ALIASES

    addUnitAlias('weekYear', 'gg');
    addUnitAlias('isoWeekYear', 'GG');

    // PRIORITY

    addUnitPriority('weekYear', 1);
    addUnitPriority('isoWeekYear', 1);

    // PARSING

    addRegexToken('G', matchSigned);
    addRegexToken('g', matchSigned);
    addRegexToken('GG', match1to2, match2);
    addRegexToken('gg', match1to2, match2);
    addRegexToken('GGGG', match1to4, match4);
    addRegexToken('gggg', match1to4, match4);
    addRegexToken('GGGGG', match1to6, match6);
    addRegexToken('ggggg', match1to6, match6);

    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (
        input,
        week,
        config,
        token
    ) {
        week[token.substr(0, 2)] = toInt(input);
    });

    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = hooks.parseTwoDigitYear(input);
    });

    // MOMENTS

    function getSetWeekYear(input) {
        return getSetWeekYearHelper.call(
            this,
            input,
            this.week(),
            this.weekday(),
            this.localeData()._week.dow,
            this.localeData()._week.doy
        );
    }

    function getSetISOWeekYear(input) {
        return getSetWeekYearHelper.call(
            this,
            input,
            this.isoWeek(),
            this.isoWeekday(),
            1,
            4
        );
    }

    function getISOWeeksInYear() {
        return weeksInYear(this.year(), 1, 4);
    }

    function getISOWeeksInISOWeekYear() {
        return weeksInYear(this.isoWeekYear(), 1, 4);
    }

    function getWeeksInYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    }

    function getWeeksInWeekYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
    }

    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
            return weekOfYear(this, dow, doy).year;
        } else {
            weeksTarget = weeksInYear(input, dow, doy);
            if (week > weeksTarget) {
                week = weeksTarget;
            }
            return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
    }

    function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
    }

    // FORMATTING

    addFormatToken('Q', 0, 'Qo', 'quarter');

    // ALIASES

    addUnitAlias('quarter', 'Q');

    // PRIORITY

    addUnitPriority('quarter', 7);

    // PARSING

    addRegexToken('Q', match1);
    addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
    });

    // MOMENTS

    function getSetQuarter(input) {
        return input == null
            ? Math.ceil((this.month() + 1) / 3)
            : this.month((input - 1) * 3 + (this.month() % 3));
    }

    // FORMATTING

    addFormatToken('D', ['DD', 2], 'Do', 'date');

    // ALIASES

    addUnitAlias('date', 'D');

    // PRIORITY
    addUnitPriority('date', 9);

    // PARSING

    addRegexToken('D', match1to2);
    addRegexToken('DD', match1to2, match2);
    addRegexToken('Do', function (isStrict, locale) {
        // TODO: Remove "ordinalParse" fallback in next major release.
        return isStrict
            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse
            : locale._dayOfMonthOrdinalParseLenient;
    });

    addParseToken(['D', 'DD'], DATE);
    addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0]);
    });

    // MOMENTS

    var getSetDayOfMonth = makeGetSet('Date', true);

    // FORMATTING

    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

    // ALIASES

    addUnitAlias('dayOfYear', 'DDD');

    // PRIORITY
    addUnitPriority('dayOfYear', 4);

    // PARSING

    addRegexToken('DDD', match1to3);
    addRegexToken('DDDD', match3);
    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
    });

    // HELPERS

    // MOMENTS

    function getSetDayOfYear(input) {
        var dayOfYear =
            Math.round(
                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5
            ) + 1;
        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');
    }

    // FORMATTING

    addFormatToken('m', ['mm', 2], 0, 'minute');

    // ALIASES

    addUnitAlias('minute', 'm');

    // PRIORITY

    addUnitPriority('minute', 14);

    // PARSING

    addRegexToken('m', match1to2);
    addRegexToken('mm', match1to2, match2);
    addParseToken(['m', 'mm'], MINUTE);

    // MOMENTS

    var getSetMinute = makeGetSet('Minutes', false);

    // FORMATTING

    addFormatToken('s', ['ss', 2], 0, 'second');

    // ALIASES

    addUnitAlias('second', 's');

    // PRIORITY

    addUnitPriority('second', 15);

    // PARSING

    addRegexToken('s', match1to2);
    addRegexToken('ss', match1to2, match2);
    addParseToken(['s', 'ss'], SECOND);

    // MOMENTS

    var getSetSecond = makeGetSet('Seconds', false);

    // FORMATTING

    addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
    });

    addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
    });

    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
    addFormatToken(0, ['SSSS', 4], 0, function () {
        return this.millisecond() * 10;
    });
    addFormatToken(0, ['SSSSS', 5], 0, function () {
        return this.millisecond() * 100;
    });
    addFormatToken(0, ['SSSSSS', 6], 0, function () {
        return this.millisecond() * 1000;
    });
    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
        return this.millisecond() * 10000;
    });
    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
        return this.millisecond() * 100000;
    });
    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
        return this.millisecond() * 1000000;
    });

    // ALIASES

    addUnitAlias('millisecond', 'ms');

    // PRIORITY

    addUnitPriority('millisecond', 16);

    // PARSING

    addRegexToken('S', match1to3, match1);
    addRegexToken('SS', match1to3, match2);
    addRegexToken('SSS', match1to3, match3);

    var token, getSetMillisecond;
    for (token = 'SSSS'; token.length <= 9; token += 'S') {
        addRegexToken(token, matchUnsigned);
    }

    function parseMs(input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
    }

    for (token = 'S'; token.length <= 9; token += 'S') {
        addParseToken(token, parseMs);
    }

    getSetMillisecond = makeGetSet('Milliseconds', false);

    // FORMATTING

    addFormatToken('z', 0, 0, 'zoneAbbr');
    addFormatToken('zz', 0, 0, 'zoneName');

    // MOMENTS

    function getZoneAbbr() {
        return this._isUTC ? 'UTC' : '';
    }

    function getZoneName() {
        return this._isUTC ? 'Coordinated Universal Time' : '';
    }

    var proto = Moment.prototype;

    proto.add = add;
    proto.calendar = calendar$1;
    proto.clone = clone;
    proto.diff = diff;
    proto.endOf = endOf;
    proto.format = format;
    proto.from = from;
    proto.fromNow = fromNow;
    proto.to = to;
    proto.toNow = toNow;
    proto.get = stringGet;
    proto.invalidAt = invalidAt;
    proto.isAfter = isAfter;
    proto.isBefore = isBefore;
    proto.isBetween = isBetween;
    proto.isSame = isSame;
    proto.isSameOrAfter = isSameOrAfter;
    proto.isSameOrBefore = isSameOrBefore;
    proto.isValid = isValid$2;
    proto.lang = lang;
    proto.locale = locale;
    proto.localeData = localeData;
    proto.max = prototypeMax;
    proto.min = prototypeMin;
    proto.parsingFlags = parsingFlags;
    proto.set = stringSet;
    proto.startOf = startOf;
    proto.subtract = subtract;
    proto.toArray = toArray;
    proto.toObject = toObject;
    proto.toDate = toDate;
    proto.toISOString = toISOString;
    proto.inspect = inspect;
    if (typeof Symbol !== 'undefined' && Symbol.for != null) {
        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {
            return 'Moment<' + this.format() + '>';
        };
    }
    proto.toJSON = toJSON;
    proto.toString = toString;
    proto.unix = unix;
    proto.valueOf = valueOf;
    proto.creationData = creationData;
    proto.eraName = getEraName;
    proto.eraNarrow = getEraNarrow;
    proto.eraAbbr = getEraAbbr;
    proto.eraYear = getEraYear;
    proto.year = getSetYear;
    proto.isLeapYear = getIsLeapYear;
    proto.weekYear = getSetWeekYear;
    proto.isoWeekYear = getSetISOWeekYear;
    proto.quarter = proto.quarters = getSetQuarter;
    proto.month = getSetMonth;
    proto.daysInMonth = getDaysInMonth;
    proto.week = proto.weeks = getSetWeek;
    proto.isoWeek = proto.isoWeeks = getSetISOWeek;
    proto.weeksInYear = getWeeksInYear;
    proto.weeksInWeekYear = getWeeksInWeekYear;
    proto.isoWeeksInYear = getISOWeeksInYear;
    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
    proto.date = getSetDayOfMonth;
    proto.day = proto.days = getSetDayOfWeek;
    proto.weekday = getSetLocaleDayOfWeek;
    proto.isoWeekday = getSetISODayOfWeek;
    proto.dayOfYear = getSetDayOfYear;
    proto.hour = proto.hours = getSetHour;
    proto.minute = proto.minutes = getSetMinute;
    proto.second = proto.seconds = getSetSecond;
    proto.millisecond = proto.milliseconds = getSetMillisecond;
    proto.utcOffset = getSetOffset;
    proto.utc = setOffsetToUTC;
    proto.local = setOffsetToLocal;
    proto.parseZone = setOffsetToParsedOffset;
    proto.hasAlignedHourOffset = hasAlignedHourOffset;
    proto.isDST = isDaylightSavingTime;
    proto.isLocal = isLocal;
    proto.isUtcOffset = isUtcOffset;
    proto.isUtc = isUtc;
    proto.isUTC = isUtc;
    proto.zoneAbbr = getZoneAbbr;
    proto.zoneName = getZoneName;
    proto.dates = deprecate(
        'dates accessor is deprecated. Use date instead.',
        getSetDayOfMonth
    );
    proto.months = deprecate(
        'months accessor is deprecated. Use month instead',
        getSetMonth
    );
    proto.years = deprecate(
        'years accessor is deprecated. Use year instead',
        getSetYear
    );
    proto.zone = deprecate(
        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',
        getSetZone
    );
    proto.isDSTShifted = deprecate(
        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',
        isDaylightSavingTimeShifted
    );

    function createUnix(input) {
        return createLocal(input * 1000);
    }

    function createInZone() {
        return createLocal.apply(null, arguments).parseZone();
    }

    function preParsePostFormat(string) {
        return string;
    }

    var proto$1 = Locale.prototype;

    proto$1.calendar = calendar;
    proto$1.longDateFormat = longDateFormat;
    proto$1.invalidDate = invalidDate;
    proto$1.ordinal = ordinal;
    proto$1.preparse = preParsePostFormat;
    proto$1.postformat = preParsePostFormat;
    proto$1.relativeTime = relativeTime;
    proto$1.pastFuture = pastFuture;
    proto$1.set = set;
    proto$1.eras = localeEras;
    proto$1.erasParse = localeErasParse;
    proto$1.erasConvertYear = localeErasConvertYear;
    proto$1.erasAbbrRegex = erasAbbrRegex;
    proto$1.erasNameRegex = erasNameRegex;
    proto$1.erasNarrowRegex = erasNarrowRegex;

    proto$1.months = localeMonths;
    proto$1.monthsShort = localeMonthsShort;
    proto$1.monthsParse = localeMonthsParse;
    proto$1.monthsRegex = monthsRegex;
    proto$1.monthsShortRegex = monthsShortRegex;
    proto$1.week = localeWeek;
    proto$1.firstDayOfYear = localeFirstDayOfYear;
    proto$1.firstDayOfWeek = localeFirstDayOfWeek;

    proto$1.weekdays = localeWeekdays;
    proto$1.weekdaysMin = localeWeekdaysMin;
    proto$1.weekdaysShort = localeWeekdaysShort;
    proto$1.weekdaysParse = localeWeekdaysParse;

    proto$1.weekdaysRegex = weekdaysRegex;
    proto$1.weekdaysShortRegex = weekdaysShortRegex;
    proto$1.weekdaysMinRegex = weekdaysMinRegex;

    proto$1.isPM = localeIsPM;
    proto$1.meridiem = localeMeridiem;

    function get$1(format, index, field, setter) {
        var locale = getLocale(),
            utc = createUTC().set(setter, index);
        return locale[field](utc, format);
    }

    function listMonthsImpl(format, index, field) {
        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';

        if (index != null) {
            return get$1(format, index, field, 'month');
        }

        var i,
            out = [];
        for (i = 0; i < 12; i++) {
            out[i] = get$1(format, i, field, 'month');
        }
        return out;
    }

    // ()
    // (5)
    // (fmt, 5)
    // (fmt)
    // (true)
    // (true, 5)
    // (true, fmt, 5)
    // (true, fmt)
    function listWeekdaysImpl(localeSorted, format, index, field) {
        if (typeof localeSorted === 'boolean') {
            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        } else {
            format = localeSorted;
            index = format;
            localeSorted = false;

            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        }

        var locale = getLocale(),
            shift = localeSorted ? locale._week.dow : 0,
            i,
            out = [];

        if (index != null) {
            return get$1(format, (index + shift) % 7, field, 'day');
        }

        for (i = 0; i < 7; i++) {
            out[i] = get$1(format, (i + shift) % 7, field, 'day');
        }
        return out;
    }

    function listMonths(format, index) {
        return listMonthsImpl(format, index, 'months');
    }

    function listMonthsShort(format, index) {
        return listMonthsImpl(format, index, 'monthsShort');
    }

    function listWeekdays(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
    }

    function listWeekdaysShort(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
    }

    function listWeekdaysMin(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
    }

    getSetGlobalLocale('en', {
        eras: [
            {
                since: '0001-01-01',
                until: +Infinity,
                offset: 1,
                name: 'Anno Domini',
                narrow: 'AD',
                abbr: 'AD',
            },
            {
                since: '0000-12-31',
                until: -Infinity,
                offset: 1,
                name: 'Before Christ',
                narrow: 'BC',
                abbr: 'BC',
            },
        ],
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    toInt((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
    });

    // Side effect imports

    hooks.lang = deprecate(
        'moment.lang is deprecated. Use moment.locale instead.',
        getSetGlobalLocale
    );
    hooks.langData = deprecate(
        'moment.langData is deprecated. Use moment.localeData instead.',
        getLocale
    );

    var mathAbs = Math.abs;

    function abs() {
        var data = this._data;

        this._milliseconds = mathAbs(this._milliseconds);
        this._days = mathAbs(this._days);
        this._months = mathAbs(this._months);

        data.milliseconds = mathAbs(data.milliseconds);
        data.seconds = mathAbs(data.seconds);
        data.minutes = mathAbs(data.minutes);
        data.hours = mathAbs(data.hours);
        data.months = mathAbs(data.months);
        data.years = mathAbs(data.years);

        return this;
    }

    function addSubtract$1(duration, input, value, direction) {
        var other = createDuration(input, value);

        duration._milliseconds += direction * other._milliseconds;
        duration._days += direction * other._days;
        duration._months += direction * other._months;

        return duration._bubble();
    }

    // supports only 2.0-style add(1, 's') or add(duration)
    function add$1(input, value) {
        return addSubtract$1(this, input, value, 1);
    }

    // supports only 2.0-style subtract(1, 's') or subtract(duration)
    function subtract$1(input, value) {
        return addSubtract$1(this, input, value, -1);
    }

    function absCeil(number) {
        if (number < 0) {
            return Math.floor(number);
        } else {
            return Math.ceil(number);
        }
    }

    function bubble() {
        var milliseconds = this._milliseconds,
            days = this._days,
            months = this._months,
            data = this._data,
            seconds,
            minutes,
            hours,
            years,
            monthsFromDays;

        // if we have a mix of positive and negative values, bubble down first
        // check: https://github.com/moment/moment/issues/2166
        if (
            !(
                (milliseconds >= 0 && days >= 0 && months >= 0) ||
                (milliseconds <= 0 && days <= 0 && months <= 0)
            )
        ) {
            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
            days = 0;
            months = 0;
        }

        // The following code bubbles up values, see the tests for
        // examples of what that means.
        data.milliseconds = milliseconds % 1000;

        seconds = absFloor(milliseconds / 1000);
        data.seconds = seconds % 60;

        minutes = absFloor(seconds / 60);
        data.minutes = minutes % 60;

        hours = absFloor(minutes / 60);
        data.hours = hours % 24;

        days += absFloor(hours / 24);

        // convert days to months
        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays));

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        data.days = days;
        data.months = months;
        data.years = years;

        return this;
    }

    function daysToMonths(days) {
        // 400 years have 146097 days (taking into account leap year rules)
        // 400 years have 12 months === 4800
        return (days * 4800) / 146097;
    }

    function monthsToDays(months) {
        // the reverse of daysToMonths
        return (months * 146097) / 4800;
    }

    function as(units) {
        if (!this.isValid()) {
            return NaN;
        }
        var days,
            months,
            milliseconds = this._milliseconds;

        units = normalizeUnits(units);

        if (units === 'month' || units === 'quarter' || units === 'year') {
            days = this._days + milliseconds / 864e5;
            months = this._months + daysToMonths(days);
            switch (units) {
                case 'month':
                    return months;
                case 'quarter':
                    return months / 3;
                case 'year':
                    return months / 12;
            }
        } else {
            // handle milliseconds separately because of floating point math errors (issue #1867)
            days = this._days + Math.round(monthsToDays(this._months));
            switch (units) {
                case 'week':
                    return days / 7 + milliseconds / 6048e5;
                case 'day':
                    return days + milliseconds / 864e5;
                case 'hour':
                    return days * 24 + milliseconds / 36e5;
                case 'minute':
                    return days * 1440 + milliseconds / 6e4;
                case 'second':
                    return days * 86400 + milliseconds / 1000;
                // Math.floor prevents floating point math errors here
                case 'millisecond':
                    return Math.floor(days * 864e5) + milliseconds;
                default:
                    throw new Error('Unknown unit ' + units);
            }
        }
    }

    // TODO: Use this.as('ms')?
    function valueOf$1() {
        if (!this.isValid()) {
            return NaN;
        }
        return (
            this._milliseconds +
            this._days * 864e5 +
            (this._months % 12) * 2592e6 +
            toInt(this._months / 12) * 31536e6
        );
    }

    function makeAs(alias) {
        return function () {
            return this.as(alias);
        };
    }

    var asMilliseconds = makeAs('ms'),
        asSeconds = makeAs('s'),
        asMinutes = makeAs('m'),
        asHours = makeAs('h'),
        asDays = makeAs('d'),
        asWeeks = makeAs('w'),
        asMonths = makeAs('M'),
        asQuarters = makeAs('Q'),
        asYears = makeAs('y');

    function clone$1() {
        return createDuration(this);
    }

    function get$2(units) {
        units = normalizeUnits(units);
        return this.isValid() ? this[units + 's']() : NaN;
    }

    function makeGetter(name) {
        return function () {
            return this.isValid() ? this._data[name] : NaN;
        };
    }

    var milliseconds = makeGetter('milliseconds'),
        seconds = makeGetter('seconds'),
        minutes = makeGetter('minutes'),
        hours = makeGetter('hours'),
        days = makeGetter('days'),
        months = makeGetter('months'),
        years = makeGetter('years');

    function weeks() {
        return absFloor(this.days() / 7);
    }

    var round = Math.round,
        thresholds = {
            ss: 44, // a few seconds to seconds
            s: 45, // seconds to minute
            m: 45, // minutes to hour
            h: 22, // hours to day
            d: 26, // days to month/week
            w: null, // weeks to month
            M: 11, // months to year
        };

    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {
        var duration = createDuration(posNegDuration).abs(),
            seconds = round(duration.as('s')),
            minutes = round(duration.as('m')),
            hours = round(duration.as('h')),
            days = round(duration.as('d')),
            months = round(duration.as('M')),
            weeks = round(duration.as('w')),
            years = round(duration.as('y')),
            a =
                (seconds <= thresholds.ss && ['s', seconds]) ||
                (seconds < thresholds.s && ['ss', seconds]) ||
                (minutes <= 1 && ['m']) ||
                (minutes < thresholds.m && ['mm', minutes]) ||
                (hours <= 1 && ['h']) ||
                (hours < thresholds.h && ['hh', hours]) ||
                (days <= 1 && ['d']) ||
                (days < thresholds.d && ['dd', days]);

        if (thresholds.w != null) {
            a =
                a ||
                (weeks <= 1 && ['w']) ||
                (weeks < thresholds.w && ['ww', weeks]);
        }
        a = a ||
            (months <= 1 && ['M']) ||
            (months < thresholds.M && ['MM', months]) ||
            (years <= 1 && ['y']) || ['yy', years];

        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
    }

    // This function allows you to set the rounding function for relative time strings
    function getSetRelativeTimeRounding(roundingFunction) {
        if (roundingFunction === undefined) {
            return round;
        }
        if (typeof roundingFunction === 'function') {
            round = roundingFunction;
            return true;
        }
        return false;
    }

    // This function allows you to set a threshold for relative time strings
    function getSetRelativeTimeThreshold(threshold, limit) {
        if (thresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        if (threshold === 's') {
            thresholds.ss = limit - 1;
        }
        return true;
    }

    function humanize(argWithSuffix, argThresholds) {
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var withSuffix = false,
            th = thresholds,
            locale,
            output;

        if (typeof argWithSuffix === 'object') {
            argThresholds = argWithSuffix;
            argWithSuffix = false;
        }
        if (typeof argWithSuffix === 'boolean') {
            withSuffix = argWithSuffix;
        }
        if (typeof argThresholds === 'object') {
            th = Object.assign({}, thresholds, argThresholds);
            if (argThresholds.s != null && argThresholds.ss == null) {
                th.ss = argThresholds.s - 1;
            }
        }

        locale = this.localeData();
        output = relativeTime$1(this, !withSuffix, th, locale);

        if (withSuffix) {
            output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
    }

    var abs$1 = Math.abs;

    function sign(x) {
        return (x > 0) - (x < 0) || +x;
    }

    function toISOString$1() {
        // for ISO strings we do not use the normal bubbling rules:
        //  * milliseconds bubble up until they become hours
        //  * days do not bubble at all
        //  * months bubble up until they become years
        // This is because there is no context-free conversion between hours and days
        // (think of clock changes)
        // and also not between days and months (28-31 days per month)
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var seconds = abs$1(this._milliseconds) / 1000,
            days = abs$1(this._days),
            months = abs$1(this._months),
            minutes,
            hours,
            years,
            s,
            total = this.asSeconds(),
            totalSign,
            ymSign,
            daysSign,
            hmsSign;

        if (!total) {
            // this is the same as C#'s (Noda) and python (isodate)...
            // but not other JS (goog.date)
            return 'P0D';
        }

        // 3600 seconds -> 60 minutes -> 1 hour
        minutes = absFloor(seconds / 60);
        hours = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60;

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
        s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';

        totalSign = total < 0 ? '-' : '';
        ymSign = sign(this._months) !== sign(total) ? '-' : '';
        daysSign = sign(this._days) !== sign(total) ? '-' : '';
        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

        return (
            totalSign +
            'P' +
            (years ? ymSign + years + 'Y' : '') +
            (months ? ymSign + months + 'M' : '') +
            (days ? daysSign + days + 'D' : '') +
            (hours || minutes || seconds ? 'T' : '') +
            (hours ? hmsSign + hours + 'H' : '') +
            (minutes ? hmsSign + minutes + 'M' : '') +
            (seconds ? hmsSign + s + 'S' : '')
        );
    }

    var proto$2 = Duration.prototype;

    proto$2.isValid = isValid$1;
    proto$2.abs = abs;
    proto$2.add = add$1;
    proto$2.subtract = subtract$1;
    proto$2.as = as;
    proto$2.asMilliseconds = asMilliseconds;
    proto$2.asSeconds = asSeconds;
    proto$2.asMinutes = asMinutes;
    proto$2.asHours = asHours;
    proto$2.asDays = asDays;
    proto$2.asWeeks = asWeeks;
    proto$2.asMonths = asMonths;
    proto$2.asQuarters = asQuarters;
    proto$2.asYears = asYears;
    proto$2.valueOf = valueOf$1;
    proto$2._bubble = bubble;
    proto$2.clone = clone$1;
    proto$2.get = get$2;
    proto$2.milliseconds = milliseconds;
    proto$2.seconds = seconds;
    proto$2.minutes = minutes;
    proto$2.hours = hours;
    proto$2.days = days;
    proto$2.weeks = weeks;
    proto$2.months = months;
    proto$2.years = years;
    proto$2.humanize = humanize;
    proto$2.toISOString = toISOString$1;
    proto$2.toString = toISOString$1;
    proto$2.toJSON = toISOString$1;
    proto$2.locale = locale;
    proto$2.localeData = localeData;

    proto$2.toIsoString = deprecate(
        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',
        toISOString$1
    );
    proto$2.lang = lang;

    // FORMATTING

    addFormatToken('X', 0, 0, 'unix');
    addFormatToken('x', 0, 0, 'valueOf');

    // PARSING

    addRegexToken('x', matchSigned);
    addRegexToken('X', matchTimestamp);
    addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input) * 1000);
    });
    addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
    });

    //! moment.js

    hooks.version = '2.29.1';

    setHookCallback(createLocal);

    hooks.fn = proto;
    hooks.min = min;
    hooks.max = max;
    hooks.now = now;
    hooks.utc = createUTC;
    hooks.unix = createUnix;
    hooks.months = listMonths;
    hooks.isDate = isDate;
    hooks.locale = getSetGlobalLocale;
    hooks.invalid = createInvalid;
    hooks.duration = createDuration;
    hooks.isMoment = isMoment;
    hooks.weekdays = listWeekdays;
    hooks.parseZone = createInZone;
    hooks.localeData = getLocale;
    hooks.isDuration = isDuration;
    hooks.monthsShort = listMonthsShort;
    hooks.weekdaysMin = listWeekdaysMin;
    hooks.defineLocale = defineLocale;
    hooks.updateLocale = updateLocale;
    hooks.locales = listLocales;
    hooks.weekdaysShort = listWeekdaysShort;
    hooks.normalizeUnits = normalizeUnits;
    hooks.relativeTimeRounding = getSetRelativeTimeRounding;
    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
    hooks.calendarFormat = getCalendarFormat;
    hooks.prototype = proto;

    // currently HTML5 input type only supports 24-hour formats
    hooks.HTML5_FMT = {
        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type="datetime-local" />
        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type="datetime-local" step="1" />
        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type="datetime-local" step="0.001" />
        DATE: 'YYYY-MM-DD', // <input type="date" />
        TIME: 'HH:mm', // <input type="time" />
        TIME_SECONDS: 'HH:mm:ss', // <input type="time" step="1" />
        TIME_MS: 'HH:mm:ss.SSS', // <input type="time" step="0.001" />
        WEEK: 'GGGG-[W]WW', // <input type="week" />
        MONTH: 'YYYY-MM', // <input type="month" />
    };

    return hooks;

})));
}(moment$2));

var React$5 = React__default,
	createClass$5 = createReactClass,
	moment$1 = moment$2.exports
	;

var DateTimePickerDays = createClass$5({
	render: function() {
		var footer = this.renderFooter(),
			date = this.props.viewDate,
			locale = date.localeData(),
			tableChildren
			;

		tableChildren = [
			React$5.createElement('thead', { key: 'th' }, [
				React$5.createElement('tr', { key: 'h' }, [
					React$5.createElement('th', { key: 'p', className: 'rdtPrev', onClick: this.props.subtractTime( 1, 'months' )}, React$5.createElement('span', {}, '‹' )),
					React$5.createElement('th', { key: 's', className: 'rdtSwitch', onClick: this.props.showView( 'months' ), colSpan: 5, 'data-value': this.props.viewDate.month() }, locale.months( date ) + ' ' + date.year() ),
					React$5.createElement('th', { key: 'n', className: 'rdtNext', onClick: this.props.addTime( 1, 'months' )}, React$5.createElement('span', {}, '›' ))
				]),
				React$5.createElement('tr', { key: 'd'}, this.getDaysOfWeek( locale ).map( function( day, index ) { return React$5.createElement('th', { key: day + index, className: 'dow'}, day ); }) )
			]),
			React$5.createElement('tbody', { key: 'tb' }, this.renderDays())
		];

		if ( footer )
			tableChildren.push( footer );

		return React$5.createElement('div', { className: 'rdtDays' },
			React$5.createElement('table', {}, tableChildren )
		);
	},

	/**
	 * Get a list of the days of the week
	 * depending on the current locale
	 * @return {array} A list with the shortname of the days
	 */
	getDaysOfWeek: function( locale ) {
		var days = locale._weekdaysMin,
			first = locale.firstDayOfWeek(),
			dow = [],
			i = 0
			;

		days.forEach( function( day ) {
			dow[ (7 + ( i++ ) - first) % 7 ] = day;
		});

		return dow;
	},

	renderDays: function() {
		var date = this.props.viewDate,
			selected = this.props.selectedDate && this.props.selectedDate.clone(),
			prevMonth = date.clone().subtract( 1, 'months' ),
			currentYear = date.year(),
			currentMonth = date.month(),
			weeks = [],
			days = [],
			renderer = this.props.renderDay || this.renderDay,
			isValid = this.props.isValidDate || this.alwaysValidDate,
			classes, isDisabled, dayProps, currentDate
			;

		// Go to the last week of the previous month
		prevMonth.date( prevMonth.daysInMonth() ).startOf( 'week' );
		var lastDay = prevMonth.clone().add( 42, 'd' );

		while ( prevMonth.isBefore( lastDay ) ) {
			classes = 'rdtDay';
			currentDate = prevMonth.clone();

			if ( ( prevMonth.year() === currentYear && prevMonth.month() < currentMonth ) || ( prevMonth.year() < currentYear ) )
				classes += ' rdtOld';
			else if ( ( prevMonth.year() === currentYear && prevMonth.month() > currentMonth ) || ( prevMonth.year() > currentYear ) )
				classes += ' rdtNew';

			if ( selected && prevMonth.isSame( selected, 'day' ) )
				classes += ' rdtActive';

			if ( prevMonth.isSame( moment$1(), 'day' ) )
				classes += ' rdtToday';

			isDisabled = !isValid( currentDate, selected );
			if ( isDisabled )
				classes += ' rdtDisabled';

			dayProps = {
				key: prevMonth.format( 'M_D' ),
				'data-value': prevMonth.date(),
				className: classes
			};

			if ( !isDisabled )
				dayProps.onClick = this.updateSelectedDate;

			days.push( renderer( dayProps, currentDate, selected ) );

			if ( days.length === 7 ) {
				weeks.push( React$5.createElement('tr', { key: prevMonth.format( 'M_D' )}, days ) );
				days = [];
			}

			prevMonth.add( 1, 'd' );
		}

		return weeks;
	},

	updateSelectedDate: function( event ) {
		this.props.updateSelectedDate( event, true );
	},

	renderDay: function( props, currentDate ) {
		return React$5.createElement('td',  props, currentDate.date() );
	},

	renderFooter: function() {
		if ( !this.props.timeFormat )
			return '';

		var date = this.props.selectedDate || this.props.viewDate;

		return React$5.createElement('tfoot', { key: 'tf'},
			React$5.createElement('tr', {},
				React$5.createElement('td', { onClick: this.props.showView( 'time' ), colSpan: 7, className: 'rdtTimeToggle' }, date.format( this.props.timeFormat ))
			)
		);
	},

	alwaysValidDate: function() {
		return 1;
	}
});

var DaysView$1 = DateTimePickerDays;

var React$4 = React__default,
	createClass$4 = createReactClass
;

var DateTimePickerMonths = createClass$4({
	render: function() {
		return React$4.createElement('div', { className: 'rdtMonths' }, [
			React$4.createElement('table', { key: 'a' }, React$4.createElement('thead', {}, React$4.createElement('tr', {}, [
				React$4.createElement('th', { key: 'prev', className: 'rdtPrev', onClick: this.props.subtractTime( 1, 'years' )}, React$4.createElement('span', {}, '‹' )),
				React$4.createElement('th', { key: 'year', className: 'rdtSwitch', onClick: this.props.showView( 'years' ), colSpan: 2, 'data-value': this.props.viewDate.year() }, this.props.viewDate.year() ),
				React$4.createElement('th', { key: 'next', className: 'rdtNext', onClick: this.props.addTime( 1, 'years' )}, React$4.createElement('span', {}, '›' ))
			]))),
			React$4.createElement('table', { key: 'months' }, React$4.createElement('tbody', { key: 'b' }, this.renderMonths()))
		]);
	},

	renderMonths: function() {
		var date = this.props.selectedDate,
			month = this.props.viewDate.month(),
			year = this.props.viewDate.year(),
			rows = [],
			i = 0,
			months = [],
			renderer = this.props.renderMonth || this.renderMonth,
			isValid = this.props.isValidDate || this.alwaysValidDate,
			classes, props, currentMonth, isDisabled, noOfDaysInMonth, daysInMonth, validDay,
			// Date is irrelevant because we're only interested in month
			irrelevantDate = 1
			;

		while (i < 12) {
			classes = 'rdtMonth';
			currentMonth =
				this.props.viewDate.clone().set({ year: year, month: i, date: irrelevantDate });

			noOfDaysInMonth = currentMonth.endOf( 'month' ).format( 'D' );
			daysInMonth = Array.from({ length: noOfDaysInMonth }, function( e, i ) {
				return i + 1;
			});

			validDay = daysInMonth.find(function( d ) {
				var day = currentMonth.clone().set( 'date', d );
				return isValid( day );
			});

			isDisabled = ( validDay === undefined );

			if ( isDisabled )
				classes += ' rdtDisabled';

			if ( date && i === date.month() && year === date.year() )
				classes += ' rdtActive';

			props = {
				key: i,
				'data-value': i,
				className: classes
			};

			if ( !isDisabled )
				props.onClick = ( this.props.updateOn === 'months' ?
					this.updateSelectedMonth : this.props.setDate( 'month' ) );

			months.push( renderer( props, i, year, date && date.clone() ) );

			if ( months.length === 4 ) {
				rows.push( React$4.createElement('tr', { key: month + '_' + rows.length }, months ) );
				months = [];
			}

			i++;
		}

		return rows;
	},

	updateSelectedMonth: function( event ) {
		this.props.updateSelectedDate( event );
	},

	renderMonth: function( props, month ) {
		var localMoment = this.props.viewDate;
		var monthStr = localMoment.localeData().monthsShort( localMoment.month( month ) );
		var strLength = 3;
		// Because some months are up to 5 characters long, we want to
		// use a fixed string length for consistency
		var monthStrFixedLength = monthStr.substring( 0, strLength );
		return React$4.createElement('td', props, capitalize( monthStrFixedLength ) );
	},

	alwaysValidDate: function() {
		return 1;
	},
});

function capitalize( str ) {
	return str.charAt( 0 ).toUpperCase() + str.slice( 1 );
}

var MonthsView$1 = DateTimePickerMonths;

var React$3 = React__default,
	createClass$3 = createReactClass
;

var DateTimePickerYears = createClass$3({
	render: function() {
		var year = parseInt( this.props.viewDate.year() / 10, 10 ) * 10;

		return React$3.createElement('div', { className: 'rdtYears' }, [
			React$3.createElement('table', { key: 'a' }, React$3.createElement('thead', {}, React$3.createElement('tr', {}, [
				React$3.createElement('th', { key: 'prev', className: 'rdtPrev', onClick: this.props.subtractTime( 10, 'years' )}, React$3.createElement('span', {}, '‹' )),
				React$3.createElement('th', { key: 'year', className: 'rdtSwitch', onClick: this.props.showView( 'years' ), colSpan: 2 }, year + '-' + ( year + 9 ) ),
				React$3.createElement('th', { key: 'next', className: 'rdtNext', onClick: this.props.addTime( 10, 'years' )}, React$3.createElement('span', {}, '›' ))
			]))),
			React$3.createElement('table', { key: 'years' }, React$3.createElement('tbody',  {}, this.renderYears( year )))
		]);
	},

	renderYears: function( year ) {
		var years = [],
			i = -1,
			rows = [],
			renderer = this.props.renderYear || this.renderYear,
			selectedDate = this.props.selectedDate,
			isValid = this.props.isValidDate || this.alwaysValidDate,
			classes, props, currentYear, isDisabled, noOfDaysInYear, daysInYear, validDay,
			// Month and date are irrelevant here because
			// we're only interested in the year
			irrelevantMonth = 0,
			irrelevantDate = 1
			;

		year--;
		while (i < 11) {
			classes = 'rdtYear';
			currentYear = this.props.viewDate.clone().set(
				{ year: year, month: irrelevantMonth, date: irrelevantDate } );

			// Not sure what 'rdtOld' is for, commenting out for now as it's not working properly
			// if ( i === -1 | i === 10 )
				// classes += ' rdtOld';

			noOfDaysInYear = currentYear.endOf( 'year' ).format( 'DDD' );
			daysInYear = Array.from({ length: noOfDaysInYear }, function( e, i ) {
				return i + 1;
			});

			validDay = daysInYear.find(function( d ) {
				var day = currentYear.clone().dayOfYear( d );
				return isValid( day );
			});

			isDisabled = ( validDay === undefined );

			if ( isDisabled )
				classes += ' rdtDisabled';

			if ( selectedDate && selectedDate.year() === year )
				classes += ' rdtActive';

			props = {
				key: year,
				'data-value': year,
				className: classes
			};

			if ( !isDisabled )
				props.onClick = ( this.props.updateOn === 'years' ?
					this.updateSelectedYear : this.props.setDate('year') );

			years.push( renderer( props, year, selectedDate && selectedDate.clone() ));

			if ( years.length === 4 ) {
				rows.push( React$3.createElement('tr', { key: i }, years ) );
				years = [];
			}

			year++;
			i++;
		}

		return rows;
	},

	updateSelectedYear: function( event ) {
		this.props.updateSelectedDate( event );
	},

	renderYear: function( props, year ) {
		return React$3.createElement('td',  props, year );
	},

	alwaysValidDate: function() {
		return 1;
	},
});

var YearsView$1 = DateTimePickerYears;

var React$2 = React__default,
	createClass$2 = createReactClass,
	assign$1 = objectAssign
	;

var DateTimePickerTime = createClass$2({
	getInitialState: function() {
		return this.calculateState( this.props );
	},

	calculateState: function( props ) {
		var date = props.selectedDate || props.viewDate,
			format = props.timeFormat,
			counters = []
			;

		if ( format.toLowerCase().indexOf('h') !== -1 ) {
			counters.push('hours');
			if ( format.indexOf('m') !== -1 ) {
				counters.push('minutes');
				if ( format.indexOf('s') !== -1 ) {
					counters.push('seconds');
				}
			}
		}

		var hours = date.format( 'H' );

		var daypart = false;
		if ( this.state !== null && this.props.timeFormat.toLowerCase().indexOf( ' a' ) !== -1 ) {
			if ( this.props.timeFormat.indexOf( ' A' ) !== -1 ) {
				daypart = ( hours >= 12 ) ? 'PM' : 'AM';
			} else {
				daypart = ( hours >= 12 ) ? 'pm' : 'am';
			}
		}

		return {
			hours: hours,
			minutes: date.format( 'mm' ),
			seconds: date.format( 'ss' ),
			milliseconds: date.format( 'SSS' ),
			daypart: daypart,
			counters: counters
		};
	},

	renderCounter: function( type ) {
		if ( type !== 'daypart' ) {
			var value = this.state[ type ];
			if ( type === 'hours' && this.props.timeFormat.toLowerCase().indexOf( ' a' ) !== -1 ) {
				value = ( value - 1 ) % 12 + 1;

				if ( value === 0 ) {
					value = 12;
				}
			}
			return React$2.createElement('div', { key: type, className: 'rdtCounter' }, [
				React$2.createElement('span', { key: 'up', className: 'rdtBtn', onMouseDown: this.onStartClicking( 'increase', type ), onContextMenu: this.disableContextMenu }, '▲' ),
				React$2.createElement('div', { key: 'c', className: 'rdtCount' }, value ),
				React$2.createElement('span', { key: 'do', className: 'rdtBtn', onMouseDown: this.onStartClicking( 'decrease', type ), onContextMenu: this.disableContextMenu }, '▼' )
			]);
		}
		return '';
	},

	renderDayPart: function() {
		return React$2.createElement('div', { key: 'dayPart', className: 'rdtCounter' }, [
			React$2.createElement('span', { key: 'up', className: 'rdtBtn', onMouseDown: this.onStartClicking( 'toggleDayPart', 'hours'), onContextMenu: this.disableContextMenu }, '▲' ),
			React$2.createElement('div', { key: this.state.daypart, className: 'rdtCount' }, this.state.daypart ),
			React$2.createElement('span', { key: 'do', className: 'rdtBtn', onMouseDown: this.onStartClicking( 'toggleDayPart', 'hours'), onContextMenu: this.disableContextMenu }, '▼' )
		]);
	},

	render: function() {
		var me = this,
			counters = []
		;

		this.state.counters.forEach( function( c ) {
			if ( counters.length )
				counters.push( React$2.createElement('div', { key: 'sep' + counters.length, className: 'rdtCounterSeparator' }, ':' ) );
			counters.push( me.renderCounter( c ) );
		});

		if ( this.state.daypart !== false ) {
			counters.push( me.renderDayPart() );
		}

		if ( this.state.counters.length === 3 && this.props.timeFormat.indexOf( 'S' ) !== -1 ) {
			counters.push( React$2.createElement('div', { className: 'rdtCounterSeparator', key: 'sep5' }, ':' ) );
			counters.push(
				React$2.createElement('div', { className: 'rdtCounter rdtMilli', key: 'm' },
					React$2.createElement('input', { value: this.state.milliseconds, type: 'text', onChange: this.updateMilli } )
					)
				);
		}

		return React$2.createElement('div', { className: 'rdtTime' },
			React$2.createElement('table', {}, [
				this.renderHeader(),
				React$2.createElement('tbody', { key: 'b'}, React$2.createElement('tr', {}, React$2.createElement('td', {},
					React$2.createElement('div', { className: 'rdtCounters' }, counters )
				)))
			])
		);
	},

	componentWillMount: function() {
		var me = this;
		me.timeConstraints = {
			hours: {
				min: 0,
				max: 23,
				step: 1
			},
			minutes: {
				min: 0,
				max: 59,
				step: 1
			},
			seconds: {
				min: 0,
				max: 59,
				step: 1
			},
			milliseconds: {
				min: 0,
				max: 999,
				step: 1
			}
		};
		['hours', 'minutes', 'seconds', 'milliseconds'].forEach( function( type ) {
			assign$1(me.timeConstraints[ type ], me.props.timeConstraints[ type ]);
		});
		this.setState( this.calculateState( this.props ) );
	},

	componentWillReceiveProps: function( nextProps ) {
		this.setState( this.calculateState( nextProps ) );
	},

	updateMilli: function( e ) {
		var milli = parseInt( e.target.value, 10 );
		if ( milli === e.target.value && milli >= 0 && milli < 1000 ) {
			this.props.setTime( 'milliseconds', milli );
			this.setState( { milliseconds: milli } );
		}
	},

	renderHeader: function() {
		if ( !this.props.dateFormat )
			return null;

		var date = this.props.selectedDate || this.props.viewDate;
		return React$2.createElement('thead', { key: 'h' }, React$2.createElement('tr', {},
			React$2.createElement('th', { className: 'rdtSwitch', colSpan: 4, onClick: this.props.showView( 'days' ) }, date.format( this.props.dateFormat ) )
		));
	},

	onStartClicking: function( action, type ) {
		var me = this;

		return function() {
			var update = {};
			update[ type ] = me[ action ]( type );
			me.setState( update );

			me.timer = setTimeout( function() {
				me.increaseTimer = setInterval( function() {
					update[ type ] = me[ action ]( type );
					me.setState( update );
				}, 70);
			}, 500);

			me.mouseUpListener = function() {
				clearTimeout( me.timer );
				clearInterval( me.increaseTimer );
				me.props.setTime( type, me.state[ type ] );
				document.body.removeEventListener( 'mouseup', me.mouseUpListener );
				document.body.removeEventListener( 'touchend', me.mouseUpListener );
			};

			document.body.addEventListener( 'mouseup', me.mouseUpListener );
			document.body.addEventListener( 'touchend', me.mouseUpListener );
		};
	},

	disableContextMenu: function( event ) {
		event.preventDefault();
		return false;
	},

	padValues: {
		hours: 1,
		minutes: 2,
		seconds: 2,
		milliseconds: 3
	},

	toggleDayPart: function( type ) { // type is always 'hours'
		var value = parseInt( this.state[ type ], 10) + 12;
		if ( value > this.timeConstraints[ type ].max )
			value = this.timeConstraints[ type ].min + ( value - ( this.timeConstraints[ type ].max + 1 ) );
		return this.pad( type, value );
	},

	increase: function( type ) {
		var value = parseInt( this.state[ type ], 10) + this.timeConstraints[ type ].step;
		if ( value > this.timeConstraints[ type ].max )
			value = this.timeConstraints[ type ].min + ( value - ( this.timeConstraints[ type ].max + 1 ) );
		return this.pad( type, value );
	},

	decrease: function( type ) {
		var value = parseInt( this.state[ type ], 10) - this.timeConstraints[ type ].step;
		if ( value < this.timeConstraints[ type ].min )
			value = this.timeConstraints[ type ].max + 1 - ( this.timeConstraints[ type ].min - value );
		return this.pad( type, value );
	},

	pad: function( type, value ) {
		var str = value + '';
		while ( str.length < this.padValues[ type ] )
			str = '0' + str;
		return str;
	},
});

var TimeView$1 = DateTimePickerTime;

var React$1 = React__default,
	createClass$1 = createReactClass,
	DaysView = DaysView$1,
	MonthsView = MonthsView$1,
	YearsView = YearsView$1,
	TimeView = TimeView$1
	;

var CalendarContainer$1 = createClass$1({
	viewComponents: {
		days: DaysView,
		months: MonthsView,
		years: YearsView,
		time: TimeView
	},

	render: function() {
		return React$1.createElement( this.viewComponents[ this.props.view ], this.props.viewProps );
	}
});

var CalendarContainer_1 = CalendarContainer$1;

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;

  _setPrototypeOf$1(subClass, superClass);
}

function _setPrototypeOf$1(o, p) {
  _setPrototypeOf$1 = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf$1(o, p);
}

function _objectWithoutPropertiesLoose$1(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _assertThisInitialized$1(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}/**
 * Check whether some DOM node is our Component's node.
 */
function isNodeFound(current, componentNode, ignoreClass) {
  if (current === componentNode) {
    return true;
  } // SVG <use/> elements do not technically reside in the rendered DOM, so
  // they do not have classList directly, but they offer a link to their
  // corresponding element, which can have classList. This extra check is for
  // that case.
  // See: http://www.w3.org/TR/SVG11/struct.html#InterfaceSVGUseElement
  // Discussion: https://github.com/Pomax/react-onclickoutside/pull/17


  if (current.correspondingElement) {
    return current.correspondingElement.classList.contains(ignoreClass);
  }

  return current.classList.contains(ignoreClass);
}
/**
 * Try to find our node in a hierarchy of nodes, returning the document
 * node as highest node if our node is not found in the path up.
 */

function findHighest(current, componentNode, ignoreClass) {
  if (current === componentNode) {
    return true;
  } // If source=local then this event came from 'somewhere'
  // inside and should be ignored. We could handle this with
  // a layered approach, too, but that requires going back to
  // thinking in terms of Dom node nesting, running counter
  // to React's 'you shouldn't care about the DOM' philosophy.


  while (current.parentNode) {
    if (isNodeFound(current, componentNode, ignoreClass)) {
      return true;
    }

    current = current.parentNode;
  }

  return current;
}
/**
 * Check if the browser scrollbar was clicked
 */

function clickedScrollbar(evt) {
  return document.documentElement.clientWidth <= evt.clientX || document.documentElement.clientHeight <= evt.clientY;
}// ideally will get replaced with external dep
// when rafrex/detect-passive-events#4 and rafrex/detect-passive-events#5 get merged in
var testPassiveEventSupport = function testPassiveEventSupport() {
  if (typeof window === 'undefined' || typeof window.addEventListener !== 'function') {
    return;
  }

  var passive = false;
  var options = Object.defineProperty({}, 'passive', {
    get: function get() {
      passive = true;
    }
  });

  var noop = function noop() {};

  window.addEventListener('testPassiveEventSupport', noop, options);
  window.removeEventListener('testPassiveEventSupport', noop, options);
  return passive;
};function autoInc(seed) {
  if (seed === void 0) {
    seed = 0;
  }

  return function () {
    return ++seed;
  };
}

var uid = autoInc();var passiveEventSupport;
var handlersMap = {};
var enabledInstances = {};
var touchEvents = ['touchstart', 'touchmove'];
var IGNORE_CLASS_NAME = 'ignore-react-onclickoutside';
/**
 * Options for addEventHandler and removeEventHandler
 */

function getEventHandlerOptions(instance, eventName) {
  var handlerOptions = null;
  var isTouchEvent = touchEvents.indexOf(eventName) !== -1;

  if (isTouchEvent && passiveEventSupport) {
    handlerOptions = {
      passive: !instance.props.preventDefault
    };
  }

  return handlerOptions;
}
/**
 * This function generates the HOC function that you'll use
 * in order to impart onOutsideClick listening to an
 * arbitrary component. It gets called at the end of the
 * bootstrapping code to yield an instance of the
 * onClickOutsideHOC function defined inside setupHOC().
 */


function onClickOutsideHOC(WrappedComponent, config) {
  var _class, _temp;

  var componentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';
  return _temp = _class = /*#__PURE__*/function (_Component) {
    _inheritsLoose(onClickOutside, _Component);

    function onClickOutside(props) {
      var _this;

      _this = _Component.call(this, props) || this;

      _this.__outsideClickHandler = function (event) {
        if (typeof _this.__clickOutsideHandlerProp === 'function') {
          _this.__clickOutsideHandlerProp(event);

          return;
        }

        var instance = _this.getInstance();

        if (typeof instance.props.handleClickOutside === 'function') {
          instance.props.handleClickOutside(event);
          return;
        }

        if (typeof instance.handleClickOutside === 'function') {
          instance.handleClickOutside(event);
          return;
        }

        throw new Error("WrappedComponent: " + componentName + " lacks a handleClickOutside(event) function for processing outside click events.");
      };

      _this.__getComponentNode = function () {
        var instance = _this.getInstance();

        if (config && typeof config.setClickOutsideRef === 'function') {
          return config.setClickOutsideRef()(instance);
        }

        if (typeof instance.setClickOutsideRef === 'function') {
          return instance.setClickOutsideRef();
        }

        return reactDom.exports.findDOMNode(instance);
      };

      _this.enableOnClickOutside = function () {
        if (typeof document === 'undefined' || enabledInstances[_this._uid]) {
          return;
        }

        if (typeof passiveEventSupport === 'undefined') {
          passiveEventSupport = testPassiveEventSupport();
        }

        enabledInstances[_this._uid] = true;
        var events = _this.props.eventTypes;

        if (!events.forEach) {
          events = [events];
        }

        handlersMap[_this._uid] = function (event) {
          if (_this.componentNode === null) return;

          if (_this.props.preventDefault) {
            event.preventDefault();
          }

          if (_this.props.stopPropagation) {
            event.stopPropagation();
          }

          if (_this.props.excludeScrollbar && clickedScrollbar(event)) return;
          var current = event.target;

          if (findHighest(current, _this.componentNode, _this.props.outsideClickIgnoreClass) !== document) {
            return;
          }

          _this.__outsideClickHandler(event);
        };

        events.forEach(function (eventName) {
          document.addEventListener(eventName, handlersMap[_this._uid], getEventHandlerOptions(_assertThisInitialized$1(_this), eventName));
        });
      };

      _this.disableOnClickOutside = function () {
        delete enabledInstances[_this._uid];
        var fn = handlersMap[_this._uid];

        if (fn && typeof document !== 'undefined') {
          var events = _this.props.eventTypes;

          if (!events.forEach) {
            events = [events];
          }

          events.forEach(function (eventName) {
            return document.removeEventListener(eventName, fn, getEventHandlerOptions(_assertThisInitialized$1(_this), eventName));
          });
          delete handlersMap[_this._uid];
        }
      };

      _this.getRef = function (ref) {
        return _this.instanceRef = ref;
      };

      _this._uid = uid();
      return _this;
    }
    /**
     * Access the WrappedComponent's instance.
     */


    var _proto = onClickOutside.prototype;

    _proto.getInstance = function getInstance() {
      if (WrappedComponent.prototype && !WrappedComponent.prototype.isReactComponent) {
        return this;
      }

      var ref = this.instanceRef;
      return ref.getInstance ? ref.getInstance() : ref;
    };

    /**
     * Add click listeners to the current document,
     * linked to this component's state.
     */
    _proto.componentDidMount = function componentDidMount() {
      // If we are in an environment without a DOM such
      // as shallow rendering or snapshots then we exit
      // early to prevent any unhandled errors being thrown.
      if (typeof document === 'undefined' || !document.createElement) {
        return;
      }

      var instance = this.getInstance();

      if (config && typeof config.handleClickOutside === 'function') {
        this.__clickOutsideHandlerProp = config.handleClickOutside(instance);

        if (typeof this.__clickOutsideHandlerProp !== 'function') {
          throw new Error("WrappedComponent: " + componentName + " lacks a function for processing outside click events specified by the handleClickOutside config option.");
        }
      }

      this.componentNode = this.__getComponentNode(); // return early so we dont initiate onClickOutside

      if (this.props.disableOnClickOutside) return;
      this.enableOnClickOutside();
    };

    _proto.componentDidUpdate = function componentDidUpdate() {
      this.componentNode = this.__getComponentNode();
    }
    /**
     * Remove all document's event listeners for this component
     */
    ;

    _proto.componentWillUnmount = function componentWillUnmount() {
      this.disableOnClickOutside();
    }
    /**
     * Can be called to explicitly enable event listening
     * for clicks and touches outside of this element.
     */
    ;

    /**
     * Pass-through render
     */
    _proto.render = function render() {
      // eslint-disable-next-line no-unused-vars
      var _this$props = this.props;
          _this$props.excludeScrollbar;
          var props = _objectWithoutPropertiesLoose$1(_this$props, ["excludeScrollbar"]);

      if (WrappedComponent.prototype && WrappedComponent.prototype.isReactComponent) {
        props.ref = this.getRef;
      } else {
        props.wrappedRef = this.getRef;
      }

      props.disableOnClickOutside = this.disableOnClickOutside;
      props.enableOnClickOutside = this.enableOnClickOutside;
      return createElement(WrappedComponent, props);
    };

    return onClickOutside;
  }(Component$1), _class.displayName = "OnClickOutside(" + componentName + ")", _class.defaultProps = {
    eventTypes: ['mousedown', 'touchstart'],
    excludeScrollbar: config && config.excludeScrollbar || false,
    outsideClickIgnoreClass: IGNORE_CLASS_NAME,
    preventDefault: false,
    stopPropagation: false
  }, _class.getClass = function () {
    return WrappedComponent.getClass ? WrappedComponent.getClass() : WrappedComponent;
  }, _temp;
}

var reactOnclickoutside_es = /*#__PURE__*/Object.freeze({
    __proto__: null,
    'default': onClickOutsideHOC,
    IGNORE_CLASS_NAME: IGNORE_CLASS_NAME
});

var require$$6 = /*@__PURE__*/getAugmentedNamespace(reactOnclickoutside_es);

var assign = objectAssign,
	PropTypes = propTypes$1.exports,
	createClass = createReactClass,
	moment = moment$2.exports,
	React = React__default,
	CalendarContainer = CalendarContainer_1,
	onClickOutside = require$$6.default
	;

var viewModes = Object.freeze({
	YEARS: 'years',
	MONTHS: 'months',
	DAYS: 'days',
	TIME: 'time',
});

var TYPES = PropTypes;
var Datetime = createClass({
	displayName: 'DateTime',
	propTypes: {
		// value: TYPES.object | TYPES.string,
		// defaultValue: TYPES.object | TYPES.string,
		// viewDate: TYPES.object | TYPES.string,
		onFocus: TYPES.func,
		onBlur: TYPES.func,
		onChange: TYPES.func,
		onViewModeChange: TYPES.func,
		onNavigateBack: TYPES.func,
		onNavigateForward: TYPES.func,
		locale: TYPES.string,
		utc: TYPES.bool,
		displayTimeZone: TYPES.string,
		input: TYPES.bool,
		// dateFormat: TYPES.string | TYPES.bool,
		// timeFormat: TYPES.string | TYPES.bool,
		inputProps: TYPES.object,
		timeConstraints: TYPES.object,
		viewMode: TYPES.oneOf([viewModes.YEARS, viewModes.MONTHS, viewModes.DAYS, viewModes.TIME]),
		isValidDate: TYPES.func,
		open: TYPES.bool,
		strictParsing: TYPES.bool,
		closeOnSelect: TYPES.bool,
		closeOnTab: TYPES.bool
	},

	getInitialState: function() {
		this.checkTZ( this.props );
		
		var state = this.getStateFromProps( this.props );

		if ( state.open === undefined )
			state.open = !this.props.input;

		state.currentView = this.props.dateFormat ?
			(this.props.viewMode || state.updateOn || viewModes.DAYS) : viewModes.TIME;

		return state;
	},

	parseDate: function (date, formats) {
		var parsedDate;

		if (date && typeof date === 'string')
			parsedDate = this.localMoment(date, formats.datetime);
		else if (date)
			parsedDate = this.localMoment(date);

		if (parsedDate && !parsedDate.isValid())
			parsedDate = null;

		return parsedDate;
	},

	getStateFromProps: function( props ) {
		var formats = this.getFormats( props ),
			date = props.value || props.defaultValue,
			selectedDate, viewDate, updateOn, inputValue
			;

		selectedDate = this.parseDate(date, formats);

		viewDate = this.parseDate(props.viewDate, formats);

		viewDate = selectedDate ?
			selectedDate.clone().startOf('month') :
			viewDate ? viewDate.clone().startOf('month') : this.localMoment().startOf('month');

		updateOn = this.getUpdateOn(formats);

		if ( selectedDate )
			inputValue = selectedDate.format(formats.datetime);
		else if ( date.isValid && !date.isValid() )
			inputValue = '';
		else
			inputValue = date || '';

		return {
			updateOn: updateOn,
			inputFormat: formats.datetime,
			viewDate: viewDate,
			selectedDate: selectedDate,
			inputValue: inputValue,
			open: props.open
		};
	},

	getUpdateOn: function( formats ) {
		if ( formats.date.match(/[lLD]/) ) {
			return viewModes.DAYS;
		} else if ( formats.date.indexOf('M') !== -1 ) {
			return viewModes.MONTHS;
		} else if ( formats.date.indexOf('Y') !== -1 ) {
			return viewModes.YEARS;
		}

		return viewModes.DAYS;
	},

	getFormats: function( props ) {
		var formats = {
				date: props.dateFormat || '',
				time: props.timeFormat || ''
			},
			locale = this.localMoment( props.date, null, props ).localeData()
			;

		if ( formats.date === true ) {
			formats.date = locale.longDateFormat('L');
		}
		else if ( this.getUpdateOn(formats) !== viewModes.DAYS ) {
			formats.time = '';
		}

		if ( formats.time === true ) {
			formats.time = locale.longDateFormat('LT');
		}

		formats.datetime = formats.date && formats.time ?
			formats.date + ' ' + formats.time :
			formats.date || formats.time
		;

		return formats;
	},

	componentWillReceiveProps: function( nextProps ) {
		var formats = this.getFormats( nextProps ),
			updatedState = {}
		;

		if ( nextProps.value !== this.props.value ||
			formats.datetime !== this.getFormats( this.props ).datetime ) {
			updatedState = this.getStateFromProps( nextProps );
		}

		if ( updatedState.open === undefined ) {
			if ( typeof nextProps.open !== 'undefined' ) {
				updatedState.open = nextProps.open;
			} else if ( this.props.closeOnSelect && this.state.currentView !== viewModes.TIME ) {
				updatedState.open = false;
			} else {
				updatedState.open = this.state.open;
			}
		}

		if ( nextProps.viewMode !== this.props.viewMode ) {
			updatedState.currentView = nextProps.viewMode;
		}

		if ( nextProps.locale !== this.props.locale ) {
			if ( this.state.viewDate ) {
				var updatedViewDate = this.state.viewDate.clone().locale( nextProps.locale );
				updatedState.viewDate = updatedViewDate;
			}
			if ( this.state.selectedDate ) {
				var updatedSelectedDate = this.state.selectedDate.clone().locale( nextProps.locale );
				updatedState.selectedDate = updatedSelectedDate;
				updatedState.inputValue = updatedSelectedDate.format( formats.datetime );
			}
		}

		if ( nextProps.utc !== this.props.utc || nextProps.displayTimeZone !== this.props.displayTimeZone ) {
			if ( nextProps.utc ) {
				if ( this.state.viewDate )
					updatedState.viewDate = this.state.viewDate.clone().utc();
				if ( this.state.selectedDate ) {
					updatedState.selectedDate = this.state.selectedDate.clone().utc();
					updatedState.inputValue = updatedState.selectedDate.format( formats.datetime );
				}
			} else if ( nextProps.displayTimeZone ) {
				if ( this.state.viewDate )
					updatedState.viewDate = this.state.viewDate.clone().tz(nextProps.displayTimeZone);
				if ( this.state.selectedDate ) {
					updatedState.selectedDate = this.state.selectedDate.clone().tz(nextProps.displayTimeZone);
					updatedState.inputValue = updatedState.selectedDate.tz(nextProps.displayTimeZone).format( formats.datetime );
				}
			} else {
				if ( this.state.viewDate )
					updatedState.viewDate = this.state.viewDate.clone().local();
				if ( this.state.selectedDate ) {
					updatedState.selectedDate = this.state.selectedDate.clone().local();
					updatedState.inputValue = updatedState.selectedDate.format(formats.datetime);
				}
			}
		}

		if ( nextProps.viewDate !== this.props.viewDate ) {
			updatedState.viewDate = moment(nextProps.viewDate);
		}

		this.checkTZ( nextProps );

		this.setState( updatedState );
	},

	onInputChange: function( e ) {
		var value = e.target === null ? e : e.target.value,
			localMoment = this.localMoment( value, this.state.inputFormat ),
			update = { inputValue: value }
			;

		if ( localMoment.isValid() && !this.props.value ) {
			update.selectedDate = localMoment;
			update.viewDate = localMoment.clone().startOf('month');
		} else {
			update.selectedDate = null;
		}

		return this.setState( update, function() {
			return this.props.onChange( localMoment.isValid() ? localMoment : this.state.inputValue );
		});
	},

	onInputKey: function( e ) {
		if ( e.which === 9 && this.props.closeOnTab ) {
			this.closeCalendar();
		}
	},

	showView: function( view ) {
		var me = this;
		return function() {
			me.state.currentView !== view && me.props.onViewModeChange( view );
			me.setState({ currentView: view });
		};
	},

	setDate: function( type ) {
		var me = this,
			nextViews = {
				month: viewModes.DAYS,
				year: viewModes.MONTHS,
			}
		;
		return function( e ) {
			me.setState({
				viewDate: me.state.viewDate.clone()[ type ]( parseInt(e.target.getAttribute('data-value'), 10) ).startOf( type ),
				currentView: nextViews[ type ]
			});
			me.props.onViewModeChange( nextViews[ type ] );
		};
	},

	subtractTime: function( amount, type, toSelected ) {
		var me = this;
		return function() {
			me.props.onNavigateBack( amount, type );
			me.updateTime( 'subtract', amount, type, toSelected );
		};
	},

	addTime: function( amount, type, toSelected ) {
		var me = this;
		return function() {
			me.props.onNavigateForward( amount, type );
			me.updateTime( 'add', amount, type, toSelected );
		};
	},

	updateTime: function( op, amount, type, toSelected ) {
		var update = {},
			date = toSelected ? 'selectedDate' : 'viewDate';

		update[ date ] = this.state[ date ].clone()[ op ]( amount, type );

		this.setState( update );
	},

	allowedSetTime: ['hours', 'minutes', 'seconds', 'milliseconds'],
	setTime: function( type, value ) {
		var index = this.allowedSetTime.indexOf( type ) + 1,
			state = this.state,
			date = (state.selectedDate || state.viewDate).clone(),
			nextType
			;

		// It is needed to set all the time properties
		// to not to reset the time
		date[ type ]( value );
		for (; index < this.allowedSetTime.length; index++) {
			nextType = this.allowedSetTime[index];
			date[ nextType ]( date[nextType]() );
		}

		if ( !this.props.value ) {
			this.setState({
				selectedDate: date,
				inputValue: date.format( state.inputFormat )
			});
		}
		this.props.onChange( date );
	},

	updateSelectedDate: function( e, close ) {
		var target = e.currentTarget,
			modifier = 0,
			viewDate = this.state.viewDate,
			currentDate = this.state.selectedDate || viewDate,
			date
			;

		if (target.className.indexOf('rdtDay') !== -1) {
			if (target.className.indexOf('rdtNew') !== -1)
				modifier = 1;
			else if (target.className.indexOf('rdtOld') !== -1)
				modifier = -1;

			date = viewDate.clone()
				.month( viewDate.month() + modifier )
				.date( parseInt( target.getAttribute('data-value'), 10 ) );
		} else if (target.className.indexOf('rdtMonth') !== -1) {
			date = viewDate.clone()
				.month( parseInt( target.getAttribute('data-value'), 10 ) )
				.date( currentDate.date() );
		} else if (target.className.indexOf('rdtYear') !== -1) {
			date = viewDate.clone()
				.month( currentDate.month() )
				.date( currentDate.date() )
				.year( parseInt( target.getAttribute('data-value'), 10 ) );
		}

		date.hours( currentDate.hours() )
			.minutes( currentDate.minutes() )
			.seconds( currentDate.seconds() )
			.milliseconds( currentDate.milliseconds() );

		if ( !this.props.value ) {
			var open = !( this.props.closeOnSelect && close );
			if ( !open ) {
				this.props.onBlur( date );
			}

			this.setState({
				selectedDate: date,
				viewDate: date.clone().startOf('month'),
				inputValue: date.format( this.state.inputFormat ),
				open: open
			});
		} else {
			if ( this.props.closeOnSelect && close ) {
				this.closeCalendar();
			}
		}

		this.props.onChange( date );
	},

	openCalendar: function( e ) {
		if ( !this.state.open ) {
			this.setState({ open: true }, function() {
				this.props.onFocus( e );
			});
		}
	},

	closeCalendar: function() {
		this.setState({ open: false }, function () {
			this.props.onBlur( this.state.selectedDate || this.state.inputValue );
		});
	},

	handleClickOutside: function() {
		if ( this.props.input && this.state.open && this.props.open === undefined && !this.props.disableCloseOnClickOutside ) {
			this.setState({ open: false }, function() {
				this.props.onBlur( this.state.selectedDate || this.state.inputValue );
			});
		}
	},

	localMoment: function( date, format, props ) {
		props = props || this.props;
		var m = null;

		if (props.utc) {
			m = moment.utc(date, format, props.strictParsing);
		} else if (props.displayTimeZone) {
			m = moment.tz(date, format, props.displayTimeZone);
		} else {
			m = moment(date, format, props.strictParsing);
		}

		if ( props.locale )
			m.locale( props.locale );
		return m;
	},

	checkTZ: function( props ) {
		var con = console;

		if ( props.displayTimeZone && !this.tzWarning && !moment.tz ) {
			this.tzWarning = true;
			con && con.error('react-datetime: displayTimeZone prop with value "' + props.displayTimeZone +  '" is used but moment.js timezone is not loaded.');
		}
	},

	componentProps: {
		fromProps: ['value', 'isValidDate', 'renderDay', 'renderMonth', 'renderYear', 'timeConstraints'],
		fromState: ['viewDate', 'selectedDate', 'updateOn'],
		fromThis: ['setDate', 'setTime', 'showView', 'addTime', 'subtractTime', 'updateSelectedDate', 'localMoment', 'handleClickOutside']
	},

	getComponentProps: function() {
		var me = this,
			formats = this.getFormats( this.props ),
			props = {dateFormat: formats.date, timeFormat: formats.time}
			;

		this.componentProps.fromProps.forEach( function( name ) {
			props[ name ] = me.props[ name ];
		});
		this.componentProps.fromState.forEach( function( name ) {
			props[ name ] = me.state[ name ];
		});
		this.componentProps.fromThis.forEach( function( name ) {
			props[ name ] = me[ name ];
		});

		return props;
	},

	overrideEvent: function( handler, action ) {
		if ( !this.overridenEvents ) {
			this.overridenEvents = {};
		}

		if ( !this.overridenEvents[handler] ) {
			var me = this;
			this.overridenEvents[handler] = function( e ) {
				var result;
				if ( me.props.inputProps && me.props.inputProps[handler] ) {
					result = me.props.inputProps[handler]( e );
				}
				if ( result !== false ) {
					action( e );
				}
			};
		}

		return this.overridenEvents[handler];
	},

	render: function() {
		// TODO: Make a function or clean up this code,
		// logic right now is really hard to follow
		var className = 'rdt' + (this.props.className ?
									( Array.isArray( this.props.className ) ?
									' ' + this.props.className.join( ' ' ) : ' ' + this.props.className) : ''),
			children = [];

		if ( this.props.input ) {
			var finalInputProps = assign(
				{ type: 'text', className: 'form-control', value: this.state.inputValue },
				this.props.inputProps,
				{
					onClick: this.overrideEvent( 'onClick', this.openCalendar ),
					onFocus: this.overrideEvent( 'onFocus', this.openCalendar ),
					onChange: this.overrideEvent( 'onChange', this.onInputChange ),
					onKeyDown: this.overrideEvent( 'onKeyDown', this.onInputKey ),
				}
			);

			if ( this.props.renderInput ) {
				children = [ React.createElement('div', { key: 'i' }, this.props.renderInput( finalInputProps, this.openCalendar, this.closeCalendar )) ];
			} else {
				children = [ React.createElement('input', assign({ key: 'i' }, finalInputProps ))];
			}
		} else {
			className += ' rdtStatic';
		}

		if ( this.props.open || (this.props.open === undefined && this.state.open ) )
			className += ' rdtOpen';

		return React.createElement( ClickableWrapper, {className: className, onClickOut: this.handleClickOutside}, children.concat(
			React.createElement( 'div',
				{ key: 'dt', className: 'rdtPicker' },
				React.createElement( CalendarContainer, { view: this.state.currentView, viewProps: this.getComponentProps() })
			)
		));
	}
});

var ClickableWrapper = onClickOutside( createClass({
	render: function() {
		return React.createElement( 'div', { className: this.props.className }, this.props.children );
	},
	handleClickOutside: function( e ) {
		this.props.onClickOut( e );
	}
}));

Datetime.defaultProps = {
	className: '',
	defaultValue: '',
	inputProps: {},
	input: true,
	onFocus: function() {},
	onBlur: function() {},
	onChange: function() {},
	onViewModeChange: function() {},
	onNavigateBack: function() {},
	onNavigateForward: function() {},
	timeFormat: true,
	timeConstraints: {},
	dateFormat: true,
	strictParsing: true,
	closeOnSelect: false,
	closeOnTab: true,
	utc: false
};

// Make moment accessible through the Datetime class
Datetime.moment = moment;

var DateTime = Datetime;

var css_248z$v = ".rdt{position:relative}.rdtPicker{background:#fff;border:1px solid #f9f9f9;box-shadow:0 1px 3px rgba(0,0,0,.1);display:none;margin-top:1px;padding:4px;position:absolute;width:250px;z-index:99999!important}.rdtOpen .rdtPicker{display:block}.rdtStatic .rdtPicker{box-shadow:none;position:static}.rdtPicker .rdtTimeToggle{text-align:center}.rdtPicker table{margin:0;width:100%}.rdtPicker td,.rdtPicker th{height:28px;text-align:center}.rdtPicker td{cursor:pointer}.rdtPicker .rdtTimeToggle:hover,.rdtPicker td.rdtDay:hover,.rdtPicker td.rdtHour:hover,.rdtPicker td.rdtMinute:hover,.rdtPicker td.rdtSecond:hover{background:#eee;cursor:pointer}.rdtPicker td.rdtNew,.rdtPicker td.rdtOld{color:#999}.rdtPicker td.rdtToday{position:relative}.rdtPicker td.rdtToday:before{border-bottom:7px solid #428bca;border-left:7px solid transparent;border-top-color:rgba(0,0,0,.2);bottom:4px;content:\"\";display:inline-block;position:absolute;right:4px}.rdtPicker td.rdtActive,.rdtPicker td.rdtActive:hover{background-color:#428bca;color:#fff;text-shadow:0 -1px 0 rgba(0,0,0,.25)}.rdtPicker td.rdtActive.rdtToday:before{border-bottom-color:#fff}.rdtPicker td.rdtDisabled,.rdtPicker td.rdtDisabled:hover{background:none;color:#999;cursor:not-allowed}.rdtPicker td span.rdtOld{color:#999}.rdtPicker td span.rdtDisabled,.rdtPicker td span.rdtDisabled:hover{background:none;color:#999;cursor:not-allowed}.rdtPicker th{border-bottom:1px solid #f9f9f9}.rdtPicker .dow{border-bottom:none;cursor:default;width:14.2857%}.rdtPicker th.rdtSwitch{width:100px}.rdtPicker th.rdtNext,.rdtPicker th.rdtPrev{font-size:21px;vertical-align:top}.rdtNext span,.rdtPrev span{-webkit-touch-callout:none;display:block;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.rdtPicker th.rdtDisabled,.rdtPicker th.rdtDisabled:hover{background:none;color:#999;cursor:not-allowed}.rdtPicker thead tr:first-child th{cursor:pointer}.rdtPicker thead tr:first-child th:hover{background:#eee}.rdtPicker tfoot{border-top:1px solid #f9f9f9}.rdtPicker button{background:none;border:none;cursor:pointer}.rdtPicker button:hover{background-color:#eee}.rdtPicker thead button{height:100%;width:100%}td.rdtMonth,td.rdtYear{cursor:pointer;height:50px;width:25%}td.rdtMonth:hover,td.rdtYear:hover{background:#eee}.rdtCounters{display:inline-block}.rdtCounters>div{float:left}.rdtCounter{height:100px;width:40px}.rdtCounterSeparator{line-height:100px}.rdtCounter .rdtBtn{-webkit-touch-callout:none;cursor:pointer;display:block;height:40%;line-height:40px;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.rdtCounter .rdtBtn:hover{background:#eee}.rdtCounter .rdtCount{font-size:1.2em;height:20%}.rdtMilli{padding-left:8px;vertical-align:middle;width:48px}.rdtMilli input{font-size:1.2em;margin-top:37px;width:100%}.rdtTime td{cursor:default}";
styleInject(css_248z$v);

var css_248z$u = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.datepicker__input-field{border:1px solid #b8bfcd;border-radius:4px;box-sizing:border-box;display:flex;height:40px;width:100%}.datepicker__input-field:hover{background-color:#f5f6f8}.datepicker__input-field:focus-within{border:2px solid #0b6cff}.datepicker__input-field input{background-color:transparent;border:none;font-family:Roboto,sans-serif;font-size:16px;padding:.375rem .75rem;width:100%}.datepicker__input-field input:focus{outline:none}.datepicker__input-field input.form-control[readonly]{background-color:transparent}.datepicker__input-field input.form-control:focus{background-color:transparent;box-shadow:none}.datepicker__input-field i{align-items:center;color:#b8bfcd;display:flex;padding:0 10px}.datepicker__input-field.isDisabled{background-color:#f5f6f8}.datepicker__input-field.isDisabled input{pointer-events:none}.datepicker__input-field.isDisabled:hover,.datepicker__input-field.isDisabled input:hover{cursor:not-allowed}.datepicker__container{width:100%}.datepicker__container .rdtPicker{font-family:Roboto,sans-serif;font-size:14px}";
styleInject(css_248z$u);

var css_248z$t = "@font-face{font-family:feather;font-style:normal;font-weight:400;src:url(\"data:application/vnd.ms-fontobject;base64,\");src:url(\"data:application/vnd.ms-fontobject;base64,\") format(\"embedded-opentype\"),url(\"data:font/ttf;base64,\") format(\"truetype\"),url(\"data:font/woff;base64,\") format(\"woff\"),url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cdefs%3E%3Cfont id='feather' horiz-adv-x='1024'%3E%3Cfont-face units-per-em='1024' ascent='960' descent='-64'/%3E%3Cglyph horiz-adv-x='512'/%3E%3Cglyph unicode='' glyph-name='activity' d='M381.833 874.583c-17.849-.921-32.728-12.679-38.244-28.783l-.089-.3-118.25-354.833H85.333c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H256.022c18.735 0 34.651 12.075 40.389 28.866l.089.3L384 697 599.5 50.5c5.807-17.127 21.74-29.234 40.5-29.234s34.693 12.107 40.411 28.933l.089.301 118.25 354.833h139.917c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H767.978c-18.735 0-34.651-12.075-40.389-28.866l-.089-.3L640 199 424.5 845.5c-5.835 17.078-21.743 29.14-40.469 29.14a44 44 0 0 1-2.304-.061l.107.005z'/%3E%3Cglyph unicode='' glyph-name='airplay' d='M170.667 874.667c-70.187 0-128-57.813-128-128V320c0-70.187 57.813-128 128-128h42.667c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h-42.635C146.597 277.333 128 295.93 128 320v426.667c0 24.07 18.597 42.667 42.667 42.667h682.667c24.07 0 42.667-18.597 42.667-42.667V320c0-24.07-18.597-42.667-42.667-42.667h-42.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h42.635c70.187 0 128 57.813 128 128v426.667c0 70.187-57.813 128-128 128zm340.333-512c-12.757-.316-24.083-6.183-31.696-15.267l-.054-.066-213.333-256c-6.159-7.346-9.9-16.901-9.9-27.329 0-23.559 19.093-42.659 42.649-42.671h426.668c23.558.012 42.65 19.112 42.65 42.671A42.5 42.5 0 0 1 758.03 91.4l.054-.066-213.333 256c-7.882 9.406-19.634 15.345-32.773 15.345-.344 0-.686-.004-1.028-.012l.051.001zm1-109.334 122.25-146.667h-244.5z'/%3E%3Cglyph unicode='' glyph-name='alert-circle' d='M512 917.333C253.3 917.333 42.667 706.7 42.667 448S253.3-21.333 512-21.333C770.7-21.333 981.333 189.3 981.333 448S770.7 917.333 512 917.333zM512 832c212.583 0 384-171.417 384-384S724.583 64 512 64 128 235.417 128 448s171.417 384 384 384zm-.667-170.083c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V448a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V448v170.667c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zM512 320c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H512c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H512z'/%3E%3Cglyph unicode='' glyph-name='alert-octagon' d='M335.333 917.333c-11.781-.002-22.446-4.779-30.167-12.5l-250-250c-7.721-7.72-12.498-18.385-12.5-30.166V271.333c.002-11.781 4.779-22.446 12.5-30.167l250-250c7.72-7.721 18.385-12.498 30.166-12.5h353.334c11.781.002 22.446 4.779 30.167 12.5l250 250c7.721 7.72 12.498 18.385 12.5 30.166v353.333c-.002 11.781-4.779 22.446-12.5 30.167l-250 250c-7.72 7.721-18.385 12.498-30.166 12.5zM353 832h318l225-225V289L671 64H353L128 289v318zm158.333-170.083c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V448a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V448v170.667c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zM512 320c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H512c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H512z'/%3E%3Cglyph unicode='' glyph-name='alert-triangle' d='M512 877.833c-42.502 0-84.981-20.133-109.417-60.417l-.165-.165-.002-.002L41.083 213.916a13.376 13.376 0 0 1-.327-.451l-.089-.133c-47.962-83.059 13.593-190.946 109.5-192l.208-.001.22.001h722.822l.209-.001.22.001h-.011c95.907 1.054 157.462 108.941 109.5 192-.225.323-.362.512-.501.701l.083-.118-361.333 603.333-.165.166-.001.001c-24.436 40.284-66.915 60.417-109.417 60.417zm0-82.916c13.847 0 27.713-7.264 36.5-21.75l360.917-602.5c17.322-29.998-1.862-63.619-36.5-64H151.084c-34.637.381-53.822 34.002-36.5 64l360.917 602.5c8.787 14.486 22.653 21.75 36.5 21.75zm-.667-175.667c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V576 405.333a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032V576c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zM512 277.333c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H512c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H512z'/%3E%3Cglyph unicode='' glyph-name='align-center' d='M256 576c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H768c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H768zM128 746.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H896c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H896zm0-341.334c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H896c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H896zm128-170.666c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H768c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H768z'/%3E%3Cglyph unicode='' glyph-name='align-justify' d='M128 576c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H896c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H896zm0 170.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H896c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H896zm0-341.334c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H896c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H896zm0-170.666c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H896c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H896z'/%3E%3Cglyph unicode='' glyph-name='align-left' d='M128 576c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h597.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm0 170.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H896c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H896zm0-341.334c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H896c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H896zm0-170.666c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h597.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='align-right' d='M298.667 576c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H896c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H896zM128 746.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H896c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H896zm0-341.334c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H896c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H896zm170.667-170.666c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H896c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H896z'/%3E%3Cglyph unicode='' glyph-name='anchor' d='M512 917.333c-93.751 0-170.667-76.915-170.667-170.667S418.248 575.999 512 575.999c93.751 0 170.667 76.915 170.667 170.667S605.752 917.333 512 917.333zM512 832c47.634 0 85.333-37.7 85.333-85.333s-37.7-85.333-85.333-85.333c-47.634 0-85.333 37.7-85.333 85.333S464.367 832 512 832zm-.667-170.083c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V21.334a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 597.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-426-171.25c-23.563-.002-42.664-19.103-42.667-42.666 0-258.7 210.633-469.333 469.333-469.333s469.333 210.633 469.333 469.333c-.002 23.563-19.103 42.664-42.666 42.667h-128c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h76.718C865.338 213.967 709.431 64.002 511.999 64.002S158.661 213.968 136.582 405.335h76.75c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='aperture' d='M512 917.333C253.3 917.333 42.667 706.7 42.667 448S253.3-21.333 512-21.333C770.7-21.333 981.333 189.3 981.333 448S770.7 917.333 512 917.333zM512 832c212.583 0 384-171.417 384-384S724.583 64 512 64 128 235.417 128 448s171.417 384 384 384zm96.583-170.167c-22.848-.909-41.025-19.651-41.025-42.639 0-8.07 2.24-15.616 6.132-22.052l-.107.191L818.5 173.25c7.515-12.847 21.245-21.34 36.958-21.34 23.568 0 42.674 19.106 42.674 42.674a42.476 42.476 0 0 1-5.824 21.535l.109-.201L647.5 640.001c-7.442 13.142-21.33 21.866-37.255 21.866a43.97 43.97 0 0 1-1.745-.035l.083.003zm-195.166-.5c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H903.25c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm147 254-.299.001c-15.946 0-29.85-8.747-37.174-21.705l-.111-.213-244.917-424.083c-3.595-6.121-5.718-13.482-5.718-21.338 0-23.568 19.106-42.674 42.674-42.674 15.715 0 29.446 8.495 36.852 21.143l.109.202L596.75 850.749c3.805 6.257 6.057 13.822 6.057 21.913 0 23.468-18.944 42.511-42.375 42.67h-.015zm-393.834-170.75c-22.848-.909-41.025-19.651-41.025-42.639 0-8.07 2.24-15.616 6.132-22.052l-.107.191L376.5 256c7.515-12.847 21.245-21.34 36.958-21.34 23.568 0 42.674 19.106 42.674 42.674a42.476 42.476 0 0 1-5.824 21.535l.109-.201L205.5 722.751c-7.442 13.142-21.33 21.866-37.255 21.866a43.97 43.97 0 0 1-1.745-.035l.083.003zM120.75 320c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h489.801c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm589 171.167-.345.001c-15.913 0-29.791-8.711-37.128-21.624l-.11-.211L427.25 45.25c-3.593-6.12-5.715-13.479-5.715-21.333 0-23.568 19.106-42.674 42.674-42.674 15.713 0 29.443 8.493 36.849 21.139l.109.201 244.917 424.083c3.774 6.238 6.007 13.773 6.007 21.83 0 23.45-18.916 42.482-42.323 42.67h-.018z'/%3E%3Cglyph unicode='' glyph-name='archive' d='M127.333 661.917c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V64c.002-23.563 19.103-42.664 42.666-42.667h768c23.563.002 42.664 19.103 42.667 42.666v554.667c.003.179.004.391.004.603 0 23.567-19.104 42.671-42.671 42.671s-42.671-19.104-42.671-42.671c0-.212.002-.424.005-.635v.032-512H170.666v512c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-84.666 212.75C19.104 874.665.003 855.564 0 832.001V618.668c.002-23.563 19.103-42.664 42.666-42.667h938.667c23.563.002 42.664 19.103 42.667 42.666V832c-.002 23.563-19.103 42.664-42.666 42.667zm42.666-85.334h853.333v-128H85.333zm341.334-298.666c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h170.635c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='arrow-down-circle' d='M512 917.333C253.3 917.333 42.667 706.7 42.667 448S253.3-21.333 512-21.333C770.7-21.333 981.333 189.3 981.333 448S770.7 917.333 512 917.333zM512 832c212.583 0 384-171.417 384-384S724.583 64 512 64 128 235.417 128 448s171.417 384 384 384zM340.917 491.083c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l170.676-170.676c7.721-7.718 18.387-12.492 30.167-12.492s22.445 4.774 30.167 12.492l170.666 170.666c8.092 7.778 13.118 18.692 13.118 30.781 0 23.567-19.104 42.671-42.671 42.671-12.089 0-23.003-5.027-30.767-13.104l-.013-.014-140.5-140.5-140.5 140.5c-7.76 7.971-18.594 12.916-30.583 12.917zm170.416 170.834c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-341.333a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 341.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='arrow-down-left' d='M724.5 704.417a42.576 42.576 0 0 1-29.324-12.907L268.499 264.833c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 426.667 426.667c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zm-426.5.166c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-426.667c.002-23.563 19.103-42.664 42.666-42.667h426.667c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H341.333v384c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='arrow-down-right' d='M298.25 704.417c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L695.166 204.5c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013L328.833 691.5c-7.76 7.971-18.594 12.916-30.583 12.917zm426.417.166c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-384h-384c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h426.635c23.563.002 42.664 19.103 42.667 42.666v426.667c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='arrow-down' d='M511.333 789.917c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-597.333a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 597.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zM212.917 491.083c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l298.676-298.676c7.721-7.718 18.387-12.492 30.167-12.492s22.445 4.774 30.167 12.492l298.666 298.666c8.092 7.778 13.118 18.692 13.118 30.781 0 23.567-19.104 42.671-42.671 42.671-12.089 0-23.003-5.027-30.767-13.104l-.013-.014-268.5-268.5-268.5 268.5c-7.76 7.971-18.594 12.916-30.583 12.917z'/%3E%3Cglyph unicode='' glyph-name='arrow-left-circle' d='M512 917.333C253.3 917.333 42.667 706.7 42.667 448S253.3-21.333 512-21.333C770.7-21.333 981.333 189.3 981.333 448S770.7 917.333 512 917.333zM512 832c212.583 0 384-171.417 384-384S724.583 64 512 64 128 235.417 128 448s171.417 384 384 384zm-.833-170.25a42.576 42.576 0 0 1-29.324-12.907L311.166 478.166c-7.718-7.721-12.492-18.387-12.492-30.167s4.774-22.445 12.492-30.167l170.667-170.666c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-140.5 140.5 140.5 140.5c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zM341.333 490.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h341.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='arrow-left' d='M213.333 490.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h597.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zM511.167 789.75a42.576 42.576 0 0 1-29.324-12.907L183.166 478.166c-7.718-7.721-12.492-18.387-12.492-30.167s4.774-22.445 12.492-30.167l298.667-298.666c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-268.5 268.5 268.5 268.5c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002z'/%3E%3Cglyph unicode='' glyph-name='arrow-right-circle' d='M512 917.333C253.3 917.333 42.667 706.7 42.667 448S253.3-21.333 512-21.333C770.7-21.333 981.333 189.3 981.333 448S770.7 917.333 512 917.333zM512 832c212.583 0 384-171.417 384-384S724.583 64 512 64 128 235.417 128 448s171.417 384 384 384zm-.417-170.25c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L622.332 448l-140.5-140.5c-8.092-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 170.667 170.667c7.718 7.721 12.492 18.387 12.492 30.167s-4.774 22.445-12.492 30.167L542.166 648.834c-7.76 7.971-18.594 12.916-30.583 12.917zm-170.25-171.083c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h341.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='arrow-right' d='M213.333 490.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h597.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm298.25 299.083c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L750.332 448l-268.5-268.5c-8.092-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 298.667 298.667c7.718 7.721 12.492 18.387 12.492 30.167s-4.774 22.445-12.492 30.167L542.166 776.834c-7.76 7.971-18.594 12.916-30.583 12.917z'/%3E%3Cglyph unicode='' glyph-name='arrow-up-circle' d='M512 917.333C253.3 917.333 42.667 706.7 42.667 448S253.3-21.333 512-21.333C770.7-21.333 981.333 189.3 981.333 448S770.7 917.333 512 917.333zM512 832c212.583 0 384-171.417 384-384S724.583 64 512 64 128 235.417 128 448s171.417 384 384 384zm-.667-170.667c-11.538-.19-21.934-4.93-29.5-12.5L311.166 478.166c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 140.5 140.5 140.5-140.5c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-170.667 170.667c-7.723 7.726-18.393 12.505-30.18 12.505-.23 0-.459-.002-.688-.005h.035zm0 .584c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-341.333a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 341.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='arrow-up-left' d='M298.25 704.417c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L695.166 204.5c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013L328.833 691.5c-7.76 7.971-18.594 12.916-30.583 12.917zm.417-.417c-23.563-.002-42.664-19.103-42.667-42.666V234.667a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 384h384c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='arrow-up-right' d='M724.5 704.417a42.576 42.576 0 0 1-29.324-12.907L268.499 264.833c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 426.667 426.667c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zM298.667 704c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h383.968v-384a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 426.667c-.002 23.563-19.103 42.664-42.666 42.667z'/%3E%3Cglyph unicode='' glyph-name='arrow-up' d='M511.333 789.917c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-597.333a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 597.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm0-.584c-11.538-.19-21.934-4.93-29.5-12.5L183.166 478.166c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 268.5 268.5 268.5-268.5c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-298.667 298.667c-7.723 7.726-18.393 12.505-30.18 12.505-.23 0-.459-.002-.688-.005h.035z'/%3E%3Cglyph unicode='' glyph-name='at-sign' d='M512 661.333c-117.315 0-213.333-96.018-213.333-213.333S394.685 234.667 512 234.667 725.333 330.685 725.333 448 629.315 661.333 512 661.333zM512 576c71.198 0 128-56.802 128-128s-56.802-128-128-128c-71.198 0-128 56.802-128 128s56.802 128 128 128zm-42.333 340C319.444 903.687 172.531 820.301 91.25 655.667-17.124 436.155 60.11 211.964 214 85.417S602.835-73.614 797.333 75.334c10.813 7.84 17.765 20.432 17.765 34.648 0 23.567-19.104 42.671-42.671 42.671a42.499 42.499 0 0 1-27.003-9.629l.076.06c-164.023-125.61-349.881-96.488-477.25 8.25S76.378 432.842 167.75 617.917c91.372 185.075 270.985 241.432 431.583 204S895.987 654.595 896 448v-42.667c0-32-10.464-50.57-25.667-64.083S833.185 320 810.666 320s-44.464 7.736-59.667 21.25-25.667 32.083-25.667 64.083v213.333c.003.179.004.391.004.603 0 23.567-19.104 42.671-42.671 42.671s-42.671-19.104-42.671-42.671c0-.212.002-.424.005-.635v.032-213.333c0-53.333 21.536-98.764 54.333-127.917s74.852-42.75 116.333-42.75c41.481 0 83.536 13.597 116.333 42.75s54.333 74.583 54.333 127.917V448c-.015 244.979-168.628 411.773-362.667 457-48.51 11.307-98.926 15.104-149 11z'/%3E%3Cglyph unicode='' glyph-name='award' d='M512 960c-188.008 0-341.333-153.326-341.333-341.333S323.993 277.334 512 277.334c188.008 0 341.333 153.326 341.333 341.333S700.007 960 512 960zm0-85.333c141.89 0 256-114.11 256-256s-114.11-256-256-256-256 114.11-256 256 114.11 256 256 256zM671.583 411c-22.668-1.124-40.621-19.776-40.621-42.622 0-2.192.165-4.345.484-6.448l-.029.236 39.917-301.417-137.417 82.5c-6.258 3.806-13.824 6.059-21.917 6.059s-15.659-2.253-22.106-6.165l.19.107-137.417-82.5 39.917 301c.305 1.918.48 4.129.48 6.382 0 23.567-19.104 42.671-42.671 42.671-21.851 0-39.866-16.424-42.373-37.601l-.019-.201-51.667-388.75a41.462 41.462 0 0 1-.365-5.571c0-23.567 19.104-42.671 42.671-42.671 8.104 0 15.68 2.259 22.133 6.182l-.189-.107L512.001 56.917 703.418-57.916c6.264-3.816 13.84-6.075 21.944-6.075 23.567 0 42.671 19.104 42.671 42.671a43.04 43.04 0 0 1-.39 5.791l.024-.221L716 373.417c-2.606 21.298-20.582 37.632-42.372 37.632-.719 0-1.434-.018-2.144-.053l.1.004z'/%3E%3Cglyph unicode='' glyph-name='bar-chart-2' d='M767.333 576.583c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-426.667a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 426.667c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-256 256c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-682.667a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 682.667c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-256-426.666c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-256a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 256c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='bar-chart' d='M511.333 576.583c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-426.667a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 426.667c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm256 256c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-682.667a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 682.667c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-512-512c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-170.667a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 170.667c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='battery-charging' d='M128 746.667c-70.187 0-128-57.813-128-128V277.334c0-70.187 57.813-128 128-128h85.333c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H128c-24.07 0-42.667 18.597-42.667 42.667v341.333c0 24.07 18.597 42.667 42.667 42.667h136.083c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm512 0c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h85.301c24.07 0 42.667-18.597 42.667-42.667V277.334c0-24.07-18.597-42.667-42.667-42.667H589.25c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h136.051c70.187 0 128 57.813 128 128v341.333c0 70.187-57.813 128-128 128zm340.667-212.75c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-85.333a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 85.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zM468.5 747.167c-14.509-.412-27.159-8.006-34.567-19.337l-.1-.163-170.667-256c-4.487-6.65-7.162-14.844-7.162-23.662 0-23.563 19.099-42.666 42.661-42.671h176.25L348.498 215.667c-4.72-6.768-7.542-15.166-7.542-24.223 0-23.567 19.104-42.671 42.671-42.671 14.98 0 28.157 7.719 35.77 19.396l.1.164 170.667 256c4.487 6.65 7.162 14.844 7.162 23.662 0 23.563-19.099 42.666-42.661 42.671h-176.25l126.417 189.667c4.701 6.759 7.511 15.141 7.511 24.179 0 23.567-19.104 42.671-42.671 42.671-.413 0-.824-.006-1.234-.017l.06.001z'/%3E%3Cglyph unicode='' glyph-name='battery' d='M128 746.667c-70.174 0-128-57.826-128-128V277.334c0-70.174 57.826-128 128-128h597.333c70.174 0 128 57.826 128 128v341.333c0 70.174-57.826 128-128 128zm0-85.334h597.333c24.375 0 42.667-18.291 42.667-42.667V277.333c0-24.375-18.291-42.667-42.667-42.667H128c-24.375 0-42.667 18.291-42.667 42.667v341.333c0 24.375 18.291 42.667 42.667 42.667zm852.667-127.416c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-85.333a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 85.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='bell-off' d='M519.083 917.167c-58.323 1.652-118.369-11.889-174.833-43.75-13.271-7.408-22.098-21.365-22.098-37.384 0-23.567 19.104-42.671 42.671-42.671a42.476 42.476 0 0 1 21.545 5.831l-.201-.109C558.621 896.394 768.101 774.015 768 576.001V405.334a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 170.667c.099 194.499-159.281 336.212-334.25 341.167zM245.25 756.583c-15.989-.617-29.664-9.941-36.471-23.341l-.112-.243c-25.059-48.539-38.069-102.457-38-157.083v-213.25c0-47.634-37.7-85.333-85.333-85.333-23.306-.34-42.068-19.312-42.068-42.667S62.028 192.339 85.302 192h640.032c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H229.584c15.253 25.52 26.417 53.647 26.417 85.333v213.419-.002a255.925 255.925 0 0 0 28.5 117.75c3.171 5.82 5.036 12.747 5.036 20.11 0 23.567-19.104 42.671-42.671 42.671-.568 0-1.133-.011-1.696-.033l.081.003zm190.917-649.416c-22.833-.927-40.992-19.662-40.992-42.638a42.471 42.471 0 0 1 6.182-22.134l-.107.189c48.305-83.272 173.195-83.272 221.5 0 3.622 6.14 5.763 13.528 5.763 21.417 0 23.571-19.108 42.679-42.679 42.679-15.683 0-29.39-8.459-36.808-21.063l-.109-.2c-17.462-30.103-56.371-30.103-73.833 0-7.454 13.096-21.317 21.784-37.21 21.784-.6 0-1.198-.012-1.792-.037l.085.003zM42.25 960.417c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L951.166-51.5c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013L72.833 947.5c-7.76 7.971-18.594 12.916-30.583 12.917z'/%3E%3Cglyph unicode='' glyph-name='bell' d='M512 917.333c-188.008 0-341.333-153.325-341.333-341.333V362.667c0-47.634-37.7-85.333-85.333-85.333v-85.333h853.333v85.333c-47.634 0-85.333 37.7-85.333 85.333V576c0 188.008-153.326 341.333-341.333 341.333zM512 832c141.89 0 256-114.11 256-256V362.667c0-31.686 11.164-59.813 26.417-85.333H229.584c15.253 25.52 26.417 53.647 26.417 85.333V576c0 141.89 114.11 256 256 256zm-75.833-724.833c-22.833-.927-40.992-19.662-40.992-42.638a42.471 42.471 0 0 1 6.182-22.134l-.107.189c48.305-83.272 173.195-83.272 221.5 0 3.622 6.14 5.763 13.528 5.763 21.417 0 23.571-19.108 42.679-42.679 42.679-15.683 0-29.39-8.459-36.808-21.063l-.109-.2c-17.462-30.103-56.371-30.103-73.833 0-7.454 13.096-21.317 21.784-37.21 21.784-.6 0-1.198-.012-1.792-.037l.085.003z'/%3E%3Cglyph unicode='' glyph-name='bluetooth' d='M511.333 960c-23.276-.378-42-19.335-42-42.666V551L307.5 712.833c-7.778 8.091-18.692 13.118-30.78 13.118-23.567 0-42.671-19.104-42.671-42.671 0-12.088 5.027-23.003 13.104-30.767l.014-.013 204.5-204.5-204.5-204.5c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 161.833 161.833V-21.334c.01-23.559 19.11-42.654 42.671-42.654 11.778 0 22.442 4.772 30.163 12.488l234.666 234.666c7.718 7.721 12.492 18.387 12.492 30.167s-4.774 22.445-12.492 30.167L572.333 448l204.5 204.5c7.718 7.721 12.492 18.387 12.492 30.167s-4.774 22.445-12.492 30.167L542.166 947.501c-7.723 7.726-18.393 12.505-30.18 12.505-.23 0-.459-.002-.688-.005h.035zm43.334-145.667 131.667-131.667-131.667-131.667zm0-469.333 131.667-131.667L554.667 81.666z'/%3E%3Cglyph unicode='' glyph-name='bold' d='M256 832c-23.563-.002-42.664-19.103-42.667-42.666V448.001c.002-23.563 19.103-42.664 42.666-42.667h341.334c117.315 0 213.333 96.018 213.333 213.333S714.648 832 597.333 832zm42.667-85.333h298.667c71.198 0 128-56.802 128-128s-56.802-128-128-128H298.667zm-42.667-256c-23.563-.002-42.664-19.103-42.667-42.666V106.668c.002-23.563 19.103-42.664 42.666-42.667h384c117.315 0 213.333 96.018 213.333 213.333s-96.018 213.333-213.333 213.333zm42.667-85.334H640c71.198 0 128-56.802 128-128s-56.802-128-128-128H298.667z'/%3E%3Cglyph unicode='' glyph-name='book-open' d='M85.333 874.667c-23.563-.002-42.664-19.103-42.667-42.666v-640c.002-23.563 19.103-42.664 42.666-42.667h298.667c47.634 0 85.333-37.7 85.333-85.333.34-23.306 19.312-42.068 42.667-42.068s42.327 18.762 42.666 42.036v597.365c0 117.315-96.018 213.333-213.333 213.333zM128 789.333h213.333c71.198 0 128-56.802 128-128V208.25c-25.52 15.253-53.647 26.417-85.333 26.417H128zm554.667 85.334c-117.315 0-213.333-96.018-213.333-213.333V64.001c.34-23.306 19.312-42.068 42.667-42.068s42.327 18.762 42.666 42.036v.032c0 47.634 37.7 85.333 85.333 85.333h298.667c23.563.002 42.664 19.103 42.667 42.666v640c-.002 23.563-19.103 42.664-42.666 42.667zm0-85.334H896V234.666H640c-31.686 0-59.813-11.164-85.333-26.417v453.083c0 71.198 56.802 128 128 128z'/%3E%3Cglyph unicode='' glyph-name='book' d='M277.333 277.333C195.364 277.333 128 209.969 128 128a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V128c0 35.852 28.148 64 64 64h576c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm0 640C195.364 917.333 128 849.969 128 768V128c0-81.969 67.364-149.333 149.333-149.333h576c23.563.002 42.664 19.103 42.667 42.666v853.333c-.002 23.563-19.103 42.664-42.666 42.667zm0-85.333h533.333V64H277.333c-35.852 0-64 28.148-64 64v640c0 35.852 28.148 64 64 64z'/%3E%3Cglyph unicode='' glyph-name='bookmark' d='M298.667 874.667c-70.187 0-128-57.813-128-128V63.953c0-23.567 19.104-42.671 42.671-42.671a42.473 42.473 0 0 1 24.954 8.054l-.125-.086L512 224.917 785.833 29.25c6.892-4.981 15.512-7.968 24.829-7.968 23.567 0 42.671 19.104 42.671 42.671v.049-.003 682.667c0 70.187-57.813 128-128 128zm0-85.334h426.667c24.07 0 42.667-18.597 42.667-42.667V146.999L536.834 312.082c-6.893 4.983-15.514 7.971-24.833 7.971s-17.94-2.987-24.959-8.057l.125.086L256 146.999v599.667c0 24.07 18.597 42.667 42.667 42.667z'/%3E%3Cglyph unicode='' glyph-name='box' d='M512 949.667c-19.518 0-39.076-4.427-57-13.333h-.088.002L113.581 765.667c-43.382-21.585-70.889-66.123-70.915-114.583V245.167c-.338-48.568 27.042-93.312 70.417-115.167l.091-.093-.008.008L454.499-40.752c36.022-18.025 78.561-18.025 114.583 0l341.25 170.667c43.417 21.576 70.974 66.02 71 114.502v.088-.002 406.581c-.026 48.46-27.533 92.998-70.917 114.583h-.085L569.08 936.334h-.088.002c-17.92 8.907-37.478 13.333-56.996 13.333zm-19-89.75a42.622 42.622 0 0 0 38 0l341.25-170.583.076-.074.01-.009c14.579-7.245 23.656-21.885 23.665-38.167V244.501c-.009-16.282-9.086-30.921-23.667-38.167l-.084-.084-.001-.001L530.916 35.582a42.693 42.693 0 0 0-38.25 0L151.499 206.249c-14.566 7.342-23.612 22.024-23.498 38.335V244.925v-.009 406.167c.009 16.282 9.086 30.921 23.667 38.167l.082.082.001.001zM97.5 740.083c-23.143-.546-41.695-19.436-41.695-42.66 0-16.816 9.727-31.36 23.861-38.312l.251-.111 413-206.5c5.56-2.841 12.127-4.505 19.083-4.505s13.524 1.665 19.326 4.617l-.242-.112 413 206.5c14.101 7.161 23.595 21.557 23.595 38.17 0 23.567-19.105 42.672-42.672 42.672a42.497 42.497 0 0 1-19.332-4.62l.242.112-393.917-197-393.917 197c-5.689 3-12.433 4.762-19.588 4.762a40.5 40.5 0 0 1-1.047-.013l.052.001zm413.833-206.166c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-501.75a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 501.75c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='briefcase' d='M170.667 704c-70.174 0-128-57.826-128-128V149.333c0-70.174 57.826-128 128-128h682.667c70.174 0 128 57.826 128 128V576c0 70.174-57.826 128-128 128zm0-85.333h682.667c24.375 0 42.667-18.291 42.667-42.667V149.333c0-24.375-18.291-42.667-42.667-42.667H170.667c-24.375 0-42.667 18.291-42.667 42.667V576c0 24.375 18.291 42.667 42.667 42.667zm256 256c-70.187 0-128-57.813-128-128V64a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V64v682.667c0 24.07 18.597 42.667 42.667 42.667h170.667c24.07 0 42.667-18.597 42.667-42.667V64a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V64v682.667c0 70.187-57.813 128-128 128z'/%3E%3Cglyph unicode='' glyph-name='calendar' d='M213.333 832c-70.174 0-128-57.826-128-128V106.667c0-70.174 57.826-128 128-128h597.333c70.174 0 128 57.826 128 128V704c0 70.174-57.826 128-128 128zm0-85.333h597.333c24.375 0 42.667-18.291 42.667-42.667V106.667c0-24.375-18.291-42.667-42.667-42.667H213.333c-24.375 0-42.667 18.291-42.667 42.667V704c0 24.375 18.291 42.667 42.667 42.667zM682 917.917c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V704a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V704v170.667c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-341.333 0c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V704a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V704v170.667c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zM128 576c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H896c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H896z'/%3E%3Cglyph unicode='' glyph-name='camera-off' d='M42.25 960.417c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L951.166-51.5c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013L72.833 947.5c-7.76 7.971-18.594 12.916-30.583 12.917zM384 874.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h233.135l72.667-109c7.761-11.521 20.757-18.999 35.5-19h170.667c24.07 0 42.667-18.597 42.667-42.667v-398.5a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 398.5c0 70.187-57.813 128-128 128H748.168l-72.667 109c-7.761 11.521-20.757 18.999-35.5 19zm-256-128c-70.187 0-128-57.813-128-128V149.334c0-70.187 57.813-128 128-128h768c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H128c-24.07 0-42.667 18.597-42.667 42.667v469.333c0 24.07 18.597 42.667 42.667 42.667h128c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H256zM413.333 588.25c-8.535-.395-16.335-3.239-22.798-7.839l.131.089c-109.517-74.938-124.25-233.083-30.417-326.917s251.979-79.1 326.917 30.417c5.047 6.922 8.074 15.596 8.074 24.978 0 23.567-19.104 42.671-42.671 42.671-14.947 0-28.099-7.685-35.72-19.32l-.1-.162c-45.751-66.862-138.88-75.537-196.167-18.25s-48.612 150.416 18.25 196.167c11.551 7.758 19.051 20.772 19.051 35.537 0 23.567-19.104 42.671-42.671 42.671-.661 0-1.319-.015-1.972-.045l.093.003z'/%3E%3Cglyph unicode='' glyph-name='camera' d='M384 874.667c-14.743-.001-27.739-7.479-35.404-18.848l-.096-.152-72.667-109H128c-70.187 0-128-57.813-128-128V149.334c0-70.187 57.813-128 128-128h768c70.187 0 128 57.813 128 128v469.333c0 70.187-57.813 128-128 128H748.167l-72.667 109c-7.761 11.521-20.757 18.999-35.5 19zm22.833-85.334h210.333l72.667-109c7.761-11.521 20.757-18.999 35.5-19H896c24.07 0 42.667-18.597 42.667-42.667V149.333c0-24.07-18.597-42.667-42.667-42.667H128c-24.07 0-42.667 18.597-42.667 42.667v469.333c0 24.07 18.597 42.667 42.667 42.667h170.667c14.743.001 27.739 7.479 35.404 18.848l.096.152zM512 618.667c-117.315 0-213.333-96.018-213.333-213.333S394.685 192.001 512 192.001s213.333 96.018 213.333 213.333S629.315 618.667 512 618.667zm0-85.334c71.198 0 128-56.802 128-128s-56.802-128-128-128c-71.198 0-128 56.802-128 128s56.802 128 128 128z'/%3E%3Cglyph unicode='' glyph-name='cast' d='M170.667 832c-70.187 0-128-57.813-128-128v-85.333a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032V704c0 24.07 18.597 42.667 42.667 42.667h682.667c24.07 0 42.667-18.597 42.667-42.667V192c0-24.07-18.597-42.667-42.667-42.667h-256c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h255.968c70.187 0 128 57.813 128 128v512c0 70.187-57.813 128-128 128zM85.833 488.583c-.178.003-.388.004-.598.004-23.567 0-42.671-19.104-42.671-42.671 0-21.928 16.54-39.992 37.824-42.399l.195-.018c158.877-17.67 283.913-142.707 301.583-301.583 1.689-22.173 20.095-39.525 42.555-39.525 23.567 0 42.671 19.104 42.671 42.671a43.05 43.05 0 0 1-.506 6.594l.031-.239C444.889 309.477 288.144 466.222 90.084 488.25c-1.23.168-2.699.288-4.188.331l-.062.001zm-.417-172.75c-.177.003-.386.004-.595.004-23.567 0-42.671-19.104-42.671-42.671 0-20.741 14.798-38.026 34.413-41.872l.27-.044c67.163-13.697 119.386-65.92 133.083-133.083 3.527-20.311 21.02-35.559 42.074-35.559 23.567 0 42.671 19.104 42.671 42.671 0 3.509-.423 6.918-1.222 10.181l.061-.292c-20.487 100.456-99.21 179.179-199.667 199.667-2.507.581-5.403.942-8.375.999l-.042.001zm-.083-166.5c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671S61.163 63.995 84.73 63.995c.212 0 .424.002.635.005h-.032c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='check-circle' d='M545.917 917.667c-154.655 12.438-297.623-55.608-390.667-164.5C31.192 607.978-7.322 386.509 118.333 192.834S461.94-55.954 645.083-1.833C828.226 52.288 981.201 217.052 981.333 448v39.25c.003.179.004.391.004.603 0 23.567-19.104 42.671-42.671 42.671s-42.671-19.104-42.671-42.671c0-.212.002-.424.005-.635v.032V448c-.111-193.922-123.8-323.294-275.083-368s-325.502-3.356-431 159.25c-105.498 162.606-72.31 338.567 30.167 458.5S491.117 877.926 668.251 799c5.372-2.62 11.688-4.152 18.361-4.152 23.567 0 42.671 19.104 42.671 42.671 0 17.652-10.719 32.801-26.003 39.293l-.279.105c-52.739 23.499-105.532 36.604-157.083 40.75zm391.916-85.25a42.576 42.576 0 0 1-29.324-12.907l-.01-.01-396.5-396.917-97.833 97.833c-7.778 8.091-18.692 13.118-30.78 13.118-23.567 0-42.671-19.104-42.671-42.671 0-12.088 5.027-23.003 13.104-30.767l.014-.013 128-128c7.721-7.718 18.387-12.492 30.167-12.492s22.445 4.774 30.167 12.492l426.667 427.083c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002z'/%3E%3Cglyph unicode='' glyph-name='check-square' d='M937.833 832.417a42.576 42.576 0 0 1-29.324-12.907L511.999 423l-97.833 97.833c-7.778 8.091-18.692 13.118-30.781 13.118-23.567 0-42.671-19.104-42.671-42.671 0-12.089 5.027-23.003 13.104-30.767l.014-.013 128-128c7.721-7.718 18.387-12.492 30.167-12.492s22.445 4.774 30.167 12.492l426.666 426.666c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zm-724.5 42.25c-70.187 0-128-57.813-128-128V149.334c0-70.187 57.813-128 128-128h597.333c70.187 0 128 57.813 128 128v298.667c.003.179.004.391.004.603 0 23.567-19.104 42.671-42.671 42.671s-42.671-19.104-42.671-42.671c0-.212.002-.424.005-.635v.032-298.667c0-24.07-18.597-42.667-42.667-42.667H213.333c-24.07 0-42.667 18.597-42.667 42.667v597.333c0 24.07 18.597 42.667 42.667 42.667h469.333c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='check' d='M852.5 747.083a42.576 42.576 0 0 1-29.324-12.907L383.999 294.999 200.832 478.166c-7.778 8.091-18.692 13.118-30.781 13.118-23.567 0-42.671-19.104-42.671-42.671 0-12.089 5.027-23.003 13.104-30.767l.014-.013L353.831 204.5c7.721-7.718 18.387-12.492 30.167-12.492s22.445 4.774 30.167 12.492l469.333 469.333c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002z'/%3E%3Cglyph unicode='' glyph-name='chevron-down' d='M255.583 619.083c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l256.009-256.009c7.721-7.718 18.387-12.492 30.167-12.492s22.445 4.774 30.167 12.492l256 256c8.091 7.778 13.118 18.692 13.118 30.781 0 23.567-19.104 42.671-42.671 42.671-12.089 0-23.003-5.027-30.767-13.104l-.013-.014L512 380.334 286.167 606.167c-7.76 7.971-18.594 12.916-30.583 12.917z'/%3E%3Cglyph unicode='' glyph-name='chevron-left' d='M639.167 747.083a42.576 42.576 0 0 1-29.324-12.907l-256.01-256.01c-7.718-7.721-12.492-18.387-12.492-30.167s4.774-22.445 12.492-30.167l256-256c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-225.833 225.833 225.833 225.833c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002z'/%3E%3Cglyph unicode='' glyph-name='chevron-right' d='M383.583 747.083c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L579.665 448 353.832 222.167c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 256 256c7.718 7.721 12.492 18.387 12.492 30.167s-4.774 22.445-12.492 30.167l-256 256c-7.76 7.971-18.594 12.916-30.583 12.917z'/%3E%3Cglyph unicode='' glyph-name='chevron-up' d='M511.333 618.667c-11.538-.19-21.934-4.93-29.5-12.5l-256-256c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 225.833 225.833 225.833-225.833c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-256 256c-7.723 7.726-18.393 12.505-30.18 12.505-.23 0-.459-.002-.688-.005h.035z'/%3E%3Cglyph unicode='' glyph-name='chevrons-down' d='M298.25 448.417c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l213.342-213.342c7.721-7.718 18.387-12.492 30.167-12.492s22.445 4.774 30.167 12.492l213.333 213.333c8.092 7.778 13.118 18.692 13.118 30.781 0 23.567-19.104 42.671-42.671 42.671-12.089 0-23.003-5.027-30.767-13.104l-.013-.014-183.167-183.167-183.167 183.167c-7.76 7.971-18.594 12.916-30.583 12.917zm0 298.666c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L481.832 460.5c7.721-7.718 18.387-12.492 30.167-12.492s22.445 4.774 30.167 12.492l213.333 213.333c8.091 7.778 13.118 18.692 13.118 30.781 0 23.567-19.104 42.671-42.671 42.671-12.089 0-23.003-5.027-30.767-13.104l-.013-.014L511.999 551 328.832 734.167c-7.76 7.971-18.594 12.916-30.583 12.917z'/%3E%3Cglyph unicode='' glyph-name='chevrons-left' d='M468.5 704.417a42.576 42.576 0 0 1-29.324-12.907L225.833 478.167c-7.718-7.721-12.492-18.387-12.492-30.167s4.774-22.445 12.492-30.167L439.166 204.5c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013L316.333 448 499.5 631.167c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zm298.667 0a42.576 42.576 0 0 1-29.324-12.907L524.5 478.167c-7.718-7.721-12.492-18.387-12.492-30.167s4.774-22.445 12.492-30.167L737.833 204.5c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013L615 448l183.167 183.167c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002z'/%3E%3Cglyph unicode='' glyph-name='chevrons-right' d='M554.25 704.417c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L707.666 448 524.499 264.833c-8.092-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 213.333 213.333c7.718 7.721 12.492 18.387 12.492 30.167s-4.774 22.445-12.492 30.167L584.832 691.499c-7.76 7.971-18.594 12.916-30.583 12.917zm-298.667 0c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L408.999 448 225.832 264.833c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 213.333 213.333c7.718 7.721 12.492 18.387 12.492 30.167s-4.774 22.445-12.492 30.167L286.165 691.499c-7.76 7.971-18.594 12.916-30.583 12.917z'/%3E%3Cglyph unicode='' glyph-name='chevrons-up' d='M511.333 746.667c-11.538-.19-21.934-4.93-29.5-12.5L268.499 520.833c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 183.167 183.167 183.167-183.167c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-213.333 213.333c-7.723 7.726-18.393 12.505-30.18 12.505-.23 0-.459-.002-.688-.005h.035zm0-298.667c-11.538-.19-21.934-4.93-29.5-12.5L268.499 222.166c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 183.167 183.167 183.167-183.167c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-213.333 213.333c-7.723 7.726-18.393 12.505-30.18 12.505-.23 0-.459-.002-.688-.005h.035z'/%3E%3Cglyph unicode='' glyph-name='chrome' d='M512 917.333C253.3 917.333 42.667 706.7 42.667 448S253.3-21.333 512-21.333C770.7-21.333 981.333 189.3 981.333 448S770.7 917.333 512 917.333zM512 832c212.583 0 384-171.417 384-384S724.583 64 512 64 128 235.417 128 448s171.417 384 384 384zm0-170.667c-117.315 0-213.333-96.018-213.333-213.333S394.685 234.667 512 234.667 725.333 330.685 725.333 448 629.315 661.333 512 661.333zM512 576c71.198 0 128-56.802 128-128s-56.802-128-128-128c-71.198 0-128 56.802-128 128s56.802 128 128 128zm0 85.333c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H903.25c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm-345.417 83.25c-22.848-.909-41.025-19.651-41.025-42.639 0-8.07 2.24-15.616 6.132-22.052l-.107.191 195.833-338.75c7.515-12.85 21.246-21.345 36.961-21.345 23.568 0 42.674 19.106 42.674 42.674a42.47 42.47 0 0 1-5.827 21.539l.109-.201L205.5 722.833c-7.454 13.096-21.317 21.784-37.21 21.784-.6 0-1.198-.012-1.792-.037l.085.003zm493.667-338.75-.345.001c-15.913 0-29.791-8.711-37.128-21.624l-.11-.211L427.25 45.249c-3.593-6.12-5.715-13.479-5.715-21.333 0-23.568 19.106-42.674 42.674-42.674 15.713 0 29.443 8.493 36.849 21.139l.109.201 195.417 338.75c3.774 6.238 6.007 13.773 6.007 21.83 0 23.45-18.916 42.482-42.323 42.67h-.018z'/%3E%3Cglyph unicode='' glyph-name='circle' d='M512 917.333C253.3 917.333 42.667 706.7 42.667 448S253.3-21.333 512-21.333C770.7-21.333 981.333 189.3 981.333 448S770.7 917.333 512 917.333zM512 832c212.583 0 384-171.417 384-384S724.583 64 512 64 128 235.417 128 448s171.417 384 384 384z'/%3E%3Cglyph unicode='' glyph-name='clipboard' d='M256 832c-70.187 0-128-57.813-128-128V106.667c0-70.187 57.813-128 128-128h512c70.187 0 128 57.813 128 128V704c0 70.187-57.813 128-128 128h-85.333c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H768c24.07 0 42.667-18.597 42.667-42.667V106.667C810.667 82.597 792.07 64 768 64H256c-24.07 0-42.667 18.597-42.667 42.667V704c0 24.07 18.597 42.667 42.667 42.667h85.333c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm128 85.333c-46.537 0-85.333-38.797-85.333-85.333v-85.333c0-46.537 38.797-85.333 85.333-85.333h256c46.537 0 85.333 38.797 85.333 85.333V832c0 46.537-38.797 85.333-85.333 85.333zM384 832h256v-85.333H384z'/%3E%3Cglyph unicode='' glyph-name='clock' d='M512 917.333C253.3 917.333 42.667 706.7 42.667 448S253.3-21.333 512-21.333C770.7-21.333 981.333 189.3 981.333 448S770.7 917.333 512 917.333zM512 832c212.583 0 384-171.417 384-384S724.583 64 512 64 128 235.417 128 448s171.417 384 384 384zm-.667-84.75c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V704 447.997c0-16.609 9.489-31.001 23.341-38.052l.242-.112L663.583 324.5c5.561-2.843 12.131-4.508 19.09-4.508 23.567 0 42.672 19.105 42.672 42.672 0 16.613-9.494 31.009-23.352 38.058l-.242.112-147.083 73.5v229.667c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='cloud-drizzle' d='M340.667 192.583c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V64a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V64v85.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm0 256c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V320a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V320v85.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm341.333-256c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V64a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V64v85.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm0 256c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V320a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V320v85.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zM511.333 107.25c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V64v-85.333a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032V64c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm0 256c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V320v-85.333a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032V320c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-162.416 595c-59.593-5.165-119.173-24.467-173.917-59.917C-43.973 756.533-59.802 438.857 144 276c7.238-5.832 16.545-9.362 26.676-9.362 23.576 0 42.687 19.112 42.687 42.687 0 13.453-6.223 25.452-15.947 33.276l-.083.064c-160.258 128.061-148.104 372.497 24.083 484s400.208 22.623 451.5-176c4.908-18.549 21.541-32 41.315-32h53.768c95.955-.152 151.479-62.202 166.833-135.75 15.359-73.571-10.638-152.733-98.583-191.25-15.785-6.497-26.695-21.758-26.695-39.567 0-23.567 19.104-42.671 42.671-42.671a42.514 42.514 0 0 1 18.447 4.182l-.256-.111c123.574 54.121 170.375 179.259 147.917 286.833s-115.344 203.508-250.25 203.667h-25.084c-60.295 169.035-226.125 268.806-394.083 254.25z'/%3E%3Cglyph unicode='' glyph-name='cloud-lightning' d='M417.917 957.75c-91.891 8.72-187.996-15.169-269.333-78.167C-68.316 711.588-42.285 372.862 197.751 240c5.961-3.363 13.087-5.344 20.677-5.344 23.567 0 42.672 19.105 42.672 42.672 0 15.986-8.79 29.918-21.801 37.228l-.215.111c-189.11 104.674-209.132 365.064-38.25 497.417s418.028 47.861 472.083-161.417c4.908-18.549 21.541-32 41.315-32h53.856-.002c108.186.109 161.729-72.441 169.917-153.5S908.193 302.279 802.17 280.75c-19.643-4.096-34.188-21.266-34.188-41.833 0-23.576 19.112-42.688 42.688-42.688 3.009 0 5.945.311 8.777.903l-.277-.049c146.249 29.697 215.609 159.267 203.75 276.667-11.861 117.4-105.769 230.4-255.002 230.25h-25.167c-52.283 146.48-182.327 240.226-324.833 253.75zm135.916-423.917c-14.509-.412-27.159-8.006-34.567-19.337l-.1-.163-170.667-256c-4.487-6.65-7.162-14.844-7.162-23.662 0-23.563 19.099-42.666 42.661-42.671h176.25L433.831 2.333c-4.72-6.768-7.542-15.166-7.542-24.223 0-23.567 19.104-42.671 42.671-42.671 14.98 0 28.157 7.719 35.77 19.396l.1.164 170.667 256c4.487 6.65 7.162 14.844 7.162 23.662 0 23.563-19.099 42.666-42.661 42.671h-176.25l126.417 189.667c4.701 6.759 7.511 15.141 7.511 24.179 0 23.567-19.104 42.671-42.671 42.671-.413 0-.824-.006-1.234-.017l.06.001z'/%3E%3Cglyph unicode='' glyph-name='cloud-off' d='M412.917 832.083c-.147.002-.321.003-.496.003-23.567 0-42.671-19.104-42.671-42.671 0-22.597 17.566-41.092 39.787-42.575l.129-.007c126.566-11.18 231.978-100.849 263.25-224 4.847-18.625 21.508-32.155 41.332-32.167h53.839-.002c123.834.145 205.629-123.221 157.333-237.25-2.323-5.097-3.677-11.054-3.677-17.328 0-23.567 19.104-42.671 42.671-42.671 17.83 0 33.105 10.935 39.486 26.465l.103.284c70.944 167.508-54.173 356.049-236.085 355.833h-26.083c-49.849 140.365-174.195 242.542-324.667 255.833-1.26.146-2.735.236-4.23.25h-.02zm-201.167-42.5c-7.07-.36-13.596-2.387-19.288-5.693l.204.109c-172.215-95.224-226.677-279.337-185.167-435s180.404-288.171 377.167-285H768.087h-.002a255.764 255.764 0 0 1 87 15.333c16.552 6.124 28.136 21.772 28.136 40.125 0 23.571-19.108 42.679-42.679 42.679a42.581 42.581 0 0 1-14.838-2.65l.295.096a170.98 170.98 0 0 0-58.083-10.25H383.999l-.333.001-.351-.001h.018c-158.71-2.557-260.68 98.905-293.417 221.667s5.173 261.525 144.083 338.333c13.526 7.337 22.556 21.43 22.556 37.633 0 23.567-19.104 42.671-42.671 42.671-.751 0-1.498-.019-2.239-.058l.104.004zM42.25 960.417c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L951.166-51.5c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013L72.833 947.5c-7.76 7.971-18.594 12.916-30.583 12.917z'/%3E%3Cglyph unicode='' glyph-name='cloud-rain' d='M682 448.583c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V64a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V64v341.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-341.333 0c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V64a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V64v341.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm170.666-85.333c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V320-21.333a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032V320c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-162.416 595c-59.593-5.165-119.173-24.467-173.917-59.917C-43.973 756.533-59.802 438.857 144 276c7.238-5.832 16.545-9.362 26.676-9.362 23.576 0 42.687 19.112 42.687 42.687 0 13.453-6.223 25.452-15.947 33.276l-.083.064c-160.258 128.061-148.104 372.497 24.083 484s400.208 22.623 451.5-176c4.908-18.549 21.541-32 41.315-32h53.768c95.955-.152 151.479-62.202 166.833-135.75 15.359-73.571-10.638-152.733-98.583-191.25-15.785-6.497-26.695-21.758-26.695-39.567 0-23.567 19.104-42.671 42.671-42.671a42.514 42.514 0 0 1 18.447 4.182l-.256-.111c123.574 54.121 170.375 179.259 147.917 286.833s-115.344 203.508-250.25 203.667h-25.084c-60.295 169.035-226.125 268.806-394.083 254.25z'/%3E%3Cglyph unicode='' glyph-name='cloud-snow' d='M348.917 915.583c-59.593-5.165-119.173-24.467-173.917-59.917-218.973-141.8-234.802-459.476-31-622.333 7.238-5.832 16.545-9.362 26.676-9.362 23.576 0 42.687 19.112 42.687 42.687 0 13.453-6.223 25.452-15.947 33.276l-.083.064c-160.258 128.061-148.104 372.497 24.083 484s400.208 22.623 451.5-176c4.908-18.549 21.541-32 41.315-32h53.768c95.955-.152 151.479-62.202 166.833-135.75 15.359-73.571-10.638-152.733-98.583-191.25-15.785-6.497-26.695-21.758-26.695-39.567 0-23.567 19.104-42.671 42.671-42.671a42.514 42.514 0 0 1 18.447 4.182l-.256-.111c123.574 54.121 170.375 179.259 147.917 286.833s-115.344 203.508-250.25 203.667h-25.084c-60.295 169.035-226.125 268.806-394.083 254.25zM341.333 320c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h-.032c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm0-170.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h-.032c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zM512 234.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H512c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H512zM512 64c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H512c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H512zm170.667 256c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h-.032c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm0-170.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h-.032c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='cloud' d='M358.083 829.833c-103.324-5.935-205.361-52.984-278-146.833C-113.621 432.736 67.513 63.764 384 64h384c140.88 0 256 115.121 256 256S908.88 576 768 576h-25.833c-60.515 169.615-222.445 263.118-384.083 253.833zm6.667-81.916c133.536 8.485 268.932-73.294 308.167-225.25 4.908-18.549 21.541-32 41.315-32H768c94.762 0 170.667-75.905 170.667-170.667S862.762 149.333 768 149.333H384c-251.103-.187-390.101 282.941-236.417 481.5 57.632 74.46 137.045 111.992 217.167 117.083z'/%3E%3Cglyph unicode='' glyph-name='code' d='M682.25 747.083c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L878.332 448 652.499 222.167c-8.092-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 256 256c7.718 7.721 12.492 18.387 12.492 30.167s-4.774 22.445-12.492 30.167l-256 256c-7.76 7.971-18.594 12.916-30.583 12.917zm-341.75 0a42.576 42.576 0 0 1-29.324-12.907l-256.01-256.01c-7.718-7.721-12.492-18.387-12.492-30.167s4.774-22.445 12.492-30.167l256-256c7.778-8.091 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-225.833 225.833L371.5 673.831c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002z'/%3E%3Cglyph unicode='' glyph-name='codepen' d='M511 917.333c-8.301-.213-15.966-2.764-22.41-7.016l.16.099L62.083 633.083c-11.752-7.722-19.407-20.841-19.417-35.748V298.666c.01-14.909 7.665-28.028 19.256-35.651l.161-.099L488.75-14.417c6.56-4.319 14.605-6.89 23.25-6.89s16.69 2.571 23.411 6.99l-.161-.099 426.667 277.333c11.752 7.722 19.407 20.841 19.417 35.748v298.669c-.01 14.909-7.665 28.028-19.256 35.651l-.161.099L535.25 910.417c-6.573 4.342-14.638 6.927-23.306 6.927-.332 0-.663-.004-.993-.011l.049.001zm1-93.5 384-249.667V321.833L512 72.25 128 321.833v252.333zm-.667-481.916c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V21.334a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 277.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zM85.917 640.333c-.312.008-.68.013-1.049.013-23.567 0-42.671-19.104-42.671-42.671 0-14.59 7.323-27.47 18.493-35.165l.144-.094 426.667-298.667c6.825-4.838 15.325-7.734 24.5-7.734s17.675 2.896 24.633 7.824l-.133-.089 426.667 298.667c11.599 7.751 19.134 20.792 19.134 35.592 0 23.567-19.104 42.671-42.671 42.671a42.488 42.488 0 0 1-25.574-8.509l.111.079-402.167-281.5-402.167 281.5c-6.64 4.85-14.906 7.845-23.86 8.082l-.056.001zm426.5-.333-.392.002a42.478 42.478 0 0 1-24.657-7.841l.132.089L60.833 333.583c-11.599-7.751-19.135-20.792-19.135-35.593 0-23.567 19.104-42.671 42.671-42.671a42.482 42.482 0 0 1 25.574 8.51l-.111-.079 402.167 281.5 402.167-281.5c7.016-5.265 15.87-8.43 25.464-8.43 23.567 0 42.671 19.104 42.671 42.671 0 14.801-7.536 27.842-18.98 35.495l-.155.097L536.499 632.25c-6.713 4.766-15.052 7.653-24.06 7.75h-.024zm-1.084 277.917c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-277.333a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 277.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='command' d='M256 874.667c-93.751 0-170.667-76.915-170.667-170.667S162.248 533.333 256 533.333h85.333V362.666H256c-93.751 0-170.667-76.915-170.667-170.667S162.248 21.332 256 21.332c93.751 0 170.667 76.915 170.667 170.667v85.333h170.667v-85.333c0-93.751 76.915-170.667 170.667-170.667s170.667 76.915 170.667 170.667c0 93.751-76.915 170.667-170.667 170.667h-85.333v170.667h85.333c93.751 0 170.667 76.915 170.667 170.667s-76.915 170.667-170.667 170.667c-93.751 0-170.667-76.915-170.667-170.667v-85.333H426.667V704c0 93.751-76.915 170.667-170.667 170.667zm0-85.334c47.634 0 85.333-37.7 85.333-85.333v-85.333H256c-47.634 0-85.333 37.7-85.333 85.333s37.7 85.333 85.333 85.333zm512 0c47.634 0 85.333-37.7 85.333-85.333s-37.7-85.333-85.333-85.333h-85.333V704c0 47.634 37.7 85.333 85.333 85.333zm-341.333-256h170.667V362.666H426.667zM256 277.333h85.333V192c0-47.634-37.7-85.333-85.333-85.333s-85.333 37.7-85.333 85.333c0 47.634 37.7 85.333 85.333 85.333zm426.667 0H768c47.634 0 85.333-37.7 85.333-85.333s-37.7-85.333-85.333-85.333c-47.634 0-85.333 37.7-85.333 85.333z'/%3E%3Cglyph unicode='' glyph-name='compass' d='M512 917.333C253.3 917.333 42.667 706.7 42.667 448S253.3-21.333 512-21.333C770.7-21.333 981.333 189.3 981.333 448S770.7 917.333 512 917.333zM512 832c212.583 0 384-171.417 384-384S724.583 64 512 64 128 235.417 128 448s171.417 384 384 384zm180.583-160.417a42.632 42.632 0 0 1-13.467-2.255l.301.089-271.333-90.5c-12.778-4.346-22.654-14.222-26.911-26.7l-.089-.3-90.5-271.333c-1.396-4.037-2.202-8.69-2.202-13.531 0-23.567 19.104-42.671 42.671-42.671 4.841 0 9.494.806 13.832 2.292l-.3-.089 271.333 90.5c12.778 4.346 22.654 14.222 26.911 26.7l.089.3 90.5 271.333c1.389 4.028 2.191 8.669 2.191 13.497 0 23.567-19.104 42.671-42.671 42.671l-.372-.002h.019zm-67.166-110.166L568.75 391.25l-170.167-56.667L455.25 504.75z'/%3E%3Cglyph unicode='' glyph-name='copy' d='M469.333 618.667c-70.174 0-128-57.826-128-128v-384c0-70.174 57.826-128 128-128h384c70.174 0 128 57.826 128 128v384c0 70.174-57.826 128-128 128zm0-85.334h384c24.375 0 42.667-18.291 42.667-42.667v-384c0-24.375-18.291-42.667-42.667-42.667h-384c-24.375 0-42.667 18.291-42.667 42.667v384c0 24.375 18.291 42.667 42.667 42.667zm-298.666 384c-70.187 0-128-57.813-128-128v-384c0-70.187 57.813-128 128-128h42.667c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h-42.635c-24.07 0-42.667 18.597-42.667 42.667v384c0 24.07 18.597 42.667 42.667 42.667h384c24.07 0 42.667-18.597 42.667-42.667v-42.667a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 42.667c0 70.187-57.813 128-128 128z'/%3E%3Cglyph unicode='' glyph-name='corner-down-left' d='M383.167 576.417a42.576 42.576 0 0 1-29.324-12.907L140.5 350.167c-7.718-7.721-12.492-18.387-12.492-30.167s4.774-22.445 12.492-30.167L353.833 76.5c7.778-8.091 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013L231 320l183.167 183.167c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zm469.5 256.166c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-298.667c0-71.198-56.802-128-128-128h-512c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h511.968C799.982 277.333 896 373.351 896 490.666v298.667c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='corner-down-right' d='M639.583 576.417c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L792.999 320 609.832 136.833c-8.092-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 213.333 213.333c7.718 7.721 12.492 18.387 12.492 30.167s-4.774 22.445-12.492 30.167L670.165 563.499c-7.76 7.971-18.594 12.916-30.583 12.917zM170 832.583c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-298.667c0-117.315 96.018-213.333 213.333-213.333h512c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H341.333c-71.198 0-128 56.802-128 128v298.667c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='corner-left-down' d='M170.25 363.083c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L353.832 76.5c7.721-7.718 18.387-12.492 30.167-12.492s22.445 4.774 30.167 12.492l213.333 213.333c8.092 7.778 13.118 18.692 13.118 30.781 0 23.567-19.104 42.671-42.671 42.671-12.089 0-23.003-5.027-30.767-13.104l-.013-.014L383.999 167 200.832 350.167c-7.76 7.971-18.594 12.916-30.583 12.917zM554.667 832c-117.315 0-213.333-96.018-213.333-213.333v-512a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 512c0 71.198 56.802 128 128 128h298.667c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='corner-left-up' d='M383.333 832c-11.538-.19-21.934-4.93-29.5-12.5L140.499 606.166c-8.091-7.778-13.118-18.692-13.118-30.78 0-23.567 19.104-42.671 42.671-42.671 12.088 0 23.003 5.027 30.767 13.104l.013.014L383.999 729l183.167-183.167c7.778-8.091 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-213.333 213.333c-7.723 7.726-18.393 12.505-30.18 12.505-.23 0-.459-.002-.688-.005h.035zm0 .583c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-512C341.333 160.018 437.351 64 554.666 64h298.667c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H554.666c-71.198 0-128 56.802-128 128v512c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='corner-right-down' d='M426.25 363.083c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L609.832 76.5c7.721-7.718 18.387-12.492 30.167-12.492s22.445 4.774 30.167 12.492l213.333 213.333c8.092 7.778 13.118 18.692 13.118 30.781 0 23.567-19.104 42.671-42.671 42.671-12.089 0-23.003-5.027-30.767-13.104l-.013-.014L639.999 167 456.832 350.167c-7.76 7.971-18.594 12.916-30.583 12.917zM170.667 832c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h298.635c71.198 0 128-56.802 128-128v-512a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 512C682.667 735.982 586.649 832 469.334 832z'/%3E%3Cglyph unicode='' glyph-name='corner-right-up' d='M639.333 832c-11.538-.19-21.934-4.93-29.5-12.5L396.499 606.166c-8.091-7.778-13.118-18.692-13.118-30.78 0-23.567 19.104-42.671 42.671-42.671 12.088 0 23.003 5.027 30.767 13.104l.013.014L639.999 729l183.167-183.167c7.778-8.091 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-213.333 213.333c-7.723 7.726-18.393 12.505-30.18 12.505-.23 0-.459-.002-.688-.005h.035zm0 .583c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-512c0-71.198-56.802-128-128-128H170.666c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h298.635c117.315 0 213.333 96.018 213.333 213.333v512c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='corner-up-left' d='M383.167 832.417a42.576 42.576 0 0 1-29.324-12.907L140.5 606.167c-7.718-7.721-12.492-18.387-12.492-30.167s4.774-22.445 12.492-30.167L353.833 332.5c7.778-8.091 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013L231 576l183.167 183.167c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zm-212.5-213.75c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h511.968c71.198 0 128-56.802 128-128V106.667a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 298.667c0 117.315-96.018 213.333-213.333 213.333z'/%3E%3Cglyph unicode='' glyph-name='corner-up-right' d='M639.583 832.417c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L792.999 576 609.832 392.833c-8.092-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 213.333 213.333c7.718 7.721 12.492 18.387 12.492 30.167s-4.774 22.445-12.492 30.167L670.165 819.499c-7.76 7.971-18.594 12.916-30.583 12.917zm-298.25-213.75C224.018 618.667 128 522.649 128 405.334V106.667a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 298.667c0 71.198 56.802 128 128 128h512c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='cpu' d='M256 832c-70.174 0-128-57.826-128-128V192c0-70.174 57.826-128 128-128h512c70.174 0 128 57.826 128 128v512c0 70.174-57.826 128-128 128zm0-85.333h512c24.375 0 42.667-18.291 42.667-42.667V192c0-24.375-18.291-42.667-42.667-42.667H256c-24.375 0-42.667 18.291-42.667 42.667v512c0 24.375 18.291 42.667 42.667 42.667zm128-128c-23.563-.002-42.664-19.103-42.667-42.666v-256c.002-23.563 19.103-42.664 42.666-42.667h256c23.563.002 42.664 19.103 42.667 42.666v256c-.002 23.563-19.103 42.664-42.666 42.667zm42.667-85.334h170.667V362.666H426.667zm-43.334 427.25c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-128a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 128c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm256 0c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-128a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 128c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-256-810.666c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-128a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 128c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm256 0c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-128a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 128c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm214 468.75c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h127.968c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm0-213.334c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h127.968c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zM42.667 618.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h127.968c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm0-213.334c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h127.968c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='credit-card' d='M128 832C57.826 832 0 774.174 0 704V192C0 121.826 57.826 64 128 64h768c70.174 0 128 57.826 128 128v512c0 70.174-57.826 128-128 128zm0-85.333h768c24.375 0 42.667-18.291 42.667-42.667V192c0-24.375-18.291-42.667-42.667-42.667H128c-24.375 0-42.667 18.291-42.667 42.667v512c0 24.375 18.291 42.667 42.667 42.667zM42.667 576c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h938.635c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='crop' d='M261.25 960.583c-23.421-.191-42.334-19.222-42.334-42.67l.001-.26v.013l-5.583-640V277.323v.009c0-70.187 57.813-128 128-128h640c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H341.334c-24.07 0-42.667 18.597-42.667 42.667l5.583 639.667c.006.272.01.592.01.914 0 23.567-19.104 42.671-42.671 42.671l-.357-.001h.018zm421.083-213.916-640-5.583h-.17c-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.294 0 .587.003.88.009l-.044-.001 639.667 5.583c24.07 0 42.667-18.597 42.667-42.667v-640a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 640c0 70.187-57.813 128-128 128H682.325h.009z'/%3E%3Cglyph unicode='' glyph-name='crosshair' d='M512 917.333C253.3 917.333 42.667 706.7 42.667 448S253.3-21.333 512-21.333C770.7-21.333 981.333 189.3 981.333 448S770.7 917.333 512 917.333zM512 832c212.583 0 384-171.417 384-384S724.583 64 512 64 128 235.417 128 448s171.417 384 384 384zm256-341.333c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h170.635c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm-682.667 0c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H256c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H256zm426 427.25c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V704a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V704v170.667c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm0-682.667c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V192 21.333a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032V192c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='database' d='M512 917.333c-109.882 0-209.333-14.444-285-39.667-37.833-12.611-69.883-27.676-95.25-47.667s-46.417-48.366-46.417-83.333 21.05-63.342 46.417-83.333 57.417-35.056 95.25-47.667c75.667-25.222 175.118-39.667 285-39.667s209.333 14.444 285 39.667c37.833 12.611 69.883 27.676 95.25 47.667s46.417 48.366 46.417 83.333-21.05 63.342-46.417 83.333-57.417 35.056-95.25 47.667c-75.667 25.222-175.118 39.667-285 39.667zM512 832c102.196 0 194.686-14.229 258-35.333 31.657-10.552 55.92-23.03 69.417-33.667s13.917-15.954 13.917-16.333c0-.379-.422-5.697-13.917-16.333S801.657 707.22 770 696.667c-63.314-21.105-155.804-35.333-258-35.333s-194.686 14.229-258 35.333c-31.657 10.552-55.92 23.03-69.417 33.667s-13.917 15.954-13.917 16.333c0 .379.42 5.697 13.917 16.333s37.76 23.114 69.417 33.667C317.314 817.772 409.804 832 512 832zM127.333 491.25c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V448c0-34.842 20.883-63.298 46.167-83.333s57.225-35.056 95-47.667c75.55-25.222 175.022-39.667 285.5-39.667S721.95 291.778 797.5 317c37.775 12.611 69.716 27.631 95 47.667s46.167 48.491 46.167 83.333c.003.179.004.391.004.603 0 23.567-19.104 42.671-42.671 42.671s-42.671-19.104-42.671-42.671c0-.212.002-.424.005-.635V448c0-.571-.451-5.812-13.833-16.417s-37.442-23.131-69-33.667c-63.117-21.071-155.645-35.25-258.5-35.25s-195.383 14.179-258.5 35.25c-31.558 10.536-55.617 23.062-69 33.667S170.668 447.428 170.668 448c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm0 298.667c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-597.333c0-34.842 20.883-63.298 46.167-83.333s57.225-35.056 95-47.667C302.05-6.888 401.522-21.333 512-21.333S721.95-6.888 797.5 18.334c37.775 12.611 69.716 27.631 95 47.667s46.167 48.491 46.167 83.333v597.333c.003.179.004.391.004.603 0 23.567-19.104 42.671-42.671 42.671s-42.671-19.104-42.671-42.671c0-.212.002-.424.005-.635v.032-597.333c0-.571-.451-5.812-13.833-16.417s-37.442-23.131-69-33.667C707.384 78.179 614.856 64 512.001 64s-195.383 14.179-258.5 35.25c-31.558 10.536-55.617 23.062-69 33.667s-13.833 15.845-13.833 16.417v597.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='delete' d='M341.333 832c-12.773-.012-24.23-5.634-32.042-14.535L10.582 476.084C4.033 468.622.038 458.778.038 448.001s3.995-20.621 10.586-28.132L309.249 78.584c7.854-8.949 19.311-14.571 32.081-14.583h554.669c70.187 0 128 57.813 128 128v512c0 70.187-57.813 128-128 128zm19.334-85.333H896c24.07 0 42.667-18.597 42.667-42.667V192c0-24.07-18.597-42.667-42.667-42.667H360.667L99.334 448zm406.5-127.584a42.576 42.576 0 0 1-29.324-12.907l-256.01-256.01c-8.092-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 256 256c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zm-255.584 0c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l256.009-256.009c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-256 256c-7.76 7.971-18.594 12.916-30.583 12.917z'/%3E%3Cglyph unicode='' glyph-name='disc' d='M512 917.333C253.3 917.333 42.667 706.7 42.667 448S253.3-21.333 512-21.333C770.7-21.333 981.333 189.3 981.333 448S770.7 917.333 512 917.333zM512 832c212.583 0 384-171.417 384-384S724.583 64 512 64 128 235.417 128 448s171.417 384 384 384zm0-213.333c-93.751 0-170.667-76.915-170.667-170.667S418.248 277.333 512 277.333c93.751 0 170.667 76.915 170.667 170.667S605.752 618.667 512 618.667zm0-85.334c47.634 0 85.333-37.7 85.333-85.333s-37.7-85.333-85.333-85.333c-47.634 0-85.333 37.7-85.333 85.333s37.7 85.333 85.333 85.333z'/%3E%3Cglyph unicode='' glyph-name='dollar-sign' d='M511.333 960.583c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-938.667a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 938.667c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-106-171.25c-60.444 0-111.208-24.203-143.917-61s-48.083-84.185-48.083-131 15.375-94.203 48.083-131 83.472-61 143.917-61h213.333c39.111 0 63.014-13.13 80.083-32.333s26.583-46.481 26.583-74.333c0-27.852-9.514-55.13-26.583-74.333s-40.972-32.333-80.083-32.333H255.999c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h362.635c60.444 0 111.208 24.203 143.917 61s48.083 84.185 48.083 131-15.375 94.203-48.083 131-83.472 61-143.917 61H405.333c-39.111 0-63.014 13.13-80.083 32.333s-26.583 46.481-26.583 74.333c0 27.852 9.514 55.13 26.583 74.333S366.222 704 405.333 704h320c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='download-cloud' d='M340.917 277.75c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L481.833 33.833c7.721-7.718 18.387-12.492 30.167-12.492s22.445 4.774 30.167 12.492l170.666 170.666c8.092 7.778 13.118 18.692 13.118 30.781 0 23.567-19.104 42.671-42.671 42.671-12.089 0-23.003-5.027-30.767-13.104l-.013-.014-140.5-140.5-140.5 140.5c-7.76 7.971-18.594 12.916-30.583 12.917zm170.416 213.5c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V448 64a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V64v384c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zM373.5 874.917c-57.185-1.313-115.177-15.501-169.833-44.5C-14.96 714.421-67.932 422.01 96.084 236.667c7.882-9.415 19.64-15.36 32.786-15.36 23.567 0 42.671 19.104 42.671 42.671 0 11.342-4.425 21.65-11.642 29.293l.019-.021C31.168 438.742 72.049 663.944 243.668 755s380.963-1.4 429.25-189.583c4.878-18.59 21.53-32.082 41.333-32.083h53.75c85.916.067 141.818-52.754 162.833-119.083s5.779-141.746-64.5-191.167c-11.027-7.822-18.137-20.539-18.137-34.917 0-23.571 19.108-42.679 42.679-42.679a42.489 42.489 0 0 1 24.674 7.851l-.132-.089c100.216 70.472 127.775 189.092 96.833 286.75s-121.736 178.763-244.25 178.667h-29.25c-57.621 158.595-205.49 259.917-365.25 256.25z'/%3E%3Cglyph unicode='' glyph-name='download' d='M127.333 363.25c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V320 149.333c0-70.187 57.813-128 128-128h597.333c70.187 0 128 57.813 128 128V320c.003.179.004.391.004.603 0 23.567-19.104 42.671-42.671 42.671s-42.671-19.104-42.671-42.671c0-.212.002-.424.005-.635V320 149.333c0-24.07-18.597-42.667-42.667-42.667H213.333c-24.07 0-42.667 18.597-42.667 42.667V320c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zM298.25 576.417c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l213.342-213.342c7.721-7.718 18.387-12.492 30.167-12.492s22.445 4.774 30.167 12.492l213.333 213.333c8.091 7.778 13.118 18.692 13.118 30.781 0 23.567-19.104 42.671-42.671 42.671-12.089 0-23.003-5.027-30.767-13.104l-.013-.014-183.167-183.167-183.167 183.167c-7.76 7.971-18.594 12.916-30.583 12.917zM511.333 875.25c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V832 320a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V320v512c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='droplet' d='M511.333 887.917c-11.549-.214-21.945-4.983-29.498-12.581l-.002-.002L240.75 633.917c-119.739-119.661-138.476-285.33-83.333-418.5S342.987-21.666 512.25-21.666c169.264 0 299.608 103.913 354.75 237.083s36.406 298.839-83.333 418.5l-241.5 241.5c-7.723 7.726-18.393 12.505-30.18 12.505-.23 0-.459-.002-.688-.005h.035zm.667-103 211.333-211.333c95.412-95.35 108.085-221.045 64.833-325.5S647.119 63.667 512.249 63.667c-134.87 0-232.748 79.962-276 184.417s-30.579 230.15 64.833 325.5h.086-.002z'/%3E%3Cglyph unicode='' glyph-name='edit-2' d='M682 874.667c-11.538-.19-21.934-4.93-29.5-12.5L97.833 307.5c-7.721-7.72-12.498-18.385-12.5-30.166V64.001c.002-23.563 19.103-42.664 42.666-42.667h213.334c11.781.002 22.446 4.779 30.167 12.5l554.667 554.667c7.718 7.721 12.492 18.387 12.492 30.167s-4.774 22.445-12.492 30.167L712.834 862.168c-7.723 7.726-18.393 12.505-30.18 12.505-.23 0-.459-.002-.688-.005h.035zm.667-103 153-153-512-512h-153v153z'/%3E%3Cglyph unicode='' glyph-name='edit-3' d='M596.667 917.333c-11.538-.19-21.934-4.93-29.5-12.5L97.833 435.499c-7.721-7.72-12.498-18.385-12.5-30.166V234.666c.002-23.563 19.103-42.664 42.666-42.667h170.667c11.781.002 22.446 4.779 30.167 12.5l469.333 469.333c7.718 7.721 12.492 18.387 12.492 30.167s-4.774 22.445-12.492 30.167L627.499 904.833c-7.723 7.726-18.393 12.505-30.18 12.505-.23 0-.459-.002-.688-.005h.035zm.666-103L707.666 704 280.999 277.333H170.666v110.333zM128 64c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H896c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H896z'/%3E%3Cglyph unicode='' glyph-name='edit' d='M170.667 832c-70.187 0-128-57.813-128-128V106.667c0-70.187 57.813-128 128-128H768c70.187 0 128 57.813 128 128V334.5c.003.179.004.391.004.603 0 23.567-19.104 42.671-42.671 42.671s-42.671-19.104-42.671-42.671c0-.212.002-.424.005-.635v.032-227.833C810.667 82.597 792.07 64 768 64H170.667C146.597 64 128 82.597 128 106.667V704c0 24.07 18.597 42.667 42.667 42.667H398.5c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm596.666 85.333c-11.538-.19-21.934-4.93-29.5-12.5L311.166 478.166c-7.721-7.72-12.498-18.385-12.5-30.166V277.333c.002-23.563 19.103-42.664 42.666-42.667h170.667c11.781.002 22.446 4.779 30.167 12.5l426.667 426.667c7.718 7.721 12.492 18.387 12.492 30.167s-4.774 22.445-12.492 30.167L798.166 904.834c-7.723 7.726-18.393 12.505-30.18 12.505-.23 0-.459-.002-.688-.005h.035zm.667-103L878.333 704l-384-384H384v110.333z'/%3E%3Cglyph unicode='' glyph-name='external-link' d='M213.333 746.667c-70.187 0-128-57.813-128-128V149.334c0-70.187 57.813-128 128-128h469.333c70.187 0 128 57.813 128 128v256c.003.179.004.391.004.603 0 23.567-19.104 42.671-42.671 42.671s-42.671-19.104-42.671-42.671c0-.212.002-.424.005-.635v.032-256c0-24.07-18.597-42.667-42.667-42.667H213.333c-24.07 0-42.667 18.597-42.667 42.667v469.333c0 24.07 18.597 42.667 42.667 42.667h256c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm426.667 128c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h213.301V576.001a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 256c-.002 23.563-19.103 42.664-42.666 42.667zm255.167.416a42.576 42.576 0 0 1-29.324-12.907L396.5 392.833c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 469.333 469.333c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002z'/%3E%3Cglyph unicode='' glyph-name='eye-off' d='M512 832c-33.442.072-66.771-3.711-99.333-11.333-19.479-4.218-33.859-21.305-33.859-41.751 0-23.567 19.104-42.671 42.671-42.671 3.768 0 7.422.488 10.902 1.405l-.297-.067c26.149 6.121 52.978 9.146 79.833 9.083h.086-.002c250.657 0 399.768-266.422 417.667-299.25-21.828-37.737-45.078-74.702-73.167-108.083-6.224-7.367-10.007-16.971-10.007-27.458 0-23.568 19.106-42.674 42.674-42.674 13.081 0 24.787 5.885 32.615 15.152l.052.063a832.433 832.433 0 0 1 97.167 143.5c3.157 5.81 5.013 12.722 5.013 20.067a42.493 42.493 0 0 1-4.625 19.341l.112-.242S843.204 831.935 512.085 831.999zm-252.833-87.5h-.075a42.49 42.49 0 0 1-26.513-9.234l.088.067A829.791 829.791 0 0 1 5.084 468.166c-3.197-5.84-5.078-12.794-5.078-20.188 0-6.948 1.66-13.508 4.606-19.305l-.112.243S180.825 63.999 512 63.999l.333-.001.351.001h-.018c100.795 1.648 198.494 35.555 278.667 96.667 10.702 7.849 17.572 20.376 17.572 34.508 0 23.567-19.104 42.671-42.671 42.671a42.49 42.49 0 0 1-26.733-9.41l.082.064c-65.604-50.007-145.445-77.661-227.917-79.083-250.408.266-399.395 266.186-417.334 299.083 49.031 84.406 112.372 159.659 190.083 219 10.56 7.859 17.327 20.304 17.327 34.329 0 23.533-19.051 42.617-42.572 42.671h-.005zm163.083-163-.256.001c-11.449 0-21.846-4.509-29.509-11.849l.015.015c-40.227-37.484-58.862-85.606-56.833-130.417s22.555-85.139 52.5-115.083c29.945-29.945 70.273-50.472 115.083-52.5s92.932 16.606 130.417 56.833c7.512 7.685 12.148 18.21 12.148 29.818 0 23.567-19.104 42.671-42.671 42.671-12.665 0-24.041-5.518-31.856-14.28l-.037-.042c-22.779-24.446-43.547-30.683-64.167-29.75s-42.199 11.199-58.583 27.583c-16.385 16.385-26.65 37.964-27.583 58.583s5.304 41.388 29.75 64.167c8.599 7.835 13.974 19.08 13.974 31.58 0 23.468-18.945 42.511-42.376 42.67h-.015zm-380 378.917c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L951.166-51.5c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013L72.833 947.5c-7.76 7.971-18.594 12.916-30.583 12.917z'/%3E%3Cglyph unicode='' glyph-name='eye' d='M512 832C180.825 832 4.5 467.083 4.5 467.083 1.659 461.523-.005 454.956-.005 448s1.665-13.524 4.617-19.326l-.112.242S180.825 63.999 512 63.999s507.5 364.917 507.5 364.917c2.841 5.56 4.505 12.127 4.505 19.083s-1.665 13.524-4.617 19.326l.112-.242S843.175 832 512 832zm0-85.333c250.171 0 398.834-264.942 417.25-298.667C910.834 414.276 762.171 149.333 512 149.333S113.166 414.275 94.75 448C113.166 481.724 261.829 746.667 512 746.667zm0-128c-93.751 0-170.667-76.915-170.667-170.667S418.248 277.333 512 277.333c93.751 0 170.667 76.915 170.667 170.667S605.752 618.667 512 618.667zm0-85.334c47.634 0 85.333-37.7 85.333-85.333s-37.7-85.333-85.333-85.333c-47.634 0-85.333 37.7-85.333 85.333s37.7 85.333 85.333 85.333z'/%3E%3Cglyph unicode='' glyph-name='facebook' d='M640 917.333c-140.88 0-256-115.12-256-256V576h-85.333c-23.563-.002-42.664-19.103-42.667-42.666V362.667c.002-23.563 19.103-42.664 42.666-42.667H384V21.333c.002-23.563 19.103-42.664 42.666-42.667h170.667c23.563.002 42.664 19.103 42.667 42.666v298.667h85.35c19.895 0 36.61 13.616 41.335 32.038l.064.296L809.416 523c.806 3.101 1.269 6.661 1.269 10.329 0 23.567-19.104 42.671-42.671 42.671H639.999v85.333h128c23.563.002 42.664 19.103 42.667 42.666v170.667c-.002 23.563-19.103 42.664-42.666 42.667zM640 832h85.333v-85.333H640c-46.623 0-85.333-38.71-85.333-85.333v-128c.002-23.563 19.103-42.664 42.666-42.667h116L692 405.334h-94.667c-23.563-.002-42.664-19.103-42.667-42.666V64.001h-85.333v298.667c-.002 23.563-19.103 42.664-42.666 42.667h-85.334v85.333h85.333c23.563.002 42.664 19.103 42.667 42.666v128c0 94.762 75.905 170.667 170.667 170.667z'/%3E%3Cglyph unicode='' glyph-name='fast-forward' d='M553 789.333c-22.836-.923-41-19.659-41-42.638v-.03.002-597.333c.024-23.548 19.12-42.628 42.671-42.628a42.492 42.492 0 0 1 26.257 9.032l-.094-.071 384 298.667c10.053 7.882 16.453 20.027 16.453 33.667s-6.4 25.785-16.36 33.597l-.093.07-384 298.667c-7.162 5.63-16.309 9.029-26.25 9.029-.557 0-1.111-.011-1.663-.032l.08.002zM597.333 659.5 869.25 448 597.333 236.5zM83.667 789.333c-22.836-.923-41-19.659-41-42.638v-.03.002-597.333c.024-23.548 19.12-42.628 42.671-42.628a42.492 42.492 0 0 1 26.257 9.032l-.094-.071 384 298.667c10.053 7.882 16.453 20.027 16.453 33.667s-6.4 25.785-16.36 33.597l-.093.07-384 298.667c-7.162 5.63-16.309 9.029-26.25 9.029-.557 0-1.111-.011-1.663-.032l.079.002zM128 659.5 399.917 448 128 236.5z'/%3E%3Cglyph unicode='' glyph-name='feather' d='M696.25 921.833c-75.896 4.465-157.168-23.751-225.083-91.667l-288-288c-7.721-7.72-12.498-18.385-12.5-30.166V149.332c.002-23.563 19.103-42.664 42.666-42.667H576.075c11.784 0 22.453 4.777 30.175 12.5l287.5 288.417c67.916 67.916 96.131 149.187 91.667 225.083s-39.682 145.516-91.667 197.5c-51.984 51.984-121.604 87.202-197.5 91.667zm-5-85.166c52.397-3.082 103.591-28.258 142.167-66.833s63.751-89.77 66.833-142.167c3.082-52.397-14.002-106.919-66.833-159.75h-.088.002L558.25 192H256v302.333l275.5 275.5c52.831 52.831 107.353 69.916 159.75 66.833zm-9.417-174.917a42.576 42.576 0 0 1-29.324-12.907L55.166 51.5c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 597.333 597.333c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zM384 362.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h341.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='file-minus' d='M256 917.333c-70.187 0-128-57.813-128-128V106.666c0-70.187 57.813-128 128-128h512c70.187 0 128 57.813 128 128v512c-.002 11.781-4.779 22.446-12.5 30.167l-256 256c-7.72 7.721-18.385 12.498-30.166 12.5zM256 832h323.667l231-231V106.667C810.667 82.597 792.07 64 768 64H256c-24.07 0-42.667 18.597-42.667 42.667v682.667c0 24.07 18.597 42.667 42.667 42.667zm340.667 85.917c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-256c.002-23.563 19.103-42.664 42.666-42.667h256c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H640v213.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zM384 362.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H640c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H640z'/%3E%3Cglyph unicode='' glyph-name='file-plus' d='M256 917.333c-70.187 0-128-57.813-128-128V106.666c0-70.187 57.813-128 128-128h512c70.187 0 128 57.813 128 128v512c-.002 11.781-4.779 22.446-12.5 30.167l-256 256c-7.72 7.721-18.385 12.498-30.166 12.5zM256 832h323.667l231-231V106.667C810.667 82.597 792.07 64 768 64H256c-24.07 0-42.667 18.597-42.667 42.667v682.667c0 24.07 18.597 42.667 42.667 42.667zm340.667 85.917c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-256c.002-23.563 19.103-42.664 42.666-42.667h256c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H640v213.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zM511.333 491.25c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V448 192a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V192v256c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zM384 362.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H640c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H640z'/%3E%3Cglyph unicode='' glyph-name='file-text' d='M256 917.333c-70.187 0-128-57.813-128-128V106.666c0-70.187 57.813-128 128-128h512c70.187 0 128 57.813 128 128v512c-.002 11.781-4.779 22.446-12.5 30.167l-256 256c-7.72 7.721-18.385 12.498-30.166 12.5zM256 832h323.667l231-231V106.667C810.667 82.597 792.07 64 768 64H256c-24.07 0-42.667 18.597-42.667 42.667v682.667c0 24.07 18.597 42.667 42.667 42.667zm340.667 85.917c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-256c.002-23.563 19.103-42.664 42.666-42.667h256c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H640v213.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zM341.333 448c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h341.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm0-170.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h341.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm0 341.334c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h85.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h-42.635z'/%3E%3Cglyph unicode='' glyph-name='file' d='M256 917.333c-70.187 0-128-57.813-128-128V106.666c0-70.187 57.813-128 128-128h512c70.187 0 128 57.813 128 128v469.333c-.002 11.781-4.779 22.446-12.5 30.167L584.833 904.833c-7.72 7.721-18.385 12.498-30.166 12.5zM256 832h281l273.667-273.667V106.666c0-24.07-18.597-42.667-42.667-42.667H256c-24.07 0-42.667 18.597-42.667 42.667v682.667C213.333 813.403 231.93 832 256 832zm298 85.917c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V576c.002-23.563 19.103-42.664 42.666-42.667h298.667c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H597.333v256c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='film' d='M178.333 917.333c-74.429 0-135.667-61.238-135.667-135.667V114.333c0-74.429 61.238-135.667 135.667-135.667h667.333c74.429 0 135.667 61.238 135.667 135.667v667.333c0 74.429-61.238 135.667-135.667 135.667zm0-85.333h667.333c28.63 0 50.333-21.703 50.333-50.333V114.334c0-28.63-21.703-50.333-50.333-50.333H178.333c-28.63 0-50.333 21.703-50.333 50.333v667.333c0 28.63 21.703 50.333 50.333 50.333zM298 917.917c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V21.334a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 853.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm426.667 0c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V21.334a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 853.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zM85.333 490.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h853.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm0 213.333c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h213.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm0-426.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h213.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm640 0c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h213.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm0 426.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h213.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='filter' d='M85.333 874.667h-.023c-23.567 0-42.671-19.104-42.671-42.671a42.502 42.502 0 0 1 10.16-27.639l-.05.06 331.25-391.667V149.33c0-16.609 9.489-31.001 23.341-38.052l.242-.112 170.667-85.333c5.559-2.839 12.125-4.503 19.079-4.503 23.566 0 42.67 19.104 42.671 42.67v348.75l331.25 391.667c6.286 7.386 10.11 17.036 10.11 27.579 0 23.567-19.104 42.671-42.671 42.671h-.024.001zm92-85.334h669.333L564.749 455.916c-6.27-7.381-10.083-17.019-10.083-27.547v-.038.002V133l-85.333 42.667V428.37a42.501 42.501 0 0 1-10.134 27.609l.051-.061z'/%3E%3Cglyph unicode='' glyph-name='flag' d='M341.333 917.333c-68.741 0-117.036-11.564-149.167-24.417s-51.667-30.75-51.667-30.75c-7.721-7.72-12.498-18.385-12.5-30.166V319.999c.01-23.559 19.11-42.654 42.671-42.654 11.778 0 22.442 4.772 30.163 12.488 0 0 1.797 3.436 23 11.917S282.074 320 341.333 320c54.519 0 101.5-18.25 154.833-39.583s113.019-45.75 186.5-45.75c68.741 0 117.036 11.564 149.167 24.417s51.667 30.75 51.667 30.75c7.721 7.72 12.498 18.385 12.5 30.166v512c-.01 23.559-19.11 42.654-42.671 42.654-11.778 0-22.442-4.772-30.163-12.488 0 0-1.798-3.436-23-11.917s-58.241-18.25-117.5-18.25c-54.519 0-101.5 18.25-154.833 39.583s-113.019 45.75-186.5 45.75zm0-85.333c54.519 0 101.5-18.25 154.833-39.583s113.019-45.75 186.5-45.75c58.984 0 96.416 10.387 128 20.917V343.667c-3.27-1.915-.829-1.548-10.5-5.417-21.203-8.481-58.241-18.25-117.5-18.25-54.519 0-101.5 18.25-154.833 39.583s-113.019 45.75-186.5 45.75c-58.984 0-96.416-10.387-128-20.917v423.917c3.27 1.915.829 1.548 10.5 5.417 21.203 8.481 58.241 18.25 117.5 18.25zM170 363.25c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V320 21.333a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032V320c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='folder-minus' d='M170.667 874.667c-70.187 0-128-57.813-128-128V149.334c0-70.187 57.813-128 128-128h682.667c70.187 0 128 57.813 128 128v469.333c0 70.187-57.813 128-128 128H492.167l-72.667 109c-7.761 11.521-20.757 18.999-35.5 19zm0-85.334h190.5l72.667-109c7.761-11.521 20.757-18.999 35.5-19h384c24.07 0 42.667-18.597 42.667-42.667V149.333c0-24.07-18.597-42.667-42.667-42.667H170.667c-24.07 0-42.667 18.597-42.667 42.667v597.333c0 24.07 18.597 42.667 42.667 42.667zm213.333-384c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H640c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H640z'/%3E%3Cglyph unicode='' glyph-name='folder-plus' d='M170.667 874.667c-70.187 0-128-57.813-128-128V149.334c0-70.187 57.813-128 128-128h682.667c70.187 0 128 57.813 128 128v469.333c0 70.187-57.813 128-128 128H492.167l-72.667 109c-7.761 11.521-20.757 18.999-35.5 19zm0-85.334h190.5l72.667-109c7.761-11.521 20.757-18.999 35.5-19h384c24.07 0 42.667-18.597 42.667-42.667V149.333c0-24.07-18.597-42.667-42.667-42.667H170.667c-24.07 0-42.667 18.597-42.667 42.667v597.333c0 24.07 18.597 42.667 42.667 42.667zm340.666-255.416c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-256a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 256c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zM384 405.333c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H640c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H640z'/%3E%3Cglyph unicode='' glyph-name='folder' d='M170.667 874.667c-70.187 0-128-57.813-128-128V149.334c0-70.187 57.813-128 128-128h682.667c70.187 0 128 57.813 128 128v469.333c0 70.187-57.813 128-128 128H492.167l-72.667 109c-7.761 11.521-20.757 18.999-35.5 19zm0-85.334h190.5l72.667-109c7.761-11.521 20.757-18.999 35.5-19h384c24.07 0 42.667-18.597 42.667-42.667V149.333c0-24.07-18.597-42.667-42.667-42.667H170.667c-24.07 0-42.667 18.597-42.667 42.667v597.333c0 24.07 18.597 42.667 42.667 42.667z'/%3E%3Cglyph unicode='' glyph-name='gift' d='M170 491.25c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V448 21.333c.002-23.563 19.103-42.664 42.666-42.667h682.667c23.563.002 42.664 19.103 42.667 42.666v426.667c.003.179.004.391.004.603 0 23.567-19.104 42.671-42.671 42.671s-42.671-19.104-42.671-42.671c0-.212.002-.424.005-.635v.032-384H213.334v384c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006H170zM85.333 704c-23.563-.002-42.664-19.103-42.667-42.666V448.001c.002-23.563 19.103-42.664 42.666-42.667h853.334c23.563.002 42.664 19.103 42.667 42.666v213.333c-.002 23.563-19.103 42.664-42.666 42.667zM128 618.667h768v-128H128zm383.333 85.916c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-640a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 640c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zM320 917.333c-46.222 0-86.319-18.87-111.917-47.667s-37.417-65.519-37.417-101.667c0-36.148 11.819-72.87 37.417-101.667S273.777 618.665 320 618.665h192c23.559.01 42.654 19.11 42.654 42.671 0 2.947-.299 5.825-.868 8.604l.047-.275s-11.4 58.886-44.417 118.917-94.433 128.75-189.417 128.75zM320 832c54.349 0 88.934-37.947 114.583-84.583 11.792-21.44 10.631-26.234 16.333-43.417H319.999c-24.889 0-38.125 7.797-48.083 19s-15.917 27.815-15.917 45 5.959 33.797 15.917 45 23.194 19 48.083 19zm384 85.333c-94.984 0-156.4-68.719-189.417-128.75s-44.417-118.917-44.417-118.917c-.522-2.504-.821-5.382-.821-8.329 0-23.561 19.095-42.661 42.653-42.671h192.001c46.222 0 86.319 18.87 111.917 47.667S853.333 731.852 853.333 768c0 36.148-11.819 72.87-37.417 101.667s-65.694 47.667-111.917 47.667zM704 832c24.889 0 38.125-7.797 48.083-19S768 785.185 768 768s-5.959-33.797-15.917-45-23.194-19-48.083-19H573.083c5.702 17.183 4.541 21.976 16.333 43.417C615.066 794.053 649.65 832 703.999 832z'/%3E%3Cglyph unicode='' glyph-name='git-branch' d='M255.333 875.25c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V832 320a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V320v512c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zM768 874.667c-93.751 0-170.667-76.915-170.667-170.667S674.248 533.333 768 533.333c93.751 0 170.667 76.915 170.667 170.667S861.752 874.667 768 874.667zm0-85.334c47.634 0 85.333-37.7 85.333-85.333s-37.7-85.333-85.333-85.333c-47.634 0-85.333 37.7-85.333 85.333s37.7 85.333 85.333 85.333zM256 362.667c-93.751 0-170.667-76.915-170.667-170.667S162.248 21.333 256 21.333c93.751 0 170.667 76.915 170.667 170.667S349.752 362.667 256 362.667zm0-85.334c47.634 0 85.333-37.7 85.333-85.333s-37.7-85.333-85.333-85.333c-47.634 0-85.333 37.7-85.333 85.333s37.7 85.333 85.333 85.333zM767.333 619.25c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V576c0-189.019-152.315-341.333-341.333-341.333-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H384c235.136 0 426.667 191.531 426.667 426.667.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='git-commit' d='M512 661.333c-117.315 0-213.333-96.018-213.333-213.333S394.685 234.667 512 234.667 725.333 330.685 725.333 448 629.315 661.333 512 661.333zM512 576c71.198 0 128-56.802 128-128s-56.802-128-128-128c-71.198 0-128 56.802-128 128s56.802 128 128 128zM44.833 490.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h253.801c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm680.917 0c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h253.885c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='git-merge' d='M768 362.667c-93.751 0-170.667-76.915-170.667-170.667S674.248 21.333 768 21.333c93.751 0 170.667 76.915 170.667 170.667S861.752 362.667 768 362.667zm0-85.334c47.634 0 85.333-37.7 85.333-85.333s-37.7-85.333-85.333-85.333c-47.634 0-85.333 37.7-85.333 85.333s37.7 85.333 85.333 85.333zM256 874.667c-93.751 0-170.667-76.915-170.667-170.667S162.248 533.333 256 533.333c93.751 0 170.667 76.915 170.667 170.667S349.752 874.667 256 874.667zm0-85.334c47.634 0 85.333-37.7 85.333-85.333s-37.7-85.333-85.333-85.333c-47.634 0-85.333 37.7-85.333 85.333s37.7 85.333 85.333 85.333zM254.167 618c-22.545-.999-40.487-19.349-40.833-41.967V64a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V64v269.5C376.118 224.924 496.867 149.333 640 149.333c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H640c-189.019 0-341.333 152.315-341.333 341.333-.356 23.293-19.322 42.039-42.666 42.039-.645 0-1.287-.014-1.924-.043l.091.003z'/%3E%3Cglyph unicode='' glyph-name='git-pull-request' d='M768 362.667c-93.751 0-170.667-76.915-170.667-170.667S674.248 21.333 768 21.333c93.751 0 170.667 76.915 170.667 170.667S861.752 362.667 768 362.667zm0-85.334c47.634 0 85.333-37.7 85.333-85.333s-37.7-85.333-85.333-85.333c-47.634 0-85.333 37.7-85.333 85.333s37.7 85.333 85.333 85.333zM256 874.667c-93.751 0-170.667-76.915-170.667-170.667S162.248 533.333 256 533.333c93.751 0 170.667 76.915 170.667 170.667S349.752 874.667 256 874.667zm0-85.334c47.634 0 85.333-37.7 85.333-85.333s-37.7-85.333-85.333-85.333c-47.634 0-85.333 37.7-85.333 85.333s37.7 85.333 85.333 85.333zm298.667-42.666c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h127.968c24.07 0 42.667-18.597 42.667-42.667V320a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V320v298.667c0 70.187-57.813 128-128 128zM255.333 619.25c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V576 64a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V64v512c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='github' d='M225.667 961.083C215.449 960.802 205 958.25 205 958.25c-12.273-3.719-22.014-12.479-26.976-23.809l-.107-.274c-23.001-53.663-23.617-112.814-8.583-168.75-38.706-48.745-62.962-107.531-62.667-170.25v-.166c.041-124.183 40.375-210.151 102.333-262.25 44.161-37.134 95.953-53.942 147.667-65.333-10.499-25.245-16.005-52.09-14.667-79.917-27.999-4.9-57.028-10.302-72.917-6.583-22.371 5.236-37.175 15.508-52.25 30.583s-28.918 35.056-46.333 55.5c-17.415 20.444-40.514 43.17-74.833 51.75-3.102.807-6.664 1.27-10.333 1.27-23.575 0-42.686-19.111-42.686-42.686 0-19.905 13.625-36.629 32.057-41.352l.296-.064c8.347-2.087 17.249-8.694 30.5-24.25s28.742-38.242 51-60.5c22.258-22.258 52.787-43.986 93.083-53.417 25.208-5.9 59.862 2.528 91.75 6.75V21.335a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 121.583c.329 1.991.517 4.286.517 6.625s-.188 4.634-.55 6.87l.033-.245v30.25l.001.318c0 .944-.031 1.88-.091 2.809l.007-.126c-2.016 28.662 8.185 56.769 28.167 77.417 7.418 7.667 11.989 18.127 11.989 29.655 0 21.711-16.214 39.634-37.193 42.323l-.212.022c-63.533 7.891-123.513 24.015-165.417 59.25s-71.917 90.116-71.917 197.083v.257-.007a189.489 189.489 0 0 0 52.25 131.667 42.513 42.513 0 0 1 11.771 29.428c0 5.353-.986 10.477-2.786 15.198l.098-.293c-12.175 32.623-11.123 67.332-3.083 100.75 21.033-4.904 56.424-17.503 110-53.417 6.672-4.53 14.904-7.232 23.768-7.232 3.966 0 7.806.541 11.449 1.553l-.3-.071a528.164 528.164 0 0 0 276.333 0c3.343-.941 7.183-1.482 11.149-1.482a42.47 42.47 0 0 1 23.917 7.328l-.15-.096c53.576 35.914 88.967 48.513 110 53.417 8.039-33.418 9.092-68.127-3.083-100.75-1.702-4.428-2.688-9.552-2.688-14.905 0-11.417 4.484-21.787 11.787-29.445l-.016.017a189.393 189.393 0 0 0 52.25-130.583c0-107.884-30.118-163.27-71.917-198.417s-101.586-50.774-164.917-57.833c-21.47-2.433-38-20.494-38-42.414 0-11.576 4.609-22.074 12.092-29.762l-.009.01c20.225-20.863 30.529-49.282 28.25-78.25a40.804 40.804 0 0 1-.167-3.397V21.337a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032V186.42l-.166-3.334c2.327 29.587-3.913 58.236-15 85.083 51.676 10.976 103.422 27.52 147.5 64.583 62.095 52.213 102.333 138.674 102.333 263.75-.011 62.276-24.224 120.606-62.667 169 15.008 55.913 14.406 115.029-8.583 168.667-5.069 11.604-14.81 20.364-26.781 24.004l-.302.079s-10.448 2.552-20.667 2.833-23.745-.697-40.5-4.417c-29.483-6.545-73.531-27.273-124.583-58.917-93.897 22.478-191.27 22.478-285.167 0-51.053 31.644-95.1 52.371-124.583 58.917-16.755 3.72-30.282 4.698-40.5 4.417z'/%3E%3Cglyph unicode='' glyph-name='gitlab' d='M218 921.917c-14.818 0-29.571-5.235-41.083-15.75-6.952-6.326-12.359-14.149-15.75-22.917a28.473 28.473 0 0 1-.669-1.948l-.081-.302L56.25 560.583v-.086.002l-52-161c-10.598-32.107.846-67.802 28.083-87.833l.164-.164.002-.002L486.916-18.75c6.942-5.094 15.656-8.151 25.083-8.151s18.141 3.057 25.203 8.234l-.12-.084 452.5 329c28.955 18.745 42.395 54.716 32.75 87.833a34.48 34.48 0 0 1-.681 1.959l.098-.293-54.083 160.25-103.833 319.417A60.377 60.377 0 0 1 848 905.332c-.271.255-.57.527-.872.795l-.045.039c-23.004 21.012-59.139 20.975-82.167 0-6.952-6.326-12.442-14.149-15.833-22.917a28.473 28.473 0 0 1-.669-1.948l-.081-.302-94.5-290.917H370.166l-94.25 289.333a60.367 60.367 0 0 1-15.833 25.917c-.271.255-.57.527-.872.794l-.045.039c-11.512 10.515-26.349 15.75-41.167 15.75zM217.917 782l80.75-247.833c5.746-17.204 21.696-29.389 40.497-29.417h345.67c18.857.002 34.857 12.235 40.497 29.199l.087.301 80.417 247.667 80.75-248.5c.143-.468.199-.634.257-.8l-.091.3 52.084-154.25L512.002 68.5 86.835 377.417l50.583 156.833zM82.667 380.5l.25-.085c.044-.033-.044-.132 0-.166z'/%3E%3Cglyph unicode='' glyph-name='globe' d='M512 917.333C253.3 917.333 42.667 706.7 42.667 448S253.3-21.333 512-21.333C770.7-21.333 981.333 189.3 981.333 448S770.7 917.333 512 917.333zM512 832c212.583 0 384-171.417 384-384S724.583 64 512 64 128 235.417 128 448s171.417 384 384 384zM85.333 490.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h853.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm428 426.666c-.384.012-.835.019-1.288.019-12.482 0-23.713-5.36-31.516-13.903l-.03-.033c-113.689-124.465-178.322-285.964-181.833-454.5a42.762 42.762 0 0 1 .001-1.881l-.001.048c3.511-168.536 68.144-330.035 181.833-454.5 7.83-8.547 19.041-13.886 31.5-13.886s23.67 5.339 31.471 13.854l.029.032c113.689 124.465 178.322 285.964 181.833 454.5a42.762 42.762 0 0 1-.001 1.881l.001-.048c-3.511 168.536-68.144 330.035-181.833 454.5-7.529 8.246-18.196 13.517-30.097 13.915l-.07.002zM512 795.667C587.734 694.337 636.981 575.451 639.833 448 636.98 320.55 587.733 201.663 512 100.333 436.266 201.663 387.019 320.549 384.167 448c2.853 127.45 52.1 246.337 127.833 347.667z'/%3E%3Cglyph unicode='' glyph-name='grid' d='M128 874.667c-23.563-.002-42.664-19.103-42.667-42.666V533.334c.002-23.563 19.103-42.664 42.666-42.667h298.667c23.563.002 42.664 19.103 42.667 42.666V832c-.002 23.563-19.103 42.664-42.666 42.667zm42.667-85.334H384V576H170.667zm426.666 85.334c-23.563-.002-42.664-19.103-42.667-42.666V533.334c.002-23.563 19.103-42.664 42.666-42.667h298.667c23.563.002 42.664 19.103 42.667 42.666V832c-.002 23.563-19.103 42.664-42.666 42.667zM640 789.333h213.333V576H640zm-42.667-384c-23.563-.002-42.664-19.103-42.667-42.666V64c.002-23.563 19.103-42.664 42.666-42.667h298.667c23.563.002 42.664 19.103 42.667 42.666v298.667c-.002 23.563-19.103 42.664-42.666 42.667zM640 320h213.333V106.667H640zm-512 85.333c-23.563-.002-42.664-19.103-42.667-42.666V64c.002-23.563 19.103-42.664 42.666-42.667h298.667c23.563.002 42.664 19.103 42.667 42.666v298.667c-.002 23.563-19.103 42.664-42.666 42.667zM170.667 320H384V106.667H170.667z'/%3E%3Cglyph unicode='' glyph-name='hard-drive' d='M85.333 490.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h853.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zM308.917 832c-48.482-.026-93.009-27.583-114.583-71L47.167 467.083c-2.837-5.557-4.5-12.121-4.5-19.073V191.999c0-70.187 57.813-128 128-128h682.667c70.187 0 128 57.813 128 128v256.01a42.498 42.498 0 0 1-4.612 19.316l.112-.243-147.25 294c-21.595 43.354-66.059 70.891-114.5 70.917zm0-85.333h406.167c16.282-.009 30.921-9.086 38.167-23.667.14-.293.169-.347.197-.402l-.112.235 142.665-284.917V191.999c0-24.07-18.597-42.667-42.667-42.667H170.667c-24.07 0-42.667 18.597-42.667 42.667v245.917l142.667 284.917c-.084-.187-.056-.132-.029-.078l.112.244c7.245 14.581 21.885 23.658 38.167 23.667zM256 320c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H256c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H256zm170.667 0c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h-.032c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='hash' d='M170.667 618.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h682.635c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm0-256c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h682.635c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zM426.583 875.25c-22.042-.071-40.144-16.843-42.319-38.32l-.015-.18-85.333-768a41.265 41.265 0 0 1-.266-4.761c0-23.573 19.109-42.682 42.682-42.682 21.903 0 39.952 16.498 42.399 37.745l.019.198 85.333 768c.213 1.6.334 3.451.334 5.329 0 23.567-19.104 42.671-42.671 42.671h-.172.009zm256 0c-22.041-.071-40.144-16.843-42.319-38.32l-.015-.18-85.333-768a41.27 41.27 0 0 1-.266-4.762c0-23.573 19.109-42.682 42.682-42.682 21.903 0 39.953 16.498 42.399 37.746l.018.198 85.333 768c.213 1.6.334 3.451.334 5.329 0 23.567-19.104 42.671-42.671 42.671h-.172.009z'/%3E%3Cglyph unicode='' glyph-name='headphones' d='M512 874.667c-235.136 0-426.667-191.53-426.667-426.667V192a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V192v256c0 189.019 152.315 341.333 341.333 341.333S853.332 637.018 853.332 448V192a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V192v256c0 235.136-191.531 426.667-426.667 426.667zM128 405.333c-23.563-.002-42.664-19.103-42.667-42.666V149.334c0-70.187 57.813-128 128-128H256c70.187 0 128 57.813 128 128v128c0 70.187-57.813 128-128 128zm640 0c-70.187 0-128-57.813-128-128v-128c0-70.187 57.813-128 128-128h42.667c70.187 0 128 57.813 128 128v213.333c-.002 23.563-19.103 42.664-42.666 42.667zM170.667 320H256c24.07 0 42.667-18.597 42.667-42.667v-128c0-24.07-18.597-42.667-42.667-42.667h-42.667c-24.07 0-42.667 18.597-42.667 42.667zM768 320h85.333V149.333c0-24.07-18.597-42.667-42.667-42.667h-42.667c-24.07 0-42.667 18.597-42.667 42.667v128c0 24.07 18.597 42.667 42.667 42.667z'/%3E%3Cglyph unicode='' glyph-name='heart' d='M287.917 878.5c-70.532-4.149-135.052-36.802-183.25-85S23.733 680.782 19.584 610.25c-4.149-70.532 22.216-146.216 85.083-209.083L149.917 356 481.834 24c7.721-7.718 18.387-12.492 30.167-12.492S534.446 16.282 542.168 24l377.167 377.167c108.009 107.958 108.009 284.375 0 392.333-107.958 108.009-284.292 108.009-392.25 0l-15.083-15.083-15.083 15.083c-62.867 62.867-138.468 89.149-209 85zm5-85.167c47.032 2.767 95.885-12.385 143.667-60.167l45.25-45.25c7.721-7.718 18.387-12.492 30.167-12.492s22.445 4.774 30.167 12.492l45.25 45.25c75.346 75.381 196.238 75.381 271.583 0a191.446 191.446 0 0 0 0-271.667l-45.25-45.167-301.75-301.833-347 347c-47.782 47.782-62.933 96.634-60.167 143.667s25.378 93.211 60.167 128 80.884 57.4 127.917 60.167z'/%3E%3Cglyph unicode='' glyph-name='help-circle' d='M512 917.333C253.3 917.333 42.667 706.7 42.667 448S253.3-21.333 512-21.333C770.7-21.333 981.333 189.3 981.333 448S770.7 917.333 512 917.333zM512 832c212.583 0 384-171.417 384-384S724.583 64 512 64 128 235.417 128 448s171.417 384 384 384zm25.417-130.25c-73.687 12.639-159.334-24.883-189.833-111.583-1.582-4.28-2.497-9.224-2.497-14.382 0-23.567 19.104-42.671 42.671-42.671 18.569 0 34.368 11.861 40.233 28.421l.092.299c17.32 49.237 56.131 62.486 94.917 55.833s70.994-32.055 70.917-84.25v-.086.002c0-21.333-18.462-42.808-45-60.5s-53.833-27-53.833-27c-17.11-5.824-29.2-21.752-29.2-40.503 0-23.577 19.113-42.691 42.691-42.691 4.833 0 9.478.803 13.81 2.283l-.3-.089s36.705 12.026 74.167 37c37.444 24.963 82.958 67.466 83 131.417v.083c.093 91.861-68.17 155.781-141.833 168.417zM512 277.333c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H512c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H512z'/%3E%3Cglyph unicode='' glyph-name='home' d='M510.333 917.333c-9.317-.396-17.788-3.721-24.592-9.07l.092.07-384-298.667c-10.071-7.874-16.488-20.02-16.5-33.665V106.666c0-70.187 57.813-128 128-128h597.333c70.187 0 128 57.813 128 128v469.333c-.012 13.647-6.429 25.793-16.406 33.596l-.094.071-384 298.667c-7.162 5.63-16.309 9.029-26.25 9.029-.557 0-1.111-.011-1.663-.032l.08.002zm1.667-96.75 341.333-265.417v-448.5c0-24.07-18.597-42.667-42.667-42.667H213.333c-24.07 0-42.667 18.597-42.667 42.667v448.5zM384 490.667c-23.563-.002-42.664-19.103-42.667-42.666V21.334a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 384h170.667v-384a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 426.667c-.002 23.563-19.103 42.664-42.666 42.667z'/%3E%3Cglyph unicode='' glyph-name='image' d='M213.333 874.667c-70.174 0-128-57.826-128-128V149.334c0-70.174 57.826-128 128-128h597.333c70.174 0 128 57.826 128 128v597.333c0 70.174-57.826 128-128 128zm0-85.334h597.333c24.375 0 42.667-18.291 42.667-42.667V149.333c0-24.375-18.291-42.667-42.667-42.667H213.333c-24.375 0-42.667 18.291-42.667 42.667v597.333c0 24.375 18.291 42.667 42.667 42.667zM362.667 704C304.262 704 256 655.738 256 597.333s48.262-106.667 106.667-106.667 106.667 48.262 106.667 106.667S421.072 704 362.667 704zm0-85.333c12.287 0 21.333-9.046 21.333-21.333s-9.046-21.333-21.333-21.333c-12.287 0-21.333 9.046-21.333 21.333s9.046 21.333 21.333 21.333zM682 576c-11.538-.19-21.934-4.93-29.5-12.5L183.166 94.166c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 439.167 439.167 183.167-183.167c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-213.333 213.333c-7.723 7.726-18.393 12.505-30.18 12.505-.23 0-.459-.002-.688-.005h.035z'/%3E%3Cglyph unicode='' glyph-name='inbox' d='M85.333 490.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H318.5l72.667-109c7.761-11.521 20.757-18.999 35.5-19h170.667c14.743.001 27.739 7.479 35.404 18.848l.096.152 72.667 109h233.167c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H682.668c-14.743-.001-27.739-7.479-35.404-18.848l-.096-.152-72.667-109h-125l-72.667 109c-7.761 11.521-20.757 18.999-35.5 19zM308.917 832c-48.482-.026-93.009-27.583-114.583-71L47.167 467.083c-2.837-5.557-4.5-12.121-4.5-19.073V191.999c0-70.187 57.813-128 128-128h682.667c70.187 0 128 57.813 128 128v256.01a42.498 42.498 0 0 1-4.612 19.316l.112-.243-147.25 294c-21.595 43.354-66.059 70.891-114.5 70.917zm0-85.333h406.167c16.282-.009 30.921-9.086 38.167-23.667.14-.293.169-.347.197-.402l-.112.235 142.665-284.917V191.999c0-24.07-18.597-42.667-42.667-42.667H170.667c-24.07 0-42.667 18.597-42.667 42.667v245.917l142.667 284.917c-.084-.187-.056-.132-.029-.078l.112.244c7.245 14.581 21.885 23.658 38.167 23.667z'/%3E%3Cglyph unicode='' glyph-name='info' d='M512 917.333C253.3 917.333 42.667 706.7 42.667 448S253.3-21.333 512-21.333C770.7-21.333 981.333 189.3 981.333 448S770.7 917.333 512 917.333zM512 832c212.583 0 384-171.417 384-384S724.583 64 512 64 128 235.417 128 448s171.417 384 384 384zm-.667-340.75c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V448 277.333a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032V448c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zM512 661.333c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H512c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H512z'/%3E%3Cglyph unicode='' glyph-name='instagram' d='M298.667 917.333c-141.086 0-256-114.914-256-256V234.666c0-141.086 114.914-256 256-256h426.667c141.086 0 256 114.914 256 256v426.667c0 141.086-114.914 256-256 256zm0-85.333h426.667c95.287 0 170.667-75.379 170.667-170.667V234.666c0-95.287-75.379-170.667-170.667-170.667H298.667C203.38 63.999 128 139.378 128 234.666v426.667C128 756.62 203.379 832 298.667 832zm246.5-171.167c-99.299 14.725-183.968-39.668-221.917-115.083S292.032 369.968 363 299c70.968-70.968 171.335-77.699 246.75-39.75s129.808 122.618 115.083 221.917c-13.758 92.779-86.888 165.909-179.667 179.667zM532.583 576.5c55.955-8.297 99.619-51.961 107.917-107.917 9.404-63.42-22.793-109.79-69.083-133.083s-102.766-21.484-148.083 23.833c-45.317 45.317-47.126 101.793-23.833 148.083s69.663 78.488 133.083 69.083zm214.084 148.833c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h-.032c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='italic' d='M426.667 832c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h383.968c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zM213.333 149.333c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h383.968c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm424.5 683.167c-17.405-1.012-31.932-12.314-37.655-27.871l-.095-.296-256-682.667c-2.091-4.864-3.307-10.525-3.307-16.471 0-23.567 19.104-42.671 42.671-42.671 18.726 0 34.635 12.063 40.38 28.842l.089.3 256 682.667c1.86 4.612 2.938 9.96 2.938 15.561 0 23.567-19.104 42.671-42.671 42.671a43.76 43.76 0 0 1-2.464-.07l.113.005z'/%3E%3Cglyph unicode='' glyph-name='layers' d='M510.417 917.333c-6.422-.254-12.406-1.888-17.742-4.612l.242.112L66.25 699.5c-14.098-7.162-23.589-21.556-23.589-38.167s9.491-31.005 23.347-38.055l.242-.112 426.667-213.333c5.56-2.841 12.127-4.505 19.083-4.505s13.524 1.665 19.326 4.617l-.242-.112 426.667 213.333c14.098 7.162 23.589 21.556 23.589 38.167s-9.491 31.005-23.347 38.055l-.242.112-426.667 213.333c-5.571 2.855-12.155 4.528-19.129 4.528-.541 0-1.079-.01-1.615-.03l.077.002zM512 827l331.25-165.667L512 495.666 180.75 661.333zM83.833 277.583c-23.143-.546-41.695-19.436-41.695-42.66 0-16.816 9.727-31.36 23.861-38.312l.251-.111L492.917-16.833c5.56-2.841 12.127-4.505 19.083-4.505s13.524 1.665 19.326 4.617l-.242-.112L957.751 196.5c14.101 7.161 23.595 21.557 23.595 38.17 0 23.567-19.105 42.672-42.672 42.672a42.497 42.497 0 0 1-19.332-4.62l.242.112L512.001 69.001 104.418 272.834c-5.689 3-12.433 4.762-19.588 4.762a40.5 40.5 0 0 1-1.047-.013l.052.001zm0 213.334c-23.143-.546-41.695-19.436-41.695-42.66 0-16.816 9.727-31.36 23.861-38.312l.251-.111 426.667-213.333c5.56-2.841 12.127-4.505 19.083-4.505s13.524 1.665 19.326 4.617l-.242-.112 426.667 213.333c14.101 7.161 23.595 21.557 23.595 38.17 0 23.567-19.105 42.672-42.672 42.672a42.497 42.497 0 0 1-19.332-4.62l.242.112-407.583-203.833-407.583 203.833c-5.689 3-12.433 4.762-19.588 4.762a40.5 40.5 0 0 1-1.047-.013l.052.001z'/%3E%3Cglyph unicode='' glyph-name='layout' d='M213.333 874.667c-70.174 0-128-57.826-128-128V149.334c0-70.174 57.826-128 128-128h597.333c70.174 0 128 57.826 128 128v597.333c0 70.174-57.826 128-128 128zm0-85.334h597.333c24.375 0 42.667-18.291 42.667-42.667V149.333c0-24.375-18.291-42.667-42.667-42.667H213.333c-24.375 0-42.667 18.291-42.667 42.667v597.333c0 24.375 18.291 42.667 42.667 42.667zM128 618.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H896c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H896zm255.333.583c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V576 64a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V64v512c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='life-buoy' d='M512 917.333C253.3 917.333 42.667 706.7 42.667 448S253.3-21.333 512-21.333C770.7-21.333 981.333 189.3 981.333 448S770.7 917.333 512 917.333zM512 832c212.583 0 384-171.417 384-384S724.583 64 512 64 128 235.417 128 448s171.417 384 384 384zm0-170.667c-117.315 0-213.333-96.018-213.333-213.333S394.685 234.667 512 234.667 725.333 330.685 725.333 448 629.315 661.333 512 661.333zM512 576c71.198 0 128-56.802 128-128s-56.802-128-128-128c-71.198 0-128 56.802-128 128s56.802 128 128 128zM209.917 792.75c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l180.926-180.926c7.778-8.091 18.692-13.118 30.78-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.088-5.027 23.003-13.104 30.767l-.014.013-180.917 180.917c-7.76 7.971-18.594 12.916-30.583 12.917zm422.416-422.417c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l180.926-180.926c7.778-8.091 18.692-13.117 30.78-13.117 23.567 0 42.671 19.104 42.671 42.671 0 12.088-5.026 23.002-13.103 30.766l-.014.013-180.917 180.917c-7.76 7.971-18.594 12.916-30.583 12.917zm180.5 422.417a42.576 42.576 0 0 1-29.324-12.907L602.582 598.916c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.088 0 23.003 5.027 30.767 13.104l.013.014 180.917 180.917c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zM782.5 762.417a42.576 42.576 0 0 1-29.324-12.907L602.583 598.917c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.088 0 23.003 5.027 30.767 13.104l.013.014 150.583 150.583c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zM390.417 370.333a42.576 42.576 0 0 1-29.324-12.907L180.166 176.499c-8.091-7.778-13.118-18.692-13.118-30.78 0-23.567 19.104-42.671 42.671-42.671 12.088 0 23.002 5.027 30.766 13.103l.013.014 180.917 180.917c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002z'/%3E%3Cglyph unicode='' glyph-name='link-2' d='M256 704C115.12 704 0 588.88 0 448s115.12-256 256-256h128c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H256c-94.762 0-170.667 75.905-170.667 170.667S161.238 618.667 256 618.667h128c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H384zm384 0c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H768c94.762 0 170.667-75.905 170.667-170.667S862.762 277.333 768 277.333H640c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H768c140.88 0 256 115.12 256 256S908.88 704 768 704zM341.333 490.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h341.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='link' d='M736.75 917.583c-64.459 4.228-133.772-19-191.667-74.917a26.192 26.192 0 0 1-.361-.429l-.057-.071-73.417-72.917c-8.138-7.784-13.197-18.729-13.197-30.856 0-23.567 19.104-42.671 42.671-42.671 12.044 0 22.923 4.99 30.681 13.015l.012.012 72.917 72.5.252.167c42.559 40.992 85.369 53.703 126.583 51 41.295-2.708 81.804-22.638 112.417-53.25s50.542-71.122 53.25-112.417c2.703-41.214-10.008-84.025-51-126.583-.081-.084-.085-.166-.166-.25l-127.5-127.417v-.088.002c-74.045-74.072-194.6-65.368-257.333 18.5-7.869 10.432-20.241 17.106-34.171 17.106-23.573 0-42.683-19.11-42.683-42.683a42.496 42.496 0 0 1 8.599-25.697l-.078.108c92.94-124.25 276.386-137.321 386.083-27.583l128 127.917c.123.139.287.329.448.521l.052.063c55.916 57.897 79.144 127.209 74.916 191.669s-34.141 123.225-78.083 167.167c-43.942 43.942-102.707 73.856-167.167 78.083zm-292-299.75c-71.182 5.098-144.485-19.131-199.333-74l-128-127.917a35.559 35.559 0 0 1-.448-.52l-.052-.063C61 357.438 37.773 288.126 42 223.666s34.141-123.225 78.083-167.167C164.025 12.557 222.79-17.357 287.25-21.584s133.772 19 191.667 74.917c.123.139.287.329.448.521l.052.063 73 72.917c8.091 7.777 13.117 18.691 13.117 30.779 0 23.567-19.104 42.671-42.671 42.671-12.088 0-23.002-5.026-30.766-13.103l-.013-.014-72.667-72.583c-42.559-40.992-85.369-53.703-126.583-51-41.295 2.708-81.804 22.638-112.417 53.25s-50.542 71.122-53.25 112.417c-2.703 41.214 10.008 84.025 51 126.583.081.085.086.166.167.252l127.5 127.417v.088-.002c74.045 74.072 194.6 65.368 257.333-18.5 7.869-10.429 20.239-17.1 34.167-17.1 23.573 0 42.683 19.11 42.683 42.683a42.49 42.49 0 0 1-8.595 25.691l.078-.108c-46.47 62.121-115.568 96.482-186.75 101.58z'/%3E%3Cglyph unicode='' glyph-name='linkedin' d='M682.667 661.333C518.223 661.333 384 527.11 384 362.666V63.999c.002-23.563 19.103-42.664 42.666-42.667h170.667c23.563.002 42.664 19.103 42.667 42.666v298.667c0 24.07 18.597 42.667 42.667 42.667s42.667-18.597 42.667-42.667V63.998c.002-23.563 19.103-42.664 42.666-42.667h170.667c23.563.002 42.664 19.103 42.667 42.666v298.667c0 164.444-134.223 298.667-298.667 298.667zm0-85.333C800.993 576 896 480.993 896 362.667v-256h-85.333v256c0 70.187-57.813 128-128 128s-128-57.813-128-128v-256h-85.333v256C469.334 480.993 564.341 576 682.667 576zM85.333 618.667c-23.563-.002-42.664-19.103-42.667-42.666v-512c.002-23.563 19.103-42.664 42.666-42.667h170.667c23.563.002 42.664 19.103 42.667 42.666v512c-.002 23.563-19.103 42.664-42.666 42.667zM128 533.333h85.333V106.666H128zm42.667 384c-70.187 0-128-57.813-128-128s57.813-128 128-128 128 57.813 128 128-57.813 128-128 128zm0-85.333c24.07 0 42.667-18.597 42.667-42.667s-18.597-42.667-42.667-42.667S128 765.263 128 789.333 146.597 832 170.667 832z'/%3E%3Cglyph unicode='' glyph-name='list' d='M341.333 746.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H896c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H896zm0-256c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H896c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H896zm0-256c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H896c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H896zM128 746.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H128c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H128zm0-256c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H128c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H128zm0-256c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H128c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H128z'/%3E%3Cglyph unicode='' glyph-name='loader' d='M511.333 917.917c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V704a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V704v170.667c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm0-682.667c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V192 21.333a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032V192c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-301.416 557.5c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L300.916 598.75c7.778-8.091 18.692-13.118 30.78-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.088-5.027 23.003-13.104 30.767l-.014.013-120.75 120.75c-7.76 7.971-18.594 12.916-30.583 12.917zM692.5 310.167c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l120.759-120.759c7.778-8.091 18.692-13.117 30.78-13.117 23.567 0 42.671 19.104 42.671 42.671 0 12.088-5.026 23.002-13.103 30.766l-.014.013-120.75 120.75c-7.76 7.971-18.594 12.916-30.583 12.917zm-607.167 180.5c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H256c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H256zm682.667 0c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h170.635c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm-437.75-180.5a42.576 42.576 0 0 1-29.324-12.907L180.166 176.5c-8.091-7.778-13.118-18.692-13.118-30.78 0-23.567 19.104-42.671 42.671-42.671 12.088 0 23.002 5.027 30.766 13.103l.013.014 120.75 120.75c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zM812.833 792.75a42.576 42.576 0 0 1-29.324-12.907l-120.76-120.76c-8.091-7.778-13.118-18.692-13.118-30.78 0-23.567 19.104-42.671 42.671-42.671 12.088 0 23.002 5.027 30.767 13.104l.013.014 120.75 120.75c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002z'/%3E%3Cglyph unicode='' glyph-name='lock' d='M213.333 533.333c-70.174 0-128-57.826-128-128V106.666c0-70.174 57.826-128 128-128h597.333c70.174 0 128 57.826 128 128v298.667c0 70.174-57.826 128-128 128zm0-85.333h597.333c24.375 0 42.667-18.291 42.667-42.667V106.666c0-24.375-18.291-42.667-42.667-42.667H213.333c-24.375 0-42.667 18.291-42.667 42.667v298.667c0 24.375 18.291 42.667 42.667 42.667zM512 917.333c-62.815 0-126.203-20.708-175-64.083s-81-110.139-81-191.917V490.666a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 170.667c0 60.444 21.13 100.347 52.333 128.083s74.481 42.583 118.333 42.583c43.852 0 87.13-14.847 118.333-42.583s52.333-67.639 52.333-128.083V490.666a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 170.667c0 81.778-32.203 148.541-81 191.917s-112.185 64.083-175 64.083z'/%3E%3Cglyph unicode='' glyph-name='log-in' d='M640 874.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h170.635c24.07 0 42.667-18.597 42.667-42.667V149.334c0-24.07-18.597-42.667-42.667-42.667H640c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h170.635c70.187 0 128 57.813 128 128v597.333c0 70.187-57.813 128-128 128zm-213.75-170.25c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L579.666 448 396.499 264.833c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 213.333 213.333c7.718 7.721 12.492 18.387 12.492 30.167s-4.774 22.445-12.492 30.167L456.832 691.499c-7.76 7.971-18.594 12.916-30.583 12.917zM128 490.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H640c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H640z'/%3E%3Cglyph unicode='' glyph-name='log-out' d='M213.333 874.667c-70.187 0-128-57.813-128-128V149.334c0-70.187 57.813-128 128-128H384c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H213.333c-24.07 0-42.667 18.597-42.667 42.667v597.333c0 24.07 18.597 42.667 42.667 42.667H384c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H384zm468.917-170.25c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L835.666 448 652.499 264.833c-8.092-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 213.333 213.333c7.718 7.721 12.492 18.387 12.492 30.167s-4.774 22.445-12.492 30.167L712.832 691.499c-7.76 7.971-18.594 12.916-30.583 12.917zM384 490.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H896c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H896z'/%3E%3Cglyph unicode='' glyph-name='mail' d='M170.667 832c-70.206 0-128-57.794-128-128V192c0-70.206 57.794-128 128-128h682.667c70.206 0 128 57.794 128 128v512c0 70.206-57.794 128-128 128zm0-85.333h682.667A42.544 42.544 0 0 0 896.001 704V192a42.544 42.544 0 0 0-42.667-42.667H170.667A42.544 42.544 0 0 0 128 192v512a42.544 42.544 0 0 0 42.667 42.667zm-84.75.333c-.312.008-.68.013-1.049.013-23.567 0-42.671-19.104-42.671-42.671 0-14.59 7.323-27.47 18.493-35.165l.144-.094 426.667-298.667c6.825-4.838 15.325-7.734 24.5-7.734s17.675 2.896 24.633 7.824l-.133-.089 426.667 298.667c11.599 7.751 19.134 20.792 19.134 35.592 0 23.567-19.104 42.671-42.671 42.671a42.488 42.488 0 0 1-25.574-8.509l.111.079-402.167-281.5-402.167 281.5c-6.64 4.85-14.906 7.845-23.86 8.082l-.056.001z'/%3E%3Cglyph unicode='' glyph-name='map-pin' d='M512 960C276.864 960 85.333 768.47 85.333 533.333c0-167.619 104.068-313.535 203.667-418.667s199.333-171.5 199.333-171.5c6.651-4.488 14.846-7.165 23.667-7.165s17.016 2.676 23.819 7.261l-.152-.096S635.402 9.534 735 114.666s203.667 251.048 203.667 418.667C938.667 768.469 747.136 960 512 960zm0-85.333c189.019 0 341.333-152.315 341.333-341.333 0-131.048-87.932-262.465-180.333-360-80.555-85.03-141.69-125.34-161-138.75-19.31 13.41-80.445 53.72-161 138.75-92.402 97.535-180.333 228.952-180.333 360 0 189.019 152.315 341.333 341.333 341.333zM512 704c-93.751 0-170.667-76.915-170.667-170.667S418.248 362.666 512 362.666c93.751 0 170.667 76.915 170.667 170.667S605.752 704 512 704zm0-85.333c47.634 0 85.333-37.7 85.333-85.333s-37.7-85.333-85.333-85.333c-47.634 0-85.333 37.7-85.333 85.333s37.7 85.333 85.333 85.333z'/%3E%3Cglyph unicode='' glyph-name='map' d='M339.75 917.333c-7.242-.275-13.953-2.312-19.788-5.693l.205.11L21.5 741.083C8.563 733.59 0 719.812 0 704.034v-.037.002V21.302C0-2.265 19.104-21.369 42.671-21.369a42.474 42.474 0 0 1 21.367 5.727l-.205-.11 278.833 159.417 320.917-160.5c5.567-2.85 12.145-4.52 19.113-4.52a42.48 42.48 0 0 1 21.343 5.713l-.205-.11 298.667 170.667c12.937 7.493 21.5 21.271 21.5 37.049v.037-.002 682.697c0 23.567-19.104 42.671-42.671 42.671a42.474 42.474 0 0 1-21.367-5.727l.205.11-278.833-159.417-320.917 160.5c-5.571 2.855-12.155 4.528-19.129 4.528-.541 0-1.079-.01-1.615-.03l.077.002zm2.917-91 320.917-160.5c5.567-2.85 12.145-4.52 19.113-4.52a42.48 42.48 0 0 1 21.343 5.713l-.205-.11 234.833 134.167V216.75L681.335 69.667l-320.917 160.5c-5.567 2.85-12.145 4.52-19.113 4.52a42.48 42.48 0 0 1-21.343-5.713l.205.11L85.334 94.917V679.25zm-2 91.584c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V192a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V192v682.667c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zM682 747.25c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V704 21.333a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032V704c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='maximize-2' d='M640 874.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h213.301V576.001a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 256c-.002 23.563-19.103 42.664-42.666 42.667zM127.333 363.25c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V320 64c.002-23.563 19.103-42.664 42.666-42.667h256c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H170.666v213.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm767.834 511.833a42.576 42.576 0 0 1-29.324-12.907L567.166 563.499c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 298.667 298.667c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zM425.833 405.75a42.576 42.576 0 0 1-29.324-12.907L97.832 94.166c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 298.667 298.667c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002z'/%3E%3Cglyph unicode='' glyph-name='maximize' d='M213.333 874.667c-70.187 0-128-57.813-128-128v-128a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 128c0 24.07 18.597 42.667 42.667 42.667h128c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm469.334 0c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h127.968c24.07 0 42.667-18.597 42.667-42.667v-128a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 128c0 70.187-57.813 128-128 128zM127.333 320.583c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-128c0-70.187 57.813-128 128-128h128c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H213.333c-24.07 0-42.667 18.597-42.667 42.667v128c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm768 0c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-128c0-24.07-18.597-42.667-42.667-42.667h-128c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h127.968c70.187 0 128 57.813 128 128v128c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='menu' d='M128 490.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H896c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H896zm0 256c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H896c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H896zm0-512c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H896c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H896z'/%3E%3Cglyph unicode='' glyph-name='message-circle' d='M533.333 874.667c-62.942.151-124.972-14.565-181.167-42.917-137.199-68.57-224.076-208.958-224.167-362.333-.147-56.236 13.293-111.134 36-162.417l-76.5-229.5c-1.396-4.037-2.202-8.69-2.202-13.531 0-23.567 19.104-42.671 42.671-42.671 4.841 0 9.494.806 13.832 2.292l-.3-.089 229.5 76.5c51.283-22.707 106.181-36.147 162.417-36 153.312.09 293.65 86.898 362.25 224v.085c28.396 56.243 43.164 118.324 43 181.331v21.25c-.008.84-.039 1.654-.092 2.462l.007-.128c-11.335 205.503-176.078 370.246-381.581 381.583-.681.046-1.495.076-2.314.083h-21.269zm-.085-85.334h19.419C715.16 780.19 844.191 651.16 853.334 488.666v-19.421.002a315.102 315.102 0 0 0-33.833-142.833c.083.18.055.125.027.071l-.112-.237C765.202 217.771 654.607 149.38 533.335 149.333h-.088.002a315.102 315.102 0 0 0-142.833 33.833c-5.608 2.9-12.242 4.6-19.273 4.6-4.82 0-9.454-.799-13.776-2.273l.3.089L195.5 131.499l54.083 162.167c1.385 4.022 2.184 8.656 2.184 13.477a42.493 42.493 0 0 1-4.713 19.513l.112-.239a315.08 315.08 0 0 0-33.833 142.833v.086-.002A319.724 319.724 0 0 0 390.25 755.417c.299.139.354.167.408.195l-.242-.112a315.067 315.067 0 0 0 142.833 33.833z'/%3E%3Cglyph unicode='' glyph-name='message-square' d='M213.333 874.667c-70.187 0-128-57.813-128-128V64c.01-23.559 19.11-42.654 42.671-42.654 11.778 0 22.442 4.772 30.163 12.488L316.333 192h494.333c70.187 0 128 57.813 128 128v426.667c0 70.187-57.813 128-128 128zm0-85.334h597.333c24.07 0 42.667-18.597 42.667-42.667V319.999c0-24.07-18.597-42.667-42.667-42.667h-512c-11.781-.002-22.446-4.779-30.167-12.5l-97.833-97.833v579.667c0 24.07 18.597 42.667 42.667 42.667z'/%3E%3Cglyph unicode='' glyph-name='mic-off' d='M42.25 960.417c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L951.166-51.5c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013L72.833 947.5c-7.76 7.971-18.594 12.916-30.583 12.917zm486.917-1.167c-77.708 7.849-164.965-40.039-184.417-135.833-.739-2.971-1.162-6.382-1.162-9.891 0-23.567 19.104-42.671 42.671-42.671 21.055 0 38.549 15.25 42.038 35.307l.037.255c11.284 55.569 50.883 72.095 92.25 67.917s76.807-28.214 76.75-84.917v-.086.002V561.5a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 227.833c.053 97.7-75.815 162.07-153.5 169.917zm-145.834-340c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V576 448c.065-74.157 46.545-133.207 105.417-157.583s133.364-15.488 185.833 36.917c8.115 7.781 13.158 18.711 13.158 30.819 0 23.567-19.104 42.671-42.671 42.671-12.067 0-22.964-5.009-30.725-13.06l-.013-.013c-28.151-28.116-62.825-30.994-93-18.5s-52.632 38.964-52.667 78.75v128c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-170.666-42.667c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-85c-1.109-151.616 91.97-268.915 211.167-318.083s267.892-31.638 374 76.667c7.54 7.693 12.194 18.241 12.194 29.875 0 23.579-19.115 42.694-42.694 42.694-11.945 0-22.744-4.905-30.493-12.812l-.007-.007c-81.879-83.574-190.203-94.748-280.5-57.5s-159.189 121.504-158.333 238.5V448.01v-.009 85.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm597.333 0c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V448a255.178 255.178 0 0 0-4-44.917c-.429-2.271-.674-4.884-.674-7.554 0-23.567 19.105-42.672 42.672-42.672 20.906 0 38.3 15.034 41.962 34.88l.04.263c3.551 19.795 5.316 39.889 5.333 60v85.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-298.667-384c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-170.667a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 170.667c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-170-171.25c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h341.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='mic' d='M512 960c-93.751 0-170.667-76.915-170.667-170.667V448c0-53.333 21.536-98.764 54.333-127.917s74.852-42.75 116.333-42.75c41.481 0 83.536 13.597 116.333 42.75S682.665 394.666 682.665 448v341.333C682.665 883.084 605.75 960 511.998 960zm0-85.333c47.634 0 85.333-37.7 85.333-85.333V448.001c0-32-10.464-50.57-25.667-64.083s-37.148-21.25-59.667-21.25-44.464 7.736-59.667 21.25-25.667 32.083-25.667 64.083v341.333c0 47.634 37.7 85.333 85.333 85.333zM212.667 576.583c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V448c0-188.008 153.326-341.333 341.333-341.333S853.333 259.992 853.333 448v85.333c.003.179.004.391.004.603 0 23.567-19.104 42.671-42.671 42.671s-42.671-19.104-42.671-42.671c0-.212.002-.424.005-.635v.032V448c0-141.89-114.11-256-256-256S256 306.11 256 448v85.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm298.666-384c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-170.667a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 170.667c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-170-171.25c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h341.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='minimize-2' d='M170.667 405.333c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H384V106.667a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 256c-.002 23.563-19.103 42.664-42.666 42.667zm426 427.25c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-256c.002-23.563 19.103-42.664 42.666-42.667h256c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H640v213.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm298.5 42.5a42.576 42.576 0 0 1-29.324-12.907L567.166 563.499c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 298.667 298.667c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zM425.833 405.75a42.576 42.576 0 0 1-29.324-12.907L97.832 94.166c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 298.667 298.667c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002z'/%3E%3Cglyph unicode='' glyph-name='minimize' d='M340.667 875.25c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V832 704c0-24.07-18.597-42.667-42.667-42.667H128c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H256c70.187 0 128 57.813 128 128v128c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm341.333 0c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V832 704c0-70.187 57.813-128 128-128h128c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H768c-24.07 0-42.667 18.597-42.667 42.667v128c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zM128 320c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H256c24.07 0 42.667-18.597 42.667-42.667V64a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V64v128c0 70.187-57.813 128-128 128zm640 0c-70.187 0-128-57.813-128-128V64a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V64v128c0 24.07 18.597 42.667 42.667 42.667h128c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H896z'/%3E%3Cglyph unicode='' glyph-name='minus-circle' d='M512 917.333C253.3 917.333 42.667 706.7 42.667 448S253.3-21.333 512-21.333C770.7-21.333 981.333 189.3 981.333 448S770.7 917.333 512 917.333zM512 832c212.583 0 384-171.417 384-384S724.583 64 512 64 128 235.417 128 448s171.417 384 384 384zM341.333 490.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h341.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='minus-square' d='M213.333 874.667c-70.174 0-128-57.826-128-128V149.334c0-70.174 57.826-128 128-128h597.333c70.174 0 128 57.826 128 128v597.333c0 70.174-57.826 128-128 128zm0-85.334h597.333c24.375 0 42.667-18.291 42.667-42.667V149.333c0-24.375-18.291-42.667-42.667-42.667H213.333c-24.375 0-42.667 18.291-42.667 42.667v597.333c0 24.375 18.291 42.667 42.667 42.667zm128-298.666c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h341.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='minus' d='M213.333 490.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h597.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='monitor' d='M170.667 874.667c-70.174 0-128-57.826-128-128V320c0-70.174 57.826-128 128-128h682.667c70.174 0 128 57.826 128 128v426.667c0 70.174-57.826 128-128 128zm0-85.334h682.667c24.375 0 42.667-18.291 42.667-42.667V319.999c0-24.375-18.291-42.667-42.667-42.667H170.667c-24.375 0-42.667 18.291-42.667 42.667v426.667c0 24.375 18.291 42.667 42.667 42.667zm170.666-682.666c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h341.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm170 171.25c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V64a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V64v170.667c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='moon' d='M478.583 874.667c-.135.002-.294.002-.453.002-1.337 0-2.659-.061-3.964-.182l.168.012C117.386 841.513-41.543 401.376 211.917 147.916S905.514 53.384 938.5 410.333c.115 1.175.18 2.54.18 3.92 0 23.567-19.104 42.671-42.671 42.671a42.476 42.476 0 0 1-25.456-8.422l.113.081c-121.767-90.006-250.451-57.965-333.25 24.833s-114.839 211.483-24.833 333.25c5.204 6.991 8.332 15.795 8.332 25.33 0 23.447-18.912 42.477-42.314 42.669h-.018zm-77.083-104.5c-49.658-131.47-12.723-268.777 75.583-357.083s225.614-125.242 357.083-75.583c-77.743-230.648-375.973-315.194-561.917-129.25s-101.398 484.174 129.25 561.917z'/%3E%3Cglyph unicode='' glyph-name='more-horizontal' d='M512 533.333c-46.623 0-85.333-38.71-85.333-85.333s38.71-85.333 85.333-85.333 85.333 38.71 85.333 85.333-38.71 85.333-85.333 85.333zm298.667 0c-46.623 0-85.333-38.71-85.333-85.333s38.71-85.333 85.333-85.333S896 401.377 896 448s-38.71 85.333-85.333 85.333zm-597.334 0C166.71 533.333 128 494.623 128 448s38.71-85.333 85.333-85.333 85.333 38.71 85.333 85.333-38.71 85.333-85.333 85.333z'/%3E%3Cglyph unicode='' glyph-name='more-vertical' d='M512 533.333c-46.623 0-85.333-38.71-85.333-85.333s38.71-85.333 85.333-85.333 85.333 38.71 85.333 85.333-38.71 85.333-85.333 85.333zM512 832c-46.623 0-85.333-38.71-85.333-85.333s38.71-85.333 85.333-85.333 85.333 38.71 85.333 85.333S558.623 832 512 832zm0-597.333c-46.623 0-85.333-38.71-85.333-85.333S465.377 64.001 512 64.001s85.333 38.71 85.333 85.333-38.71 85.333-85.333 85.333z'/%3E%3Cglyph unicode='' glyph-name='move' d='M212.5 619.083a42.576 42.576 0 0 1-29.324-12.907l-128.01-128.01c-7.718-7.721-12.492-18.387-12.492-30.167s4.774-22.445 12.492-30.167l128-128c7.778-8.091 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-97.833 97.833 97.833 97.833c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zm298.833 298.25c-11.538-.19-21.934-4.93-29.5-12.5l-128-128c-8.091-7.778-13.118-18.692-13.118-30.78 0-23.567 19.104-42.671 42.671-42.671 12.088 0 23.003 5.027 30.767 13.104l.013.014 97.833 97.833 97.833-97.833c7.778-8.091 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-128 128c-7.723 7.726-18.393 12.505-30.18 12.505-.23 0-.459-.002-.688-.005h.035zm-127.75-724.916c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L481.832-8.833c7.721-7.718 18.387-12.492 30.167-12.492s22.445 4.774 30.167 12.492l128 128c8.092 7.778 13.118 18.692 13.118 30.781 0 23.567-19.104 42.671-42.671 42.671-12.089 0-23.003-5.027-30.767-13.104l-.013-.014L512 81.668l-97.833 97.833c-7.76 7.971-18.594 12.916-30.583 12.917zM810.25 619.083c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L878.332 448l-97.833-97.833c-8.092-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 128 128c7.718 7.721 12.492 18.387 12.492 30.167s-4.774 22.445-12.492 30.167l-128 128c-7.76 7.971-18.594 12.916-30.583 12.917zM85.333 490.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h853.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm426 427.25c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V21.334a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 853.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='music' d='M725.333 362.667c-70.187 0-128-57.813-128-128s57.813-128 128-128h85.333c70.187 0 128 57.813 128 128V320c-.002 23.563-19.103 42.664-42.666 42.667zm-512-85.334c-70.187 0-128-57.813-128-128s57.813-128 128-128h85.333c70.187 0 128 57.813 128 128v85.333c-.002 23.563-19.103 42.664-42.666 42.667zm512 0h128v-42.667c0-24.07-18.597-42.667-42.667-42.667h-85.333c-24.07 0-42.667 18.597-42.667 42.667s18.597 42.667 42.667 42.667zm-512-85.333h128v-42.667c0-24.07-18.597-42.667-42.667-42.667h-85.333c-24.07 0-42.667 18.597-42.667 42.667S189.263 192 213.333 192zM894.75 874.667a42.938 42.938 0 0 1-6.006-.621l.256.037-512-85.333c-20.36-3.481-35.662-20.994-35.667-42.083V234.666a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 475.833l426.667 71.167V319.999a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 512.014c0 23.567-19.104 42.671-42.671 42.671-.438 0-.875-.007-1.309-.02l.064.002z'/%3E%3Cglyph unicode='' glyph-name='navigation-2' d='M512.75 917.333c-.211.004-.46.006-.709.006-18.272 0-33.861-11.484-39.944-27.629l-.097-.294L173.333 78.749c-1.669-4.388-2.635-9.462-2.635-14.762 0-23.567 19.104-42.671 42.671-42.671a42.476 42.476 0 0 1 21.336 5.709l-.205-.11L512 185.498 789.5 26.915c6.071-3.521 13.358-5.599 21.13-5.599 23.567 0 42.671 19.104 42.671 42.671 0 5.3-.966 10.374-2.732 15.055l.097-.294-298.667 810.667c-6.087 16.193-21.297 27.573-39.208 27.916l-.042.001zm-.75-166 218.167-592.167-197 112.583c-6.08 3.534-13.38 5.62-21.167 5.62s-15.087-2.086-21.371-5.729l.205.11-197-112.583z'/%3E%3Cglyph unicode='' glyph-name='navigation' d='M939.167 917.333a42.502 42.502 0 0 1-19.006-4.194l.256.111-810.667-384c-14.575-6.996-24.46-21.638-24.46-38.59 0-19.911 13.637-36.637 32.081-41.346l.295-.064 316.5-79.083 79.083-316.5c4.774-18.739 21.5-32.376 41.41-32.376 16.951 0 31.594 9.884 38.479 24.204l.111.256 384 810.667c2.587 5.342 4.099 11.619 4.099 18.249 0 23.395-18.827 42.392-42.156 42.668h-.026zm-90.25-132.416-281.75-594.833-56.417 225.583c-3.914 15.332-15.752 27.169-30.788 31.019l-.296.064-225.583 56.417z'/%3E%3Cglyph unicode='' glyph-name='octagon' d='M335.333 917.333c-11.781-.002-22.446-4.779-30.167-12.5l-250-250c-7.721-7.72-12.498-18.385-12.5-30.166V271.333c.002-11.781 4.779-22.446 12.5-30.167l250-250c7.72-7.721 18.385-12.498 30.166-12.5h353.334c11.781.002 22.446 4.779 30.167 12.5l250 250c7.721 7.72 12.498 18.385 12.5 30.166v353.333c-.002 11.781-4.779 22.446-12.5 30.167l-250 250c-7.72 7.721-18.385 12.498-30.166 12.5zM353 832h318l225-225V289L671 64H353L128 289v318z'/%3E%3Cglyph unicode='' glyph-name='package' d='M512 949.667c-19.518 0-39.076-4.427-57-13.333h-.088.002L113.581 765.667c-43.382-21.585-70.889-66.123-70.915-114.583V245.167c-.338-48.568 27.042-93.312 70.417-115.167l.091-.093-.008.008L454.499-40.752c36.022-18.025 78.561-18.025 114.583 0l341.25 170.667c43.417 21.576 70.974 66.02 71 114.502v.088-.002 406.581c-.026 48.46-27.533 92.998-70.917 114.583h-.085L569.08 936.334h-.088.002c-17.92 8.907-37.478 13.333-56.996 13.333zm-19-89.75a42.622 42.622 0 0 0 38 0l341.25-170.583.076-.074.01-.009c14.579-7.245 23.656-21.885 23.665-38.167V244.501c-.009-16.282-9.086-30.921-23.667-38.167l-.084-.084-.001-.001L530.916 35.582a42.693 42.693 0 0 0-38.25 0L151.499 206.249c-14.566 7.342-23.612 22.024-23.498 38.335V244.925v-.009 406.167c.009 16.282 9.086 30.921 23.667 38.167l.082.082.001.001zM97.5 740.083c-23.143-.546-41.695-19.436-41.695-42.66 0-16.816 9.727-31.36 23.861-38.312l.251-.111 413-206.5c5.56-2.841 12.127-4.505 19.083-4.505s13.524 1.665 19.326 4.617l-.242-.112 413 206.5c14.101 7.161 23.595 21.557 23.595 38.17 0 23.567-19.105 42.672-42.672 42.672a42.497 42.497 0 0 1-19.332-4.62l.242.112-393.917-197-393.917 197c-5.689 3-12.433 4.762-19.588 4.762a40.5 40.5 0 0 1-1.047-.013l.052.001zm413.833-206.166c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-501.75a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 501.75c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zM297.167 853.583c-23.143-.546-41.695-19.436-41.695-42.66 0-16.816 9.727-31.36 23.861-38.312l.251-.111 426.667-213.333c5.562-2.844 12.133-4.51 19.094-4.51 23.567 0 42.672 19.105 42.672 42.672 0 16.615-9.496 31.012-23.356 38.06l-.243.112-426.667 213.333c-5.689 3-12.433 4.762-19.588 4.762a40.5 40.5 0 0 1-1.047-.013l.052.001z'/%3E%3Cglyph unicode='' glyph-name='paperclip' d='M683.333 946.167c-54.514 3.207-113.209-17.459-161-65.25L130.25 488.834c-67.916-67.916-96.131-149.187-91.667-225.083s39.682-145.516 91.667-197.5c51.984-51.984 121.604-87.202 197.5-91.667S484.918-1.665 552.833 66.251l392.083 392.083c8.092 7.778 13.118 18.692 13.118 30.781 0 23.567-19.104 42.671-42.671 42.671-12.089 0-23.003-5.027-30.767-13.104l-.013-.014L492.5 126.585c-52.831-52.831-107.353-69.916-159.75-66.833S229.159 88.01 190.583 126.585c-38.576 38.576-63.751 89.77-66.833 142.167s14.003 106.919 66.833 159.75l392.083 392.083c32.706 32.706 64.652 42.241 95.667 40.417s62.018-16.934 85.5-40.417c23.482-23.482 38.592-54.485 40.417-85.5s-7.71-62.96-40.417-95.667l-392.5-392.083c-12.582-12.582-21.868-14.567-31.5-14s-20.528 5.611-28.917 14c-8.389 8.389-13.433 19.284-14 28.917s1.418 18.918 14 31.5l362.25 361.833c8.091 7.778 13.118 18.692 13.118 30.78 0 23.567-19.104 42.671-42.671 42.671-12.088 0-23.002-5.027-30.767-13.104l-.013-.014-362.25-361.833c-27.667-27.667-40.782-63.701-38.833-96.833s17.036-62.452 38.833-84.25c21.798-21.798 51.118-36.884 84.25-38.833s69.166 11.166 96.833 38.833l392.5 392.083c47.791 47.791 68.457 106.486 65.25 161s-28.359 103.942-65.25 140.833c-36.891 36.891-86.319 62.043-140.833 65.25z'/%3E%3Cglyph unicode='' glyph-name='pause-circle' d='M512 917.333C253.3 917.333 42.667 706.7 42.667 448S253.3-21.333 512-21.333C770.7-21.333 981.333 189.3 981.333 448S770.7 917.333 512 917.333zM512 832c212.583 0 384-171.417 384-384S724.583 64 512 64 128 235.417 128 448s171.417 384 384 384zm-86-212.75c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V576 320a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V320v256c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm170.667 0c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V576 320a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V320v256c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='pause' d='M256 832c-23.563-.002-42.664-19.103-42.667-42.666V106.667c.002-23.563 19.103-42.664 42.666-42.667h170.667c23.563.002 42.664 19.103 42.667 42.666v682.667c-.002 23.563-19.103 42.664-42.666 42.667zm42.667-85.333H384V149.334h-85.333zM597.333 832c-23.563-.002-42.664-19.103-42.667-42.666V106.667c.002-23.563 19.103-42.664 42.666-42.667h170.667c23.563.002 42.664 19.103 42.667 42.666v682.667C810.664 812.896 791.563 831.997 768 832zM640 746.667h85.333V149.334H640z'/%3E%3Cglyph unicode='' glyph-name='percent' d='M809.833 789.75a42.576 42.576 0 0 1-29.324-12.907L183.166 179.5c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 597.333 597.333c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zM277.333 832C195.364 832 128 764.636 128 682.667s67.364-149.333 149.333-149.333 149.333 67.364 149.333 149.333S359.302 832 277.333 832zm0-85.333c35.852 0 64-28.148 64-64s-28.148-64-64-64c-35.852 0-64 28.148-64 64s28.148 64 64 64zm469.334-384c-81.969 0-149.333-67.364-149.333-149.333S664.698 64.001 746.667 64.001 896 131.365 896 213.334s-67.364 149.333-149.333 149.333zm0-85.334c35.852 0 64-28.148 64-64s-28.148-64-64-64c-35.852 0-64 28.148-64 64s28.148 64 64 64z'/%3E%3Cglyph unicode='' glyph-name='phone-call' d='M642.583 960.083c-.505.021-1.098.034-1.694.034-23.567 0-42.671-19.104-42.671-42.671 0-22.344 17.174-40.677 39.042-42.519l.156-.011c158.75-17.636 283.664-142.355 301.5-301.083 2.466-21.444 20.515-37.942 42.418-37.942 23.573 0 42.682 19.109 42.682 42.682 0 1.677-.097 3.331-.285 4.958l.019-.198C1001.515 781.21 844.738 937.764 646.833 959.75a40.477 40.477 0 0 1-4.188.332l-.062.001zm-467.25-42.75c-74.53-.07-134.041-65.272-127.333-139.5l-.001-.333.001-.351v.018c14.71-138.52 61.94-271.667 137.667-388.583.014-.021-.014-.064 0-.085 68.842-108.222 160.659-199.958 268.917-268.75a887.06 887.06 0 0 1 386.5-137.417c.046-.011.303-.041.561-.069l.189-.017c74.472-6.73 139.804 53.225 139.5 128v126.75c1.603 64.626-46.071 120.886-110.083 129.917.14-.02-.002.009-.143.038l-.275.047a504.578 504.578 0 0 0-110.417 27.5h-.085c-46.659 17.503-99.562 6.21-135-28.833l-.165-.165-28.085-28.085c-78.985 50.276-145.389 116.681-195.664 195.668l28.083 28.083.164.164.003.003c35.044 35.438 46.336 88.341 28.833 135v.083A504.677 504.677 0 0 0 431 806.833c-.076.416-.106.557-.136.698l.051-.281c-8.944 63.291-64.081 110.712-127.998 110.083zm0-85.333h128l.208-.001.22.001h-.011c21.746.214 39.623-15.134 42.667-36.667v.333a589.942 589.942 0 0 1 32.166-129.167V666.328v.005c5.898-15.689 2.202-33.082-9.583-45l-54-54c-7.717-7.721-12.49-18.386-12.49-30.165a42.471 42.471 0 0 1 5.683-21.291l-.11.206a725.341 725.341 0 0 1 272-272c6.06-3.505 13.331-5.573 21.085-5.573 11.779 0 22.444 4.773 30.165 12.49l54 54c11.918 11.785 29.311 15.481 45 9.583H730.504h-.005a589.93 589.93 0 0 1 129.167-32.167h-.333c21.796-3.075 37.213-21.245 36.667-43.25a45.132 45.132 0 0 1 .001-1.112v.029-128.171.005c.102-25.753-20.711-44.787-46.333-42.583-124.441 13.617-243.963 56.051-349 124.167a5.956 5.956 0 0 1-.225.174l-.108.078C402.53 253.9 319.566 336.78 257.418 434.584c-.167.354-.223.463-.279.572l.112-.239c-68.387 105.566-110.901 225.767-124.25 350.834-2.142 25.46 16.748 46.18 42.333 46.25zm466.5-42.583-.277.001c-23.567 0-42.671-19.104-42.671-42.671 0-20.896 15.02-38.284 34.852-41.956l.263-.04c68.322-13.33 121.42-66.428 134.75-134.75 3.959-19.821 21.219-34.549 41.919-34.549 23.585 0 42.705 19.12 42.705 42.705a42.92 42.92 0 0 1-.836 8.45l.046-.273c-19.934 102.173-100.077 182.316-202.25 202.25-2.523.53-5.422.833-8.393.833h-.113.006z'/%3E%3Cglyph unicode='' glyph-name='phone-forwarded' d='M810.25 960.417c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l140.509-140.509-140.5-140.5c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014L1011.499 716.5c7.718 7.721 12.492 18.387 12.492 30.167s-4.774 22.445-12.492 30.167L840.832 947.501c-7.76 7.971-18.594 12.916-30.583 12.917zM640 789.333c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h341.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm-464.667 128c-74.53-.07-134.041-65.272-127.333-139.5l-.001-.333.001-.351v.018c14.71-138.52 61.94-271.667 137.667-388.583.014-.021-.014-.064 0-.085 68.842-108.222 160.659-199.958 268.917-268.75a887.06 887.06 0 0 1 386.5-137.417c.046-.011.303-.041.561-.069l.189-.017c74.472-6.73 139.804 53.225 139.5 128v126.75c1.603 64.626-46.071 120.886-110.083 129.917.14-.02-.002.009-.143.038l-.275.047a504.578 504.578 0 0 0-110.417 27.5h-.085c-46.659 17.503-99.562 6.21-135-28.833l-.165-.165-28.085-28.085c-78.985 50.276-145.389 116.681-195.664 195.668l28.083 28.083.164.164.003.003c35.044 35.438 46.336 88.341 28.833 135v.083A504.677 504.677 0 0 0 431 806.833c-.076.416-.106.557-.136.698l.051-.281c-8.944 63.291-64.081 110.712-127.998 110.083zm0-85.333h128l.208-.001.22.001h-.011c21.746.214 39.623-15.134 42.667-36.667v.333a589.942 589.942 0 0 1 32.166-129.167V666.328v.005c5.898-15.689 2.202-33.082-9.583-45l-54-54c-7.717-7.721-12.49-18.386-12.49-30.165a42.471 42.471 0 0 1 5.683-21.291l-.11.206a725.341 725.341 0 0 1 272-272c6.06-3.505 13.331-5.573 21.085-5.573 11.779 0 22.444 4.773 30.165 12.49l54 54c11.918 11.785 29.311 15.481 45 9.583H730.504h-.005a589.93 589.93 0 0 1 129.167-32.167h-.333c21.796-3.075 37.213-21.245 36.667-43.25a45.132 45.132 0 0 1 .001-1.112v.029-128.171.005c.102-25.753-20.711-44.787-46.333-42.583-124.441 13.617-243.963 56.051-349 124.167a5.956 5.956 0 0 1-.225.174l-.108.078C402.53 253.9 319.566 336.78 257.418 434.584c-.167.354-.223.463-.279.572l.112-.239c-68.387 105.566-110.901 225.767-124.25 350.834-2.142 25.46 16.748 46.18 42.333 46.25z'/%3E%3Cglyph unicode='' glyph-name='phone-incoming' d='M682 917.917c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-256c.002-23.563 19.103-42.664 42.666-42.667h256c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H725.333v213.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm298.5 42.5a42.576 42.576 0 0 1-29.324-12.907L652.499 648.833c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 298.667 298.667c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zm-805.167-43.084c-74.53-.07-134.041-65.272-127.333-139.5l-.001-.333.001-.351v.018c14.71-138.52 61.94-271.667 137.667-388.583.014-.021-.014-.064 0-.085 68.842-108.222 160.659-199.958 268.917-268.75a887.06 887.06 0 0 1 386.5-137.417c.046-.011.303-.041.561-.069l.189-.017c74.472-6.73 139.804 53.225 139.5 128v126.75c1.603 64.626-46.071 120.886-110.083 129.917.14-.02-.002.009-.143.038l-.275.047a504.578 504.578 0 0 0-110.417 27.5h-.085c-46.659 17.503-99.562 6.21-135-28.833l-.165-.165-28.085-28.085c-78.985 50.276-145.389 116.681-195.664 195.668l28.083 28.083.164.164.003.003c35.044 35.438 46.336 88.341 28.833 135v.083A504.677 504.677 0 0 0 431 806.833c-.076.416-.106.557-.136.698l.051-.281c-8.944 63.291-64.081 110.712-127.998 110.083zm0-85.333h128l.208-.001.22.001h-.011c21.746.214 39.623-15.134 42.667-36.667v.333a589.942 589.942 0 0 1 32.166-129.167V666.328v.005c5.898-15.689 2.202-33.082-9.583-45l-54-54c-7.717-7.721-12.49-18.386-12.49-30.165a42.471 42.471 0 0 1 5.683-21.291l-.11.206a725.341 725.341 0 0 1 272-272c6.06-3.505 13.331-5.573 21.085-5.573 11.779 0 22.444 4.773 30.165 12.49l54 54c11.918 11.785 29.311 15.481 45 9.583H730.504h-.005a589.93 589.93 0 0 1 129.167-32.167h-.333c21.796-3.075 37.213-21.245 36.667-43.25a45.132 45.132 0 0 1 .001-1.112v.029-128.171.005c.102-25.753-20.711-44.787-46.333-42.583-124.441 13.617-243.963 56.051-349 124.167a5.956 5.956 0 0 1-.225.174l-.108.078C402.53 253.9 319.566 336.78 257.418 434.584c-.167.354-.223.463-.279.572l.112-.239c-68.387 105.566-110.901 225.767-124.25 350.834-2.142 25.46 16.748 46.18 42.333 46.25z'/%3E%3Cglyph unicode='' glyph-name='phone-missed' d='M980.5 960.417a42.576 42.576 0 0 1-29.324-12.907L695.166 691.5c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 256 256c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zm-255.583 0c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l256.009-256.009c7.778-8.091 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-256 256c-7.76 7.971-18.594 12.916-30.583 12.917zm-549.584-43.084c-74.53-.07-134.041-65.272-127.333-139.5l-.001-.333.001-.351v.018c14.71-138.52 61.94-271.667 137.667-388.583.014-.021-.014-.064 0-.085 68.842-108.222 160.659-199.958 268.917-268.75a887.06 887.06 0 0 1 386.5-137.417c.046-.011.303-.041.561-.069l.189-.017c74.472-6.73 139.804 53.225 139.5 128v126.75c1.603 64.626-46.071 120.886-110.083 129.917.14-.02-.002.009-.143.038l-.275.047a504.578 504.578 0 0 0-110.417 27.5h-.085c-46.659 17.503-99.562 6.21-135-28.833l-.165-.165-28.085-28.085c-78.985 50.276-145.389 116.681-195.664 195.668l28.083 28.083.164.164.003.003c35.044 35.438 46.336 88.341 28.833 135v.083A504.677 504.677 0 0 0 431 806.833c-.076.416-.106.557-.136.698l.051-.281c-8.944 63.291-64.081 110.712-127.998 110.083zm0-85.333h128l.208-.001.22.001h-.011c21.746.214 39.623-15.134 42.667-36.667v.333a589.942 589.942 0 0 1 32.166-129.167V666.328v.005c5.898-15.689 2.202-33.082-9.583-45l-54-54c-7.717-7.721-12.49-18.386-12.49-30.165a42.471 42.471 0 0 1 5.683-21.291l-.11.206a725.341 725.341 0 0 1 272-272c6.06-3.505 13.331-5.573 21.085-5.573 11.779 0 22.444 4.773 30.165 12.49l54 54c11.918 11.785 29.311 15.481 45 9.583H730.504h-.005a589.93 589.93 0 0 1 129.167-32.167h-.333c21.796-3.075 37.213-21.245 36.667-43.25a45.132 45.132 0 0 1 .001-1.112v.029-128.171.005c.102-25.753-20.711-44.787-46.333-42.583-124.441 13.617-243.963 56.051-349 124.167a5.956 5.956 0 0 1-.225.174l-.108.078C402.53 253.9 319.566 336.78 257.418 434.584c-.167.354-.223.463-.279.572l.112-.239c-68.387 105.566-110.901 225.767-124.25 350.834-2.142 25.46 16.748 46.18 42.333 46.25z'/%3E%3Cglyph unicode='' glyph-name='phone-off' d='M175.333 917.333c-74.53-.07-134.041-65.272-127.333-139.5a42.081 42.081 0 0 1 0-.77v.02c14.987-137.925 62.18-270.43 137.667-386.833 7.634-12.294 21.061-20.358 36.372-20.358 23.567 0 42.671 19.104 42.671 42.671 0 9.006-2.79 17.36-7.553 24.246l.093-.142c-68.116 105.037-110.633 224.559-124.25 349-2.193 25.5 16.719 46.263 42.333 46.333h128l.208-.001.22.001h-.011c21.746.214 39.623-15.134 42.667-36.667v.333a589.942 589.942 0 0 1 32.166-129.167V666.328v.005c5.898-15.689 2.202-33.082-9.583-45l-54-54c-8.091-7.778-13.118-18.692-13.118-30.78 0-23.567 19.104-42.671 42.671-42.671 12.088 0 23.002 5.027 30.767 13.103l.013.014 54.167 54.167.164.164.003.003c35.044 35.438 46.336 88.341 28.833 135v.083A504.677 504.677 0 0 0 431 806.833c-.076.416-.106.557-.136.698l.051-.281c-8.944 63.291-64.081 110.712-127.998 110.083zM455.25 435.167c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l.009-.009a725.163 725.163 0 0 1 154.583-117.833c6.06-3.505 13.331-5.573 21.085-5.573 11.779 0 22.444 4.773 30.165 12.49l54 54c11.918 11.785 29.311 15.481 45 9.583H730.503h-.005a589.93 589.93 0 0 1 129.167-32.167h-.333c21.533-3.043 36.881-20.921 36.667-42.667l-.001-.209.001-.22v.011-128.171.005c.102-25.753-20.711-44.787-46.333-42.583-124.441 13.617-243.963 56.134-349 124.25.131-.056.022 0-.088.055l-.245.112c-48.756 30.959-93.936 67.225-134.751 108.085-7.728 7.738-18.409 12.525-30.208 12.525-23.578 0-42.692-19.114-42.692-42.692 0-11.779 4.77-22.443 12.484-30.167 45.148-45.198 95.169-85.231 149.083-119.5.021-.014.064.014.085 0C570.722 45.788 703.183-1.432 841.084-16.416c.046-.011.303-.041.561-.069l.189-.017c74.472-6.73 139.804 53.225 139.5 128v127.417c.629 63.917-46.792 119.054-110.083 128 .14-.02-.002.009-.143.038l-.275.047a504.578 504.578 0 0 0-110.417 27.5h-.085c-46.659 17.503-99.562 6.21-135-28.833l-.165-.165-28.085-28.085c-39.467 25.11-78.141 51.696-111.249 84.833-7.76 7.971-18.594 12.916-30.583 12.917zm525.25 525.25a42.576 42.576 0 0 1-29.324-12.907L12.499 8.833C4.408 1.055-.619-9.859-.619-21.948c0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 938.667 938.667c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002z'/%3E%3Cglyph unicode='' glyph-name='phone-outgoing' d='M725.333 960c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h213.301V661.334a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 256c-.002 23.563-19.103 42.664-42.666 42.667zm255.167.417a42.576 42.576 0 0 1-29.324-12.907L652.499 648.833c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 298.667 298.667c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zm-805.167-43.084c-74.53-.07-134.041-65.272-127.333-139.5l-.001-.333.001-.351v.018c14.71-138.52 61.94-271.667 137.667-388.583.014-.021-.014-.064 0-.085 68.842-108.222 160.659-199.958 268.917-268.75a887.06 887.06 0 0 1 386.5-137.417c.046-.011.303-.041.561-.069l.189-.017c74.472-6.73 139.804 53.225 139.5 128v126.75c1.603 64.626-46.071 120.886-110.083 129.917.14-.02-.002.009-.143.038l-.275.047a504.578 504.578 0 0 0-110.417 27.5h-.085c-46.659 17.503-99.562 6.21-135-28.833l-.165-.165-28.085-28.085c-78.985 50.276-145.389 116.681-195.664 195.668l28.083 28.083.164.164.003.003c35.044 35.438 46.336 88.341 28.833 135v.083A504.677 504.677 0 0 0 431 806.833c-.076.416-.106.557-.136.698l.051-.281c-8.944 63.291-64.081 110.712-127.998 110.083zm0-85.333h128l.208-.001.22.001h-.011c21.746.214 39.623-15.134 42.667-36.667v.333a589.942 589.942 0 0 1 32.166-129.167V666.328v.005c5.898-15.689 2.202-33.082-9.583-45l-54-54c-7.717-7.721-12.49-18.386-12.49-30.165a42.471 42.471 0 0 1 5.683-21.291l-.11.206a725.341 725.341 0 0 1 272-272c6.06-3.505 13.331-5.573 21.085-5.573 11.779 0 22.444 4.773 30.165 12.49l54 54c11.918 11.785 29.311 15.481 45 9.583H730.504h-.005a589.93 589.93 0 0 1 129.167-32.167h-.333c21.796-3.075 37.213-21.245 36.667-43.25a45.132 45.132 0 0 1 .001-1.112v.029-128.171.005c.102-25.753-20.711-44.787-46.333-42.583-124.441 13.617-243.963 56.051-349 124.167a5.956 5.956 0 0 1-.225.174l-.108.078C402.53 253.9 319.566 336.78 257.418 434.584c-.167.354-.223.463-.279.572l.112-.239c-68.387 105.566-110.901 225.767-124.25 350.834-2.142 25.46 16.748 46.18 42.333 46.25z'/%3E%3Cglyph unicode='' glyph-name='phone' d='M175.333 917.333c-74.53-.07-134.041-65.272-127.333-139.5l-.001-.333.001-.351v.018c14.71-138.52 61.94-271.667 137.667-388.583.014-.021-.014-.064 0-.085 68.842-108.222 160.659-199.958 268.917-268.75a887.06 887.06 0 0 1 386.5-137.417c.046-.011.303-.041.561-.069l.189-.017c74.472-6.73 139.804 53.225 139.5 128v126.75c1.603 64.626-46.071 120.886-110.083 129.917.14-.02-.002.009-.143.038l-.275.047a504.578 504.578 0 0 0-110.417 27.5h-.085c-46.659 17.503-99.562 6.21-135-28.833l-.165-.165-28.085-28.085c-78.985 50.276-145.389 116.681-195.664 195.668l28.083 28.083.164.164.003.003c35.044 35.438 46.336 88.341 28.833 135v.083A504.677 504.677 0 0 0 431 806.833c-.076.416-.106.557-.136.698l.051-.281c-8.944 63.291-64.081 110.712-127.998 110.083zm0-85.333h128l.208-.001.22.001h-.011c21.746.214 39.623-15.134 42.667-36.667v.333a589.942 589.942 0 0 1 32.166-129.167V666.328v.005c5.898-15.689 2.202-33.082-9.583-45l-54-54c-7.717-7.721-12.49-18.386-12.49-30.165a42.471 42.471 0 0 1 5.683-21.291l-.11.206a725.341 725.341 0 0 1 272-272c6.06-3.505 13.331-5.573 21.085-5.573 11.779 0 22.444 4.773 30.165 12.49l54 54c11.918 11.785 29.311 15.481 45 9.583H730.504h-.005a589.93 589.93 0 0 1 129.167-32.167h-.333c21.796-3.075 37.213-21.245 36.667-43.25a45.132 45.132 0 0 1 .001-1.112v.029-128.171.005c.102-25.753-20.711-44.787-46.333-42.583-124.441 13.617-243.963 56.051-349 124.167a5.956 5.956 0 0 1-.225.174l-.108.078C402.53 253.9 319.566 336.78 257.418 434.584c-.167.354-.223.463-.279.572l.112-.239c-68.387 105.566-110.901 225.767-124.25 350.834-2.142 25.46 16.748 46.18 42.333 46.25z'/%3E%3Cglyph unicode='' glyph-name='pie-chart' d='M339.5 882.083c-5.588-.322-10.785-1.671-15.514-3.86l.264.11C21.418 746.182-52.963 346.712 182 114.416s633.566-153.321 762.25 151c2.323 5.097 3.677 11.054 3.677 17.328 0 23.567-19.104 42.671-42.671 42.671-17.83 0-33.105-10.935-39.486-26.465l-.103-.284C759.35 47.241 436.123-16.752 242 175.166s-133.778 515.819 116.417 625c15.448 6.647 26.068 21.738 26.068 39.309 0 23.567-19.104 42.671-42.671 42.671-.814 0-1.623-.023-2.425-.068l.111.005zm172.5 35.25c-23.563-.002-42.664-19.103-42.667-42.666V448c.002-23.563 19.103-42.664 42.666-42.667h426.667c23.563.002 42.664 19.103 42.667 42.666 0 258.7-210.633 469.333-469.333 469.333zm42.667-93.916c176.682-20.384 312.366-156.068 332.75-332.75h-332.75z'/%3E%3Cglyph unicode='' glyph-name='play-circle' d='M512 917.333C253.3 917.333 42.667 706.7 42.667 448S253.3-21.333 512-21.333C770.7-21.333 981.333 189.3 981.333 448S770.7 917.333 512 917.333zM512 832c212.583 0 384-171.417 384-384S724.583 64 512 64 128 235.417 128 448s171.417 384 384 384zm-85.833-170.667c-23.348-.285-42.166-19.278-42.167-42.667V277.333c.005-23.563 19.108-42.662 42.671-42.662a42.47 42.47 0 0 1 23.814 7.258l-.152-.097 256 170.667c11.519 7.762 18.995 20.758 18.995 35.5s-7.476 27.738-18.843 35.404l-.152.096-256 170.667c-6.652 4.491-14.85 7.17-23.674 7.17l-.519-.003h.026zm43.166-122.416L605.75 448l-136.417-90.917z'/%3E%3Cglyph unicode='' glyph-name='play' d='M212.083 874.667c-23.021-.698-41.417-19.527-41.417-42.652V832v.001V63.975c0-23.567 19.104-42.671 42.671-42.671a42.47 42.47 0 0 1 23.244 6.881l-.165-.101 597.333 384c11.882 7.707 19.632 20.907 19.632 35.917s-7.75 28.209-19.466 35.816l-.166.101-597.333 384c-6.519 4.245-14.496 6.769-23.062 6.769-.447 0-.893-.007-1.336-.021l.065.002zM256 753.833 731.75 448 256 142.167z'/%3E%3Cglyph unicode='' glyph-name='plus-circle' d='M512 917.333C253.3 917.333 42.667 706.7 42.667 448S253.3-21.333 512-21.333C770.7-21.333 981.333 189.3 981.333 448S770.7 917.333 512 917.333zM512 832c212.583 0 384-171.417 384-384S724.583 64 512 64 128 235.417 128 448s171.417 384 384 384zm-.667-170.083c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-341.333a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 341.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-170-171.25c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h341.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='plus-square' d='M213.333 874.667c-70.174 0-128-57.826-128-128V149.334c0-70.174 57.826-128 128-128h597.333c70.174 0 128 57.826 128 128v597.333c0 70.174-57.826 128-128 128zm0-85.334h597.333c24.375 0 42.667-18.291 42.667-42.667V149.333c0-24.375-18.291-42.667-42.667-42.667H213.333c-24.375 0-42.667 18.291-42.667 42.667v597.333c0 24.375 18.291 42.667 42.667 42.667zm298-127.416c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-341.333a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 341.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-170-171.25c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h341.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='plus' d='M511.333 789.917c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-597.333a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 597.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-298-299.25c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h597.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='pocket' d='M170.667 874.667c-70.187 0-128-57.813-128-128v-256C42.667 231.967 253.3 21.334 512 21.334s469.333 210.633 469.333 469.333v256c0 70.187-57.813 128-128 128zm0-85.334h682.667c24.07 0 42.667-18.597 42.667-42.667v-256c0-212.583-171.417-384-384-384s-384 171.417-384 384v256c0 24.07 18.597 42.667 42.667 42.667zm170.25-212.916c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L481.833 332.5c7.721-7.718 18.387-12.492 30.167-12.492s22.445 4.774 30.167 12.492l170.666 170.666c8.091 7.778 13.118 18.692 13.118 30.781 0 23.567-19.104 42.671-42.671 42.671-12.089 0-23.003-5.027-30.767-13.104l-.013-.014L512 423 371.5 563.5c-7.76 7.971-18.594 12.916-30.583 12.917z'/%3E%3Cglyph unicode='' glyph-name='power' d='M239.333 719.75a42.576 42.576 0 0 1-29.324-12.907l-.01-.01C76.913 573.703 56.266 389.894 117.582 241.916S323.525-21.417 511.749-21.417c188.223 0 332.934 115.356 394.25 263.333s40.586 331.787-92.5 464.917c-7.778 8.091-18.692 13.118-30.781 13.118-23.567 0-42.671-19.104-42.671-42.671 0-12.089 5.027-23.003 13.104-30.767l.014-.013c108.776-108.811 123.421-252.647 74-371.917S665.585 63.916 511.748 63.916c-153.836 0-265.912 91.397-315.333 210.667s-34.776 263.105 74 371.917c7.98 7.762 12.931 18.603 12.931 30.6 0 23.567-19.104 42.671-42.671 42.671-.473 0-.943-.008-1.412-.023l.068.002zm272 198.167c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V448a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V448v426.667c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='printer' d='M256 917.333c-23.563-.002-42.664-19.103-42.667-42.666V576a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V576v256h426.667V576a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V576v298.667c-.002 23.563-19.103 42.664-42.666 42.667zm-85.333-298.666c-70.187 0-128-57.813-128-128V277.334c0-70.187 57.813-128 128-128H256c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h-85.301c-24.07 0-42.667 18.597-42.667 42.667v213.333c0 24.07 18.597 42.667 42.667 42.667h682.667c24.07 0 42.667-18.597 42.667-42.667V277.334c0-24.07-18.597-42.667-42.667-42.667h-85.333c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h85.301c70.187 0 128 57.813 128 128v213.333c0 70.187-57.813 128-128 128zM256 405.333c-23.563-.002-42.664-19.103-42.667-42.666V21.334c.002-23.563 19.103-42.664 42.666-42.667h512c23.563.002 42.664 19.103 42.667 42.666v341.333c-.002 23.563-19.103 42.664-42.666 42.667zM298.667 320h426.667V64H298.667z'/%3E%3Cglyph unicode='' glyph-name='radio' d='M512 576c-70.187 0-128-57.813-128-128s57.813-128 128-128 128 57.813 128 128-57.813 128-128 128zm0-85.333c24.07 0 42.667-18.597 42.667-42.667S536.07 405.333 512 405.333 469.333 423.93 469.333 448 487.93 490.667 512 490.667zM209.5 792.75a42.576 42.576 0 0 1-29.324-12.907l-.01-.01c-182.862-182.918-182.862-480.749 0-663.667 7.778-8.091 18.692-13.118 30.78-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.088-5.027 23.002-13.103 30.767l-.014.013c-150.264 150.309-150.264 392.691 0 543 7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zm603.75 0c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l.009-.009c150.264-150.309 150.264-392.691 0-543-8.091-7.778-13.117-18.692-13.117-30.78 0-23.567 19.104-42.671 42.671-42.671 12.088 0 23.002 5.026 30.766 13.103l.013.014c182.862 182.918 182.862 480.749 0 663.667-7.76 7.971-18.594 12.916-30.583 12.917zm-483-120.333a42.576 42.576 0 0 1-29.324-12.907l-.01-.01c-116.434-116.305-116.434-306.278 0-422.583 7.778-8.091 18.692-13.118 30.78-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.088-5.027 23.002-13.104 30.767l-.014.013c-83.783 83.689-83.783 218.227 0 301.917 7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zM692.417 672c-23.526-.054-42.577-19.138-42.577-42.671 0-11.987 4.942-22.819 12.901-30.57l.009-.009c83.783-83.689 83.783-218.227 0-301.917-8.091-7.778-13.118-18.692-13.118-30.78 0-23.567 19.104-42.671 42.671-42.671 12.088 0 23.003 5.027 30.767 13.104l.013.014c116.434 116.305 116.434 306.278 0 422.583-7.761 7.972-18.596 12.917-30.586 12.917h-.085.004z'/%3E%3Cglyph unicode='' glyph-name='refresh-ccw' d='M42 832.583c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-256c.002-23.563 19.103-42.664 42.666-42.667h256c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H85.333v213.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm683.333-427.25c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h213.301V106.667a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 256c-.002 23.563-19.103 42.664-42.666 42.667zM502.75 873.667C398.275 871.931 293.237 832.279 210.5 749.5L13.417 564.417C5.139 556.614-.015 545.576-.015 533.334c0-23.573 19.109-42.682 42.682-42.682 11.33 0 21.63 4.415 29.271 11.618l-.021-.02 197.917 186c.373.331.698.631 1.019.935l-.019-.018C449.513 867.936 749.683 800.026 834.001 561.75c6.042-16.719 21.777-28.453 40.252-28.453 23.581 0 42.698 19.117 42.698 42.698 0 5.11-.898 10.011-2.544 14.552l.094-.297c-65.072 183.888-237.625 286.31-411.75 283.417zM981.833 405.75h-.083c-11.534 0-21.998-4.576-29.678-12.011l.011.011-197.917-186a39.964 39.964 0 0 1-1.019-.935l.019.018C574.487 28.064 274.317 95.974 189.999 334.249c-6.04 16.722-21.777 28.459-40.254 28.459-23.581 0-42.698-19.117-42.698-42.698a42.61 42.61 0 0 1 2.546-14.558l-.094.297c104.115-294.221 483.367-379.993 704-159.25l197.083 185.083c8.544 7.83 13.882 19.039 13.882 31.496 0 23.553-19.082 42.649-42.63 42.671h-.002z'/%3E%3Cglyph unicode='' glyph-name='refresh-cw' d='M980.667 832.583c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V576H725.334c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h255.968c23.563.002 42.664 19.103 42.667 42.666v256c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-938-427.25C19.104 405.331.003 386.23 0 362.667v-256a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032V320h213.333c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zM521.25 873.667C347.125 876.56 174.572 774.139 109.5 590.25c-1.552-4.244-2.449-9.143-2.449-14.253 0-23.581 19.117-42.698 42.698-42.698 18.474 0 34.208 11.733 40.157 28.154l.094.297c84.318 238.275 384.487 306.186 563.167 127.417.302-.286.627-.585.957-.879l.043-.037 197.917-186a42.519 42.519 0 0 1 29.297-11.643c23.573 0 42.682 19.109 42.682 42.682 0 12.265-5.173 23.322-13.457 31.107l-.022.021-197.083 185.083c-82.737 82.779-187.775 122.431-292.25 124.167zM40.917 405.75c-23.014-.706-41.402-19.532-41.402-42.652 0-12.466 5.346-23.684 13.87-31.485l.032-.029L210.5 146.501c220.633-220.743 599.885-134.971 704 159.25 1.554 4.246 2.452 9.149 2.452 14.262 0 23.581-19.117 42.698-42.698 42.698-18.478 0-34.214-11.737-40.16-28.162l-.094-.297C749.682 95.977 449.513 28.066 270.833 206.835c-.302.286-.627.585-.957.879l-.043.037-197.917 186c-7.671 7.436-18.144 12.02-29.687 12.02-.462 0-.921-.007-1.38-.022l.067.002z'/%3E%3Cglyph unicode='' glyph-name='repeat' d='M724.917 960.417c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l140.509-140.509-140.5-140.5c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014L926.166 716.5c7.718 7.721 12.492 18.387 12.492 30.167s-4.774 22.445-12.492 30.167L755.499 947.501c-7.76 7.971-18.594 12.916-30.583 12.917zm-426.25-171.084c-117.315 0-213.333-96.018-213.333-213.333v-85.333a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032V576c0 71.198 56.802 128 128 128H896c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H896zm-.834-426.25a42.576 42.576 0 0 1-29.324-12.907L97.832 179.499c-7.718-7.721-12.492-18.387-12.492-30.167s4.774-22.445 12.492-30.167L268.498-51.501c7.778-8.091 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-140.5 140.5 140.5 140.5c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zm597.5 85.5c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V320c0-71.198-56.802-128-128-128H128c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h597.301c117.315 0 213.333 96.018 213.333 213.333v85.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='rewind' d='M468.083 789.333c-9.465-.302-18.096-3.642-25.009-9.07l.092.07-384-298.667c-10.053-7.882-16.453-20.027-16.453-33.667s6.4-25.785 16.36-33.597l.093-.07 384-298.667c7.146-5.589 16.26-8.961 26.162-8.961 23.551 0 42.646 19.08 42.671 42.626v597.349c0 23.567-19.104 42.671-42.671 42.671-.438 0-.875-.007-1.309-.02l.064.002zM426.667 659.5v-423L154.75 448zm510.75 129.833c-9.465-.302-18.096-3.642-25.009-9.07l.092.07-384-298.667c-10.053-7.882-16.453-20.027-16.453-33.667s6.4-25.785 16.36-33.597l.093-.07 384-298.667c7.146-5.589 16.26-8.961 26.162-8.961 23.551 0 42.646 19.08 42.671 42.626v597.349c0 23.567-19.104 42.671-42.671 42.671-.438 0-.875-.007-1.309-.02l.064.002zM896 659.5v-423L624.083 448z'/%3E%3Cglyph unicode='' glyph-name='rotate-ccw' d='M42 832.583c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-256c.002-23.563 19.103-42.664 42.666-42.667h256c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H85.333v213.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm421.25 40.25c-89.174-9.762-177.969-48.634-252.667-123.167l-.083-.083L13.417 564.416C5.139 556.613-.015 545.575-.015 533.333c0-23.573 19.109-42.682 42.682-42.682 11.33 0 21.63 4.415 29.271 11.618l-.021-.02 197.917 186c.314.304.612.603.907.906l.01.01c123.113 122.905 282.9 125.426 406.333 57.167s206.247-204.962 167.667-374.5c-38.581-169.538-172.434-256.874-313.25-265s-283.694 63.258-341.5 227.333c-5.958 16.858-21.756 28.719-40.326 28.719-23.567 0-42.671-19.104-42.671-42.671 0-5.157.915-10.101 2.591-14.678l-.095.296C179.664 106.68 362.303 11.616 536.417 21.664s344.665 125.442 391.5 331.25c46.835 205.808-56.962 383.682-209.583 468.083-76.31 42.2-165.874 61.599-255.083 51.833z'/%3E%3Cglyph unicode='' glyph-name='rotate-cw' d='M980.667 832.583c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V576H725.334c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h255.968c23.563.002 42.664 19.103 42.667 42.666v256c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-419.334 40.584c-89.203 9.866-178.806-9.464-255.167-51.583C153.445 737.345 49.454 559.538 96.083 353.667S313.136 32.213 487.25 22c174.114-10.213 356.907 84.645 427.25 283.75 1.554 4.246 2.452 9.149 2.452 14.262 0 23.581-19.117 42.698-42.698 42.698-18.478 0-34.214-11.737-40.16-28.162l-.094-.297C776.046 170.213 633.066 98.908 492.25 107.168s-274.505 95.743-312.917 265.333c-38.411 169.59 44.486 306.204 168 374.333s283.27 65.391 406.25-57.667c.271-.255.57-.527.872-.795l.045-.039L952.083 502.25a42.514 42.514 0 0 1 29.25-11.598c23.573 0 42.682 19.109 42.682 42.682 0 12.242-5.154 23.28-13.411 31.063l-.021.02-196.669 185.167C739.3 824.209 650.501 863.305 561.333 873.167z'/%3E%3Cglyph unicode='' glyph-name='rss' d='M170.667 533.333c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h-.032C359.686 448 512 295.685 512 106.667a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032c0 235.136-191.531 426.667-426.667 426.667zm0 298.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h-.032c353.968 0 640-286.032 640-640a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032C896 506.752 570.752 832 170.667 832zm42.666-597.333c-46.623 0-85.333-38.71-85.333-85.333s38.71-85.333 85.333-85.333 85.333 38.71 85.333 85.333-38.71 85.333-85.333 85.333z'/%3E%3Cglyph unicode='' glyph-name='save' d='M213.333 874.667c-70.187 0-128-57.813-128-128V149.334c0-70.187 57.813-128 128-128h597.333c70.187 0 128 57.813 128 128v469.333c-.002 11.781-4.779 22.446-12.5 30.167L712.833 862.167c-7.72 7.721-18.385 12.498-30.166 12.5zm0-85.334H665L853.333 601V149.333c0-24.07-18.597-42.667-42.667-42.667H213.333c-24.07 0-42.667 18.597-42.667 42.667v597.333c0 24.07 18.597 42.667 42.667 42.667zM298.667 448c-23.563-.002-42.664-19.103-42.667-42.666V64.001a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 298.667h341.333V64.001a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 341.333c-.002 23.563-19.103 42.664-42.666 42.667zM298 875.25c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V832 618.667c.002-23.563 19.103-42.664 42.666-42.667H640c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H341.333V832c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='scissors' d='M256 874.667c-93.751 0-170.667-76.915-170.667-170.667S162.248 533.333 256 533.333c93.751 0 170.667 76.915 170.667 170.667S349.752 874.667 256 874.667zm0-85.334c47.634 0 85.333-37.7 85.333-85.333s-37.7-85.333-85.333-85.333c-47.634 0-85.333 37.7-85.333 85.333s37.7 85.333 85.333 85.333zm0-426.666c-93.751 0-170.667-76.915-170.667-170.667S162.248 21.333 256 21.333c93.751 0 170.667 76.915 170.667 170.667S349.752 362.667 256 362.667zm0-85.334c47.634 0 85.333-37.7 85.333-85.333s-37.7-85.333-85.333-85.333c-47.634 0-85.333 37.7-85.333 85.333s37.7 85.333 85.333 85.333zm596.5 555.084a42.576 42.576 0 0 1-29.324-12.907L316.249 312.583c-8.091-7.778-13.118-18.692-13.118-30.78 0-23.567 19.104-42.671 42.671-42.671 12.088 0 23.002 5.027 30.767 13.103l.013.014 506.917 506.917c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zM616.917 385.25c-23.526-.054-42.576-19.138-42.576-42.671 0-11.987 4.942-22.819 12.9-30.57l.009-.009L823.167 76.5c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-236 235.583c-7.754 7.922-18.556 12.833-30.505 12.833h-.083.004zM346 656.667c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l165.592-165.592c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013L376.583 643.75c-7.76 7.971-18.594 12.916-30.583 12.917z'/%3E%3Cglyph unicode='' glyph-name='search' d='M469.333 874.667c-211.572 0-384-172.428-384-384s172.428-384 384-384 384 172.428 384 384-172.428 384-384 384zm0-85.334C634.787 789.333 768 656.121 768 490.666S634.788 191.999 469.333 191.999c-165.454 0-298.667 133.212-298.667 298.667s133.212 298.667 298.667 298.667zm240.584-496.666c-23.526-.054-42.577-19.138-42.577-42.671 0-11.987 4.942-22.819 12.901-30.57L865.833 33.834c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013L740.584 279.75c-7.761 7.972-18.596 12.917-30.586 12.917h-.085.004z'/%3E%3Cglyph unicode='' glyph-name='send' d='M937.833 917.75a42.576 42.576 0 0 1-29.324-12.907L439.166 435.5c-8.092-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 469.333 469.333c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zm1.167-.417-.258.001a42.6 42.6 0 0 1-14.456-2.511l.298.094L71.251 616.25c-16.774-6.003-28.56-21.76-28.56-40.27 0-17.28 10.272-32.161 25.043-38.871l.268-.109 369-164 164-369c6.818-15.039 21.699-25.31 38.98-25.31 18.51 0 34.267 11.786 40.177 28.262l.093.298 298.667 853.333c1.515 4.195 2.39 9.035 2.39 14.081 0 23.438-18.897 42.463-42.287 42.669h-.02zm-69.833-112.166L635.334 137l-127 285.667c-4.38 9.692-11.975 17.287-21.399 21.558l-.268.109-285.667 127z'/%3E%3Cglyph unicode='' glyph-name='server' d='M170.667 917.333c-70.174 0-128-57.826-128-128V618.666c0-70.174 57.826-128 128-128h682.667c70.174 0 128 57.826 128 128v170.667c0 70.174-57.826 128-128 128zm0-85.333h682.667c24.375 0 42.667-18.291 42.667-42.667V618.666c0-24.375-18.291-42.667-42.667-42.667H170.667c-24.375 0-42.667 18.291-42.667 42.667v170.667C128 813.708 146.291 832 170.667 832zm0-426.667c-70.174 0-128-57.826-128-128V106.666c0-70.174 57.826-128 128-128h682.667c70.174 0 128 57.826 128 128v170.667c0 70.174-57.826 128-128 128zm0-85.333h682.667c24.375 0 42.667-18.291 42.667-42.667V106.666c0-24.375-18.291-42.667-42.667-42.667H170.667C146.292 63.999 128 82.29 128 106.666v170.667C128 301.708 146.291 320 170.667 320zM256 746.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H256c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H256zm0-512c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H256c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H256z'/%3E%3Cglyph unicode='' glyph-name='settings' d='M512 618.667c-93.751 0-170.667-76.915-170.667-170.667S418.248 277.333 512 277.333c93.751 0 170.667 76.915 170.667 170.667S605.752 618.667 512 618.667zm0-85.334c47.634 0 85.333-37.7 85.333-85.333s-37.7-85.333-85.333-85.333c-47.634 0-85.333 37.7-85.333 85.333s37.7 85.333 85.333 85.333zM512 960c-70.187 0-128-57.813-128-128v-7.083c-.042-10.44-6.624-18.994-15.75-23.75a41.818 41.818 0 0 1-5.185-1.942l.268.109c-10.49-4.63-22.387-2.435-30.583 5.583l-2.167 2.167c-49.613 49.668-131.435 49.696-181.083.083-49.695-49.64-49.695-131.526 0-181.167l2.167-2.167c8.018-8.197 10.213-20.093 5.583-30.583a31.819 31.819 0 0 1-.904-2.205l-.096-.295c-3.976-10.811-13.901-17.897-25.417-18.167H128c-70.187 0-128-57.813-128-128s57.813-128 128-128h7.083c11.168-.043 21.017-6.568 25.417-16.833.157-.426.214-.564.271-.701l-.104.283c4.63-10.49 2.435-22.387-5.583-30.583l-2.167-2.167c-49.668-49.613-49.696-131.435-.083-181.083.02-.02.064.02.083 0s-.02-.064 0-.085c49.648-49.613 131.471-49.585 181.083.085l2.167 2.167c8.197 8.018 20.093 10.213 30.583 5.583a31.819 31.819 0 0 1 2.205-.904l.295-.096c10.811-3.976 17.897-13.901 18.167-25.417V64c0-70.187 57.813-128 128-128s128 57.813 128 128v7.083c.043 11.168 6.568 21.017 16.833 25.417.426.157.564.213.702.27l-.284-.104c10.49 4.63 22.387 2.435 30.583-5.583l2.167-2.167c49.613-49.668 131.435-49.696 181.083-.085v.085c49.609 49.618 49.677 131.371.085 181l-2.252 2.252c-8.018 8.197-10.213 20.093-5.583 30.583-.047-.146.009-.008.065.131l.102.287c4.398 10.262 14.247 16.786 25.415 16.83H896c70.187 0 128 57.813 128 128s-57.813 128-128 128h-7.083c-10.44.042-18.994 6.624-23.75 15.75a41.818 41.818 0 0 1-1.942 5.185l.109-.268c-4.63 10.49-2.435 22.387 5.583 30.583l2.167 2.167c49.668 49.613 49.696 131.435.085 181.083-49.64 49.695-131.526 49.695-181.167 0l-2.167-2.167c-8.197-8.018-20.093-10.213-30.583-5.583.145-.047.007.009-.131.065l-.287.102c-10.266 4.399-16.789 14.248-16.834 25.417V832c0 70.187-57.813 128-128 128zm0-85.333c24.07 0 42.667-18.597 42.667-42.667V827.996v.005c.179-44.869 27.144-85.574 68.333-103.333 42.117-18.473 91.612-9.504 124.5 22.667l.329.329.004.004 2.583 2.5v.086-.002c17.025 17.044 43.309 17.044 60.333 0l.076-.074.01-.009c17.044-17.025 17.044-43.309 0-60.333h-.088.002l-2.5-2.583-.329-.329-.004-.004c-32.231-32.95-41.278-82.581-22.667-124.75l-3.583 17.25V575.901a42.518 42.518 0 0 1 3.524-17.006l-.107.275c17.708-41.316 58.549-68.321 103.5-68.5h7.416c24.07 0 42.667-18.597 42.667-42.667s-18.597-42.667-42.667-42.667H891.995 892c-44.869-.179-85.574-27.144-103.333-68.333-18.473-42.117-9.504-91.612 22.667-124.5l.329-.329.004-.004 2.5-2.583h.088-.002c17.044-17.025 17.044-43.309 0-60.333l-.084-.084-.001-.001c-17.025-17.044-43.309-17.044-60.333 0v.088-.002l-2.583 2.5-.329.329-.004.004c-32.888 32.171-82.383 41.139-124.5 22.667-41.19-17.759-68.154-58.464-68.333-103.333V71.251v.005-7.25c0-24.07-18.597-42.667-42.667-42.667s-42.667 18.597-42.667 42.667v3.833a38.484 38.484 0 0 1 0 1.027v-.027c-1.071 45.807-30.199 86.34-72.917 102.667-41.87 17.823-90.738 9.051-123.333-22.833l-.33-.329-.003-.003-2.583-2.5v-.088.002c-17.025-17.044-43.309-17.044-60.333 0l-.091.093.008-.008c-17.044 17.025-17.044 43.309 0 60.333h.086-.002l2.5 2.583.33.329.003.003c32.171 32.888 41.139 82.383 22.667 124.5-17.759 41.19-58.464 68.154-103.333 68.333h-7.416c-24.07 0-42.667 18.597-42.667 42.667s18.597 42.667 42.667 42.667h3.833a38.484 38.484 0 0 1 1.027 0h-.027c45.807 1.071 86.34 30.199 102.667 72.916 17.823 41.87 9.051 90.738-22.833 123.333l-.329.33-.004.004-2.5 2.583h-.086.002c-17.044 17.025-17.044 43.309 0 60.333l.082.082.001.001c17.025 17.044 43.309 17.044 60.333 0v-.086.002l2.583-2.5.329-.33.004-.004c32.95-32.231 82.582-41.277 124.75-22.667l-17.25-3.583h3.52a42.518 42.518 0 0 1 17.006 3.524l-.276-.107c41.316 17.708 68.321 58.549 68.5 103.5V824.757v-.005 7.25c0 24.07 18.597 42.667 42.667 42.667z'/%3E%3Cglyph unicode='' glyph-name='share-2' d='M768 917.333c-93.751 0-170.667-76.915-170.667-170.667S674.248 575.999 768 575.999c93.751 0 170.667 76.915 170.667 170.667S861.752 917.333 768 917.333zM768 832c47.634 0 85.333-37.7 85.333-85.333s-37.7-85.333-85.333-85.333c-47.634 0-85.333 37.7-85.333 85.333S720.367 832 768 832zM256 618.667c-93.751 0-170.667-76.915-170.667-170.667S162.248 277.333 256 277.333c93.751 0 170.667 76.915 170.667 170.667S349.752 618.667 256 618.667zm0-85.334c47.634 0 85.333-37.7 85.333-85.333s-37.7-85.333-85.333-85.333c-47.634 0-85.333 37.7-85.333 85.333s37.7 85.333 85.333 85.333zM768 320c-93.751 0-170.667-76.915-170.667-170.667S674.248-21.334 768-21.334c93.751 0 170.667 76.915 170.667 170.667S861.752 320 768 320zm0-85.333c47.634 0 85.333-37.7 85.333-85.333S815.633 64.001 768 64.001c-47.634 0-85.333 37.7-85.333 85.333s37.7 85.333 85.333 85.333zM363.5 426.5c-22.471-1.353-40.182-19.908-40.182-42.598 0-15.851 8.643-29.684 21.473-37.042l.208-.11 291.417-169.833c6.433-4.095 14.272-6.526 22.679-6.526 23.567 0 42.671 19.104 42.671 42.671 0 16.12-8.938 30.152-22.129 37.41l-.221.111-291.417 169.833c-6.294 3.864-13.916 6.152-22.073 6.152-.854 0-1.702-.025-2.543-.075l.116.005zm295.667 298.667a42.465 42.465 0 0 1-23.354-6.19l.188.107-291-169.833c-13.412-7.37-22.35-21.402-22.35-37.522 0-23.567 19.104-42.671 42.671-42.671a42.47 42.47 0 0 1 22.853 6.629l-.174-.103 291 169.833c12.985 7.481 21.586 21.285 21.586 37.097 0 23.126-18.397 41.956-41.355 42.651l-.064.002z'/%3E%3Cglyph unicode='' glyph-name='share' d='M170 491.25c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V448 106.667c0-70.187 57.813-128 128-128h512c70.187 0 128 57.813 128 128V448c.003.179.004.391.004.603 0 23.567-19.104 42.671-42.671 42.671s-42.671-19.104-42.671-42.671c0-.212.002-.424.005-.635V448 106.667C810.667 82.597 792.07 64 768 64H256c-24.07 0-42.667 18.597-42.667 42.667V448c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm341.333 426.083c-11.538-.19-21.934-4.93-29.5-12.5L311.166 734.166c-8.091-7.778-13.118-18.692-13.118-30.78 0-23.567 19.104-42.671 42.671-42.671 12.088 0 23.003 5.027 30.767 13.104l.013.014 140.5 140.5 140.5-140.5c7.778-8.091 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-170.667 170.667c-7.723 7.726-18.393 12.505-30.18 12.505-.23 0-.459-.002-.688-.005h.035zm0 .584c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V320a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V320v554.667c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='shield-off' d='M510.25 917.333a42.603 42.603 0 0 1-13.459-2.765l.293.098-134.833-50.417c-16.98-5.89-28.952-21.75-28.952-40.405 0-23.567 19.104-42.671 42.671-42.671 5.81 0 11.348 1.161 16.396 3.264l-.282-.104 119.917 44.75 298.667-112V448c-.188-24.662-4.022-49.112-11.333-72.667-1.222-3.791-1.927-8.152-1.927-12.678 0-23.568 19.105-42.673 42.673-42.673 19.05 0 35.185 12.483 40.67 29.715l.083.302a337.432 337.432 0 0 1 15.167 97.75v.257-.007 298.667c-.013 18.164-11.373 33.672-27.375 39.818l-.292.099-341.333 128c-4.497 1.76-9.705 2.78-15.15 2.78-.563 0-1.123-.011-1.68-.032l.08.002zm-307.833-116.25a42.573 42.573 0 0 1-15.705-3.018l.288.101-31.167-11.5c-16.388-6.203-27.83-21.765-27.833-40V447.999c0-146.963 95.37-262.772 185.25-341.417S492.917-16.835 492.917-16.835c5.562-2.844 12.133-4.51 19.093-4.51a42.481 42.481 0 0 1 20.135 5.04l-.228-.112A908.25 908.25 0 0 1 783.5 179.666a42.504 42.504 0 0 1 11.548 29.191c0 23.567-19.104 42.671-42.671 42.671-12.878 0-24.424-5.705-32.248-14.726l-.045-.053c-59.479-66.162-130.256-120.724-207.583-164.502-15.495 8.13-71.574 35.929-143.083 98.5-80.787 70.688-156.083 168.213-156.083 277.25v268.917l3.25 1.25c16.738 6.023 28.49 21.762 28.49 40.246 0 23.562-19.096 42.663-42.656 42.671h-.001zM42.25 960.417c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L951.166-51.5c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013L72.833 947.5c-7.76 7.971-18.594 12.916-30.583 12.917z'/%3E%3Cglyph unicode='' glyph-name='shield' d='M510.25 917.333c-4.819-.225-9.341-1.214-13.541-2.85l.291.1-341.333-128c-16.294-6.245-27.654-21.753-27.667-39.915V447.999c0-146.963 95.37-262.772 185.25-341.417S492.917-16.835 492.917-16.835c5.56-2.841 12.127-4.505 19.083-4.505s13.524 1.665 19.326 4.617l-.242-.112s89.787 44.772 179.667 123.417 185.25 194.454 185.25 341.417v298.667c-.013 18.164-11.373 33.672-27.375 39.818l-.292.099-341.333 128c-4.497 1.76-9.705 2.78-15.15 2.78-.563 0-1.123-.011-1.68-.032l.08.002zm1.75-88.25 298.667-112V448c0-109.037-75.297-206.562-156.083-277.25-71.243-62.337-126.73-89.754-142.583-98.083-15.853 8.329-71.341 35.746-142.583 98.083C288.631 241.438 213.335 338.963 213.335 448v269.083z'/%3E%3Cglyph unicode='' glyph-name='shopping-bag' d='M256 917.333h-.019c-13.919 0-26.281-6.664-34.07-16.976l-.078-.108-128-170.667c-5.307-7.034-8.5-15.923-8.5-25.557v-.028.001-597.333c0-70.187 57.813-128 128-128h597.333c70.187 0 128 57.813 128 128V704.024a42.484 42.484 0 0 1-8.578 25.665l.078-.108-128 170.667c-7.867 10.419-20.229 17.083-34.148 17.083h-.02.001zM277.333 832h469.333l106.667-142.25V106.667c0-24.07-18.597-42.667-42.667-42.667H213.333c-24.07 0-42.667 18.597-42.667 42.667V689.75zM128 746.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H896c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H896zm212.667-170.084c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031c0-67.556 26.87-123.653 67.667-159.917s93.519-53.417 145.667-53.417c52.148 0 104.87 17.153 145.667 53.417s67.667 92.361 67.667 159.917c.003.179.004.391.004.603 0 23.567-19.104 42.671-42.671 42.671s-42.671-19.104-42.671-42.671c0-.212.002-.424.005-.635v.032c0-46.222-15.797-75.459-39-96.083s-55.815-31.917-89-31.917-65.797 11.292-89 31.917-39 49.861-39 96.083c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='shopping-cart' d='M384 149.333c-46.623 0-85.333-38.71-85.333-85.333S337.377-21.333 384-21.333 469.333 17.377 469.333 64s-38.71 85.333-85.333 85.333zm469.333 0C806.71 149.333 768 110.623 768 64s38.71-85.333 85.333-85.333S938.666 17.377 938.666 64s-38.71 85.333-85.333 85.333zM42.667 960c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h135.635l34.5-172.167a42.586 42.586 0 0 1 2.765-13.793l-.098.293 70.333-351.333c12.054-60.501 66.315-104.182 128-103h413.083c61.711-1.183 115.976 42.544 128 103.083-.062-.216-.033-.132-.004-.048l.09.3L1023.251 696c.481 2.404.756 5.168.756 7.996 0 23.567-19.104 42.671-42.671 42.671H291.001l-35.833 179c-4.03 19.708-21.224 34.326-41.833 34.333h-.001zm265.416-298.667H929.75l-58.5-307c-4.081-20.547-21.722-34.735-42.667-34.333l-.417.002-.439-.002H412.999l-.417.002-.439-.002h.022c-20.945-.401-38.586 13.786-42.667 34.333v.088-.002z'/%3E%3Cglyph unicode='' glyph-name='shuffle' d='M682.667 874.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h170.635V618.667a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032V832c-.002 23.563-19.103 42.664-42.666 42.667zm212.5.416a42.576 42.576 0 0 1-29.324-12.907L140.5 136.833c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 725.333 725.333c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zm.166-554.5c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-170.667H682.666c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h213.301c23.563.002 42.664 19.103 42.667 42.666v213.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-255.75 42.5c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L865.832 33.833c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-256 256c-7.76 7.971-18.594 12.916-30.583 12.917zM170.25 832.417c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l213.342-213.342c7.778-8.091 18.692-13.118 30.78-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.088-5.027 23.003-13.104 30.767l-.014.013L200.832 819.5c-7.76 7.971-18.594 12.916-30.583 12.917z'/%3E%3Cglyph unicode='' glyph-name='sidebar' d='M213.333 874.667c-70.174 0-128-57.826-128-128V149.334c0-70.174 57.826-128 128-128h597.333c70.174 0 128 57.826 128 128v597.333c0 70.174-57.826 128-128 128zm0-85.334h597.333c24.375 0 42.667-18.291 42.667-42.667V149.333c0-24.375-18.291-42.667-42.667-42.667H213.333c-24.375 0-42.667 18.291-42.667 42.667v597.333c0 24.375 18.291 42.667 42.667 42.667zm170 85.917c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V832 64a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V64v768c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='skip-back' d='M809.417 832c-9.681-.29-18.498-3.761-25.499-9.397l.082.064-426.667-341.333c-9.807-7.885-16.031-19.883-16.031-33.333s6.223-25.448 15.948-33.269l.083-.064L784 73.335c7.235-5.828 16.537-9.355 26.662-9.355 23.567 0 42.671 19.104 42.671 42.671v.019-.001V789.35c0 23.567-19.104 42.671-42.671 42.671-.438 0-.875-.007-1.309-.02l.064.002zM768 700.5v-505L452.333 448zm-555.333 89.417c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-597.333a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 597.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='skip-forward' d='M212.25 832c-23.094-.607-41.583-19.473-41.583-42.657v-.01.001V106.649c0-23.567 19.104-42.671 42.671-42.671a42.496 42.496 0 0 1 26.745 9.419l-.082-.064 426.667 341.333c9.807 7.885 16.031 19.883 16.031 33.333s-6.223 25.448-15.948 33.269l-.083.064-426.667 341.333c-7.233 5.824-16.531 9.347-26.652 9.347-.386 0-.771-.005-1.154-.015l.057.001zM256 700.5 571.667 448 256 195.5zm554 89.417c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-597.333a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 597.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='slack' d='M593.333 960c-65.532-1.535-138.968-16.186-221.667-41.083C206.3 869.132 94.043 805.903 38.499 703.75s-47.237-230.602 2.583-396.083C90.867 142.301 154.096 30.044 256.249-25.5s230.602-47.237 396.083 2.583C817.698 26.868 929.955 90.097 985.499 192.25c55.533 102.134 47.212 230.562-2.583 396-49.779 166.441-113 278.799-215.25 334.083-51.125 27.642-108.801 39.202-174.333 37.667zm-.085-85.5c54.135 1.505 97.758-7.745 133.833-27.25 72.15-39.009 127.009-126.101 174.083-283.5l.076-.074.01-.009C948.283 407.441 949.783 305.248 910.5 233S784.007 105.818 627.667 58.75C471.441 11.717 369.248 10.217 297 49.5S169.818 175.993 122.75 332.333C75.717 488.559 74.217 590.752 113.5 663s126.493 127.182 282.833 174.25c78.154 23.529 142.782 35.745 196.917 37.25zm-59.081-126.917c-22.699-1.087-40.691-19.755-40.691-42.625a42.57 42.57 0 0 1 2.62-14.754l-.095.296 152.75-443.667c5.586-17.505 21.705-29.96 40.734-29.96 23.567 0 42.671 19.104 42.671 42.671a42.555 42.555 0 0 1-2.837 15.331l.099-.292-152.75 443.75c-5.789 17.16-21.737 29.296-40.521 29.296-.696 0-1.389-.017-2.077-.05l.097.004zM332.75 678.5c-22.699-1.087-40.691-19.755-40.691-42.625a42.57 42.57 0 0 1 2.62-14.754l-.095.296 152.75-443.75c5.782-17.172 21.736-29.319 40.528-29.319 23.567 0 42.671 19.104 42.671 42.671 0 5.195-.928 10.173-2.628 14.777l.096-.296-152.75 443.667c-5.764 17.202-21.734 29.378-40.548 29.378-.687 0-1.37-.016-2.048-.048l.096.004zm368.167-10.583a42.577 42.577 0 0 1-15.796-2.596l.296.095-443.75-152.75c-17.172-5.782-29.319-21.736-29.319-40.528 0-23.567 19.104-42.671 42.671-42.671 5.195 0 10.173.928 14.777 2.628l-.296-.096 443.667 152.75c17.145 5.797 29.268 21.738 29.268 40.511 0 23.161-18.453 42.012-41.459 42.654l-.059.001zM770 466.5a42.577 42.577 0 0 1-15.796-2.596l.296.095-443.667-152.75c-17.505-5.586-29.96-21.705-29.96-40.734 0-23.567 19.104-42.671 42.671-42.671a42.555 42.555 0 0 1 15.331 2.837l-.292-.099 443.75 152.75c17.142 5.799 29.262 21.739 29.262 40.509 0 23.188-18.496 42.056-41.54 42.656l-.056.001z'/%3E%3Cglyph unicode='' glyph-name='slash' d='M512 917.333C253.3 917.333 42.667 706.7 42.667 448S253.3-21.333 512-21.333C770.7-21.333 981.333 189.3 981.333 448S770.7 917.333 512 917.333zM512 832c212.583 0 384-171.417 384-384S724.583 64 512 64 128 235.417 128 448s171.417 384 384 384zm-302.083-39.25c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l603.342-603.342c7.778-8.091 18.692-13.117 30.78-13.117 23.567 0 42.671 19.104 42.671 42.671 0 12.088-5.026 23.002-13.103 30.766l-.014.013L240.5 779.833c-7.76 7.971-18.594 12.916-30.583 12.917z'/%3E%3Cglyph unicode='' glyph-name='sliders' d='M170 405.917c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V64a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V64v298.667c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm0 469.333c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V832 533.333a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032V832c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm341.333-384c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V448 64a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V64v384c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm0 384c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V832 618.667a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032V832c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm341.334-554.667c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V64a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V64v213.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm0 554.667c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V832 448a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V448v384c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-810-469.917c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h255.968c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm341.333 256c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H640c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H640zM725.333 320c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h255.968c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='smartphone' d='M298.667 917.333c-70.174 0-128-57.826-128-128V106.666c0-70.174 57.826-128 128-128h426.667c70.174 0 128 57.826 128 128v682.667c0 70.174-57.826 128-128 128zm0-85.333h426.667c24.375 0 42.667-18.291 42.667-42.667V106.666c0-24.375-18.291-42.667-42.667-42.667H298.667C274.292 63.999 256 82.29 256 106.666v682.667C256 813.708 274.291 832 298.667 832zM512 234.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H512c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H512z'/%3E%3Cglyph unicode='' glyph-name='speaker' d='M256 917.333c-70.174 0-128-57.826-128-128V106.666c0-70.174 57.826-128 128-128h512c70.174 0 128 57.826 128 128v682.667c0 70.174-57.826 128-128 128zM256 832h512c24.375 0 42.667-18.291 42.667-42.667V106.666c0-24.375-18.291-42.667-42.667-42.667H256c-24.375 0-42.667 18.291-42.667 42.667v682.667C213.333 813.708 231.624 832 256 832zm256-256c-117.315 0-213.333-96.018-213.333-213.333S394.685 149.334 512 149.334s213.333 96.018 213.333 213.333S629.315 576 512 576zm0-85.333c71.198 0 128-56.802 128-128s-56.802-128-128-128c-71.198 0-128 56.802-128 128s56.802 128 128 128zm0 256c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H512c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H512z'/%3E%3Cglyph unicode='' glyph-name='square' d='M213.333 874.667c-70.174 0-128-57.826-128-128V149.334c0-70.174 57.826-128 128-128h597.333c70.174 0 128 57.826 128 128v597.333c0 70.174-57.826 128-128 128zm0-85.334h597.333c24.375 0 42.667-18.291 42.667-42.667V149.333c0-24.375-18.291-42.667-42.667-42.667H213.333c-24.375 0-42.667 18.291-42.667 42.667v597.333c0 24.375 18.291 42.667 42.667 42.667z'/%3E%3Cglyph unicode='' glyph-name='star' d='M512.5 917.333c-.149.002-.325.003-.502.003-16.675 0-31.116-9.565-38.136-23.508l-.112-.245-121.917-247-272.667-39.917c-20.738-3.143-36.448-20.844-36.448-42.215 0-11.965 4.924-22.779 12.856-30.527l197.258-192.175-46.583-271.417c-.383-2.147-.602-4.619-.602-7.143 0-23.567 19.104-42.671 42.671-42.671a42.48 42.48 0 0 1 20.077 5.009l-.229-.112 243.833 128.167L755.832 25.415c5.755-3.085 12.59-4.897 19.848-4.897 23.567 0 42.671 19.104 42.671 42.671 0 2.523-.219 4.995-.639 7.398l.037-.256-46.583 271.417 197.25 192.167c7.941 7.756 12.865 18.571 12.865 30.535 0 21.371-15.71 39.072-36.212 42.185l-.236.03-272.667 39.917-121.917 247c-7.058 14.041-21.27 23.551-37.723 23.75h-.027zM512 778.25l93.583-189.583c6.21-12.381 17.927-21.205 31.848-23.304l.235-.029 209.333-30.583-151.417-147.5c-7.983-7.762-12.936-18.605-12.936-30.604 0-2.524.219-4.997.64-7.401l-.037.256 35.75-208.333-187.167 98.417c-5.751 3.08-12.581 4.889-19.833 4.889s-14.082-1.809-20.063-5.001l.23.112-187.167-98.417 35.75 208.333c.383 2.148.603 4.621.603 7.146 0 11.999-4.953 22.842-12.926 30.595l-.01.01-151.417 147.5 209.333 30.583c14.157 2.128 25.874 10.953 31.972 23.088l.112.246z'/%3E%3Cglyph unicode='' glyph-name='stop-circle' d='M512 917.333C253.3 917.333 42.667 706.7 42.667 448S253.3-21.333 512-21.333C770.7-21.333 981.333 189.3 981.333 448S770.7 917.333 512 917.333zM512 832c212.583 0 384-171.417 384-384S724.583 64 512 64 128 235.417 128 448s171.417 384 384 384zM384 618.667c-23.563-.002-42.664-19.103-42.667-42.666v-256c.002-23.563 19.103-42.664 42.666-42.667h256c23.563.002 42.664 19.103 42.667 42.666v256c-.002 23.563-19.103 42.664-42.666 42.667zm42.667-85.334h170.667V362.666H426.667z'/%3E%3Cglyph unicode='' glyph-name='sun' d='M512 704c-140.88 0-256-115.12-256-256s115.12-256 256-256 256 115.12 256 256-115.12 256-256 256zm0-85.333c94.762 0 170.667-75.905 170.667-170.667S606.762 277.333 512 277.333 341.333 353.238 341.333 448 417.238 618.667 512 618.667zm-.667 341.916c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V832a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V832v85.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm0-853.333c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V64v-85.333a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032V64c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-331.75 715.833c-23.563-.005-42.662-19.107-42.662-42.671 0-12.029 4.977-22.895 12.984-30.652l60.594-60.594c7.778-8.091 18.692-13.118 30.78-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.088-5.027 23.003-13.104 30.767l-.014.013-60.583 60.583c-7.768 8.021-18.636 13-30.667 13zM782.917 219.75c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l60.592-60.592c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-60.583 60.583c-7.76 7.971-18.594 12.916-30.583 12.917zM42.667 490.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H128c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H128zm853.333 0c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h85.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zM239.833 219.75a42.576 42.576 0 0 1-29.324-12.907l-60.593-60.593c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 60.583 60.583c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zM843.083 823a42.576 42.576 0 0 1-29.324-12.907L753.166 749.5c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 60.583 60.583c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002z'/%3E%3Cglyph unicode='' glyph-name='sunrise' d='M512 448c-62.815 0-126.203-20.708-175-64.083S256 273.778 256 192a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V192c0 60.444 21.13 100.347 52.333 128.083s74.481 42.583 118.333 42.583c43.852 0 87.13-14.847 118.333-42.583S682.665 252.444 682.665 192a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V192c0 81.778-32.203 148.541-81 191.917S574.813 448 511.998 448zm-.667 469.917c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V576a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V576v298.667c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-331.75-350.834c-23.563-.005-42.662-19.107-42.662-42.671 0-12.029 4.977-22.895 12.984-30.652l60.594-60.594c7.778-8.091 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-60.583 60.583c-7.768 8.021-18.636 13-30.667 13zM42.667 234.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H128c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H128zm853.333 0c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h85.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zM843.083 567a42.576 42.576 0 0 1-29.324-12.907L753.166 493.5c-8.092-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 60.583 60.583c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zM42.667 64c-.179.003-.391.004-.603.004C18.497 64.004-.607 44.9-.607 21.333s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h938.635c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm468.666 853.333c-11.538-.19-21.934-4.93-29.5-12.5L311.166 734.166c-8.091-7.778-13.118-18.692-13.118-30.78 0-23.567 19.104-42.671 42.671-42.671 12.088 0 23.003 5.027 30.767 13.104l.013.014 140.5 140.5 140.5-140.5c7.778-8.091 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-170.667 170.667c-7.723 7.726-18.393 12.505-30.18 12.505-.23 0-.459-.002-.688-.005h.035z'/%3E%3Cglyph unicode='' glyph-name='sunset' d='M512 448c-62.815 0-126.203-20.708-175-64.083S256 273.778 256 192a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V192c0 60.444 21.13 100.347 52.333 128.083s74.481 42.583 118.333 42.583c43.852 0 87.13-14.847 118.333-42.583S682.665 252.444 682.665 192a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V192c0 81.778-32.203 148.541-81 191.917S574.813 448 511.998 448zm-.667 469.917c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031V576a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V576v298.667c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-331.75-350.834c-23.563-.005-42.662-19.107-42.662-42.671 0-12.029 4.977-22.895 12.984-30.652l60.594-60.594c7.778-8.091 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-60.583 60.583c-7.768 8.021-18.636 13-30.667 13zM42.667 234.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H128c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H128zm853.333 0c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h85.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zM843.083 567a42.576 42.576 0 0 1-29.324-12.907L753.166 493.5c-8.092-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 60.583 60.583c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zM42.667 64c-.179.003-.391.004-.603.004C18.497 64.004-.607 44.9-.607 21.333s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h938.635c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm298.25 725.75c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l170.676-170.676c7.721-7.718 18.387-12.492 30.167-12.492s22.445 4.774 30.167 12.492l170.666 170.666c8.091 7.778 13.118 18.692 13.118 30.781 0 23.567-19.104 42.671-42.671 42.671-12.089 0-23.003-5.027-30.767-13.104l-.013-.014-140.5-140.5-140.5 140.5c-7.76 7.971-18.594 12.916-30.583 12.917z'/%3E%3Cglyph unicode='' glyph-name='tablet' d='M768-21.333c70.174 0 128 57.826 128 128v682.667c0 70.174-57.826 128-128 128H256c-70.174 0-128-57.826-128-128V106.667c0-70.174 57.826-128 128-128zM768 64H256c-24.375 0-42.667 18.291-42.667 42.667v682.667c0 24.375 18.291 42.667 42.667 42.667h512c24.375 0 42.667-18.291 42.667-42.667V106.667C810.667 82.292 792.376 64 768 64zM512 234.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H512c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H512z'/%3E%3Cglyph unicode='' glyph-name='tag' d='M85.333 917.333c-23.563-.002-42.664-19.103-42.667-42.666V448c.002-11.781 4.779-22.446 12.5-30.167l366.5-366.083c49.64-49.695 131.443-49.695 181.083 0l305.917 305.917.084.084.001.001c49.279 49.573 49.279 130.927 0 180.5l-.076.074-.01.009-366.5 366.498c-7.72 7.721-18.385 12.498-30.166 12.5zM128 832h366.333l354-354c16.808-16.996 16.781-43.118-.085-60.083L542.415 112.084c-17.025-17.044-43.392-17.044-60.417 0L128 465.667zm170.667-128c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h-.032c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='target' d='M512 917.333C253.3 917.333 42.667 706.7 42.667 448S253.3-21.333 512-21.333C770.7-21.333 981.333 189.3 981.333 448S770.7 917.333 512 917.333zM512 832c212.583 0 384-171.417 384-384S724.583 64 512 64 128 235.417 128 448s171.417 384 384 384zm0-85.333c-164.444 0-298.667-134.223-298.667-298.667S347.556 149.333 512 149.333c164.444 0 298.667 134.223 298.667 298.667S676.444 746.667 512 746.667zm0-85.334c118.326 0 213.333-95.007 213.333-213.333S630.326 234.667 512 234.667 298.667 329.674 298.667 448 393.674 661.333 512 661.333zM512 576c-70.187 0-128-57.813-128-128s57.813-128 128-128 128 57.813 128 128-57.813 128-128 128zm0-85.333c24.07 0 42.667-18.597 42.667-42.667S536.07 405.333 512 405.333 469.333 423.93 469.333 448 487.93 490.667 512 490.667z'/%3E%3Cglyph unicode='' glyph-name='terminal' d='M170.25 789.75c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l225.842-225.842-225.833-225.833c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 256 256c7.718 7.721 12.492 18.387 12.492 30.167s-4.774 22.445-12.492 30.167l-256 256c-7.76 7.971-18.594 12.916-30.583 12.917zM512 192c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h341.301c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='thermometer' d='M490.667 960c-36.148 0-72.87-11.819-101.667-37.417s-47.667-65.694-47.667-111.917V347.833c-76.681-64.449-100.494-162.151-75.25-245.333C293.564 11.949 377.311-64.083 490.666-64.083S687.769 11.949 715.249 102.5c25.244 83.183 1.431 180.885-75.25 245.333v462.833c0 46.222-18.87 86.319-47.667 111.917S526.813 960 490.665 960zm0-85.333c17.185 0 33.797-5.959 45-15.917s19-23.194 19-48.083V330.25c.001-14.743 7.479-27.739 18.848-35.404l.152-.096c63.621-42.509 77.787-108.617 59.917-167.5s-66.44-106-142.917-106c-76.476 0-125.047 47.117-142.917 106s-3.705 124.991 59.917 167.5c11.521 7.761 18.999 20.757 19 35.5v480.417c0 24.889 7.797 38.125 19 48.083s27.815 15.917 45 15.917z'/%3E%3Cglyph unicode='' glyph-name='thumbs-down' d='M244.5 917.333c-63.466.717-118.343-46.018-127.917-108.75l-58.917-384v-.088.002c-11.722-77.229 49.891-148.051 128-147.167h198.333v-128c0-93.751 76.915-170.667 170.667-170.667h.01c17.289 0 32.177 10.282 38.881 25.065l.109.268 159.417 358.669H838.5c71.276-1.26 132.861 51.607 142.417 122.25.256 1.72.407 3.713.417 5.739v298.678a42.89 42.89 0 0 1-.446 5.98l.027-.23c-9.554 70.643-71.14 123.511-142.415 122.25H725.333zM243.583 832l.25-.001.264.001h438.569V414.417l-151.5-340.75c-34.425 10.958-61.833 37.287-61.833 75.667v170.667c-.002 23.563-19.103 42.664-42.666 42.667h-241.5l-.25.001-.264-.001h.014c-27.095-.307-46.68 22.219-42.667 49v.085l58.917 383.915v.086-.002c3.238 21.353 21.071 36.494 42.667 36.25zM768 832h71.25a42.081 42.081 0 0 1 .77 0H840c28.383.502 51.771-19.707 56-47.667V495.666c-4.229-27.96-27.617-48.169-56-47.667a42.081 42.081 0 0 1-.77 0H768z'/%3E%3Cglyph unicode='' glyph-name='thumbs-up' d='M469.333 917.333h-.01c-17.289 0-32.177-10.282-38.881-25.065l-.109-.268-159.417-358.667h-100.25c-70.187 0-128-57.813-128-128V106.666c0-70.187 57.813-128 128-128h608.833c63.466-.718 118.343 46.018 127.917 108.75l58.917 384v.088-.002c11.722 77.227-49.891 148.049-128 147.165H640v128c0 93.751-76.915 170.667-170.667 170.667zm23.5-95c34.425-10.958 61.833-37.287 61.833-75.667V575.999c.002-23.563 19.103-42.664 42.666-42.667h241.5l.25-.001.264.001h-.013c27.125.307 46.737-22.263 42.667-49.083l-58.917-383.917v-.088.002c-3.238-21.353-21.071-36.494-42.667-36.25l-.25.001-.264-.001h-438.57v417.585zM170.667 448H256V64h-85.333C146.597 64 128 82.597 128 106.667v298.667c0 24.07 18.597 42.667 42.667 42.667z'/%3E%3Cglyph unicode='' glyph-name='toggle-left' d='M341.333 789.333C152.972 789.333 0 636.36 0 448s152.973-341.333 341.333-341.333h341.333c188.361 0 341.333 152.973 341.333 341.333S871.026 789.333 682.666 789.333zm0-85.333h341.333c142.562 0 256-113.438 256-256s-113.438-256-256-256H341.333c-142.562 0-256 113.438-256 256s113.438 256 256 256zm0-85.333c-93.751 0-170.667-76.915-170.667-170.667s76.915-170.667 170.667-170.667C435.084 277.333 512 354.248 512 448s-76.915 170.667-170.667 170.667zm0-85.334c47.634 0 85.333-37.7 85.333-85.333s-37.7-85.333-85.333-85.333c-47.634 0-85.333 37.7-85.333 85.333s37.7 85.333 85.333 85.333z'/%3E%3Cglyph unicode='' glyph-name='toggle-right' d='M341.333 789.333C152.972 789.333 0 636.36 0 448s152.973-341.333 341.333-341.333h341.333c188.361 0 341.333 152.973 341.333 341.333S871.026 789.333 682.666 789.333zm0-85.333h341.333c142.562 0 256-113.438 256-256s-113.438-256-256-256H341.333c-142.562 0-256 113.438-256 256s113.438 256 256 256zm341.334-85.333C588.916 618.667 512 541.752 512 448s76.915-170.667 170.667-170.667c93.751 0 170.667 76.915 170.667 170.667s-76.915 170.667-170.667 170.667zm0-85.334c47.634 0 85.333-37.7 85.333-85.333s-37.7-85.333-85.333-85.333c-47.634 0-85.333 37.7-85.333 85.333s37.7 85.333 85.333 85.333z'/%3E%3Cglyph unicode='' glyph-name='trash-2' d='M128 746.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H896c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H213.333zm298.667 170.666c-70.187 0-128-57.813-128-128V704a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V704v85.333c0 24.07 18.597 42.667 42.667 42.667h170.667c24.07 0 42.667-18.597 42.667-42.667V704a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V704v85.333c0 70.187-57.813 128-128 128zm-214-170.083c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V704 106.667c0-70.187 57.813-128 128-128h426.667c70.187 0 128 57.813 128 128V704c.003.179.004.391.004.603 0 23.567-19.104 42.671-42.671 42.671s-42.671-19.104-42.671-42.671c0-.212.002-.424.005-.635V704 106.667c0-24.07-18.597-42.667-42.667-42.667H298.667C274.597 64 256 82.597 256 106.667V704c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zM426 533.917c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-256a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 256c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm170.667 0c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-256a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 256c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='trash' d='M128 746.667c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H896c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H213.333zm298.667 170.666c-70.187 0-128-57.813-128-128V704a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V704v85.333c0 24.07 18.597 42.667 42.667 42.667h170.667c24.07 0 42.667-18.597 42.667-42.667V704a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V704v85.333c0 70.187-57.813 128-128 128zm-214-170.083c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V704 106.667c0-70.187 57.813-128 128-128h426.667c70.187 0 128 57.813 128 128V704c.003.179.004.391.004.603 0 23.567-19.104 42.671-42.671 42.671s-42.671-19.104-42.671-42.671c0-.212.002-.424.005-.635V704 106.667c0-24.07-18.597-42.667-42.667-42.667H298.667C274.597 64 256 82.597 256 106.667V704c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='trending-down' d='M42.25 747.083c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l320.009-320.009c7.721-7.718 18.387-12.492 30.167-12.492s22.445 4.774 30.167 12.492L576 536.999l375.167-375.167c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-405.333 405.333c-7.721 7.718-18.387 12.492-30.167 12.492s-22.445-4.774-30.167-12.492L362.667 444.331 72.834 734.164c-7.76 7.971-18.594 12.916-30.583 12.917zM980.667 491.25c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V448 234.667H725.334c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h255.968c23.563.002 42.664 19.103 42.667 42.666v256c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='trending-up' d='M980.5 747.083a42.576 42.576 0 0 1-29.324-12.907L575.999 358.999 392.832 542.166c-7.721 7.718-18.387 12.492-30.167 12.492s-22.445-4.774-30.167-12.492l-320-320C4.407 214.388-.62 203.474-.62 191.385c0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 289.833 289.833 183.167-183.167c7.721-7.718 18.387-12.492 30.167-12.492s22.445 4.774 30.167 12.492l405.333 405.333c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zm-255.167-.416c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h213.301V448.001a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 256c-.002 23.563-19.103 42.664-42.666 42.667z'/%3E%3Cglyph unicode='' glyph-name='triangle' d='M512 877.833c-42.502 0-84.981-20.133-109.417-60.417l-.165-.165-.002-.002L41.083 213.916a13.376 13.376 0 0 1-.327-.451l-.089-.133c-47.962-83.059 13.593-190.946 109.5-192l.208-.001.22.001h722.822l.209-.001.22.001h-.011c95.907 1.054 157.462 108.941 109.5 192-.225.323-.362.512-.501.701l.083-.118-361.333 603.333-.165.166-.001.001c-24.436 40.284-66.915 60.417-109.417 60.417zm0-82.916c13.847 0 27.713-7.264 36.5-21.75l360.917-602.5c17.322-29.998-1.862-63.619-36.5-64H151.084c-34.637.381-53.822 34.002-36.5 64l360.917 602.5c8.787 14.486 22.653 21.75 36.5 21.75z'/%3E%3Cglyph unicode='' glyph-name='truck' d='M42.667 874.667C19.104 874.665.003 855.564 0 832.001V277.334c.002-23.563 19.103-42.664 42.666-42.667h640c23.563.002 42.664 19.103 42.667 42.666V832c-.002 23.563-19.103 42.664-42.666 42.667zm42.666-85.334H640V320H85.333zm597.334-128c-23.563-.002-42.664-19.103-42.667-42.666V277.334c.002-23.563 19.103-42.664 42.666-42.667h298.667c23.563.002 42.664 19.103 42.667 42.666v213.333c-.002 11.781-4.779 22.446-12.5 30.167l-128 128c-7.72 7.721-18.385 12.498-30.166 12.5zM725.333 576h110.333l103-103V320H725.333zM234.667 320c-81.969 0-149.333-67.364-149.333-149.333S152.698 21.334 234.667 21.334 384 88.698 384 170.667 316.636 320 234.667 320zm0-85.333c35.852 0 64-28.148 64-64s-28.148-64-64-64c-35.852 0-64 28.148-64 64s28.148 64 64 64zM789.333 320C707.364 320 640 252.636 640 170.667S707.364 21.334 789.333 21.334s149.333 67.364 149.333 149.333S871.302 320 789.333 320zm0-85.333c35.852 0 64-28.148 64-64s-28.148-64-64-64c-35.852 0-64 28.148-64 64s28.148 64 64 64z'/%3E%3Cglyph unicode='' glyph-name='tv' d='M170.667 704c-70.174 0-128-57.826-128-128V106.667c0-70.174 57.826-128 128-128h682.667c70.174 0 128 57.826 128 128V576c0 70.174-57.826 128-128 128zm0-85.333h682.667c24.375 0 42.667-18.291 42.667-42.667V106.667C896.001 82.292 877.71 64 853.334 64H170.667C146.292 64 128 82.291 128 106.667V576c0 24.375 18.291 42.667 42.667 42.667zM298.25 917.75c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l213.342-213.342c7.721-7.718 18.387-12.492 30.167-12.492s22.445 4.774 30.167 12.492L755.499 844.5c8.091 7.778 13.118 18.692 13.118 30.781 0 23.567-19.104 42.671-42.671 42.671-12.089 0-23.003-5.027-30.767-13.104l-.013-.014-183.167-183.167-183.167 183.167c-7.76 7.971-18.594 12.916-30.583 12.917z'/%3E%3Cglyph unicode='' glyph-name='twitter' d='m981.75 874.667-.357.001a42.475 42.475 0 0 1-24.772-7.923l.13.088c-31.499-22.218-66.986-37.456-103.25-50.333-68.601 59.037-158.733 71.883-233.75 43.25-83.191-31.752-149.139-112.653-149.75-217.083-122.385 9.138-235.713 69.539-307.083 171.167-7.819 11.041-20.543 18.161-34.929 18.161-17.287 0-32.173-10.28-38.879-25.059l-.109-.268S42.234 702.784 48.084 574.085c5.04-110.869 60.044-241.352 204.583-334.333-65.465-30.656-135.408-50.651-208.333-47.75-.541.025-1.176.039-1.814.039-23.567 0-42.671-19.104-42.671-42.671 0-16.007 8.814-29.955 21.853-37.257l.216-.111c203.729-113.183 432.729-114.152 611.5-19s305.25 288.063 305.25 547V640.173v-.005c-.025 7.698-1.47 15.267-2.25 22.917 40.834 45.564 71.801 99.159 86.333 158.833.768 3.027 1.208 6.503 1.208 10.081 0 23.404-18.842 42.407-42.183 42.668h-.025zm-246.167-87.334c28.571-6.202 56.191-21.687 79.583-48.583 7.867-9.037 19.39-14.716 32.239-14.716 4.373 0 8.592.658 12.563 1.88l-.302-.08c10.451 3.147 19.044 10.444 29.25 14.25-8.622-11.557-15.904-24.047-26.25-34.25-7.875-7.746-12.755-18.517-12.755-30.427 0-2.826.275-5.587.799-8.259l-.044.27a149.765 149.765 0 0 0 2.667-27.583c-.055-231.633-108.227-390.673-260.083-471.5-110.485-58.807-245.205-73.882-379.833-40 53.657 15.668 105.084 39.21 151.917 71 11.364 7.782 18.724 20.691 18.724 35.318 0 17.311-10.309 32.215-25.122 38.907l-.269.109c-179.004 79.557-220.6 198.283-225.417 304.25-2.237 49.208 5.744 92.614 14 127.083 95.845-97.75 226.621-155.193 365.833-151.583 23.094.607 41.583 19.473 41.583 42.657v42.677l.001.292-.001.307v-.016c-.956 71.285 40.891 119.823 95.5 140.667 27.305 10.422 56.845 13.535 85.417 7.333z'/%3E%3Cglyph unicode='' glyph-name='type' d='M170.667 832c-23.563-.002-42.664-19.103-42.667-42.666v-128a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 85.333h597.333v-85.333a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 128c-.002 23.563-19.103 42.664-42.666 42.667zM384 149.333c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H640c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H640zm127.333 683.25c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-682.667a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 682.667c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='umbrella' d='M512 917.333c-264.651 0-486.685-201.796-511.833-465.25a41.44 41.44 0 0 1-.195-4.079c0-23.567 19.104-42.671 42.671-42.671H469.334v-256c0-53.333 21.536-98.764 54.333-127.917S598.519-21.334 640-21.334c41.481 0 83.536 13.597 116.333 42.75s54.333 74.583 54.333 127.917c.003.179.004.391.004.603 0 23.567-19.104 42.671-42.671 42.671s-42.671-19.104-42.671-42.671c0-.212.002-.424.005-.635v.032c0-32-10.464-50.57-25.667-64.083S662.518 64 639.999 64s-44.464 7.736-59.667 21.25-25.667 32.083-25.667 64.083v256h426.691c23.567 0 42.671 19.104 42.671 42.671 0 1.436-.071 2.856-.21 4.256l.014-.177c-25.148 263.454-247.182 465.25-511.833 465.25zM512 832c204.569 0 371.61-145.718 413.333-341.333H519.166c-2.092.363-4.501.571-6.958.571s-4.866-.208-7.21-.607l.252.035H98.667C140.39 686.281 307.431 831.999 512 831.999z'/%3E%3Cglyph unicode='' glyph-name='underline' d='M255.333 875.25c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V832 533.333c0-164.444 134.223-298.667 298.667-298.667s298.667 134.223 298.667 298.667V832c.003.179.004.391.004.603 0 23.567-19.104 42.671-42.671 42.671s-42.671-19.104-42.671-42.671c0-.212.002-.424.005-.635V832 533.333C725.334 415.007 630.327 320 512.001 320s-213.333 95.007-213.333 213.333V832c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-84.666-768.583c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h682.635c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='unlock' d='M213.333 533.333c-70.174 0-128-57.826-128-128V106.666c0-70.174 57.826-128 128-128h597.333c70.174 0 128 57.826 128 128v298.667c0 70.174-57.826 128-128 128zm0-85.333h597.333c24.375 0 42.667-18.291 42.667-42.667V106.666c0-24.375-18.291-42.667-42.667-42.667H213.333c-24.375 0-42.667 18.291-42.667 42.667v298.667c0 24.375 18.291 42.667 42.667 42.667zM486.25 916.25c-117.4-11.859-230.4-105.767-230.25-255V490.667a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032V661.42v-.002c-.109 108.186 72.441 161.729 153.5 169.917s162.888-29.81 184.417-135.833c4.096-19.643 21.266-34.188 41.833-34.188 23.576 0 42.688 19.112 42.688 42.688 0 3.009-.311 5.945-.903 8.778l.049-.277C733.22 858.752 603.65 928.112 486.25 916.253z'/%3E%3Cglyph unicode='' glyph-name='upload-cloud' d='M511.333 491.25c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V448 64a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V64v384c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zM373.25 874.333c-57.146-1.364-115.069-15.659-169.667-44.667C-14.806 713.637-67.76 421.559 96 236.249c7.859-8.873 19.281-14.438 32.002-14.438 23.575 0 42.686 19.111 42.686 42.686a42.52 42.52 0 0 1-10.727 28.297l.039-.045C31.454 438.211 72.238 663.253 243.667 754.332s380.66-1.057 429.25-189c4.908-18.549 21.541-32 41.315-32H768c91.515-.06 147.313-58.113 165.25-128.583s-3.316-148.112-83.667-191.917c-13.805-7.255-23.06-21.495-23.06-37.897 0-23.567 19.104-42.671 42.671-42.671 7.81 0 15.129 2.098 21.426 5.761l-.204-.109c113.656 61.962 151.811 184.546 125.5 287.917S897.448 618.581 767.999 618.666h-29.25c-57.843 158.4-205.837 259.477-365.5 255.667zm138.083-383.666c-11.538-.19-21.934-4.93-29.5-12.5L311.166 307.5c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 140.5 140.5 140.5-140.5c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-170.667 170.667c-7.723 7.726-18.393 12.505-30.18 12.505-.23 0-.459-.002-.688-.005h.035z'/%3E%3Cglyph unicode='' glyph-name='upload' d='M127.333 363.25c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V320 149.333c0-70.187 57.813-128 128-128h597.333c70.187 0 128 57.813 128 128V320c.003.179.004.391.004.603 0 23.567-19.104 42.671-42.671 42.671s-42.671-19.104-42.671-42.671c0-.212.002-.424.005-.635V320 149.333c0-24.07-18.597-42.667-42.667-42.667H213.333c-24.07 0-42.667 18.597-42.667 42.667V320c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm384 511.417c-11.538-.19-21.934-4.93-29.5-12.5L268.499 648.833c-8.091-7.778-13.118-18.692-13.118-30.78 0-23.567 19.104-42.671 42.671-42.671 12.088 0 23.003 5.027 30.767 13.104l.013.014 183.167 183.167L695.166 588.5c7.778-8.091 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-213.333 213.333c-7.723 7.726-18.393 12.505-30.18 12.505-.23 0-.459-.002-.688-.005h.035zm0 .583c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V832 320a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635V320v512c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035z'/%3E%3Cglyph unicode='' glyph-name='user-check' d='M213.333 362.667C96.018 362.667 0 266.649 0 149.334V64.001a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 85.333c0 71.198 56.802 128 128 128H512c71.198 0 128-56.802 128-128V64.001a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 85.333c0 117.315-96.018 213.333-213.333 213.333zm149.334 512c-117.315 0-213.333-96.018-213.333-213.333s96.018-213.333 213.333-213.333S576 544.019 576 661.334s-96.018 213.333-213.333 213.333zm0-85.334c71.198 0 128-56.802 128-128s-56.802-128-128-128c-71.198 0-128 56.802-128 128s56.802 128 128 128zM980.5 619.083a42.576 42.576 0 0 1-29.324-12.907l-140.51-140.51-55.167 55.167c-7.778 8.092-18.692 13.118-30.781 13.118-23.567 0-42.671-19.104-42.671-42.671 0-12.089 5.027-23.003 13.104-30.767l.014-.013 85.333-85.333c7.721-7.718 18.387-12.492 30.167-12.492s22.445 4.774 30.167 12.492l170.666 170.666c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002z'/%3E%3Cglyph unicode='' glyph-name='user-minus' d='M213.333 362.667C96.018 362.667 0 266.649 0 149.334V64.001a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 85.333c0 71.198 56.802 128 128 128H512c71.198 0 128-56.802 128-128V64.001a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 85.333c0 117.315-96.018 213.333-213.333 213.333zm149.334 512c-117.315 0-213.333-96.018-213.333-213.333s96.018-213.333 213.333-213.333S576 544.019 576 661.334s-96.018 213.333-213.333 213.333zm0-85.334c71.198 0 128-56.802 128-128s-56.802-128-128-128c-71.198 0-128 56.802-128 128s56.802 128 128 128zm362.666-256c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h255.968c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='user-plus' d='M213.333 362.667C96.018 362.667 0 266.649 0 149.334V64.001a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 85.333c0 71.198 56.802 128 128 128H512c71.198 0 128-56.802 128-128V64.001a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 85.333c0 117.315-96.018 213.333-213.333 213.333zm149.334 512c-117.315 0-213.333-96.018-213.333-213.333s96.018-213.333 213.333-213.333S576 544.019 576 661.334s-96.018 213.333-213.333 213.333zm0-85.334c71.198 0 128-56.802 128-128s-56.802-128-128-128c-71.198 0-128 56.802-128 128s56.802 128 128 128zm490-127.416c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-256a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 256c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zM725.333 533.333c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h255.968c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='user-x' d='M213.333 362.667C96.018 362.667 0 266.649 0 149.334V64.001a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 85.333c0 71.198 56.802 128 128 128H512c71.198 0 128-56.802 128-128V64.001a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 85.333c0 117.315-96.018 213.333-213.333 213.333zm149.334 512c-117.315 0-213.333-96.018-213.333-213.333s96.018-213.333 213.333-213.333S576 544.019 576 661.334s-96.018 213.333-213.333 213.333zm0-85.334c71.198 0 128-56.802 128-128s-56.802-128-128-128c-71.198 0-128 56.802-128 128s56.802 128 128 128zM767.583 661.75c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l213.342-213.342c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-213.333 213.333c-7.76 7.971-18.594 12.916-30.583 12.917zm212.917 0a42.576 42.576 0 0 1-29.324-12.907L737.833 435.5c-8.092-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 213.333 213.333c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002z'/%3E%3Cglyph unicode='' glyph-name='user' d='M341.333 362.667C224.018 362.667 128 266.649 128 149.334V64.001a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 85.333c0 71.198 56.802 128 128 128h341.333c71.198 0 128-56.802 128-128V64.001a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 85.333c0 117.315-96.018 213.333-213.333 213.333zm170.667 512c-117.315 0-213.333-96.018-213.333-213.333S394.685 448.001 512 448.001s213.333 96.018 213.333 213.333S629.315 874.667 512 874.667zm0-85.334c71.198 0 128-56.802 128-128s-56.802-128-128-128c-71.198 0-128 56.802-128 128s56.802 128 128 128z'/%3E%3Cglyph unicode='' glyph-name='users' d='M213.333 362.667C96.018 362.667 0 266.649 0 149.334V64.001a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 85.333c0 71.198 56.802 128 128 128h341.333c71.198 0 128-56.802 128-128V64.001a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 85.333c0 117.315-96.018 213.333-213.333 213.333zm170.667 512c-117.315 0-213.333-96.018-213.333-213.333S266.685 448.001 384 448.001s213.333 96.018 213.333 213.333S501.315 874.667 384 874.667zm0-85.334c71.198 0 128-56.802 128-128s-56.802-128-128-128c-71.198 0-128 56.802-128 128s56.802 128 128 128zM851.333 357.25c-22.907-.838-41.159-19.609-41.159-42.644 0-19.953 13.695-36.707 32.198-41.376l.295-.063c56.686-14.636 95.956-65.288 96-123.833V64.001a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 85.333c-.073 97.008-66.073 182.165-160 206.417-3.387.966-7.276 1.522-11.296 1.522-.482 0-.962-.008-1.441-.024l.07.002zm-170.75 512c-22.976-.753-41.316-19.559-41.316-42.649 0-20.07 13.856-36.904 32.524-41.457l.292-.06c67.191-17.204 96.25-69.254 96.25-124s-29.059-106.796-96.25-124c-18.885-4.668-32.667-21.466-32.667-41.482 0-23.567 19.104-42.671 42.671-42.671 3.971 0 7.815.542 11.463 1.557l-.3-.071c103.922 26.608 160.417 117.985 160.417 206.667S797.172 841.142 693.25 867.751c-3.386.966-7.276 1.522-11.295 1.522-.482 0-.963-.008-1.441-.024l.07.002z'/%3E%3Cglyph unicode='' glyph-name='video-off' d='M128 789.333c-70.187 0-128-57.813-128-128V234.666c0-70.187 57.813-128 128-128h469.333c70.187 0 128 57.813 128 128v42.667c.003.179.004.391.004.603 0 23.567-19.104 42.671-42.671 42.671s-42.671-19.104-42.671-42.671c0-.212.002-.424.005-.635v.032-42.667c0-24.07-18.597-42.667-42.667-42.667H128c-24.07 0-42.667 18.597-42.667 42.667v426.667C85.333 685.403 103.93 704 128 704h85.333c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032zm326.833 0c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h142.468c24.07 0 42.667-18.597 42.667-42.667v-142.5c.002-11.781 4.779-22.446 12.5-30.167l42.667-42.667c7.722-7.724 18.391-12.501 30.176-12.501a42.476 42.476 0 0 1 25.113 8.169l-.122-.085 188.333 136.25V234.665a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 426.667c0 23.566-19.105 42.671-42.671 42.671a42.479 42.479 0 0 1-25.117-8.172l.122.085-226.583-163.833-4.417 4.417v124.833c0 70.187-57.813 128-128 128zM42.25 960.417c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L951.166-51.5c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013L72.833 947.5c-7.76 7.971-18.594 12.916-30.583 12.917z'/%3E%3Cglyph unicode='' glyph-name='video' d='M980.083 704c-8.875-.257-17.018-3.185-23.71-8.003l.126.087-298.667-213.333c-10.895-7.833-17.907-20.473-17.907-34.75s7.012-26.917 17.78-34.663l.127-.087 298.667-213.333c6.892-4.981 15.512-7.968 24.829-7.968 23.567 0 42.671 19.104 42.671 42.671v.049-.003 426.681c0 23.567-19.104 42.671-42.671 42.671-.438 0-.875-.007-1.309-.02l.064.002zm-41.416-125.667V317.666l-182.5 130.333zM128 789.333c-70.174 0-128-57.826-128-128V234.666c0-70.174 57.826-128 128-128h469.333c70.174 0 128 57.826 128 128v426.667c0 70.174-57.826 128-128 128zM128 704h469.333C621.708 704 640 685.709 640 661.333V234.666c0-24.375-18.291-42.667-42.667-42.667H128c-24.375 0-42.667 18.291-42.667 42.667v426.667C85.333 685.708 103.624 704 128 704z'/%3E%3Cglyph unicode='' glyph-name='voicemail' d='M234.667 704C105.57 704 0 598.431 0 469.333s105.569-234.667 234.667-234.667c129.097 0 234.667 105.569 234.667 234.667S363.765 704 234.667 704zm0-85.333c82.98 0 149.333-66.353 149.333-149.333s-66.353-149.333-149.333-149.333S85.334 386.354 85.334 469.334s66.353 149.333 149.333 149.333zM789.333 704c-129.097 0-234.667-105.569-234.667-234.667s105.569-234.667 234.667-234.667C918.43 234.666 1024 340.235 1024 469.333S918.431 704 789.333 704zm0-85.333c82.98 0 149.333-66.353 149.333-149.333s-66.353-149.333-149.333-149.333S640 386.354 640 469.334s66.353 149.333 149.333 149.333zM234.667 320c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h554.635c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='volume-1' d='M468.083 789.333c-9.681-.29-18.498-3.761-25.499-9.397l.082.064-201.667-161.333H85.332c-23.563-.002-42.664-19.103-42.667-42.666v-256c.002-23.563 19.103-42.664 42.666-42.667h155.667l201.667-161.333c7.235-5.828 16.537-9.355 26.662-9.355 23.567 0 42.671 19.104 42.671 42.671v.019-.001 597.347c0 23.567-19.104 42.671-42.671 42.671-.438 0-.875-.007-1.309-.02l.064.002zm-41.416-131.5V238.166l-144 115.167c-7.23 5.815-16.521 9.333-26.635 9.333H128v170.667h128.032a42.491 42.491 0 0 1 26.718 9.398l-.083-.064zm235.916-15.666h-.075c-23.567 0-42.671-19.104-42.671-42.671 0-12.029 4.977-22.895 12.984-30.652l.011-.011c66.982-67.002 66.982-174.248 0-241.25-7.713-7.724-12.483-18.388-12.483-30.167 0-23.578 19.114-42.692 42.692-42.692 11.799 0 22.481 4.787 30.208 12.524 99.581 99.611 99.581 262.306 0 361.917-7.768 8.021-18.636 13-30.667 13z'/%3E%3Cglyph unicode='' glyph-name='volume-2' d='M468.083 789.333c-9.681-.29-18.498-3.761-25.499-9.397l.082.064-201.667-161.333H85.332c-23.563-.002-42.664-19.103-42.667-42.666v-256c.002-23.563 19.103-42.664 42.666-42.667h155.667l201.667-161.333c7.235-5.828 16.537-9.355 26.662-9.355 23.567 0 42.671 19.104 42.671 42.671v.019-.001 597.347c0 23.567-19.104 42.671-42.671 42.671-.438 0-.875-.007-1.309-.02l.064.002zm-41.416-131.5V238.166l-144 115.167c-7.23 5.815-16.521 9.333-26.635 9.333H128v170.667h128.032a42.491 42.491 0 0 1 26.718 9.398l-.083-.064zM813.25 792.75c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l.009-.009c150.264-150.309 150.264-392.691 0-543-8.091-7.778-13.117-18.692-13.117-30.78 0-23.567 19.104-42.671 42.671-42.671 12.088 0 23.002 5.026 30.766 13.103l.013.014c182.862 182.918 182.862 480.749 0 663.667-7.76 7.971-18.594 12.916-30.583 12.917zM662.583 642.167h-.075c-23.567 0-42.671-19.104-42.671-42.671 0-12.029 4.977-22.895 12.984-30.652l.011-.011c66.982-67.002 66.982-174.248 0-241.25-7.713-7.724-12.483-18.388-12.483-30.167 0-23.578 19.114-42.692 42.692-42.692 11.799 0 22.481 4.787 30.208 12.524 99.581 99.611 99.581 262.306 0 361.917-7.768 8.021-18.636 13-30.667 13z'/%3E%3Cglyph unicode='' glyph-name='volume-x' d='M468.083 789.333c-9.681-.29-18.498-3.761-25.499-9.397l.082.064-201.667-161.333H85.332c-23.563-.002-42.664-19.103-42.667-42.666v-256c.002-23.563 19.103-42.664 42.666-42.667h155.667l201.667-161.333c7.235-5.828 16.537-9.355 26.662-9.355 23.567 0 42.671 19.104 42.671 42.671v.019-.001 597.347c0 23.567-19.104 42.671-42.671 42.671-.438 0-.875-.007-1.309-.02l.064.002zm-41.416-131.5V238.166l-144 115.167c-7.23 5.815-16.521 9.333-26.635 9.333H128v170.667h128.032a42.491 42.491 0 0 1 26.718 9.398l-.083-.064zm553.833-38.75a42.576 42.576 0 0 1-29.324-12.907l-256.01-256.01c-8.092-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 256 256c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zm-255.583 0c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l256.009-256.009c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-256 256c-7.76 7.971-18.594 12.916-30.583 12.917z'/%3E%3Cglyph unicode='' glyph-name='volume' d='M468.083 789.333c-9.681-.29-18.498-3.761-25.499-9.397l.082.064-201.667-161.333H85.332c-23.563-.002-42.664-19.103-42.667-42.666v-256c.002-23.563 19.103-42.664 42.666-42.667h155.667l201.667-161.333c7.235-5.828 16.537-9.355 26.662-9.355 23.567 0 42.671 19.104 42.671 42.671v.019-.001 597.347c0 23.567-19.104 42.671-42.671 42.671-.438 0-.875-.007-1.309-.02l.064.002zm-41.416-131.5V238.166l-144 115.167c-7.23 5.815-16.521 9.333-26.635 9.333H128v170.667h128.032a42.491 42.491 0 0 1 26.718 9.398l-.083-.064z'/%3E%3Cglyph unicode='' glyph-name='watch' d='M512 789.333c-188.008 0-341.333-153.326-341.333-341.333S323.993 106.667 512 106.667c188.008 0 341.333 153.326 341.333 341.333S700.007 789.333 512 789.333zM512 704c141.89 0 256-114.11 256-256S653.89 192 512 192 256 306.11 256 448s114.11 256 256 256zm-.667-84.75c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615V576 448c.002-11.781 4.779-22.446 12.5-30.167l64-64c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-51.5 51.5v110.333c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zm-92 340.75c-65.805-.062-121.411-50.962-127.333-116.5l-14.917-163.333a41.38 41.38 0 0 1-.176-3.875c0-23.569 19.107-42.676 42.676-42.676 22.205 0 40.449 16.959 42.487 38.631l.013.17L377 835.834c2.019 22.347 19.979 38.812 42.417 38.833h185.754-.005c22.526.091 40.639-16.399 42.667-38.833l14.917-163.417c2.045-21.848 20.292-38.812 42.501-38.812 23.569 0 42.676 19.107 42.676 42.676 0 1.368-.064 2.721-.19 4.057l.013-.171L732.833 843.5v.083c-5.981 65.739-61.982 116.685-128 116.417H419.33h.002zm-100.5-697c-23.452-.151-42.404-19.197-42.404-42.67 0-1.584.086-3.148.254-4.687l-.017.19 14.917-163.417c5.981-65.739 61.982-116.685 128-116.417H604c66.018-.269 122.019 50.678 128 116.417v.085l14.917 163.333a41.38 41.38 0 0 1 .176 3.875c0 23.569-19.107 42.676-42.676 42.676-22.205 0-40.449-16.959-42.487-38.631l-.013-.17L647 60.167c-2.027-22.435-20.141-38.925-42.667-38.833H419.246h.005c-22.526-.09-40.64 16.399-42.667 38.833l-14.917 163.415C359.924 245.706 341.542 263 319.12 263l-.302-.001h.016z'/%3E%3Cglyph unicode='' glyph-name='wifi-off' d='M42.25 960.417c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L951.166-51.5c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013L72.833 947.5c-7.76 7.971-18.594 12.916-30.583 12.917zM711.5 531c-22.976-.753-41.316-19.559-41.316-42.649 0-16.96 9.895-31.609 24.227-38.49l.256-.111c31.754-15.497 61.475-34.889 88.417-57.75a42.473 42.473 0 0 1 28.349-10.779c23.567 0 42.671 19.104 42.671 42.671 0 13.371-6.15 25.305-15.775 33.129l-.079.062c-32.362 27.461-68.024 50.718-106.167 69.333-5.61 2.902-12.245 4.603-19.278 4.603-.459 0-.916-.007-1.371-.022l.066.002zm-277.583 38.25a42.884 42.884 0 0 1-7.429-.707l.262.04C338.083 553.393 255.014 514.952 186 457.25c-10.281-7.874-16.846-20.155-16.846-33.969 0-23.567 19.104-42.671 42.671-42.671 11.135 0 21.274 4.265 28.872 11.251l-.031-.028c57.457 48.04 126.598 79.937 200.417 92.583 20.587 3.281 36.132 20.909 36.132 42.167 0 23.567-19.104 42.671-42.671 42.671-.221 0-.441-.002-.661-.005h.033zM453.5 787.083c-22.04-1.841-39.231-20.184-39.231-42.542 0-23.573 19.109-42.682 42.682-42.682 1.22 0 2.428.051 3.622.152l-.156-.011c173.169 13.954 344.471-43.067 474.75-158 7.488-6.636 17.397-10.688 28.253-10.688 23.575 0 42.686 19.111 42.686 42.686 0 12.722-5.565 24.143-14.394 31.964l-.045.039C844.046 738.232 649.719 802.895 453.5 787.084zM260.833 741.75a42.568 42.568 0 0 1-15.615-3.271l.282.104C167.397 707.781 95.239 663.603 32.333 608c-8.873-7.859-14.438-19.281-14.438-32.002 0-23.575 19.111-42.686 42.686-42.686a42.52 42.52 0 0 1 28.297 10.727l-.045-.039A636.119 636.119 0 0 0 276.75 659.167c16.267 6.266 27.6 21.77 27.6 39.921 0 23.567-19.104 42.671-42.671 42.671-.297 0-.594-.003-.89-.009l.044.001zM512.25 362.583c-60.626 0-121.274-18.418-173-55.167-10.928-7.83-17.964-20.489-17.964-34.792 0-23.567 19.105-42.673 42.673-42.673 9.265 0 17.84 2.953 24.837 7.968l-.128-.087a212.995 212.995 0 0 0 247.083 0c6.868-4.929 15.444-7.882 24.71-7.882 23.567 0 42.673 19.105 42.673 42.673 0 14.303-7.037 26.963-17.838 34.706l-.128.087c-51.726 36.749-112.291 55.167-172.917 55.167zm-.25-213.25c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005H512c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005H512z'/%3E%3Cglyph unicode='' glyph-name='wind' d='M494.333 828.667c-40.049 7.918-83.725-2.536-115.417-34.417-8.037-7.77-13.027-18.649-13.027-30.693 0-23.567 19.104-42.671 42.671-42.671 12.127 0 23.072 5.059 30.841 13.181l.015.016c22.552 22.686 57.444 15.811 69.667-13.75s-7.595-59.134-39.583-59H85.334c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h383.801c89.904-.377 153.187 93.835 118.833 176.917-17.177 41.541-53.618 67.832-93.667 75.75zm366.5-128.5c-46.557 9.285-97.389-2.733-134.5-39.75-8.116-7.781-13.159-18.711-13.159-30.82 0-23.567 19.104-42.671 42.671-42.671 12.067 0 22.964 5.009 30.726 13.061l.013.013c33.323 33.239 86.311 22.645 104.333-20.833s-11.934-88.416-59-88.5H85.334c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h746.723-.002c104.834.188 177.81 109.658 137.667 206.5-20.074 48.421-62.362 79.048-108.919 88.333zM85.333 320c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h512.139-.005c31.989.132 51.806-29.439 39.583-59s-47.114-36.436-69.667-13.75c-7.784 8.138-18.729 13.197-30.856 13.197-23.567 0-42.671-19.104-42.671-42.671 0-12.044 4.99-22.923 13.015-30.681l.012-.012c63.384-63.761 174.73-41.749 209.083 41.333C750.33 226.112 687.145 320.257 597.332 320z'/%3E%3Cglyph unicode='' glyph-name='x-circle' d='M512 917.333C253.3 917.333 42.667 706.7 42.667 448S253.3-21.333 512-21.333C770.7-21.333 981.333 189.3 981.333 448S770.7 917.333 512 917.333zM512 832c212.583 0 384-171.417 384-384S724.583 64 512 64 128 235.417 128 448s171.417 384 384 384zm127.167-212.917a42.576 42.576 0 0 1-29.324-12.907l-256.01-256.01c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 256 256c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zm-255.584 0c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l256.009-256.009c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-256 256c-7.76 7.971-18.594 12.916-30.583 12.917z'/%3E%3Cglyph unicode='' glyph-name='x-square' d='M213.333 874.667c-70.174 0-128-57.826-128-128V149.334c0-70.174 57.826-128 128-128h597.333c70.174 0 128 57.826 128 128v597.333c0 70.174-57.826 128-128 128zm0-85.334h597.333c24.375 0 42.667-18.291 42.667-42.667V149.333c0-24.375-18.291-42.667-42.667-42.667H213.333c-24.375 0-42.667 18.291-42.667 42.667v597.333c0 24.375 18.291 42.667 42.667 42.667zm170.25-170.25c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l256.009-256.009c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-256 256c-7.76 7.971-18.594 12.916-30.583 12.917zm255.584 0a42.576 42.576 0 0 1-29.324-12.907l-256.01-256.01c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 256 256c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002z'/%3E%3Cglyph unicode='' glyph-name='x' d='M767.167 747.083a42.576 42.576 0 0 1-29.324-12.907l-512.01-512.01c-8.091-7.778-13.118-18.692-13.118-30.781 0-23.567 19.104-42.671 42.671-42.671 12.089 0 23.003 5.027 30.767 13.104l.013.014 512 512c7.979 7.762 12.929 18.602 12.929 30.598 0 23.567-19.104 42.671-42.671 42.671-.442 0-.883-.007-1.322-.02l.064.002zm-511.584 0c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57l512.009-512.009c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013-512 512c-7.76 7.971-18.594 12.916-30.583 12.917z'/%3E%3Cglyph unicode='' glyph-name='youtube' d='M512 832s-73.94-.024-157.25-2.5-170.257-5.102-220.667-18.583a23.705 23.705 0 0 1-.965-.234l.298.067c-55.523-15.708-98.49-60.025-112.5-116a33.347 33.347 0 0 1-.546-2.577l-.037-.256C6.469 615.036-.356 537.037 0 458.917v-.504c-.464-78.71 6.361-157.288 20.333-234.75a41.83 41.83 0 0 1 .99-4.384l-.073.301c15.435-54.195 58.227-96.541 112.583-111.413-.216.063-.133.034-.05.005l.3-.09C184.493 94.6 271.439 91.974 354.75 89.499 438.06 87.025 512 87.001 512 87.001s73.94.024 157.25 2.5 170.257 5.102 220.667 18.583c.518.117.742.174.965.233l-.298-.067c55.523 15.708 98.49 60.108 112.5 116.083.169.621.372 1.549.543 2.488l.04.262c13.762 76.329 20.587 153.776 20.333 231.334v.25c.479 78.793-6.346 157.457-20.333 235a40.436 40.436 0 0 1-.647 3.045l.063-.295c-14.011 55.975-56.977 100.375-112.5 116.083-.209.063-.714.178-1.223.285l-.277.049c-49.429 12.07-136.755 14.658-220 16.917S512 832.001 512 832.001zm0-85.333s72.875-.029 154.75-2.25c81.368-2.208 176.139-8.513 200.833-14.333 25.862-7.455 45.587-27.875 52.333-53.917 12.789-71.703 19.207-144.413 18.75-217.25l-.001-.209.001-.22v.011c.256-71.736-6.16-143.297-18.75-213.917-6.757-26.083-26.495-46.574-52.417-54-23.231-6.136-119.192-13.324-200.833-15.75-81.81-2.431-154.667-2.5-154.667-2.5s-72.857.068-154.667 2.5c-81.742 2.431-178.005 9.61-201.083 15.752-25.341 6.979-44.855 26.592-52.333 51.75-12.649 71.327-19.038 143.64-18.583 216.083l.001.25-.001.264v-.013c-.357 72.256 5.988 144.367 18.667 215.5 6.742 26.112 26.558 46.652 52.5 54.083 23.231 6.136 119.192 13.324 200.833 15.75 81.81 2.431 154.667 2.417 154.667 2.417zm-95.25-105.834c-.222.004-.484.007-.746.007-23.567 0-42.671-19.104-42.671-42.671V319.167c.01-23.559 19.111-42.653 42.671-42.653a42.47 42.47 0 0 1 21.285 5.68l-.206-.11 245.333 139.5c12.971 7.485 21.561 21.281 21.561 37.083s-8.59 29.598-21.355 36.974l-.206.11-245.333 139.5c-5.845 3.387-12.835 5.442-20.292 5.583l-.041.001zm41.917-116L575 458.666l-116.333-66.167z'/%3E%3Cglyph unicode='' glyph-name='zap-off' d='M554.417 917.333c-13.067-.057-24.74-5.979-32.529-15.267l-.054-.066-103.667-124.667c-6.466-7.439-10.407-17.222-10.407-27.925 0-23.567 19.104-42.671 42.671-42.671 13.443 0 25.433 6.216 33.255 15.93l.064.082 10.667 12.833-7.25-58.333c-.298-1.896-.469-4.081-.469-6.307 0-23.567 19.104-42.671 42.671-42.671 22.09 0 40.259 16.785 42.45 38.297l.015.181 25.167 202.667c.206 1.575.324 3.397.324 5.246 0 23.567-19.104 42.671-42.671 42.671l-.249-.001h.013zM668.167 576c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h136.635l-45.25-54.167c-6.584-7.472-10.603-17.342-10.603-28.151 0-23.567 19.104-42.671 42.671-42.671 13.507 0 25.548 6.275 33.366 16.069l.066.086L928.751 506c6.159 7.346 9.9 16.901 9.9 27.329 0 23.559-19.093 42.659-42.649 42.671h-.001zm-327.334 85.833c-13.016-.294-24.556-6.371-32.188-15.755l-.062-.078L95.25 390c-6.159-7.346-9.9-16.901-9.9-27.329 0-23.559 19.093-42.659 42.649-42.671h335.668L427 26.667a41.32 41.32 0 0 1-.331-5.305c0-23.567 19.104-42.671 42.671-42.671 13.123 0 24.862 5.924 32.69 15.243l.054.066 213.333 256c6.585 7.472 10.604 17.342 10.604 28.151 0 23.567-19.104 42.671-42.671 42.671-13.507 0-25.548-6.276-33.367-16.07l-.066-.086-120.167-144.25 24.583 196.917c.213 1.6.334 3.45.334 5.329 0 23.565-19.102 42.669-42.667 42.671H219.083l155 186c6.421 7.426 10.332 17.175 10.332 27.839 0 23.567-19.104 42.671-42.671 42.671-.32 0-.64-.004-.958-.011l.047.001zM42.25 960.417c-23.562-.006-42.66-19.108-42.66-42.671 0-11.987 4.942-22.819 12.9-30.57L951.166-51.5c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013L72.833 947.5c-7.76 7.971-18.594 12.916-30.583 12.917z'/%3E%3Cglyph unicode='' glyph-name='zap' d='M554.417 917.333c-13.036-.083-24.674-6-32.446-15.267l-.054-.066L95.25 390c-6.159-7.346-9.9-16.901-9.9-27.329 0-23.559 19.093-42.659 42.649-42.671h335.668L427 26.667a41.32 41.32 0 0 1-.331-5.305c0-23.567 19.104-42.671 42.671-42.671 13.123 0 24.862 5.924 32.69 15.243l.054.066 426.667 512c6.159 7.346 9.9 16.901 9.9 27.329 0 23.559-19.093 42.659-42.649 42.671H560.334l36.667 293.333c.213 1.6.334 3.451.334 5.33 0 23.567-19.104 42.671-42.671 42.671l-.26-.001h.013zm-60.167-181.75-24.583-196.917c-.213-1.6-.334-3.45-.334-5.329 0-23.565 19.102-42.669 42.667-42.671h292.917L529.75 160.416l24.583 196.917c.213 1.6.334 3.45.334 5.329 0 23.565-19.102 42.669-42.667 42.671H219.083z'/%3E%3Cglyph unicode='' glyph-name='zoom-in' d='M469.333 874.667c-211.572 0-384-172.428-384-384s172.428-384 384-384 384 172.428 384 384-172.428 384-384 384zm0-85.334C634.787 789.333 768 656.121 768 490.666S634.788 191.999 469.333 191.999c-165.454 0-298.667 133.212-298.667 298.667s133.212 298.667 298.667 298.667zm240.584-496.666c-23.526-.054-42.577-19.138-42.577-42.671 0-11.987 4.942-22.819 12.901-30.57L865.833 33.834c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013L740.584 279.75c-7.761 7.972-18.596 12.917-30.586 12.917h-.085.004zm-241.25 369.25c-23.278-.375-42.004-19.334-42.004-42.666 0-.205.001-.411.004-.615v.031-256a37.593 37.593 0 0 1-.004-.603c0-23.567 19.104-42.671 42.671-42.671s42.671 19.104 42.671 42.671c0 .212-.002.424-.005.635v-.032 256c.003.174.004.379.004.584 0 23.567-19.104 42.671-42.671 42.671-.234 0-.468-.002-.702-.006h.035zM341.333 533.333c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h255.968c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3Cglyph unicode='' glyph-name='zoom-out' d='M469.333 874.667c-211.572 0-384-172.428-384-384s172.428-384 384-384 384 172.428 384 384-172.428 384-384 384zm0-85.334C634.787 789.333 768 656.121 768 490.666S634.788 191.999 469.333 191.999c-165.454 0-298.667 133.212-298.667 298.667s133.212 298.667 298.667 298.667zm240.584-496.666c-23.526-.054-42.577-19.138-42.577-42.671 0-11.987 4.942-22.819 12.901-30.57L865.833 33.834c7.778-8.092 18.692-13.118 30.781-13.118 23.567 0 42.671 19.104 42.671 42.671 0 12.089-5.027 23.003-13.104 30.767l-.014.013L740.584 279.75c-7.761 7.972-18.596 12.917-30.586 12.917h-.085.004zM341.333 533.333c-.179.003-.391.004-.603.004-23.567 0-42.671-19.104-42.671-42.671s19.104-42.671 42.671-42.671c.212 0 .424.002.635.005h255.968c.179-.003.391-.004.603-.004 23.567 0 42.671 19.104 42.671 42.671s-19.104 42.671-42.671 42.671c-.212 0-.424-.002-.635-.005h.032z'/%3E%3C/font%3E%3C/defs%3E%3C/svg%3E\") format(\"svg\")}[class*=\" fa-icon-\"],[class^=fa-icon-]{speak:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-family:feather!important;font-style:normal;font-variant:normal;font-weight:400;line-height:1;text-transform:none}.fa-icon-activity:before{content:\"\\e900\"}.fa-icon-airplay:before{content:\"\\e901\"}.fa-icon-alert-circle:before{content:\"\\e902\"}.fa-icon-alert-octagon:before{content:\"\\e903\"}.fa-icon-alert-triangle:before{content:\"\\e904\"}.fa-icon-align-center:before{content:\"\\e905\"}.fa-icon-align-justify:before{content:\"\\e906\"}.fa-icon-align-left:before{content:\"\\e907\"}.fa-icon-align-right:before{content:\"\\e908\"}.fa-icon-anchor:before{content:\"\\e909\"}.fa-icon-aperture:before{content:\"\\e90a\"}.fa-icon-archive:before{content:\"\\e90b\"}.fa-icon-arrow-down-circle:before{content:\"\\e90c\"}.fa-icon-arrow-down-left:before{content:\"\\e90d\"}.fa-icon-arrow-down-right:before{content:\"\\e90e\"}.fa-icon-arrow-down:before{content:\"\\e90f\"}.fa-icon-arrow-left-circle:before{content:\"\\e910\"}.fa-icon-arrow-left:before{content:\"\\e911\"}.fa-icon-arrow-right-circle:before{content:\"\\e912\"}.fa-icon-arrow-right:before{content:\"\\e913\"}.fa-icon-arrow-up-circle:before{content:\"\\e914\"}.fa-icon-arrow-up-left:before{content:\"\\e915\"}.fa-icon-arrow-up-right:before{content:\"\\e916\"}.fa-icon-arrow-up:before{content:\"\\e917\"}.fa-icon-at-sign:before{content:\"\\e918\"}.fa-icon-award:before{content:\"\\e919\"}.fa-icon-bar-chart-2:before{content:\"\\e91a\"}.fa-icon-bar-chart:before{content:\"\\e91b\"}.fa-icon-battery-charging:before{content:\"\\e91c\"}.fa-icon-battery:before{content:\"\\e91d\"}.fa-icon-bell-off:before{content:\"\\e91e\"}.fa-icon-bell:before{content:\"\\e91f\"}.fa-icon-bluetooth:before{content:\"\\e920\"}.fa-icon-bold:before{content:\"\\e921\"}.fa-icon-book-open:before{content:\"\\e922\"}.fa-icon-book:before{content:\"\\e923\"}.fa-icon-bookmark:before{content:\"\\e924\"}.fa-icon-box:before{content:\"\\e925\"}.fa-icon-briefcase:before{content:\"\\e926\"}.fa-icon-calendar:before{content:\"\\e927\"}.fa-icon-camera-off:before{content:\"\\e928\"}.fa-icon-camera:before{content:\"\\e929\"}.fa-icon-cast:before{content:\"\\e92a\"}.fa-icon-check-circle:before{content:\"\\e92b\"}.fa-icon-check-square:before{content:\"\\e92c\"}.fa-icon-check:before{content:\"\\e92d\"}.fa-icon-chevron-down:before{content:\"\\e92e\"}.fa-icon-chevron-left:before{content:\"\\e92f\"}.fa-icon-chevron-right:before{content:\"\\e930\"}.fa-icon-chevron-up:before{content:\"\\e931\"}.fa-icon-chevrons-down:before{content:\"\\e932\"}.fa-icon-chevrons-left:before{content:\"\\e933\"}.fa-icon-chevrons-right:before{content:\"\\e934\"}.fa-icon-chevrons-up:before{content:\"\\e935\"}.fa-icon-chrome:before{content:\"\\e936\"}.fa-icon-circle:before{content:\"\\e937\"}.fa-icon-clipboard:before{content:\"\\e938\"}.fa-icon-clock:before{content:\"\\e939\"}.fa-icon-cloud-drizzle:before{content:\"\\e93a\"}.fa-icon-cloud-lightning:before{content:\"\\e93b\"}.fa-icon-cloud-off:before{content:\"\\e93c\"}.fa-icon-cloud-rain:before{content:\"\\e93d\"}.fa-icon-cloud-snow:before{content:\"\\e93e\"}.fa-icon-cloud:before{content:\"\\e93f\"}.fa-icon-code:before{content:\"\\e940\"}.fa-icon-codepen:before{content:\"\\e941\"}.fa-icon-command:before{content:\"\\e942\"}.fa-icon-compass:before{content:\"\\e943\"}.fa-icon-copy:before{content:\"\\e944\"}.fa-icon-corner-down-left:before{content:\"\\e945\"}.fa-icon-corner-down-right:before{content:\"\\e946\"}.fa-icon-corner-left-down:before{content:\"\\e947\"}.fa-icon-corner-left-up:before{content:\"\\e948\"}.fa-icon-corner-right-down:before{content:\"\\e949\"}.fa-icon-corner-right-up:before{content:\"\\e94a\"}.fa-icon-corner-up-left:before{content:\"\\e94b\"}.fa-icon-corner-up-right:before{content:\"\\e94c\"}.fa-icon-cpu:before{content:\"\\e94d\"}.fa-icon-credit-card:before{content:\"\\e94e\"}.fa-icon-crop:before{content:\"\\e94f\"}.fa-icon-crosshair:before{content:\"\\e950\"}.fa-icon-database:before{content:\"\\e951\"}.fa-icon-delete:before{content:\"\\e952\"}.fa-icon-disc:before{content:\"\\e953\"}.fa-icon-dollar-sign:before{content:\"\\e954\"}.fa-icon-download-cloud:before{content:\"\\e955\"}.fa-icon-download:before{content:\"\\e956\"}.fa-icon-droplet:before{content:\"\\e957\"}.fa-icon-edit-2:before{content:\"\\e958\"}.fa-icon-edit-3:before{content:\"\\e959\"}.fa-icon-edit:before{content:\"\\e95a\"}.fa-icon-external-link:before{content:\"\\e95b\"}.fa-icon-eye-off:before{content:\"\\e95c\"}.fa-icon-eye:before{content:\"\\e95d\"}.fa-icon-facebook:before{content:\"\\e95e\"}.fa-icon-fast-forward:before{content:\"\\e95f\"}.fa-icon-feather:before{content:\"\\e960\"}.fa-icon-file-minus:before{content:\"\\e961\"}.fa-icon-file-plus:before{content:\"\\e962\"}.fa-icon-file-text:before{content:\"\\e963\"}.fa-icon-file:before{content:\"\\e964\"}.fa-icon-film:before{content:\"\\e965\"}.fa-icon-filter:before{content:\"\\e966\"}.fa-icon-flag:before{content:\"\\e967\"}.fa-icon-folder-minus:before{content:\"\\e968\"}.fa-icon-folder-plus:before{content:\"\\e969\"}.fa-icon-folder:before{content:\"\\e96a\"}.fa-icon-gift:before{content:\"\\e96b\"}.fa-icon-git-branch:before{content:\"\\e96c\"}.fa-icon-git-commit:before{content:\"\\e96d\"}.fa-icon-git-merge:before{content:\"\\e96e\"}.fa-icon-git-pull-request:before{content:\"\\e96f\"}.fa-icon-github:before{content:\"\\e970\"}.fa-icon-gitlab:before{content:\"\\e971\"}.fa-icon-globe:before{content:\"\\e972\"}.fa-icon-grid:before{content:\"\\e973\"}.fa-icon-hard-drive:before{content:\"\\e974\"}.fa-icon-hash:before{content:\"\\e975\"}.fa-icon-headphones:before{content:\"\\e976\"}.fa-icon-heart:before{content:\"\\e977\"}.fa-icon-help-circle:before{content:\"\\e978\"}.fa-icon-home:before{content:\"\\e979\"}.fa-icon-image:before{content:\"\\e97a\"}.fa-icon-inbox:before{content:\"\\e97b\"}.fa-icon-info:before{content:\"\\e97c\"}.fa-icon-instagram:before{content:\"\\e97d\"}.fa-icon-italic:before{content:\"\\e97e\"}.fa-icon-layers:before{content:\"\\e97f\"}.fa-icon-layout:before{content:\"\\e980\"}.fa-icon-life-buoy:before{content:\"\\e981\"}.fa-icon-link-2:before{content:\"\\e982\"}.fa-icon-link:before{content:\"\\e983\"}.fa-icon-linkedin:before{content:\"\\e984\"}.fa-icon-list:before{content:\"\\e985\"}.fa-icon-loader:before{content:\"\\e986\"}.fa-icon-lock:before{content:\"\\e987\"}.fa-icon-log-in:before{content:\"\\e988\"}.fa-icon-log-out:before{content:\"\\e989\"}.fa-icon-mail:before{content:\"\\e98a\"}.fa-icon-map-pin:before{content:\"\\e98b\"}.fa-icon-map:before{content:\"\\e98c\"}.fa-icon-maximize-2:before{content:\"\\e98d\"}.fa-icon-maximize:before{content:\"\\e98e\"}.fa-icon-menu:before{content:\"\\e98f\"}.fa-icon-message-circle:before{content:\"\\e990\"}.fa-icon-message-square:before{content:\"\\e991\"}.fa-icon-mic-off:before{content:\"\\e992\"}.fa-icon-mic:before{content:\"\\e993\"}.fa-icon-minimize-2:before{content:\"\\e994\"}.fa-icon-minimize:before{content:\"\\e995\"}.fa-icon-minus-circle:before{content:\"\\e996\"}.fa-icon-minus-square:before{content:\"\\e997\"}.fa-icon-minus:before{content:\"\\e998\"}.fa-icon-monitor:before{content:\"\\e999\"}.fa-icon-moon:before{content:\"\\e99a\"}.fa-icon-more-horizontal:before{content:\"\\e99b\"}.fa-icon-more-vertical:before{content:\"\\e99c\"}.fa-icon-move:before{content:\"\\e99d\"}.fa-icon-music:before{content:\"\\e99e\"}.fa-icon-navigation-2:before{content:\"\\e99f\"}.fa-icon-navigation:before{content:\"\\e9a0\"}.fa-icon-octagon:before{content:\"\\e9a1\"}.fa-icon-package:before{content:\"\\e9a2\"}.fa-icon-paperclip:before{content:\"\\e9a3\"}.fa-icon-pause-circle:before{content:\"\\e9a4\"}.fa-icon-pause:before{content:\"\\e9a5\"}.fa-icon-percent:before{content:\"\\e9a6\"}.fa-icon-phone-call:before{content:\"\\e9a7\"}.fa-icon-phone-forwarded:before{content:\"\\e9a8\"}.fa-icon-phone-incoming:before{content:\"\\e9a9\"}.fa-icon-phone-missed:before{content:\"\\e9aa\"}.fa-icon-phone-off:before{content:\"\\e9ab\"}.fa-icon-phone-outgoing:before{content:\"\\e9ac\"}.fa-icon-phone:before{content:\"\\e9ad\"}.fa-icon-pie-chart:before{content:\"\\e9ae\"}.fa-icon-play-circle:before{content:\"\\e9af\"}.fa-icon-play:before{content:\"\\e9b0\"}.fa-icon-plus-circle:before{content:\"\\e9b1\"}.fa-icon-plus-square:before{content:\"\\e9b2\"}.fa-icon-plus:before{content:\"\\e9b3\"}.fa-icon-pocket:before{content:\"\\e9b4\"}.fa-icon-power:before{content:\"\\e9b5\"}.fa-icon-printer:before{content:\"\\e9b6\"}.fa-icon-radio:before{content:\"\\e9b7\"}.fa-icon-refresh-ccw:before{content:\"\\e9b8\"}.fa-icon-refresh-cw:before{content:\"\\e9b9\"}.fa-icon-repeat:before{content:\"\\e9ba\"}.fa-icon-rewind:before{content:\"\\e9bb\"}.fa-icon-rotate-ccw:before{content:\"\\e9bc\"}.fa-icon-rotate-cw:before{content:\"\\e9bd\"}.fa-icon-rss:before{content:\"\\e9be\"}.fa-icon-save:before{content:\"\\e9bf\"}.fa-icon-scissors:before{content:\"\\e9c0\"}.fa-icon-search:before{content:\"\\e9c1\"}.fa-icon-send:before{content:\"\\e9c2\"}.fa-icon-server:before{content:\"\\e9c3\"}.fa-icon-settings:before{content:\"\\e9c4\"}.fa-icon-share-2:before{content:\"\\e9c5\"}.fa-icon-share:before{content:\"\\e9c6\"}.fa-icon-shield-off:before{content:\"\\e9c7\"}.fa-icon-shield:before{content:\"\\e9c8\"}.fa-icon-shopping-bag:before{content:\"\\e9c9\"}.fa-icon-shopping-cart:before{content:\"\\e9ca\"}.fa-icon-shuffle:before{content:\"\\e9cb\"}.fa-icon-sidebar:before{content:\"\\e9cc\"}.fa-icon-skip-back:before{content:\"\\e9cd\"}.fa-icon-skip-forward:before{content:\"\\e9ce\"}.fa-icon-slack:before{content:\"\\e9cf\"}.fa-icon-slash:before{content:\"\\e9d0\"}.fa-icon-sliders:before{content:\"\\e9d1\"}.fa-icon-smartphone:before{content:\"\\e9d2\"}.fa-icon-speaker:before{content:\"\\e9d3\"}.fa-icon-square:before{content:\"\\e9d4\"}.fa-icon-star:before{content:\"\\e9d5\"}.fa-icon-stop-circle:before{content:\"\\e9d6\"}.fa-icon-sun:before{content:\"\\e9d7\"}.fa-icon-sunrise:before{content:\"\\e9d8\"}.fa-icon-sunset:before{content:\"\\e9d9\"}.fa-icon-tablet:before{content:\"\\e9da\"}.fa-icon-tag:before{content:\"\\e9db\"}.fa-icon-target:before{content:\"\\e9dc\"}.fa-icon-terminal:before{content:\"\\e9dd\"}.fa-icon-thermometer:before{content:\"\\e9de\"}.fa-icon-thumbs-down:before{content:\"\\e9df\"}.fa-icon-thumbs-up:before{content:\"\\e9e0\"}.fa-icon-toggle-left:before{content:\"\\e9e1\"}.fa-icon-toggle-right:before{content:\"\\e9e2\"}.fa-icon-trash-2:before{content:\"\\e9e3\"}.fa-icon-trash:before{content:\"\\e9e4\"}.fa-icon-trending-down:before{content:\"\\e9e5\"}.fa-icon-trending-up:before{content:\"\\e9e6\"}.fa-icon-triangle:before{content:\"\\e9e7\"}.fa-icon-truck:before{content:\"\\e9e8\"}.fa-icon-tv:before{content:\"\\e9e9\"}.fa-icon-twitter:before{content:\"\\e9ea\"}.fa-icon-type:before{content:\"\\e9eb\"}.fa-icon-umbrella:before{content:\"\\e9ec\"}.fa-icon-underline:before{content:\"\\e9ed\"}.fa-icon-unlock:before{content:\"\\e9ee\"}.fa-icon-upload-cloud:before{content:\"\\e9ef\"}.fa-icon-upload:before{content:\"\\e9f0\"}.fa-icon-user-check:before{content:\"\\e9f1\"}.fa-icon-user-minus:before{content:\"\\e9f2\"}.fa-icon-user-plus:before{content:\"\\e9f3\"}.fa-icon-user-x:before{content:\"\\e9f4\"}.fa-icon-user:before{content:\"\\e9f5\"}.fa-icon-users:before{content:\"\\e9f6\"}.fa-icon-video-off:before{content:\"\\e9f7\"}.fa-icon-video:before{content:\"\\e9f8\"}.fa-icon-voicemail:before{content:\"\\e9f9\"}.fa-icon-volume-1:before{content:\"\\e9fa\"}.fa-icon-volume-2:before{content:\"\\e9fb\"}.fa-icon-volume-x:before{content:\"\\e9fc\"}.fa-icon-volume:before{content:\"\\e9fd\"}.fa-icon-watch:before{content:\"\\e9fe\"}.fa-icon-wifi-off:before{content:\"\\e9ff\"}.fa-icon-wind:before{content:\"\\ea01\"}.fa-icon-x-circle:before{content:\"\\ea02\"}.fa-icon-x-square:before{content:\"\\ea03\"}.fa-icon-x:before{content:\"\\ea04\"}.fa-icon-youtube:before{content:\"\\ea05\"}.fa-icon-zap-off:before{content:\"\\ea06\"}.fa-icon-zap:before{content:\"\\ea07\"}.fa-icon-zoom-in:before{content:\"\\ea08\"}.fa-icon-zoom-out:before{content:\"\\ea09\"}";
styleInject(css_248z$t);

var DateTimePicker = /** @class */ (function (_super) {
    __extends$d(DateTimePicker, _super);
    function DateTimePicker() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.renderInput = function (props, openCalendar) {
            var _a = _this.props, isDisabled = _a.isDisabled, isReadOnly = _a.isReadOnly;
            return (jsxs("div", __assign$a({ className: classNames$1("datepicker__input-field", { isDisabled: isDisabled }) }, { children: [jsx$1("input", __assign$a({}, props, { readOnly: isReadOnly }), void 0), jsx$1("i", { className: "icon fa-icon-calendar", onClick: !isDisabled ? function () { return openCalendar(); } : undefined }, void 0)] }), void 0));
        };
        return _this;
    }
    DateTimePicker.prototype.render = function () {
        var _a = this.props, className = _a.className, dataQa = _a.dataQa, errorMessage = _a.errorMessage, dateTimePickerProps = __rest$8(_a, ["className", "dataQa", "errorMessage"]);
        return (jsxs("div", __assign$a({ className: classNames$1("datepicker__container", className), "data-qa-id": dataQa }, { children: [jsx$1(DateTime, __assign$a({}, dateTimePickerProps, { renderInput: this.renderInput }), void 0), errorMessage && jsx$1(FieldErrorMessage, { message: errorMessage }, void 0)] }), void 0));
    };
    return DateTimePicker;
}(React$7.Component));

var css_248z$s = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.horizontalFieldText.row{align-items:center;display:flex;flex-direction:row;flex-wrap:wrap}.horizontalFieldText .cell-1 .label{color:#687792;font-size:16px;margin-right:5px}.horizontalFieldText .cell-1 #horizontal-field-text-label__tooltip{text-align:left}";
styleInject(css_248z$s);

var HorizontalFieldText = /** @class */ (function (_super) {
    __extends$d(HorizontalFieldText, _super);
    function HorizontalFieldText(props) {
        var _this = _super.call(this, props) || this;
        _this.tooltipRef = React$7.createRef();
        _this.showToolTips = function () {
            if (_this.tooltipRef && _this.tooltipRef.current) {
                ReactTooltip.show(_this.tooltipRef.current);
            }
        };
        _this.hideToolTips = function () {
            if (_this.tooltipRef && _this.tooltipRef.current) {
                ReactTooltip.hide(_this.tooltipRef.current);
            }
        };
        return _this;
    }
    HorizontalFieldText.prototype.componentDidMount = function () {
        setTimeout(function () {
            ReactTooltip.rebuild();
        }, 100);
    };
    HorizontalFieldText.prototype.componentWillUpdate = function (nextProps) {
        if (nextProps.showTooltip !== this.props.showTooltip) {
            if (nextProps.showTooltip && this.props.showTooltipOnFocus) {
                this.showToolTips();
            }
            else {
                this.hideToolTips();
            }
        }
    };
    HorizontalFieldText.prototype.render = function () {
        var _a = this.props, children = _a.children, _b = _a.label, label = _b === void 0 ? "" : _b, _c = _a.isLabelHidden, isLabelHidden = _c === void 0 ? false : _c, _d = _a.isFlex, isFlex = _d === void 0 ? true : _d, rightCellClassName = _a.rightCellClassName, className = _a.className, tooltip = _a.tooltip, _e = _a.isValueMultiLine, isValueMultiLine = _e === void 0 ? false : _e, dataQa = _a.dataQa, labelAlignment = _a.labelAlignment, _f = _a.isRequired, isRequired = _f === void 0 ? true : _f, optionalLabel = _a.optionalLabel;
        var dataTip = React$7.isValidElement(tooltip) ? server.renderToString(tooltip) : tooltip;
        return (jsxs("div", __assign$a({ className: classNames$1("horizontalFieldText", className, {
                "multi-line-row": isValueMultiLine,
                "label-hidden": isLabelHidden,
                row: isFlex,
            }) }, { children: [!isLabelHidden && (jsxs("div", __assign$a({ className: classNames$1("cell-1", labelAlignment) }, { children: [jsxs("span", __assign$a({ className: "label" }, { children: [label, !isRequired && " " + optionalLabel] }), void 0), tooltip && (jsxs(Fragment$2, { children: [jsx$1("i", { ref: this.tooltipRef, className: "fa-icon-info", "data-for": "horizontal-field-text-label__tooltip", "data-tip": dataTip }, void 0), jsx$1(ReactTooltip, { effect: "solid", id: "horizontal-field-text-label__tooltip", html: true }, void 0)] }, void 0))] }), void 0)), jsx$1("div", __assign$a({ className: classNames$1("cell-2", rightCellClassName), "data-qa-id": dataQa }, { children: children }), void 0)] }), void 0));
    };
    return HorizontalFieldText;
}(React$7.Component));

var css_248z$r = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.radio-group-horizontal{display:flex;flex-direction:row;flex-wrap:wrap}.radio-group-horizontal .radio-item:not(:last-child){margin-right:20px}.radio-group-vertical{display:block}.radio-group-vertical .radio-item:not(:last-child){margin-bottom:10px}.radio-item{align-items:center;cursor:pointer;display:flex;flex-direction:row}.radio-item .radio-icon{border:1px solid #b8bfcd;border-radius:50%;box-sizing:border-box;display:inline-block;height:20px;margin-right:10px;position:relative;vertical-align:middle;width:20px}.radio-item .radio-label{color:#232831;font-size:14px}.radio-item.isDisabled{cursor:not-allowed}.radio-item.isDisabled .radio-label{color:#b8bfcd}.radio-item.isDisabled.isSelected .radio-icon{border-color:#b8bfcd}.radio-item.isSelected .radio-icon{border:6px solid #0b6cff}.radio-item.isSelected .radio-icon:before{display:none!important}";
styleInject(css_248z$r);

var RadioButtonItem = function (_a) {
    var _b = _a.isDisabled, isDisabled = _b === void 0 ? false : _b, _c = _a.isSelected, isSelected = _c === void 0 ? false : _c, onChange = _a.onChange, item = _a.item;
    return (jsxs("div", __assign$a({ className: classNames$1("radio-item", { isDisabled: isDisabled, isSelected: isSelected }), onClick: isDisabled || isSelected ? undefined : onChange }, { children: [jsx$1("span", { className: "radio-icon" }, void 0), jsx$1("span", __assign$a({ className: "radio-label" }, { children: item.label }), void 0)] }), void 0));
};
var RadioButton = function (_a) {
    var _b = _a.options, options = _b === void 0 ? [] : _b, selectedRadio = _a.selectedRadio, onChange = _a.onChange, _c = _a.isDisabled, isDisabled = _c === void 0 ? false : _c, _d = _a.isHorizontal, isHorizontal = _d === void 0 ? true : _d, className = _a.className;
    return (jsx$1("div", __assign$a({ className: classNames$1(className, {
            "radio-group-horizontal": isHorizontal,
            "radio-group-vertical": !isHorizontal,
        }) }, { children: options.map(function (item, index) { return (jsx$1(RadioButtonItem, { item: item, isDisabled: isDisabled, isSelected: item.value === selectedRadio.value, onChange: function () { return onChange(item); } }, index)); }) }), void 0));
};

var css_248z$q = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.styled-checkbox{padding:20px 0 10px 32px;position:relative}.styled-checkbox label{align-items:center;display:flex;padding:0}.styled-checkbox label>i{display:block;margin-left:8px}.styled-checkbox .field-helper-text{margin-top:8px}.styled-checkbox__input{border:0;display:none;height:0;left:0;position:absolute;top:0;width:0}.styled-checkbox__icon{align-items:center;border:1px solid #b8bfcd;border-radius:2px;display:flex;height:20px;justify-content:center;left:0;position:absolute;top:20px;width:20px}.styled-checkbox__icon>i{display:block;font-size:16px}.styled-checkbox__label{display:block;line-height:20px}.styled-checkbox.isChecked .styled-checkbox__icon{background-color:#0b6cff;border-color:#0b6cff}.styled-checkbox.isChecked .styled-checkbox__icon>i{color:#fff}";
styleInject(css_248z$q);

var Checkbox = function (_a) {
    var label = _a.label, helperText = _a.helperText, isChecked = _a.isChecked, tooltip = _a.tooltip, props = __rest$8(_a, ["label", "helperText", "isChecked", "tooltip"]);
    var dataTip = React$7.isValidElement(tooltip) ? server.renderToString(tooltip) : tooltip;
    return (jsxs("div", __assign$a({ className: classNames$1("styled-checkbox", { isChecked: isChecked }) }, { children: [jsxs("label", { children: [jsx$1("input", __assign$a({ className: "styled-checkbox__input", type: "checkbox", checked: isChecked }, props), void 0), jsx$1("span", __assign$a({ className: "styled-checkbox__icon" }, { children: isChecked && jsx$1("i", { className: "fa-icon-check" }, void 0) }), void 0), label && jsx$1("span", __assign$a({ className: "styled-checkbox__label" }, { children: label }), void 0), tooltip && (jsxs(Fragment$2, { children: [jsx$1("i", { className: "fa-icon-info", "data-for": "styled-checkbox__tooltip", "data-tip": dataTip }, void 0), jsx$1(ReactTooltip, { effect: "solid", id: "styled-checkbox__tooltip", html: true }, void 0)] }, void 0))] }, void 0), jsx$1("span", __assign$a({ className: "field-helper-text" }, { children: helperText }), void 0)] }), void 0));
};

var css_248z$p = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.horizontalSelect___1x87Z{display:flex;font-family:Roboto,sans-serif}.horizontalSelect___1x87Z .horizontalSelectOption___2baH7{background-color:#fff;border:1px solid #b8bfcd;color:#687792;cursor:pointer;font-size:16px;padding:8px;text-align:center}.horizontalSelect___1x87Z .horizontalSelectOption___2baH7:first-child{border-bottom-left-radius:4px;border-top-left-radius:4px}.horizontalSelect___1x87Z .horizontalSelectOption___2baH7:last-child{border-bottom-right-radius:4px;border-top-right-radius:4px}.horizontalSelect___1x87Z .horizontalSelectOption___2baH7.isSelected___2W6g-{background-color:#0b6cff;border-color:transparent;color:#fff}.horizontalSelect___1x87Z .horizontalSelectOption___2baH7:not(.isSelected___2W6g-):hover{background-color:#eff5ff;color:#0b6cff}.horizontalSelect___1x87Z .horizontalSelectOption___2baH7:not(:first-child){border-left:none}";
var styles = {"horizontalSelect":"horizontalSelect___1x87Z","horizontalSelectOption":"horizontalSelectOption___2baH7","isSelected":"isSelected___2W6g-"};
styleInject(css_248z$p);

function horizontalSelect(props) {
    var options = props.options, className = props.className, onChange = props.onChange, value = props.value, dataQa = props.dataQa;
    return (jsx$1("div", __assign$a({ className: classNames$1(styles.horizontalSelect, className), "data-qa-id": dataQa }, { children: options.map(function (option) {
            var _a;
            return (jsx$1("div", __assign$a({ className: classNames$1(styles.horizontalSelectOption, (_a = {}, _a[styles.isSelected] = option.value === value, _a)), onClick: function () { return onChange(option.value); }, "data-qa-props": option.label }, { children: option.label }), option.label + "-" + option.value));
        }) }), void 0));
}

var css_248z$o = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.checkbox-container{cursor:pointer;display:block;font-size:22px;margin-bottom:12px;margin-left:9px;padding-left:35px;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.checkbox-container input{cursor:pointer;height:0;opacity:0;position:absolute;width:0}.checkbox-container input:checked~.checkmark{background-color:#0b6cff;border:1px solid #fff}.checkbox-container input:checked~.checkmark:after{display:block}.checkbox-container .checkmark{background-color:rgba(9,30,66,.13);border:2px solid rgba(9,30,66,.1);border-radius:4px;height:14px;left:0;position:absolute;top:0;width:14px}.checkbox-container .checkmark:after{border:solid #fff;border-width:0 2px 2px 0;content:\"\";display:none;height:8px;left:4px;position:absolute;top:0;-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg);width:5px}";
styleInject(css_248z$o);

var InlineCheckboxField = function (_a) {
    var checked = _a.checked, onClick = _a.onClick, isDisabled = _a.isDisabled, readOnly = _a.readOnly, checkboxProps = __rest$8(_a, ["checked", "onClick", "isDisabled", "readOnly"]);
    return (jsxs("div", __assign$a({ className: "checkbox-container" }, { children: [jsx$1("input", __assign$a({}, checkboxProps, { type: "checkbox", checked: checked, disabled: isDisabled, readOnly: readOnly }), void 0), jsx$1("div", { className: "checkmark", onClick: !isDisabled ? onClick : undefined }, void 0)] }), void 0));
};

var Icon = function (_a) {
    var name = _a.name, className = _a.className, props = __rest$8(_a, ["name", "className"]);
    return jsx$1("i", __assign$a({ className: classNames$1(name, className) }, props), void 0);
};

var css_248z$n = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");@keyframes spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.loading-icon{animation:spin 1s linear infinite;border:3px solid #909bb0;border-radius:44px;border-top-color:#000;display:block;margin:0 auto;opacity:.5}.loading-icon.small{height:16px;width:16px}.loading-icon.normal{height:34px;width:34px}.loading-icon.large{height:64px;width:64px}";
styleInject(css_248z$n);

var LoadingIndicator = function (_a) {
    var _b = _a.size, size = _b === void 0 ? "normal" : _b;
    return jsx$1("span", { className: classNames$1("loading-icon", size) }, void 0);
};

var css_248z$m = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.content-container{font-family:Roboto,sans-serif}.loading-container{display:flex;flex-direction:column;height:fit-content;justify-content:center;margin:auto;min-height:160px;width:fit-content}.loading-container .loading-info{color:#000;display:block;font-family:Roboto,sans-serif;font-size:20px;margin-top:20px;opacity:.5;text-align:center}.error-container{align-items:center;display:flex;flex-direction:column;font-family:Roboto,sans-serif;height:40vh;justify-content:center;min-height:fit-content}.error-container__button,.error-container button{background:transparent;border:none;box-shadow:none;color:#0b6cff;display:block;font-size:14px;margin-top:1rem;width:fit-content}.error-container__button:hover,.error-container button:hover{cursor:pointer}";
styleInject(css_248z$m);

var css_248z$l = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.error-wrapper{align-items:center;color:#687792;display:flex;flex-direction:column;font-family:Roboto,sans-serif;justify-content:center;margin:0 auto;width:fit-content}.error-wrapper__image,.error-wrapper img{margin-bottom:25px;width:80px}.error-wrapper__title,.error-wrapper h3{font-size:20px;font-weight:500;margin:0}.error-wrapper__subtitle,.error-wrapper h6{font-size:14px;font-weight:400;margin-top:4px;text-transform:unset}.error-wrapper__subtitle,.error-wrapper__title{margin:0}";
styleInject(css_248z$l);

var ErrorWrapper = function (_a) {
    var image = _a.image, title = _a.title, subTitle = _a.subTitle, customComponent = _a.customComponent;
    if (customComponent) {
        return jsx$1("div", __assign$a({ className: "error-wrapper error-wrapper__custom-component" }, { children: customComponent }), void 0);
    }
    return (jsxs("div", __assign$a({ className: "error-wrapper" }, { children: [image && jsx$1("img", { className: "error-wrapper__image", src: image, alt: title }, void 0), jsx$1("h3", __assign$a({ className: "error-wrapper__title" }, { children: title }), void 0), subTitle && jsx$1("h6", __assign$a({ className: "error-wrapper__subtitle" }, { children: subTitle }), void 0)] }), void 0));
};

var LoadingOrErrorWrapper = function (_a) {
    var children = _a.children, _b = _a.isLoading, isLoading = _b === void 0 ? false : _b, loadingInfo = _a.loadingInfo, error = _a.error, errorImage = _a.errorImage, _c = _a.errorTitle, errorTitle = _c === void 0 ? "" : _c, errorMessage = _a.errorMessage, _d = _a.errorButtonText, errorButtonText = _d === void 0 ? "" : _d, onErrorActionClick = _a.onErrorActionClick, isRefreshable = _a.isRefreshable;
    if (isLoading) {
        return (jsxs("div", __assign$a({ className: "loading-container" }, { children: [jsx$1(LoadingIndicator, {}, void 0), loadingInfo && jsx$1("span", __assign$a({ className: "loading-info" }, { children: loadingInfo }), void 0)] }), void 0));
    }
    if (!isLoading && !!error) {
        return (jsxs("div", __assign$a({ className: "error-container" }, { children: [jsx$1(ErrorWrapper, { title: errorTitle, subTitle: errorMessage, image: errorImage }, void 0), isRefreshable && (jsx$1("button", __assign$a({ className: "error-container__button", onClick: function () {
                        onErrorActionClick ? onErrorActionClick() : window.location.reload();
                    } }, { children: errorButtonText }), void 0))] }), void 0));
    }
    return jsx$1("div", __assign$a({ className: "content-container" }, { children: children }), void 0);
};

var css_248z$k = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.breadcrumb-nav-container{background-color:#fff}.breadcrumb-nav-container>.wrapper{padding:16px 32px}.breadcrumb-nav-container--full>.wrapper,.breadcrumb-nav-container--large>.wrapper,.breadcrumb-nav-container--small>.wrapper{margin:0 auto}.breadcrumb-nav-container--large>.wrapper{max-width:1024px}.breadcrumb-nav-container--small>.wrapper{max-width:768px}.breadcrumb-nav-container--full>.wrapper{max-width:100%}.breadcrumb-nav-container .page-title{align-items:center;display:flex;font-family:Roboto,sans-serif;font-size:24px;font-weight:500;justify-content:unset;line-height:1.33;padding:0}.breadcrumb-nav-container .page-title .page-title-badge{margin-left:12px}.breadcrumb-nav-container .breadcrumb-nav{display:flex;flex-wrap:wrap;list-style:none;margin-bottom:8px;padding-left:0}.breadcrumb-nav-container .breadcrumb-nav__item{align-items:center;display:flex;letter-spacing:.02em;margin-top:0}.breadcrumb-nav-container .breadcrumb-nav__item__link{box-sizing:border-box;color:#4c576b;display:block;font-family:Roboto,sans-serif;font-size:14px;height:20px;text-decoration:none}.breadcrumb-nav-container .breadcrumb-nav__item__link .back-button-icon{margin-right:10px}.breadcrumb-nav-container .breadcrumb-nav__item__link:hover{border-bottom:.7px solid #232831;color:#232831;cursor:pointer}.breadcrumb-nav-container .breadcrumb-nav__item>.item-separator,>.breadcrumb-nav-container .breadcrumb-nav__item__no-link{color:#232831;display:block;font-weight:500}.breadcrumb-nav-container .breadcrumb-nav__item>.item-separator{margin:0 4px}";
styleInject(css_248z$k);

var Breadcrumb = /** @class */ (function (_super) {
    __extends$d(Breadcrumb, _super);
    function Breadcrumb() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Breadcrumb.prototype.render = function () {
        var _a = this.props, breadcrumbLists = _a.breadcrumbLists, pageTitle = _a.pageTitle, _b = _a.containerSize, containerSize = _b === void 0 ? CONTAINER_SIZE.FULLWIDTH : _b, className = _a.className, pageTitleBadge = _a.pageTitleBadge, renderLink = _a.renderLink;
        var lastItemKey = breadcrumbLists.length - 1;
        var useBackButton = breadcrumbLists.length === 1;
        return (jsx$1("div", __assign$a({ className: classNames$1("breadcrumb-nav-container", containerSize === CONTAINER_SIZE.SMALL && "breadcrumb-nav-container--small", containerSize === CONTAINER_SIZE.LARGE && "breadcrumb-nav-container--large", containerSize === CONTAINER_SIZE.FULLWIDTH && "breadcrumb-nav-container--full", className) }, { children: jsxs("div", __assign$a({ className: "wrapper" }, { children: [jsx$1("ul", __assign$a({ className: "breadcrumb-nav" }, { children: breadcrumbLists.map(function (item, key) {
                            return (jsxs("li", __assign$a({ className: "breadcrumb-nav__item" }, { children: [item.onClick && !item.link && (jsxs("span", __assign$a({ onClick: item.onClick, className: "breadcrumb-nav__item__link" }, { children: [useBackButton && jsx$1("i", { className: "back-button-icon icon-ab-arrow-left" }, void 0), item.text] }), void 0)), item.link && !item.onClick && renderLink && renderLink(item, useBackButton), key !== lastItemKey && jsx$1("span", __assign$a({ className: "item-separator" }, { children: "/" }), void 0), !item.onClick && !item.link && jsx$1("span", __assign$a({ className: "breadcrumb-nav__item__no-link" }, { children: item.text }), void 0)] }), key));
                        }) }), void 0), jsxs("div", __assign$a({ className: "page-title" }, { children: [pageTitle, pageTitleBadge && jsx$1(Badge, __assign$a({}, pageTitleBadge, { className: "page-title-badge" }), void 0)] }), void 0)] }), void 0) }), void 0));
    };
    return Breadcrumb;
}(React$7.Component));

var css_248z$j = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.tab-navigation,.tab-navigation--vertical{background-color:#fff;height:60px;margin:0 0 30px}.tab-navigation--vertical>.wrapper,.tab-navigation>.wrapper{display:flex;padding:0 15px}.tab-navigation--full>.wrapper,.tab-navigation--large>.wrapper,.tab-navigation--small>.wrapper{margin:0 auto;padding:0 30px}.tab-navigation--large>.wrapper{max-width:1024px}.tab-navigation--small>.wrapper{max-width:768px}.tab-navigation--full>.wrapper{max-width:100%}.tab-navigation--vertical .tab-item,.tab-navigation .tab-item{color:#687792;cursor:pointer;font-size:16px;padding:19px 15px 15px;white-space:nowrap}.tab-navigation--vertical .tab-item.tab-active,.tab-navigation .tab-item.tab-active{border-bottom:3.75px solid #0b6cff;color:#232831}.tab-navigation--vertical{border-radius:4px;flex-direction:column;height:100%;justify-content:center;padding:0}.tab-navigation--vertical .wrapper{display:block;padding:0}.tab-navigation--vertical .tab-item{border-bottom:1px solid #e1e4e9}.tab-navigation--vertical .tab-item.tab-active{border-bottom:1px solid #e1e4e9;border-left:5px solid #0b6cff;color:#0b6cff}";
styleInject(css_248z$j);

var NAVIGATION_OFFSET = 100;
var UPDATE_INTERVAL = 100;
var NavigationTab = function (props) {
    var isVertical = props.isVertical, _a = props.isChangeRoute, isChangeRoute = _a === void 0 ? true : _a, _b = props.containerSize, containerSize = _b === void 0 ? CONTAINER_SIZE.FULLWIDTH : _b, config = props.config, changePageKey = props.changePageKey, changePage = props.changePage, textMore = props.textMore;
    var _c = React$7.useState(config), shownTabs = _c[0], setShownTabs = _c[1];
    var _d = React$7.useState([]), hiddenTabs = _d[0], setHiddenTabs = _d[1];
    var _e = React$7.useState([]), accumulativeNavWidth = _e[0], setAccumulativeNavWidth = _e[1];
    var _f = React$7.useState(config.length), maxShownTabs = _f[0], setMaxShownTabs = _f[1];
    var _g = React$7.useState(0), navigationWidth = _g[0], setNavigationWidth = _g[1];
    var navigationWrapperRef = React$7.useRef(null);
    var moreButtonRef = React$7.useRef(null);
    var updateNavigationWidth = function () {
        if (navigationWrapperRef.current) {
            var clientWidth = navigationWrapperRef.current.clientWidth;
            setNavigationWidth(clientWidth);
        }
    };
    var updateNavigationWidthWithInterval = function () {
        var updateWidthInterval = setInterval(function () {
            if (navigationWrapperRef.current) {
                var clientWidth = navigationWrapperRef.current.clientWidth;
                setNavigationWidth(clientWidth);
                if (clientWidth)
                    clearInterval(updateWidthInterval);
            }
        }, UPDATE_INTERVAL);
    };
    var calculateAccumulativeNavigationWidth = function () {
        if (navigationWrapperRef.current && !isVertical) {
            var navigationItems = Array.from(navigationWrapperRef.current.children);
            var navigationItemsWidth_1 = [];
            navigationItems.forEach(function (item, index) {
                var previousWidth = index ? navigationItemsWidth_1[index - 1] : 0;
                var currentWidth = item.clientWidth + previousWidth;
                navigationItemsWidth_1.push(currentWidth);
            });
            setAccumulativeNavWidth(navigationItemsWidth_1);
        }
    };
    var onClickTab = function (isChangeRoute, url) {
        isChangeRoute ? changePage && changePage(url) : changePageKey && changePageKey(url);
    };
    var unhideActiveHiddenTab = function (maxShown) {
        if (maxShown === void 0) { maxShown = maxShownTabs; }
        setTimeout(function () {
            var updatedConfig = config;
            var activeIndex = updatedConfig.findIndex(function (configItem) { return configItem.isActive; });
            if (activeIndex >= maxShown && maxShown > 0) {
                var activeTab = updatedConfig[activeIndex];
                updatedConfig.splice(activeIndex, 1);
                updatedConfig.splice(maxShown - 1, 0, activeTab);
            }
            setShownTabs(updatedConfig.slice(0, maxShown));
            setHiddenTabs(updatedConfig.slice(maxShown));
            if (navigationWrapperRef.current && moreButtonRef.current) {
                var navWrapperRight = navigationWrapperRef.current.getBoundingClientRect().right;
                var moreButtonRight = moreButtonRef.current.getBoundingClientRect().right;
                if (moreButtonRight > navWrapperRight) {
                    unhideActiveHiddenTab(maxShown - 1);
                }
            }
        }, UPDATE_INTERVAL / 10);
    };
    React$7.useEffect(function () {
        if (!isVertical) {
            updateNavigationWidthWithInterval();
            window.addEventListener("resize", updateNavigationWidth);
        }
        return function () { return window.removeEventListener("resize", updateNavigationWidth); };
    }, []);
    React$7.useEffect(function () {
        if (!isVertical) {
            unhideActiveHiddenTab();
        }
    }, [config]);
    React$7.useEffect(function () {
        if (!!navigationWidth && !accumulativeNavWidth.length) {
            calculateAccumulativeNavigationWidth();
        }
        if (accumulativeNavWidth.length) {
            var maxTabsToShow = accumulativeNavWidth.filter(function (width) { return width + NAVIGATION_OFFSET < navigationWidth; }).length;
            setMaxShownTabs(maxTabsToShow);
            unhideActiveHiddenTab(maxTabsToShow);
        }
    }, [navigationWidth, accumulativeNavWidth]);
    var renderedTabs = shownTabs.map(function (tab) {
        return (jsx$1("div", __assign$a({ className: classNames$1("tab-item", { "tab-active": tab.isActive }), onClick: function () { return onClickTab(isChangeRoute, tab.url); }, "data-qa-id": tab.dataQa }, { children: tab.tabName }), tab.url));
    });
    var renderMoreButton = function () { return (jsx$1("div", __assign$a({ className: "tab-item", ref: moreButtonRef }, { children: jsx$1(DropdownMenu$1, __assign$a({ position: "bottom right", trigger: jsxs("span", __assign$a({ className: "d-flex align-items-center" }, { children: [textMore ? textMore : "More", jsx$1("i", { className: "icon-chevron-down ml-1" }, void 0)] }), void 0) }, { children: jsx$1(DropdownItemGroup$1, { children: hiddenTabs.map(function (tab, index) {
                    return (jsx$1(DropdownItem, __assign$a({ onClick: function () { return onClickTab(isChangeRoute, tab.url); } }, { children: tab.tabName }), tab.tabName + "-" + index));
                }) }, void 0) }), void 0) }), void 0)); };
    return (jsx$1("div", __assign$a({ className: classNames$1(isVertical ? "tab-navigation--vertical" : "tab-navigation", containerSize === CONTAINER_SIZE.SMALL && "tab-navigation--small", containerSize === CONTAINER_SIZE.LARGE && "tab-navigation--large", containerSize === CONTAINER_SIZE.FULLWIDTH && "tab-navigation--full") }, { children: jsxs("div", __assign$a({ className: "wrapper", ref: navigationWrapperRef }, { children: [renderedTabs, !!hiddenTabs.length && renderMoreButton()] }), void 0) }), void 0));
};

var css_248z$i = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.pageComponent{overflow-y:visible}.pageComponent .pageComponentTitle{background-color:#fff;display:flex;font-family:Roboto,sans-serif;font-size:24px;font-style:normal;font-weight:500;line-height:32px;margin-bottom:16px;padding:16px 32px}.pageComponent .pageComponentTitle .pageComponentTitleText.noSidebar{margin-left:auto;margin-right:auto;max-width:620px}.pageComponent .pageComponentTitle .pageComponentTitleText{flex:1}.pageComponent .pageComponentTitle .extraOptionsHeader{font-size:14px;font-weight:400}.pageComponent--full .pageComponentContainer,.pageComponent--large .pageComponentContainer,.pageComponent--small .pageComponentContainer{margin:0 auto;padding:0 30px}.pageComponent--large .pageComponentContainer{max-width:1024px}.pageComponent--small .pageComponentContainer{max-width:768px}.pageComponent--full .pageComponentContainer{max-width:100%}";
styleInject(css_248z$i);

var Page = function (_a) {
    var className = _a.className, _b = _a.size, size = _b === void 0 ? CONTAINER_SIZE.FULLWIDTH : _b, title = _a.title, children = _a.children, dataQa = _a.dataQa, headerRightElement = _a.headerRightElement, _c = _a.noSidebar, noSidebar = _c === void 0 ? false : _c;
    return (jsxs("div", __assign$a({ className: classNames$1("pageComponent", size === CONTAINER_SIZE.SMALL && "pageComponent--small", size === CONTAINER_SIZE.LARGE && "pageComponent--large", size === CONTAINER_SIZE.FULLWIDTH && "pageComponent--full", className) }, { children: [title && (jsxs("div", __assign$a({ className: "pageComponentTitle", "data-qa-id": dataQa }, { children: [jsx$1("div", __assign$a({ className: classNames$1("pageComponentTitleText", {
                            noSidebar: noSidebar,
                        }) }, { children: title }), void 0), headerRightElement && jsx$1("div", __assign$a({ className: "extraOptionsHeader" }, { children: headerRightElement }), void 0)] }), void 0)), jsx$1("div", __assign$a({ className: "pageComponentContainer" }, { children: children }), void 0)] }), void 0));
};

var css_248z$h = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.pagination{font-family:Roboto,sans-serif;font-size:18px;justify-content:center;line-height:1;padding:25px}.pagination,.pagination a{align-items:center;display:flex}.pagination a{margin:0 10px}.pagination a.disabled{color:#b8bfcd;cursor:not-allowed;pointer-events:none}.pagination a.navigation{color:#687792;cursor:pointer}";
styleInject(css_248z$h);

var pagination = function (_a) {
    var paging = _a.paging, changePage = _a.changePage, _b = _a.prevText, prevText = _b === void 0 ? "Prev" : _b, _c = _a.nextText, nextText = _c === void 0 ? "Next" : _c, prevDataQa = _a.prevDataQa, nextDataQa = _a.nextDataQa;
    var renderPrev = function () {
        var onClick = function () { return changePage(paging.previous); };
        var paginationClass = paging.previous ? "navigation" : "disabled";
        return (jsxs("a", __assign$a({ className: paginationClass, onClick: onClick, "data-qa-id": prevDataQa && prevDataQa }, { children: [jsx$1("i", { className: "fa-icon-chevron-left page-icon" }, void 0), " ", prevText] }), void 0));
    };
    var renderNext = function () {
        var onClick = function () { return changePage(paging.next); };
        var paginationClass = paging.next ? "navigation" : "disabled";
        return (jsxs("a", __assign$a({ className: paginationClass, onClick: onClick, "data-qa-id": nextDataQa && nextDataQa }, { children: [nextText, " ", jsx$1("i", { className: "fa-icon-chevron-right page-icon" }, void 0)] }), void 0));
    };
    return (jsxs("div", __assign$a({ className: "pagination" }, { children: [renderPrev(), renderNext()] }), void 0));
};

var css_248z$g = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.search-panel__container{background-color:#fff;border:1px solid #b8bfcd;border-radius:4px;box-sizing:border-box;display:flex;flex-direction:column;height:40px;justify-content:center;min-width:330px;width:100%}.search-panel__container:hover{background-color:#f5f6f8;border:1px solid #687792}.search-panel__container:focus-within{border:2px solid #0b6cff}.search-panel__container.fixed-width{width:360px}.search-panel__container.disabled:hover{background-color:#fff;border:1px solid #b8bfcd;cursor:not-allowed}.search-panel__bar{display:flex;flex-direction:row;padding:0 5px}.search-panel__bar .fa-icon-search{align-items:center;color:#687792;display:flex;height:30px;justify-content:center;width:30px}.search-panel__bar input{background-color:transparent;border:0;color:#232831;display:block;font-size:16px;line-height:30px;margin:0 5px;outline:0;padding:0;width:100%}.search-panel__bar input::placeholder{color:#b8bfcd}.search-panel__bar input:-ms-input-placeholder{color:#b8bfcd}.search-panel__bar input::-webkit-input-placeholder{color:#b8bfcd}.search-panel__bar input[disabled]{cursor:not-allowed}";
styleInject(css_248z$g);

var SearchIconPosition = Enum("LEFT", "RIGHT");
var PureSearchPanel = function (_a) {
    var onSearch = _a.onSearch, _b = _a.fixedWidth, fixedWidth = _b === void 0 ? false : _b, _c = _a.searchIconPosition, searchIconPosition = _c === void 0 ? SearchIconPosition.RIGHT : _c, _d = _a.isDisabled, isDisabled = _d === void 0 ? false : _d, props = __rest$8(_a, ["onSearch", "fixedWidth", "searchIconPosition", "isDisabled"]);
    return (jsx$1("div", __assign$a({ className: classNames$1("search-panel__container", { "fixed-width": fixedWidth, disabled: isDisabled }) }, { children: jsxs("div", __assign$a({ className: "search-panel__bar " + (searchIconPosition === SearchIconPosition.LEFT ? "searchIconLeft" : "") }, { children: [searchIconPosition === SearchIconPosition.LEFT && jsx$1(Icon, { name: "fa-icon-search", onClick: onSearch }, void 0), jsx$1("input", __assign$a({ disabled: isDisabled }, props), void 0), !searchIconPosition ||
                    (searchIconPosition === SearchIconPosition.RIGHT && jsx$1(Icon, { name: "fa-icon-search", onClick: onSearch }, void 0))] }), void 0) }), void 0));
};

var HighlightedText = function (_a) {
    var text = _a.text, highlight = _a.highlight, className = _a.className;
    var escapeHighlight = highlight.replace(/[-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
    var findInText = text.split(new RegExp("(" + escapeHighlight + ")", "gi"));
    return (jsx$1("span", __assign$a({ className: className }, { children: findInText.map(function (text, index) {
            return text.toLowerCase() === highlight.toLowerCase() ? jsx$1("b", { children: text }, index) : text;
        }) }), void 0));
};

var css_248z$f = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");#popover-tooltip.__react_component_tooltip{word-wrap:break-word;box-shadow:0 0 8px rgba(0,0,0,.12);font-size:12px;height:auto;letter-spacing:.03em;line-height:16px;max-width:320px;overflow-wrap:break-word;padding:16px;position:fixed}#popover-tooltip.__react_component_tooltip.type-light{color:#687792}#popover-tooltip.__react_component_tooltip.show{opacity:1}#popover-tooltip.__react_component_tooltip.place-left{margin-left:-22px}#popover-tooltip.__react_component_tooltip.place-left:after{border-bottom:8px solid transparent;border-top:8px solid transparent;margin-top:-8px;right:-12px}#popover-tooltip.__react_component_tooltip.place-left:before{border-bottom:8px solid transparent;border-left:16px solid rgba(0,0,0,.12);border-top:8px solid transparent;filter:blur(2px);margin-top:-8px;right:-16px}#popover-tooltip.__react_component_tooltip.place-right{margin-left:22px}#popover-tooltip.__react_component_tooltip.place-right:after{border-bottom:8px solid transparent;border-top:8px solid transparent;left:-12px;margin-top:-8px}#popover-tooltip.__react_component_tooltip.place-right:before{border-bottom:8px solid transparent;border-right:16px solid rgba(0,0,0,.12);border-top:8px solid transparent;filter:blur(2px);left:-16px;margin-top:-8px}#popover-tooltip.__react_component_tooltip.place-top{margin-top:-22px}#popover-tooltip.__react_component_tooltip.place-top:after{border-left:8px solid transparent;border-right:8px solid transparent;bottom:-12px}#popover-tooltip.__react_component_tooltip.place-top:before{border-left:8px solid transparent;border-right:8px solid transparent;border-top:16px solid rgba(0,0,0,.12);bottom:-16px;filter:blur(2px);margin-left:-8px}#popover-tooltip.__react_component_tooltip.place-bottom{margin-top:22px}#popover-tooltip.__react_component_tooltip.place-bottom:after{border-left:8px solid transparent;border-right:8px solid transparent;top:-12px}#popover-tooltip.__react_component_tooltip.place-bottom:before{border-bottom:16px solid rgba(0,0,0,.12);border-left:8px solid transparent;border-right:8px solid transparent;filter:blur(2px);margin-left:-8px;top:-16px}#popover-tooltip.__react_component_tooltip.type-light.place-right:after{border-right-width:16px}#popover-tooltip.__react_component_tooltip.type-light.place-left:after{border-left-width:16px}#popover-tooltip.__react_component_tooltip.type-light.place-top:after{border-top-width:16px}#popover-tooltip.__react_component_tooltip.type-light.place-bottom:after{border-bottom-width:16px}#popover-tooltip.__react_component_tooltip ul{margin-bottom:0;padding-left:16px}#popover-tooltip.__react_component_tooltip code{font-size:14px;font-weight:500}#popover-tooltip.__react_component_tooltip code.allow{color:#0b6cff}#popover-tooltip.__react_component_tooltip code.not-allow{color:#cb1a1a}#popover-tooltip.__react_component_tooltip li+li{margin-top:8px}";
styleInject(css_248z$f);

var Popover = function (_a) {
    var tooltipRef = _a.tooltipRef, content = _a.content, className = _a.className, _b = _a.popoverPlacement, popoverPlacement = _b === void 0 ? "right" : _b, popoverClass = _a.popoverClass, _c = _a.popoverType, popoverType = _c === void 0 ? "light" : _c, _d = _a.popoverEvent, popoverEvent = _d === void 0 ? "mouseenter" : _d, _e = _a.popoverEventOff, popoverEventOff = _e === void 0 ? "mouseleave" : _e, children = _a.children;
    var renderPopover = function () {
        return {
            ref: tooltipRef,
            "data-for": "popover-tooltip",
            "data-html": true,
            "data-tip": React$7.isValidElement(content) ? server.renderToString(content) : content,
            "data-place": popoverPlacement,
            "data-class": classNames$1("popover-container", popoverClass),
            "data-type": popoverType,
            "data-event": popoverEvent,
            "data-event-off": popoverEventOff,
        };
    };
    return (jsxs(Fragment$2, { children: [jsx$1("div", __assign$a({ className: className }, (!!content && renderPopover()), { children: children }), void 0), jsx$1(ReactTooltip, { effect: "solid", id: "popover-tooltip", html: true }, void 0)] }, void 0));
};

var css_248z$e = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.loader-wrapper{display:none;height:100%;min-height:160px;opacity:.5;position:relative;width:100%;z-index:100}.loader-wrapper.show{display:block;min-height:300px}.loader-wrapper .loading-flag{left:50%;position:absolute;top:50%;transform:translate(-50%,-50%);width:148px}.loader-wrapper .loading-flag .loading-icon{animation:spin 1s linear infinite;border:3px solid #909bb0;border-radius:44px;border-top-color:#000;display:block;height:34px;margin:0 auto;width:34px}.loader-wrapper .loading-flag .loading-info{color:#000;display:block;font-size:20px;margin-top:20px;text-align:center}@keyframes spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}";
styleInject(css_248z$e);

var Spinner = function (props) {
    var loadingText = props.loadingText, className = props.className;
    return (jsx$1("div", __assign$a({ className: classNames$1("loader-wrapper show", className) }, { children: jsxs("div", __assign$a({ className: "loading-flag" }, { children: [jsx$1("span", { className: "loading-icon" }, void 0), loadingText && jsx$1("span", __assign$a({ className: "loading-info" }, { children: loadingText }), void 0)] }), void 0) }), void 0));
};

var css_248z$d = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.tip-notification{border-radius:4px;box-sizing:border-box;display:none;left:0;margin-left:auto;margin-right:auto;max-width:50%;min-height:40px;opacity:0;position:fixed;right:0;text-align:center;top:30px;transition:all .5s ease;z-index:604}.tip-notification.show{display:inline-block;opacity:1}.tip-notification.show.relative{display:flex}.tip-notification.relative{align-items:baseline;margin:16px 0;max-width:100%;padding:12px;position:relative;text-align:left;top:0;z-index:0}.tip-notification.success{background-color:#eef7f2;color:#00642e}.tip-notification.error{background-color:#fdf1f1;color:#e32626}.tip-notification.info{background-color:#eef6fb;color:#025896}.tip-notification.warning{background-color:#fef9ee;color:#f1a20a}.tip-notification>i{display:block;font-size:18px}.tip-notification .notification-message{color:#232831;font-size:14px;line-height:20px;padding:0 12px}.tip-notification button{background-color:transparent;border:none;color:inherit;display:block;font-size:16px;margin:0;padding:0;position:absolute;right:10px;top:50%;transform:translateY(-50%)}";
styleInject(css_248z$d);

var TipType = Enum("success", "error", "warning", "info");
var Tip = function (_a) {
    var _b = _a.show, show = _b === void 0 ? false : _b, _c = _a.message, message = _c === void 0 ? "" : _c, appearance = _a.appearance, _d = _a.isPositionRelative, isPositionRelative = _d === void 0 ? false : _d, _e = _a.icon, icon = _e === void 0 ? "" : _e, onClose = _a.onClose, style = _a.style, className = _a.className;
    return (jsxs("div", __assign$a({ style: style, className: classNames$1("tip-notification", className, {
            show: show,
            relative: isPositionRelative,
            success: appearance === TipType.success,
            error: appearance === TipType.error,
            info: appearance === TipType.info,
            warning: appearance === TipType.warning,
        }) }, { children: [icon && jsx$1("i", { className: "icon-" + icon }, void 0), jsx$1("span", __assign$a({ className: "notification-message" }, { children: message }), void 0), onClose && (jsx$1("button", __assign$a({ onClick: onClose }, { children: jsx$1("i", { className: "icon-x" }, void 0) }), void 0))] }), void 0));
};

/*! @license DOMPurify 2.3.3 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.3.3/LICENSE */

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var hasOwnProperty = Object.hasOwnProperty,
    setPrototypeOf = Object.setPrototypeOf,
    isFrozen = Object.isFrozen,
    getPrototypeOf = Object.getPrototypeOf,
    getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var freeze = Object.freeze,
    seal = Object.seal,
    create = Object.create; // eslint-disable-line import/no-mutable-exports

var _ref = typeof Reflect !== 'undefined' && Reflect,
    apply = _ref.apply,
    construct = _ref.construct;

if (!apply) {
  apply = function apply(fun, thisValue, args) {
    return fun.apply(thisValue, args);
  };
}

if (!freeze) {
  freeze = function freeze(x) {
    return x;
  };
}

if (!seal) {
  seal = function seal(x) {
    return x;
  };
}

if (!construct) {
  construct = function construct(Func, args) {
    return new (Function.prototype.bind.apply(Func, [null].concat(_toConsumableArray(args))))();
  };
}

var arrayForEach = unapply(Array.prototype.forEach);
var arrayPop = unapply(Array.prototype.pop);
var arrayPush = unapply(Array.prototype.push);

var stringToLowerCase = unapply(String.prototype.toLowerCase);
var stringMatch = unapply(String.prototype.match);
var stringReplace = unapply(String.prototype.replace);
var stringIndexOf = unapply(String.prototype.indexOf);
var stringTrim = unapply(String.prototype.trim);

var regExpTest = unapply(RegExp.prototype.test);

var typeErrorCreate = unconstruct(TypeError);

function unapply(func) {
  return function (thisArg) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return apply(func, thisArg, args);
  };
}

function unconstruct(func) {
  return function () {
    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    return construct(func, args);
  };
}

/* Add properties to a lookup table */
function addToSet(set, array) {
  if (setPrototypeOf) {
    // Make 'in' and truthy checks like Boolean(set.constructor)
    // independent of any properties defined on Object.prototype.
    // Prevent prototype setters from intercepting set as a this value.
    setPrototypeOf(set, null);
  }

  var l = array.length;
  while (l--) {
    var element = array[l];
    if (typeof element === 'string') {
      var lcElement = stringToLowerCase(element);
      if (lcElement !== element) {
        // Config presets (e.g. tags.js, attrs.js) are immutable.
        if (!isFrozen(array)) {
          array[l] = lcElement;
        }

        element = lcElement;
      }
    }

    set[element] = true;
  }

  return set;
}

/* Shallow clone an object */
function clone(object) {
  var newObject = create(null);

  var property = void 0;
  for (property in object) {
    if (apply(hasOwnProperty, object, [property])) {
      newObject[property] = object[property];
    }
  }

  return newObject;
}

/* IE10 doesn't support __lookupGetter__ so lets'
 * simulate it. It also automatically checks
 * if the prop is function or getter and behaves
 * accordingly. */
function lookupGetter(object, prop) {
  while (object !== null) {
    var desc = getOwnPropertyDescriptor(object, prop);
    if (desc) {
      if (desc.get) {
        return unapply(desc.get);
      }

      if (typeof desc.value === 'function') {
        return unapply(desc.value);
      }
    }

    object = getPrototypeOf(object);
  }

  function fallbackValue(element) {
    console.warn('fallback value for', element);
    return null;
  }

  return fallbackValue;
}

var html = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);

// SVG
var svg = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);

var svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);

// List of SVG elements that are disallowed by default.
// We still need to know them so that we can do namespace
// checks properly in case one wants to add them to
// allow-list.
var svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'fedropshadow', 'feimage', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);

var mathMl = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover']);

// Similarly to SVG, we want to know all MathML elements,
// even those that we disallow by default.
var mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);

var text = freeze(['#text']);

var html$1 = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', 'slot']);

var svg$1 = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);

var mathMl$1 = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);

var xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);

// eslint-disable-next-line unicorn/better-regex
var MUSTACHE_EXPR = seal(/\{\{[\s\S]*|[\s\S]*\}\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode
var ERB_EXPR = seal(/<%[\s\S]*|[\s\S]*%>/gm);
var DATA_ATTR = seal(/^data-[\-\w.\u00B7-\uFFFF]/); // eslint-disable-line no-useless-escape
var ARIA_ATTR = seal(/^aria-[\-\w]+$/); // eslint-disable-line no-useless-escape
var IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i // eslint-disable-line no-useless-escape
);
var IS_SCRIPT_OR_DATA = seal(/^(?:\w+script|data):/i);
var ATTR_WHITESPACE = seal(/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g // eslint-disable-line no-control-regex
);

var _typeof$1 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function _toConsumableArray$1(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var getGlobal = function getGlobal() {
  return typeof window === 'undefined' ? null : window;
};

/**
 * Creates a no-op policy for internal use only.
 * Don't export this function outside this module!
 * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.
 * @param {Document} document The document object (to determine policy name suffix)
 * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types
 * are not supported).
 */
var _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {
  if ((typeof trustedTypes === 'undefined' ? 'undefined' : _typeof$1(trustedTypes)) !== 'object' || typeof trustedTypes.createPolicy !== 'function') {
    return null;
  }

  // Allow the callers to control the unique policy name
  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.
  // Policy creation with duplicate names throws in Trusted Types.
  var suffix = null;
  var ATTR_NAME = 'data-tt-policy-suffix';
  if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) {
    suffix = document.currentScript.getAttribute(ATTR_NAME);
  }

  var policyName = 'dompurify' + (suffix ? '#' + suffix : '');

  try {
    return trustedTypes.createPolicy(policyName, {
      createHTML: function createHTML(html$$1) {
        return html$$1;
      }
    });
  } catch (_) {
    // Policy creation failed (most likely another DOMPurify script has
    // already run). Skip creating the policy, as this will only cause errors
    // if TT are enforced.
    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');
    return null;
  }
};

function createDOMPurify() {
  var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();

  var DOMPurify = function DOMPurify(root) {
    return createDOMPurify(root);
  };

  /**
   * Version label, exposed for easier checks
   * if DOMPurify is up to date or not
   */
  DOMPurify.version = '2.3.3';

  /**
   * Array of elements that DOMPurify removed during sanitation.
   * Empty if nothing was removed.
   */
  DOMPurify.removed = [];

  if (!window || !window.document || window.document.nodeType !== 9) {
    // Not running in a browser, provide a factory function
    // so that you can pass your own Window
    DOMPurify.isSupported = false;

    return DOMPurify;
  }

  var originalDocument = window.document;

  var document = window.document;
  var DocumentFragment = window.DocumentFragment,
      HTMLTemplateElement = window.HTMLTemplateElement,
      Node = window.Node,
      Element = window.Element,
      NodeFilter = window.NodeFilter,
      _window$NamedNodeMap = window.NamedNodeMap,
      NamedNodeMap = _window$NamedNodeMap === undefined ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap,
      Text = window.Text,
      Comment = window.Comment,
      DOMParser = window.DOMParser,
      trustedTypes = window.trustedTypes;


  var ElementPrototype = Element.prototype;

  var cloneNode = lookupGetter(ElementPrototype, 'cloneNode');
  var getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');
  var getChildNodes = lookupGetter(ElementPrototype, 'childNodes');
  var getParentNode = lookupGetter(ElementPrototype, 'parentNode');

  // As per issue #47, the web-components registry is inherited by a
  // new document created via createHTMLDocument. As per the spec
  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)
  // a new empty registry is used when creating a template contents owner
  // document, so we use that as our parent document to ensure nothing
  // is inherited.
  if (typeof HTMLTemplateElement === 'function') {
    var template = document.createElement('template');
    if (template.content && template.content.ownerDocument) {
      document = template.content.ownerDocument;
    }
  }

  var trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, originalDocument);
  var emptyHTML = trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML('') : '';

  var _document = document,
      implementation = _document.implementation,
      createNodeIterator = _document.createNodeIterator,
      createDocumentFragment = _document.createDocumentFragment,
      getElementsByTagName = _document.getElementsByTagName;
  var importNode = originalDocument.importNode;


  var documentMode = {};
  try {
    documentMode = clone(document).documentMode ? document.documentMode : {};
  } catch (_) {}

  var hooks = {};

  /**
   * Expose whether this browser supports running the full DOMPurify.
   */
  DOMPurify.isSupported = typeof getParentNode === 'function' && implementation && typeof implementation.createHTMLDocument !== 'undefined' && documentMode !== 9;

  var MUSTACHE_EXPR$$1 = MUSTACHE_EXPR,
      ERB_EXPR$$1 = ERB_EXPR,
      DATA_ATTR$$1 = DATA_ATTR,
      ARIA_ATTR$$1 = ARIA_ATTR,
      IS_SCRIPT_OR_DATA$$1 = IS_SCRIPT_OR_DATA,
      ATTR_WHITESPACE$$1 = ATTR_WHITESPACE;
  var IS_ALLOWED_URI$$1 = IS_ALLOWED_URI;

  /**
   * We consider the elements and attributes below to be safe. Ideally
   * don't add any new ones but feel free to remove unwanted ones.
   */

  /* allowed element names */

  var ALLOWED_TAGS = null;
  var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(html), _toConsumableArray$1(svg), _toConsumableArray$1(svgFilters), _toConsumableArray$1(mathMl), _toConsumableArray$1(text)));

  /* Allowed attribute names */
  var ALLOWED_ATTR = null;
  var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray$1(html$1), _toConsumableArray$1(svg$1), _toConsumableArray$1(mathMl$1), _toConsumableArray$1(xml)));

  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */
  var FORBID_TAGS = null;

  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */
  var FORBID_ATTR = null;

  /* Decide if ARIA attributes are okay */
  var ALLOW_ARIA_ATTR = true;

  /* Decide if custom data attributes are okay */
  var ALLOW_DATA_ATTR = true;

  /* Decide if unknown protocols are okay */
  var ALLOW_UNKNOWN_PROTOCOLS = false;

  /* Output should be safe for common template engines.
   * This means, DOMPurify removes data attributes, mustaches and ERB
   */
  var SAFE_FOR_TEMPLATES = false;

  /* Decide if document with <html>... should be returned */
  var WHOLE_DOCUMENT = false;

  /* Track whether config is already set on this instance of DOMPurify. */
  var SET_CONFIG = false;

  /* Decide if all elements (e.g. style, script) must be children of
   * document.body. By default, browsers might move them to document.head */
  var FORCE_BODY = false;

  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html
   * string (or a TrustedHTML object if Trusted Types are supported).
   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead
   */
  var RETURN_DOM = false;

  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html
   * string  (or a TrustedHTML object if Trusted Types are supported) */
  var RETURN_DOM_FRAGMENT = false;

  /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM
   * `Node` is imported into the current `Document`. If this flag is not enabled the
   * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by
   * DOMPurify.
   *
   * This defaults to `true` starting DOMPurify 2.2.0. Note that setting it to `false`
   * might cause XSS from attacks hidden in closed shadowroots in case the browser
   * supports Declarative Shadow: DOM https://web.dev/declarative-shadow-dom/
   */
  var RETURN_DOM_IMPORT = true;

  /* Try to return a Trusted Type object instead of a string, return a string in
   * case Trusted Types are not supported  */
  var RETURN_TRUSTED_TYPE = false;

  /* Output should be free from DOM clobbering attacks? */
  var SANITIZE_DOM = true;

  /* Keep element content when removing element? */
  var KEEP_CONTENT = true;

  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead
   * of importing it into a new Document and returning a sanitized copy */
  var IN_PLACE = false;

  /* Allow usage of profiles like html, svg and mathMl */
  var USE_PROFILES = {};

  /* Tags to ignore content of when KEEP_CONTENT is true */
  var FORBID_CONTENTS = null;
  var DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);

  /* Tags that are safe for data: URIs */
  var DATA_URI_TAGS = null;
  var DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);

  /* Attributes safe for values like "javascript:" */
  var URI_SAFE_ATTRIBUTES = null;
  var DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);

  var MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
  var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';
  var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';
  /* Document namespace */
  var NAMESPACE = HTML_NAMESPACE;
  var IS_EMPTY_INPUT = false;

  /* Parsing of strict XHTML documents */
  var PARSER_MEDIA_TYPE = void 0;
  var SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];
  var DEFAULT_PARSER_MEDIA_TYPE = 'text/html';
  var transformCaseFunc = void 0;

  /* Keep a reference to config to pass to hooks */
  var CONFIG = null;

  /* Ideally, do not touch anything below this line */
  /* ______________________________________________ */

  var formElement = document.createElement('form');

  /**
   * _parseConfig
   *
   * @param  {Object} cfg optional config literal
   */
  // eslint-disable-next-line complexity
  var _parseConfig = function _parseConfig(cfg) {
    if (CONFIG && CONFIG === cfg) {
      return;
    }

    /* Shield configuration object from tampering */
    if (!cfg || (typeof cfg === 'undefined' ? 'undefined' : _typeof$1(cfg)) !== 'object') {
      cfg = {};
    }

    /* Shield configuration object from prototype pollution */
    cfg = clone(cfg);

    /* Set configuration parameters */
    ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS) : DEFAULT_ALLOWED_TAGS;
    ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR) : DEFAULT_ALLOWED_ATTR;
    URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR) : DEFAULT_URI_SAFE_ATTRIBUTES;
    DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS) : DEFAULT_DATA_URI_TAGS;
    FORBID_CONTENTS = 'FORBID_CONTENTS' in cfg ? addToSet({}, cfg.FORBID_CONTENTS) : DEFAULT_FORBID_CONTENTS;
    FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};
    FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};
    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;
    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true
    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true
    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false
    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false
    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false
    RETURN_DOM = cfg.RETURN_DOM || false; // Default false
    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false
    RETURN_DOM_IMPORT = cfg.RETURN_DOM_IMPORT !== false; // Default true
    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false
    FORCE_BODY = cfg.FORCE_BODY || false; // Default false
    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true
    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true
    IN_PLACE = cfg.IN_PLACE || false; // Default false
    IS_ALLOWED_URI$$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$$1;
    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;

    PARSER_MEDIA_TYPE =
    // eslint-disable-next-line unicorn/prefer-includes
    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE : PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE;

    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.
    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? function (x) {
      return x;
    } : stringToLowerCase;

    if (SAFE_FOR_TEMPLATES) {
      ALLOW_DATA_ATTR = false;
    }

    if (RETURN_DOM_FRAGMENT) {
      RETURN_DOM = true;
    }

    /* Parse profile info */
    if (USE_PROFILES) {
      ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(text)));
      ALLOWED_ATTR = [];
      if (USE_PROFILES.html === true) {
        addToSet(ALLOWED_TAGS, html);
        addToSet(ALLOWED_ATTR, html$1);
      }

      if (USE_PROFILES.svg === true) {
        addToSet(ALLOWED_TAGS, svg);
        addToSet(ALLOWED_ATTR, svg$1);
        addToSet(ALLOWED_ATTR, xml);
      }

      if (USE_PROFILES.svgFilters === true) {
        addToSet(ALLOWED_TAGS, svgFilters);
        addToSet(ALLOWED_ATTR, svg$1);
        addToSet(ALLOWED_ATTR, xml);
      }

      if (USE_PROFILES.mathMl === true) {
        addToSet(ALLOWED_TAGS, mathMl);
        addToSet(ALLOWED_ATTR, mathMl$1);
        addToSet(ALLOWED_ATTR, xml);
      }
    }

    /* Merge configuration parameters */
    if (cfg.ADD_TAGS) {
      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {
        ALLOWED_TAGS = clone(ALLOWED_TAGS);
      }

      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);
    }

    if (cfg.ADD_ATTR) {
      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {
        ALLOWED_ATTR = clone(ALLOWED_ATTR);
      }

      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);
    }

    if (cfg.ADD_URI_SAFE_ATTR) {
      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);
    }

    if (cfg.FORBID_CONTENTS) {
      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {
        FORBID_CONTENTS = clone(FORBID_CONTENTS);
      }

      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS);
    }

    /* Add #text in case KEEP_CONTENT is set to true */
    if (KEEP_CONTENT) {
      ALLOWED_TAGS['#text'] = true;
    }

    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */
    if (WHOLE_DOCUMENT) {
      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);
    }

    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */
    if (ALLOWED_TAGS.table) {
      addToSet(ALLOWED_TAGS, ['tbody']);
      delete FORBID_TAGS.tbody;
    }

    // Prevent further manipulation of configuration.
    // Not available in IE8, Safari 5, etc.
    if (freeze) {
      freeze(cfg);
    }

    CONFIG = cfg;
  };

  var MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);

  var HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'desc', 'title', 'annotation-xml']);

  /* Keep track of all possible SVG and MathML tags
   * so that we can perform the namespace checks
   * correctly. */
  var ALL_SVG_TAGS = addToSet({}, svg);
  addToSet(ALL_SVG_TAGS, svgFilters);
  addToSet(ALL_SVG_TAGS, svgDisallowed);

  var ALL_MATHML_TAGS = addToSet({}, mathMl);
  addToSet(ALL_MATHML_TAGS, mathMlDisallowed);

  /**
   *
   *
   * @param  {Element} element a DOM element whose namespace is being checked
   * @returns {boolean} Return false if the element has a
   *  namespace that a spec-compliant parser would never
   *  return. Return true otherwise.
   */
  var _checkValidNamespace = function _checkValidNamespace(element) {
    var parent = getParentNode(element);

    // In JSDOM, if we're inside shadow DOM, then parentNode
    // can be null. We just simulate parent in this case.
    if (!parent || !parent.tagName) {
      parent = {
        namespaceURI: HTML_NAMESPACE,
        tagName: 'template'
      };
    }

    var tagName = stringToLowerCase(element.tagName);
    var parentTagName = stringToLowerCase(parent.tagName);

    if (element.namespaceURI === SVG_NAMESPACE) {
      // The only way to switch from HTML namespace to SVG
      // is via <svg>. If it happens via any other tag, then
      // it should be killed.
      if (parent.namespaceURI === HTML_NAMESPACE) {
        return tagName === 'svg';
      }

      // The only way to switch from MathML to SVG is via
      // svg if parent is either <annotation-xml> or MathML
      // text integration points.
      if (parent.namespaceURI === MATHML_NAMESPACE) {
        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);
      }

      // We only allow elements that are defined in SVG
      // spec. All others are disallowed in SVG namespace.
      return Boolean(ALL_SVG_TAGS[tagName]);
    }

    if (element.namespaceURI === MATHML_NAMESPACE) {
      // The only way to switch from HTML namespace to MathML
      // is via <math>. If it happens via any other tag, then
      // it should be killed.
      if (parent.namespaceURI === HTML_NAMESPACE) {
        return tagName === 'math';
      }

      // The only way to switch from SVG to MathML is via
      // <math> and HTML integration points
      if (parent.namespaceURI === SVG_NAMESPACE) {
        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];
      }

      // We only allow elements that are defined in MathML
      // spec. All others are disallowed in MathML namespace.
      return Boolean(ALL_MATHML_TAGS[tagName]);
    }

    if (element.namespaceURI === HTML_NAMESPACE) {
      // The only way to switch from SVG to HTML is via
      // HTML integration points, and from MathML to HTML
      // is via MathML text integration points
      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {
        return false;
      }

      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {
        return false;
      }

      // Certain elements are allowed in both SVG and HTML
      // namespace. We need to specify them explicitly
      // so that they don't get erronously deleted from
      // HTML namespace.
      var commonSvgAndHTMLElements = addToSet({}, ['title', 'style', 'font', 'a', 'script']);

      // We disallow tags that are specific for MathML
      // or SVG and should never appear in HTML namespace
      return !ALL_MATHML_TAGS[tagName] && (commonSvgAndHTMLElements[tagName] || !ALL_SVG_TAGS[tagName]);
    }

    // The code should never reach this place (this means
    // that the element somehow got namespace that is not
    // HTML, SVG or MathML). Return false just in case.
    return false;
  };

  /**
   * _forceRemove
   *
   * @param  {Node} node a DOM node
   */
  var _forceRemove = function _forceRemove(node) {
    arrayPush(DOMPurify.removed, { element: node });
    try {
      // eslint-disable-next-line unicorn/prefer-dom-node-remove
      node.parentNode.removeChild(node);
    } catch (_) {
      try {
        node.outerHTML = emptyHTML;
      } catch (_) {
        node.remove();
      }
    }
  };

  /**
   * _removeAttribute
   *
   * @param  {String} name an Attribute name
   * @param  {Node} node a DOM node
   */
  var _removeAttribute = function _removeAttribute(name, node) {
    try {
      arrayPush(DOMPurify.removed, {
        attribute: node.getAttributeNode(name),
        from: node
      });
    } catch (_) {
      arrayPush(DOMPurify.removed, {
        attribute: null,
        from: node
      });
    }

    node.removeAttribute(name);

    // We void attribute values for unremovable "is"" attributes
    if (name === 'is' && !ALLOWED_ATTR[name]) {
      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {
        try {
          _forceRemove(node);
        } catch (_) {}
      } else {
        try {
          node.setAttribute(name, '');
        } catch (_) {}
      }
    }
  };

  /**
   * _initDocument
   *
   * @param  {String} dirty a string of dirty markup
   * @return {Document} a DOM, filled with the dirty markup
   */
  var _initDocument = function _initDocument(dirty) {
    /* Create a HTML document */
    var doc = void 0;
    var leadingWhitespace = void 0;

    if (FORCE_BODY) {
      dirty = '<remove></remove>' + dirty;
    } else {
      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */
      var matches = stringMatch(dirty, /^[\r\n\t ]+/);
      leadingWhitespace = matches && matches[0];
    }

    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml') {
      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)
      dirty = '<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>' + dirty + '</body></html>';
    }

    var dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;
    /*
     * Use the DOMParser API by default, fallback later if needs be
     * DOMParser not work for svg when has multiple root element.
     */
    if (NAMESPACE === HTML_NAMESPACE) {
      try {
        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);
      } catch (_) {}
    }

    /* Use createHTMLDocument in case DOMParser is not available */
    if (!doc || !doc.documentElement) {
      doc = implementation.createDocument(NAMESPACE, 'template', null);
      try {
        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? '' : dirtyPayload;
      } catch (_) {
        // Syntax error if dirtyPayload is invalid xml
      }
    }

    var body = doc.body || doc.documentElement;

    if (dirty && leadingWhitespace) {
      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);
    }

    /* Work on whole document or just its body */
    if (NAMESPACE === HTML_NAMESPACE) {
      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];
    }

    return WHOLE_DOCUMENT ? doc.documentElement : body;
  };

  /**
   * _createIterator
   *
   * @param  {Document} root document/fragment to create iterator for
   * @return {Iterator} iterator instance
   */
  var _createIterator = function _createIterator(root) {
    return createNodeIterator.call(root.ownerDocument || root, root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, null, false);
  };

  /**
   * _isClobbered
   *
   * @param  {Node} elm element to check for clobbering attacks
   * @return {Boolean} true if clobbered, false if safe
   */
  var _isClobbered = function _isClobbered(elm) {
    if (elm instanceof Text || elm instanceof Comment) {
      return false;
    }

    if (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function') {
      return true;
    }

    return false;
  };

  /**
   * _isNode
   *
   * @param  {Node} obj object to check whether it's a DOM node
   * @return {Boolean} true is object is a DOM node
   */
  var _isNode = function _isNode(object) {
    return (typeof Node === 'undefined' ? 'undefined' : _typeof$1(Node)) === 'object' ? object instanceof Node : object && (typeof object === 'undefined' ? 'undefined' : _typeof$1(object)) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';
  };

  /**
   * _executeHook
   * Execute user configurable hooks
   *
   * @param  {String} entryPoint  Name of the hook's entry point
   * @param  {Node} currentNode node to work on with the hook
   * @param  {Object} data additional hook parameters
   */
  var _executeHook = function _executeHook(entryPoint, currentNode, data) {
    if (!hooks[entryPoint]) {
      return;
    }

    arrayForEach(hooks[entryPoint], function (hook) {
      hook.call(DOMPurify, currentNode, data, CONFIG);
    });
  };

  /**
   * _sanitizeElements
   *
   * @protect nodeName
   * @protect textContent
   * @protect removeChild
   *
   * @param   {Node} currentNode to check for permission to exist
   * @return  {Boolean} true if node was killed, false if left alive
   */
  var _sanitizeElements = function _sanitizeElements(currentNode) {
    var content = void 0;

    /* Execute a hook if present */
    _executeHook('beforeSanitizeElements', currentNode, null);

    /* Check if element is clobbered or can clobber */
    if (_isClobbered(currentNode)) {
      _forceRemove(currentNode);
      return true;
    }

    /* Check if tagname contains Unicode */
    if (stringMatch(currentNode.nodeName, /[\u0080-\uFFFF]/)) {
      _forceRemove(currentNode);
      return true;
    }

    /* Now let's check the element's type and name */
    var tagName = transformCaseFunc(currentNode.nodeName);

    /* Execute a hook if present */
    _executeHook('uponSanitizeElement', currentNode, {
      tagName: tagName,
      allowedTags: ALLOWED_TAGS
    });

    /* Detect mXSS attempts abusing namespace confusion */
    if (!_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[/\w]/g, currentNode.innerHTML) && regExpTest(/<[/\w]/g, currentNode.textContent)) {
      _forceRemove(currentNode);
      return true;
    }

    /* Mitigate a problem with templates inside select */
    if (tagName === 'select' && regExpTest(/<template/i, currentNode.innerHTML)) {
      _forceRemove(currentNode);
      return true;
    }

    /* Remove element if anything forbids its presence */
    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {
      /* Keep content except for bad-listed elements */
      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {
        var parentNode = getParentNode(currentNode) || currentNode.parentNode;
        var childNodes = getChildNodes(currentNode) || currentNode.childNodes;

        if (childNodes && parentNode) {
          var childCount = childNodes.length;

          for (var i = childCount - 1; i >= 0; --i) {
            parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));
          }
        }
      }

      _forceRemove(currentNode);
      return true;
    }

    /* Check whether element has a valid namespace */
    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {
      _forceRemove(currentNode);
      return true;
    }

    if ((tagName === 'noscript' || tagName === 'noembed') && regExpTest(/<\/no(script|embed)/i, currentNode.innerHTML)) {
      _forceRemove(currentNode);
      return true;
    }

    /* Sanitize element content to be template-safe */
    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {
      /* Get the element's text content */
      content = currentNode.textContent;
      content = stringReplace(content, MUSTACHE_EXPR$$1, ' ');
      content = stringReplace(content, ERB_EXPR$$1, ' ');
      if (currentNode.textContent !== content) {
        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });
        currentNode.textContent = content;
      }
    }

    /* Execute a hook if present */
    _executeHook('afterSanitizeElements', currentNode, null);

    return false;
  };

  /**
   * _isValidAttribute
   *
   * @param  {string} lcTag Lowercase tag name of containing element.
   * @param  {string} lcName Lowercase attribute name.
   * @param  {string} value Attribute value.
   * @return {Boolean} Returns true if `value` is valid, otherwise false.
   */
  // eslint-disable-next-line complexity
  var _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {
    /* Make sure attribute cannot clobber */
    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {
      return false;
    }

    /* Allow valid data-* attributes: At least one character after "-"
        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)
        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)
        We don't need to check the value; it's always URI safe. */
    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR$$1, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR$$1, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {
      return false;

      /* Check value is safe. First, is attr inert? If so, is safe */
    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ; else if (!value) ; else {
      return false;
    }

    return true;
  };

  /**
   * _sanitizeAttributes
   *
   * @protect attributes
   * @protect nodeName
   * @protect removeAttribute
   * @protect setAttribute
   *
   * @param  {Node} currentNode to sanitize
   */
  var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {
    var attr = void 0;
    var value = void 0;
    var lcName = void 0;
    var l = void 0;
    /* Execute a hook if present */
    _executeHook('beforeSanitizeAttributes', currentNode, null);

    var attributes = currentNode.attributes;

    /* Check if we have attributes; if not we might have a text node */

    if (!attributes) {
      return;
    }

    var hookEvent = {
      attrName: '',
      attrValue: '',
      keepAttr: true,
      allowedAttributes: ALLOWED_ATTR
    };
    l = attributes.length;

    /* Go backwards over all attributes; safely remove bad ones */
    while (l--) {
      attr = attributes[l];
      var _attr = attr,
          name = _attr.name,
          namespaceURI = _attr.namespaceURI;

      value = stringTrim(attr.value);
      lcName = transformCaseFunc(name);

      /* Execute a hook if present */
      hookEvent.attrName = lcName;
      hookEvent.attrValue = value;
      hookEvent.keepAttr = true;
      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set
      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);
      value = hookEvent.attrValue;
      /* Did the hooks approve of the attribute? */
      if (hookEvent.forceKeepAttr) {
        continue;
      }

      /* Remove attribute */
      _removeAttribute(name, currentNode);

      /* Did the hooks approve of the attribute? */
      if (!hookEvent.keepAttr) {
        continue;
      }

      /* Work around a security issue in jQuery 3.0 */
      if (regExpTest(/\/>/i, value)) {
        _removeAttribute(name, currentNode);
        continue;
      }

      /* Sanitize attribute content to be template-safe */
      if (SAFE_FOR_TEMPLATES) {
        value = stringReplace(value, MUSTACHE_EXPR$$1, ' ');
        value = stringReplace(value, ERB_EXPR$$1, ' ');
      }

      /* Is `value` valid for this attribute? */
      var lcTag = transformCaseFunc(currentNode.nodeName);
      if (!_isValidAttribute(lcTag, lcName, value)) {
        continue;
      }

      /* Handle invalid data-* attribute set by try-catching it */
      try {
        if (namespaceURI) {
          currentNode.setAttributeNS(namespaceURI, name, value);
        } else {
          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. "x-schema". */
          currentNode.setAttribute(name, value);
        }

        arrayPop(DOMPurify.removed);
      } catch (_) {}
    }

    /* Execute a hook if present */
    _executeHook('afterSanitizeAttributes', currentNode, null);
  };

  /**
   * _sanitizeShadowDOM
   *
   * @param  {DocumentFragment} fragment to iterate over recursively
   */
  var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {
    var shadowNode = void 0;
    var shadowIterator = _createIterator(fragment);

    /* Execute a hook if present */
    _executeHook('beforeSanitizeShadowDOM', fragment, null);

    while (shadowNode = shadowIterator.nextNode()) {
      /* Execute a hook if present */
      _executeHook('uponSanitizeShadowNode', shadowNode, null);

      /* Sanitize tags and elements */
      if (_sanitizeElements(shadowNode)) {
        continue;
      }

      /* Deep shadow DOM detected */
      if (shadowNode.content instanceof DocumentFragment) {
        _sanitizeShadowDOM(shadowNode.content);
      }

      /* Check attributes, sanitize if necessary */
      _sanitizeAttributes(shadowNode);
    }

    /* Execute a hook if present */
    _executeHook('afterSanitizeShadowDOM', fragment, null);
  };

  /**
   * Sanitize
   * Public method providing core sanitation functionality
   *
   * @param {String|Node} dirty string or DOM node
   * @param {Object} configuration object
   */
  // eslint-disable-next-line complexity
  DOMPurify.sanitize = function (dirty, cfg) {
    var body = void 0;
    var importedNode = void 0;
    var currentNode = void 0;
    var oldNode = void 0;
    var returnNode = void 0;
    /* Make sure we have a string to sanitize.
      DO NOT return early, as this will return the wrong type if
      the user has requested a DOM object rather than a string */
    IS_EMPTY_INPUT = !dirty;
    if (IS_EMPTY_INPUT) {
      dirty = '<!-->';
    }

    /* Stringify, in case dirty is an object */
    if (typeof dirty !== 'string' && !_isNode(dirty)) {
      // eslint-disable-next-line no-negated-condition
      if (typeof dirty.toString !== 'function') {
        throw typeErrorCreate('toString is not a function');
      } else {
        dirty = dirty.toString();
        if (typeof dirty !== 'string') {
          throw typeErrorCreate('dirty is not a string, aborting');
        }
      }
    }

    /* Check we can run. Otherwise fall back or ignore */
    if (!DOMPurify.isSupported) {
      if (_typeof$1(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {
        if (typeof dirty === 'string') {
          return window.toStaticHTML(dirty);
        }

        if (_isNode(dirty)) {
          return window.toStaticHTML(dirty.outerHTML);
        }
      }

      return dirty;
    }

    /* Assign config vars */
    if (!SET_CONFIG) {
      _parseConfig(cfg);
    }

    /* Clean up removed elements */
    DOMPurify.removed = [];

    /* Check if dirty is correctly typed for IN_PLACE */
    if (typeof dirty === 'string') {
      IN_PLACE = false;
    }

    if (IN_PLACE) ; else if (dirty instanceof Node) {
      /* If dirty is a DOM element, append to an empty document to avoid
         elements being stripped by the parser */
      body = _initDocument('<!---->');
      importedNode = body.ownerDocument.importNode(dirty, true);
      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {
        /* Node is already a body, use as is */
        body = importedNode;
      } else if (importedNode.nodeName === 'HTML') {
        body = importedNode;
      } else {
        // eslint-disable-next-line unicorn/prefer-dom-node-append
        body.appendChild(importedNode);
      }
    } else {
      /* Exit directly if we have nothing to do */
      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&
      // eslint-disable-next-line unicorn/prefer-includes
      dirty.indexOf('<') === -1) {
        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;
      }

      /* Initialize the document to work on */
      body = _initDocument(dirty);

      /* Check we have a DOM node from the data */
      if (!body) {
        return RETURN_DOM ? null : emptyHTML;
      }
    }

    /* Remove first element node (ours) if FORCE_BODY is set */
    if (body && FORCE_BODY) {
      _forceRemove(body.firstChild);
    }

    /* Get node iterator */
    var nodeIterator = _createIterator(IN_PLACE ? dirty : body);

    /* Now start iterating over the created document */
    while (currentNode = nodeIterator.nextNode()) {
      /* Fix IE's strange behavior with manipulated textNodes #89 */
      if (currentNode.nodeType === 3 && currentNode === oldNode) {
        continue;
      }

      /* Sanitize tags and elements */
      if (_sanitizeElements(currentNode)) {
        continue;
      }

      /* Shadow DOM detected, sanitize it */
      if (currentNode.content instanceof DocumentFragment) {
        _sanitizeShadowDOM(currentNode.content);
      }

      /* Check attributes, sanitize if necessary */
      _sanitizeAttributes(currentNode);

      oldNode = currentNode;
    }

    oldNode = null;

    /* If we sanitized `dirty` in-place, return it. */
    if (IN_PLACE) {
      return dirty;
    }

    /* Return sanitized string or DOM */
    if (RETURN_DOM) {
      if (RETURN_DOM_FRAGMENT) {
        returnNode = createDocumentFragment.call(body.ownerDocument);

        while (body.firstChild) {
          // eslint-disable-next-line unicorn/prefer-dom-node-append
          returnNode.appendChild(body.firstChild);
        }
      } else {
        returnNode = body;
      }

      if (RETURN_DOM_IMPORT) {
        /*
          AdoptNode() is not used because internal state is not reset
          (e.g. the past names map of a HTMLFormElement), this is safe
          in theory but we would rather not risk another attack vector.
          The state that is cloned by importNode() is explicitly defined
          by the specs.
        */
        returnNode = importNode.call(originalDocument, returnNode, true);
      }

      return returnNode;
    }

    var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;

    /* Sanitize final string template-safe */
    if (SAFE_FOR_TEMPLATES) {
      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR$$1, ' ');
      serializedHTML = stringReplace(serializedHTML, ERB_EXPR$$1, ' ');
    }

    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;
  };

  /**
   * Public method to set the configuration once
   * setConfig
   *
   * @param {Object} cfg configuration object
   */
  DOMPurify.setConfig = function (cfg) {
    _parseConfig(cfg);
    SET_CONFIG = true;
  };

  /**
   * Public method to remove the configuration
   * clearConfig
   *
   */
  DOMPurify.clearConfig = function () {
    CONFIG = null;
    SET_CONFIG = false;
  };

  /**
   * Public method to check if an attribute value is valid.
   * Uses last set config, if any. Otherwise, uses config defaults.
   * isValidAttribute
   *
   * @param  {string} tag Tag name of containing element.
   * @param  {string} attr Attribute name.
   * @param  {string} value Attribute value.
   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.
   */
  DOMPurify.isValidAttribute = function (tag, attr, value) {
    /* Initialize shared config vars if necessary. */
    if (!CONFIG) {
      _parseConfig({});
    }

    var lcTag = transformCaseFunc(tag);
    var lcName = transformCaseFunc(attr);
    return _isValidAttribute(lcTag, lcName, value);
  };

  /**
   * AddHook
   * Public method to add DOMPurify hooks
   *
   * @param {String} entryPoint entry point for the hook to add
   * @param {Function} hookFunction function to execute
   */
  DOMPurify.addHook = function (entryPoint, hookFunction) {
    if (typeof hookFunction !== 'function') {
      return;
    }

    hooks[entryPoint] = hooks[entryPoint] || [];
    arrayPush(hooks[entryPoint], hookFunction);
  };

  /**
   * RemoveHook
   * Public method to remove a DOMPurify hook at a given entryPoint
   * (pops it from the stack of hooks if more are present)
   *
   * @param {String} entryPoint entry point for the hook to remove
   */
  DOMPurify.removeHook = function (entryPoint) {
    if (hooks[entryPoint]) {
      arrayPop(hooks[entryPoint]);
    }
  };

  /**
   * RemoveHooks
   * Public method to remove all DOMPurify hooks at a given entryPoint
   *
   * @param  {String} entryPoint entry point for the hooks to remove
   */
  DOMPurify.removeHooks = function (entryPoint) {
    if (hooks[entryPoint]) {
      hooks[entryPoint] = [];
    }
  };

  /**
   * RemoveAllHooks
   * Public method to remove all DOMPurify hooks
   *
   */
  DOMPurify.removeAllHooks = function () {
    hooks = {};
  };

  return DOMPurify;
}

var purify = createDOMPurify();

/*
 * Copyright (c) 2021 AccelByte Inc. All Rights Reserved
 * This is licensed software from AccelByte Inc, for limitations
 * and restrictions contact your company contract manager.
 */
var makeSafeReactInnerHTML = function (htmlString) {
    return { __html: purify.sanitize(htmlString) };
};

var LineBreakToList = function (_a) {
    var text = _a.text, _b = _a.className, className = _b === void 0 ? "" : _b;
    var list = text.split("\n").map(function (text, key) {
        var isStartWithDash = text.startsWith("-");
        var displayedText = isStartWithDash ? text.slice(1) : text;
        return (jsx$1("li", { className: classNames$1("pl-1", { "ml-4": isStartWithDash }), dangerouslySetInnerHTML: makeSafeReactInnerHTML(displayedText) }, key + "-" + text));
    });
    return jsx$1("ul", __assign$a({ className: className }, { children: list }), void 0);
};

var css_248z$c = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.valid-field-text{position:relative}.valid-field-text .field-info{color:#b8bfcd;font-size:16px;margin-top:10px}.valid-field-text .fieldHeader,.valid-field-text .ValidFieldInformation{align-items:baseline;display:flex;justify-content:space-between;white-space:pre-wrap}.valid-field-text .fieldHeader.pushRight,.valid-field-text .ValidFieldInformation.pushRight{justify-content:flex-end}.valid-field-text .fieldHeader>label{display:initial}.valid-field-text div>label{display:none}.valid-field-text .valid-field-text-input-container{height:40px;position:relative}.valid-field-text .valid-field-text-input-container [class|=Content__ChildWrapper]>[class|=Content]{border:1px solid #b8bfcd}.valid-field-text .valid-field-text-input-container [class|=Content__ChildWrapper]>[class|=Content]:hover{border:1px solid #687792}.valid-field-text .valid-field-text-input-container.focusedFieldText [class|=Content__ChildWrapper]>[class|=Content]{border:2px solid #0b6cff}.valid-field-text .valid-field-text-input-container .rightIcon{display:flex;flex-direction:column;height:100%;justify-content:center;padding:0 10px;position:absolute;right:0;top:0}";
styleInject(css_248z$c);

var css_248z$b = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.inline-popover>div[data-testid~=InlinePopover]{word-wrap:break-word;background-color:#fff;box-shadow:0 0 8px rgba(0,0,0,.2);color:#687792;font-size:12px;letter-spacing:.03em;line-height:16px;margin:8px;max-width:290px;overflow-wrap:break-word;padding:16px}.inline-popover>div[data-testid~=InlinePopover]:before{border-color:transparent #fff #fff transparent;border-style:solid;border-width:6px;box-shadow:2px 2px 4px 0 rgba(0,0,0,.1);content:\"\";height:0;position:absolute;transform-origin:0 0;width:0}.inline-popover>div[data-testid~=InlinePopover][data-testid*=right]:before{left:10px;top:50%;transform:rotate(135deg)}.inline-popover>div[data-testid~=InlinePopover][data-testid*=left]:before{right:-2px;top:50%;transform:rotate(315deg)}.inline-popover>div[data-testid~=InlinePopover][data-testid*=bottom]:before{left:50%;top:10px;transform:rotate(225deg)}.inline-popover>div[data-testid~=InlinePopover][data-testid*=bottom][data-testid*=start]:before{left:10%}.inline-popover>div[data-testid~=InlinePopover][data-testid*=bottom][data-testid*=end]:before{left:90%}.inline-popover>div[data-testid~=InlinePopover][data-testid*=top]:before{bottom:-1px;left:50%;transform:rotate(45deg)}.inline-popover>div[data-testid~=InlinePopover][data-testid*=top][data-testid*=start]:before{left:10%}.inline-popover>div[data-testid~=InlinePopover][data-testid*=top][data-testid*=end]:before{left:90%}.inline-popover>div[data-testid~=InlinePopover][data-testid*=auto]:before{border:0;box-shadow:none}.inline-popover>div[data-testid~=InlinePopover] ul{margin:0;padding-left:16px}.inline-popover>div[data-testid~=InlinePopover] ul li+li{margin-top:8px}.inline-popover>div[data-testid~=InlinePopover] code{font-size:14px;font-weight:500}.inline-popover>div[data-testid~=InlinePopover] code.allow{color:#0b6cff}.inline-popover>div[data-testid~=InlinePopover] code.not-allow{color:#cb1a1a}.inline-popover.dark>div[data-testid~=InlinePopover]{background-color:#232831;color:#fff}.inline-popover.dark>div[data-testid~=InlinePopover]:before{border-color:transparent #232831 #232831 transparent}";
styleInject(css_248z$b);

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
}

var name="@atlaskit/inline-dialog";var version="12.1.14";

var backgroundColor = themed$3({ light: N0$7, dark: DN50$1 });
var textColor = themed$3({ light: N900$1, dark: DN600$2 });
// eslint-disable-next-line import/prefer-default-export
var Container = styled$1.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  background: ", ";\n  border-radius: ", "px;\n  box-sizing: content-box; /* do not set this to border-box or it will break the overflow handling */\n  color: ", ";\n  max-height: ", "px;\n  max-width: ", "px;\n  padding: ", "px ", "px;\n  z-index: ", ";\n\n  ", ";\n\n  &:focus {\n    outline: none;\n  }\n"], ["\n  background: ", ";\n  border-radius: ", "px;\n  box-sizing: content-box; /* do not set this to border-box or it will break the overflow handling */\n  color: ", ";\n  max-height: ", "px;\n  max-width: ", "px;\n  padding: ", "px ", "px;\n  z-index: ", ";\n\n  ", ";\n\n  &:focus {\n    outline: none;\n  }\n"])), backgroundColor, borderRadius$5, textColor, multiply(gridSize$5, 56), multiply(gridSize$5, 56), multiply(gridSize$5, 2), multiply(gridSize$5, 3), layers$1.dialog, e200);
var templateObject_1;

var InlineDialog = /** @class */ (function (_super) {
    __extends(InlineDialog, _super);
    function InlineDialog() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleClickOutside = function (event) {
            var _a = _this.props, isOpen = _a.isOpen, onClose = _a.onClose;
            if (event.defaultPrevented)
                return;
            var container = _this.containerRef;
            var trigger = _this.triggerRef;
            var target = event.target;
            // exit if we click outside but on the trigger — it can handle the clicks itself
            if (trigger && trigger.contains(target))
                return;
            // call onClose if the click originated from outside the dialog
            if (isOpen && container && !container.contains(target)) {
                onClose && onClose({ isOpen: false, event: event });
            }
        };
        return _this;
    }
    InlineDialog.prototype.componentDidUpdate = function (prevProps) {
        if (typeof window === 'undefined')
            return;
        if (!prevProps.isOpen && this.props.isOpen) {
            window.addEventListener('click', this.handleClickOutside, true);
        }
        else if (prevProps.isOpen && !this.props.isOpen) {
            window.removeEventListener('click', this.handleClickOutside, true);
        }
    };
    InlineDialog.prototype.componentDidMount = function () {
        if (typeof window === 'undefined')
            return;
        if (this.props.isOpen) {
            window.addEventListener('click', this.handleClickOutside, true);
        }
    };
    InlineDialog.prototype.componentWillUnmount = function () {
        if (typeof window === 'undefined')
            return;
        window.removeEventListener('click', this.handleClickOutside, true);
    };
    InlineDialog.prototype.render = function () {
        var _this = this;
        var _a = this.props, children = _a.children, placement = _a.placement, isOpen = _a.isOpen, content = _a.content, onContentBlur = _a.onContentBlur, onContentFocus = _a.onContentFocus, onContentClick = _a.onContentClick, testId = _a.testId;
        var popper = isOpen ? (React__default.createElement(Popper, { placement: placement }, function (_a) {
            var ref = _a.ref, style = _a.style;
            return (React__default.createElement(Container, { onBlur: onContentBlur, onFocus: onContentFocus, onClick: onContentClick, innerRef: function (node) {
                    _this.containerRef = node;
                    if (typeof ref === 'function') {
                        ref(node);
                    }
                    else {
                        ref.current = node;
                    }
                }, style: style, "data-testid": testId }, content));
        })) : null;
        return (React__default.createElement(Manager, null,
            React__default.createElement(Reference, null, function (_a) {
                var ref = _a.ref;
                return (React__default.createElement(NodeResolver, { innerRef: function (node) {
                        _this.triggerRef = node;
                        if (typeof ref === 'function') {
                            ref(node);
                        }
                        else {
                            ref.current = node;
                        }
                    } }, children));
            }),
            popper));
    };
    InlineDialog.defaultProps = {
        isOpen: false,
        onContentBlur: function () { },
        onContentClick: function () { },
        onContentFocus: function () { },
        onClose: function () { },
        placement: 'bottom-start',
    };
    return InlineDialog;
}(Component$1));
var createAndFireEventOnAtlaskit$1 = createAndFireEvent$4('atlaskit');
var InlineDialog$1 = withAnalyticsContext$9({
    componentName: 'inlineDialog',
    packageName: name,
    packageVersion: version,
})(withAnalyticsEvents$9({
    onClose: createAndFireEventOnAtlaskit$1({
        action: 'closed',
        actionSubject: 'inlineDialog',
        attributes: {
            componentName: 'inlineDialog',
            packageName: name,
            packageVersion: version,
        },
    }),
})(InlineDialog));

var INLINE_POPOVER_TYPE = Enum("light", "dark");
var InlinePopover = function (props) {
    var content = props.content, children = props.children, isOpen = props.isOpen, placement = props.placement, type = props.type;
    var popoverPlacement = placement || "right";
    return (jsx$1("div", __assign$a({ className: classNames$1("inline-popover", type) }, { children: jsx$1(InlineDialog$1, __assign$a({ isOpen: !!content && isOpen, content: content, placement: popoverPlacement, testId: classNames$1("InlinePopover", popoverPlacement) }, { children: children }), void 0) }), void 0));
};

/*
 *  Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
 *  This is licensed software from AccelByte Inc, for limitations
 *  and restrictions contact your company contract manager.
 */
var debounce = function (func, delay) {
    if (delay === void 0) { delay = 500; }
    var timeout;
    var inDebounce = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        clearTimeout(timeout);
        timeout = setTimeout(function () { return func.apply(void 0, args); }, delay);
    };
    return inDebounce;
};

/*
 *  Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
 *  This is licensed software from AccelByte Inc, for limitations
 *  and restrictions contact your company contract manager.
 */
var formatDateForReactDateTimePicker = function (date) {
    return moment$2.exports.utc(date).format("YYYY-MM-DD hh:mm a");
};
var formatDateForReactDatePicker = function (date) {
    return moment$2.exports.utc(date).format("YYYY-MM-DD");
};

/*
 * Copyright (c) 2021 AccelByte Inc. All Rights Reserved
 * This is licensed software from AccelByte Inc, for limitations
 * and restrictions contact your company contract manager.
 */
/**
 * find the input array have "e" letter, plus, dot, comma, and dash symbol
 * @param inputArray
 * @param minimumValue
 * @param isFloat
 */
function isForbiddenKey(key, minimumValue, isFloat) {
    var isNumber = !isNaN(Number(key));
    var isDotAllowed = !!isFloat && key === ".";
    var isDashAllowed = !!minimumValue && minimumValue < DEFAULT_MIN_VALUE && key === "-";
    var isUtilityKey = key.length > 1; // for example Enter, Shift, F2, ArrowLeft
    return !(isNumber || isDotAllowed || isDashAllowed || isUtilityKey);
}

var randomatic$1 = {exports: {}};

/*!
 * is-number <https://github.com/jonschlinkert/is-number>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */

var isNumber$1 = function isNumber(num) {
  var type = typeof num;

  if (type === 'string' || num instanceof String) {
    // an empty string would be coerced to true with the below logic
    if (!num.trim()) return false;
  } else if (type !== 'number' && !(num instanceof Number)) {
    return false;
  }

  return (num - num + 1) >= 0;
};

var toString = Object.prototype.toString;

var kindOf = function kindOf(val) {
  if (val === void 0) return 'undefined';
  if (val === null) return 'null';

  var type = typeof val;
  if (type === 'boolean') return 'boolean';
  if (type === 'string') return 'string';
  if (type === 'number') return 'number';
  if (type === 'symbol') return 'symbol';
  if (type === 'function') {
    return isGeneratorFn(val) ? 'generatorfunction' : 'function';
  }

  if (isArray(val)) return 'array';
  if (isBuffer(val)) return 'buffer';
  if (isArguments(val)) return 'arguments';
  if (isDate(val)) return 'date';
  if (isError(val)) return 'error';
  if (isRegexp(val)) return 'regexp';

  switch (ctorName(val)) {
    case 'Symbol': return 'symbol';
    case 'Promise': return 'promise';

    // Set, Map, WeakSet, WeakMap
    case 'WeakMap': return 'weakmap';
    case 'WeakSet': return 'weakset';
    case 'Map': return 'map';
    case 'Set': return 'set';

    // 8-bit typed arrays
    case 'Int8Array': return 'int8array';
    case 'Uint8Array': return 'uint8array';
    case 'Uint8ClampedArray': return 'uint8clampedarray';

    // 16-bit typed arrays
    case 'Int16Array': return 'int16array';
    case 'Uint16Array': return 'uint16array';

    // 32-bit typed arrays
    case 'Int32Array': return 'int32array';
    case 'Uint32Array': return 'uint32array';
    case 'Float32Array': return 'float32array';
    case 'Float64Array': return 'float64array';
  }

  if (isGeneratorObj(val)) {
    return 'generator';
  }

  // Non-plain objects
  type = toString.call(val);
  switch (type) {
    case '[object Object]': return 'object';
    // iterators
    case '[object Map Iterator]': return 'mapiterator';
    case '[object Set Iterator]': return 'setiterator';
    case '[object String Iterator]': return 'stringiterator';
    case '[object Array Iterator]': return 'arrayiterator';
  }

  // other
  return type.slice(8, -1).toLowerCase().replace(/\s/g, '');
};

function ctorName(val) {
  return typeof val.constructor === 'function' ? val.constructor.name : null;
}

function isArray(val) {
  if (Array.isArray) return Array.isArray(val);
  return val instanceof Array;
}

function isError(val) {
  return val instanceof Error || (typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number');
}

function isDate(val) {
  if (val instanceof Date) return true;
  return typeof val.toDateString === 'function'
    && typeof val.getDate === 'function'
    && typeof val.setDate === 'function';
}

function isRegexp(val) {
  if (val instanceof RegExp) return true;
  return typeof val.flags === 'string'
    && typeof val.ignoreCase === 'boolean'
    && typeof val.multiline === 'boolean'
    && typeof val.global === 'boolean';
}

function isGeneratorFn(name, val) {
  return ctorName(name) === 'GeneratorFunction';
}

function isGeneratorObj(val) {
  return typeof val.throw === 'function'
    && typeof val.return === 'function'
    && typeof val.next === 'function';
}

function isArguments(val) {
  try {
    if (typeof val.length === 'number' && typeof val.callee === 'function') {
      return true;
    }
  } catch (err) {
    if (err.message.indexOf('callee') !== -1) {
      return true;
    }
  }
  return false;
}

/**
 * If you need to support Safari 5-7 (8-10 yr-old browser),
 * take a look at https://github.com/feross/is-buffer
 */

function isBuffer(val) {
  if (val.constructor && typeof val.constructor.isBuffer === 'function') {
    return val.constructor.isBuffer(val);
  }
  return false;
}

var node = {exports: {}};

var crypto = require$$0$1;
var max = Math.pow(2, 32);

node.exports = random;
node.exports.cryptographic = true;

function random () {
  var buf = crypto
    .randomBytes(4)
    .readUInt32BE(0);

  return buf / max
}

/*!
 * randomatic <https://github.com/jonschlinkert/randomatic>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */

var isNumber = isNumber$1;
var typeOf = kindOf;
var mathRandom = node.exports;

/**
 * Expose `randomatic`
 */

randomatic$1.exports = randomatic;
randomatic$1.exports.isCrypto = !!mathRandom.cryptographic;

/**
 * Available mask characters
 */

var type = {
  lower: 'abcdefghijklmnopqrstuvwxyz',
  upper: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',
  number: '0123456789',
  special: '~!@#$%^&()_+-={}[];\',.'
};

type.all = type.lower + type.upper + type.number + type.special;

/**
 * Generate random character sequences of a specified `length`,
 * based on the given `pattern`.
 *
 * @param {String} `pattern` The pattern to use for generating the random string.
 * @param {String} `length` The length of the string to generate.
 * @param {String} `options`
 * @return {String}
 * @api public
 */

function randomatic(pattern, length, options) {
  if (typeof pattern === 'undefined') {
    throw new Error('randomatic expects a string or number.');
  }

  var custom = false;
  if (arguments.length === 1) {
    if (typeof pattern === 'string') {
      length = pattern.length;

    } else if (isNumber(pattern)) {
      options = {};
      length = pattern;
      pattern = '*';
    }
  }

  if (typeOf(length) === 'object' && length.hasOwnProperty('chars')) {
    options = length;
    pattern = options.chars;
    length = pattern.length;
    custom = true;
  }

  var opts = options || {};
  var mask = '';
  var res = '';

  // Characters to be used
  if (pattern.indexOf('?') !== -1) mask += opts.chars;
  if (pattern.indexOf('a') !== -1) mask += type.lower;
  if (pattern.indexOf('A') !== -1) mask += type.upper;
  if (pattern.indexOf('0') !== -1) mask += type.number;
  if (pattern.indexOf('!') !== -1) mask += type.special;
  if (pattern.indexOf('*') !== -1) mask += type.all;
  if (custom) mask += pattern;

  // Characters to exclude
  if (opts.exclude) {
    var exclude = typeOf(opts.exclude) === 'string' ? opts.exclude : opts.exclude.join('');
    exclude = exclude.replace(new RegExp('[\\]]+', 'g'), '');
    mask = mask.replace(new RegExp('[' + exclude + ']+', 'g'), '');
    
    if(opts.exclude.indexOf(']') !== -1) mask = mask.replace(new RegExp('[\\]]+', 'g'), '');
  }

  while (length--) {
    res += mask.charAt(parseInt(mathRandom() * mask.length, 10));
  }
  return res;
}
var randomize = randomatic$1.exports;

/*
 * Copyright (c) 2021 AccelByte Inc. All Rights Reserved
 * This is licensed software from AccelByte Inc, for limitations
 * and restrictions contact your company contract manager.
 */
var generatePassword = function (pattern) {
    return randomize(pattern, 32, { exclude: "'{}" });
};
var generateClientSecret = function (pattern) {
    return randomize(pattern, 32, { exclude: "'{}" });
};

var Input = /** @class */ (function (_super) {
    __extends$d(Input, _super);
    function Input() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Input.prototype.componentWillReceiveProps = function (nextProps, nextContext) {
        var isValueSame = this.props.value === nextProps.value;
        if (isValueSame) {
            return;
        }
        this.setState({
            value: nextProps.value,
        });
    };
    return Input;
}(FieldText));
var ValidFieldText = /** @class */ (function (_super) {
    __extends$d(ValidFieldText, _super);
    function ValidFieldText(props) {
        var _this = _super.call(this, props) || this;
        _this.toolTipRef = React$7.createRef();
        _this.hideTooltip = function () {
            if (_this.toolTipRef && _this.toolTipRef.current) {
                ReactTooltip.hide(_this.toolTipRef.current);
            }
        };
        _this.showTooltip = function () {
            if (_this.toolTipRef && _this.toolTipRef.current && _this.props.showTooltipOnFocus) {
                ReactTooltip.show(_this.toolTipRef.current);
            }
        };
        _this.handleBlur = function (event) {
            var onBlur = _this.props.onBlur;
            _this.hideTooltip();
            if (typeof onBlur === "function") {
                return onBlur(event);
            }
            _this.setState({ isFocus: false });
        };
        _this.handleFocus = function (event) {
            var onFocus = _this.props.onFocus;
            if (onFocus)
                onFocus(event);
            _this.showTooltip();
            _this.setState({ isFocus: true });
        };
        _this.handleOnKeyDown = function (event) {
            var _a = _this.props, onKeyDown = _a.onKeyDown, type = _a.type, min = _a.min, isFloat = _a.isFloat;
            var key = event.key, ctrlKey = event.ctrlKey;
            if (type === "number" && !ctrlKey && isForbiddenKey(key, min, isFloat)) {
                event.preventDefault();
            }
            !!onKeyDown && onKeyDown(event);
        };
        _this.state = {
            isFocus: false,
        };
        if (props.type === "number" && typeof props.maxLength === "number") {
            throw new Error('prop maxLength cannot be used when prop type="number"');
        }
        return _this;
    }
    ValidFieldText.prototype.componentDidMount = function () {
        setTimeout(function () {
            ReactTooltip.rebuild();
        }, 100);
    };
    ValidFieldText.prototype.componentWillUnmount = function () {
        this.hideTooltip();
    };
    ValidFieldText.prototype.render = function () {
        var _a = this.props, onChange = _a.onChange, name = _a.name, label = _a.label, placeholder = _a.placeholder, value = _a.value, disabled = _a.disabled, type = _a.type, min = _a.min, max = _a.max, maxLength = _a.maxLength, className = _a.className, optionalLabel = _a.optionalLabel, errMessage = _a.errMessage, isLabelHidden = _a.isLabelHidden, helperText = _a.helperText, tooltip = _a.tooltip, dataQa = _a.dataQa, dataQaProps = _a.dataQaProps, rightIcon = _a.rightIcon, autoComplete = _a.autoComplete, validFieldTextRef = _a.validFieldTextRef, popoverContent = _a.popoverContent, popoverPlacement = _a.popoverPlacement, popoverType = _a.popoverType, customField = _a.customField;
        var isFocus = this.state.isFocus;
        return (jsxs("div", __assign$a({ className: classNames$1(className, "valid-field-text"), "data-qa-id": dataQa, "data-qa-props": dataQaProps, ref: validFieldTextRef }, { children: [jsxs("div", __assign$a({ className: classNames$1("fieldHeader", {
                        pushRight: !label && optionalLabel,
                    }) }, { children: [!isLabelHidden && (jsx$1(FieldLabel, { label: label, optionalLabel: optionalLabel, tooltip: tooltip, tooltipRef: this.toolTipRef }, void 0)), !!maxLength && jsx$1(FieldCounter, { value: value, maxLength: maxLength, className: "px-0" }, void 0)] }), void 0), jsxs("div", __assign$a({ className: classNames$1("valid-field-text-input-container", { focusedFieldText: this.state.isFocus }) }, { children: [jsx$1(InlinePopover, __assign$a({ isOpen: isFocus, placement: popoverPlacement, content: popoverContent, type: popoverType }, { children: jsx$1(Input, { isLabelHidden: false, onFocus: this.handleFocus, onBlur: this.handleBlur, placeholder: placeholder, name: name, value: value, 
                                // @ts-ignore
                                onChange: onChange, disabled: disabled, type: type, min: min, max: max, shouldFitContainer: true, onKeyDown: this.handleOnKeyDown, maxLength: maxLength, autoComplete: autoComplete }, void 0) }), void 0), jsx$1("div", __assign$a({ className: "rightIcon" }, { children: rightIcon }), void 0)] }), void 0), customField, errMessage && jsx$1(FieldErrorMessage, { message: errMessage }, void 0), helperText && jsx$1(FieldHelperText, { message: helperText }, void 0)] }), void 0));
    };
    return ValidFieldText;
}(React$7.Component));

function ownKeys$3(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$3(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$3(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var AnalyticsEvent = /*#__PURE__*/function () {
  function AnalyticsEvent(props) {
    var _this = this;

    _classCallCheck$8(this, AnalyticsEvent);

    _defineProperty$3(this, "clone", function () {
      // just a shallow clone, don't change sub refs unless you want to
      // affect the original's too
      var payload = _objectSpread$3({}, _this.payload);

      return new AnalyticsEvent({
        payload: payload
      });
    });

    this.payload = props.payload;
  }

  _createClass$8(AnalyticsEvent, [{
    key: "update",
    value: function update(updater) {
      if (typeof updater === 'function') {
        this.payload = updater(this.payload);
      }

      if (_typeof$3(updater) === 'object') {
        this.payload = _objectSpread$3(_objectSpread$3({}, this.payload), updater);
      }

      return this;
    }
  }]);

  return AnalyticsEvent;
}();

function _createSuper$2(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$2(); return function _createSuperInternal() { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$8(this, result); }; }

function _isNativeReflectConstruct$2() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var UIAnalyticsEvent = /*#__PURE__*/function (_AnalyticsEvent) {
  _inherits$8(UIAnalyticsEvent, _AnalyticsEvent);

  var _super = _createSuper$2(UIAnalyticsEvent);

  function UIAnalyticsEvent(props) {
    var _this;

    _classCallCheck$8(this, UIAnalyticsEvent);

    _this = _super.call(this, props);

    _defineProperty$3(_assertThisInitialized$4(_this), "clone", function () {
      if (_this.hasFired) {
        if (process.env.NODE_ENV !== 'production' && !process.env.CI) {
          // eslint-disable-next-line no-console
          console.warn("Cannot clone an event after it's been fired.");
        }

        return null;
      }

      var context = _toConsumableArray$2(_this.context);

      var handlers = _toConsumableArray$2(_this.handlers);
      /**
       * A hacky "deep clone" of the object. This is limited in that it wont
       * support functions, regexs, Maps, Sets, etc, but none of those need to
       * be represented in our payload.
       */


      var payload = JSON.parse(JSON.stringify(_this.payload));
      return new UIAnalyticsEvent({
        context: context,
        handlers: handlers,
        payload: payload
      });
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "fire", function (channel) {
      if (_this.hasFired) {
        if (process.env.NODE_ENV !== 'production' && !process.env.CI) {
          // eslint-disable-next-line no-console
          console.warn('Cannot fire an event twice.');
        }

        return;
      }

      _this.handlers.forEach(function (handler) {
        return handler(_assertThisInitialized$4(_this), channel);
      });

      _this.hasFired = true;
    });

    _this.context = props.context || [];
    _this.handlers = props.handlers || [];
    _this.hasFired = false;
    return _this;
  }

  _createClass$8(UIAnalyticsEvent, [{
    key: "update",
    value: function update(updater) {
      if (this.hasFired) {
        if (process.env.NODE_ENV !== 'production' && !process.env.CI) {
          // eslint-disable-next-line no-console
          console.warn("Cannot update an event after it's been fired.");
        }

        return this;
      }

      return _get(_getPrototypeOf$2(UIAnalyticsEvent.prototype), "update", this).call(this, updater);
    }
  }]);

  return UIAnalyticsEvent;
}(AnalyticsEvent);

var useAnalyticsContext = function useAnalyticsContext() {
  return useContext(AnalyticsNextContext$1);
};

var useTrackedRef = function useTrackedRef(value) {
  var ref = useRef(value);
  useEffect(function () {
    ref.current = value;
  }, [value]);
  return ref;
};

function _createSuper$1(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$1(); return function _createSuperInternal() { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$8(this, result); }; }

function _isNativeReflectConstruct$1() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var ContextTypes = {
  getAtlaskitAnalyticsContext: PropTypes$3.func,
  getAtlaskitAnalyticsEventHandlers: PropTypes$3.func
};

var noop = function noop() {
  return [];
}; // eslint-disable-next-line @repo/internal/react/no-class-components


var AnalyticsContext$2 = /*#__PURE__*/function (_Component) {
  _inherits$8(AnalyticsContext, _Component);

  var _super = _createSuper$1(AnalyticsContext);

  function AnalyticsContext(props) {
    var _this;

    _classCallCheck$8(this, AnalyticsContext);

    _this = _super.call(this, props);

    _defineProperty$3(_assertThisInitialized$4(_this), "getChildContext", function () {
      return {
        getAtlaskitAnalyticsContext: _this.getAnalyticsContext
      };
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "getAnalyticsContext", function () {
      var data = _this.props.data;
      var _this$context$getAtla = _this.context.getAtlaskitAnalyticsContext,
          getAtlaskitAnalyticsContext = _this$context$getAtla === void 0 ? noop : _this$context$getAtla;
      return [].concat(_toConsumableArray$2(getAtlaskitAnalyticsContext()), [data]);
    });

    _defineProperty$3(_assertThisInitialized$4(_this), "getAnalyticsEventHandlers", function () {
      var _this$context$getAtla2 = _this.context.getAtlaskitAnalyticsEventHandlers,
          getAtlaskitAnalyticsEventHandlers = _this$context$getAtla2 === void 0 ? noop : _this$context$getAtla2;
      return getAtlaskitAnalyticsEventHandlers();
    });

    _this.contextValue = {
      getAtlaskitAnalyticsContext: _this.getAnalyticsContext,
      getAtlaskitAnalyticsEventHandlers: _this.getAnalyticsEventHandlers
    };
    return _this;
  }

  _createClass$8(AnalyticsContext, [{
    key: "render",
    value: function render() {
      var children = this.props.children;
      return /*#__PURE__*/React__default.createElement(AnalyticsNextContext$1.Provider, {
        value: this.contextValue
      }, children);
    }
  }]);

  return AnalyticsContext;
}(Component$1);

_defineProperty$3(AnalyticsContext$2, "contextTypes", ContextTypes);

_defineProperty$3(AnalyticsContext$2, "childContextTypes", ContextTypes);

var AnalyticsContext$3 = AnalyticsContext$2;

var AnalyticsContext$1 = function AnalyticsContext(_ref) {
  var data = _ref.data,
      children = _ref.children;
  var dataRef = useTrackedRef(data);
  var analyticsContext = useAnalyticsContext();
  var getAtlaskitAnalyticsContext = useCallback$1(function () {
    return [].concat(_toConsumableArray$2(analyticsContext.getAtlaskitAnalyticsContext()), [dataRef.current]);
  }, [analyticsContext, dataRef]);
  var value = useMemo$1(function () {
    return {
      getAtlaskitAnalyticsContext: getAtlaskitAnalyticsContext,
      getAtlaskitAnalyticsEventHandlers: analyticsContext.getAtlaskitAnalyticsEventHandlers
    };
  }, [analyticsContext, getAtlaskitAnalyticsContext]);
  return /*#__PURE__*/React__default.createElement(AnalyticsNextContext$1.Provider, {
    value: value
  }, children);
};

var ModernAnalyticsContext = AnalyticsContext$1;

var ExportedAnalyticsContext;

if (typeof process !== 'undefined' && process.env['ANALYTICS_NEXT_MODERN_CONTEXT']) {
  ExportedAnalyticsContext = ModernAnalyticsContext;
} else {
  ExportedAnalyticsContext = AnalyticsContext$3;
}

var AnalyticsContext = ExportedAnalyticsContext;

function ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$2(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var withAnalyticsContext = function withAnalyticsContext(defaultData) {
  return function (WrappedComponent) {
    var WithAnalyticsContext = /*#__PURE__*/forwardRef(function (_ref, ref) {
      var analyticsContext = _ref.analyticsContext,
          rest = _objectWithoutProperties$3(_ref, ["analyticsContext"]);

      var analyticsData = useMemo$1(function () {
        return _objectSpread$2(_objectSpread$2({}, defaultData), analyticsContext);
      }, [analyticsContext]);
      return /*#__PURE__*/React__default.createElement(AnalyticsContext, {
        data: analyticsData
      }, /*#__PURE__*/React__default.createElement(WrappedComponent, _extends$d({}, rest, {
        ref: ref
      })));
    }); // @ts-ignore

    WithAnalyticsContext.displayName = "WithAnalyticsContext(".concat( // @ts-ignore disneyName doesn't exist on type
    WrappedComponent.displayName || WrappedComponent.name, ")");
    return WithAnalyticsContext;
  };
};

var withAnalyticsContext$1 = withAnalyticsContext;

function useAnalyticsEvents() {
  var analyticsContext = useAnalyticsContext();
  var createAnalyticsEvent = useCallbackOne(function (payload) {
    return new UIAnalyticsEvent({
      context: analyticsContext.getAtlaskitAnalyticsContext(),
      handlers: analyticsContext.getAtlaskitAnalyticsEventHandlers(),
      payload: payload
    });
  }, [analyticsContext]);
  return {
    createAnalyticsEvent: createAnalyticsEvent
  };
}

function ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$1(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
function usePatchedProps() {
  var createEventMap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var wrappedComponentProps = arguments.length > 1 ? arguments[1] : undefined;

  var _useAnalyticsEvents = useAnalyticsEvents(),
      createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;

  var handlerCache = useRef({});
  var patchedProps = useMemo$1(function () {
    var cache = handlerCache.current; // Clean up no longer used handlers in cache

    Object.keys(cache).filter(function (key) {
      return !(key in createEventMap);
    }).forEach(function (key) {
      return delete cache[key];
    });
    return Object.keys(createEventMap).reduce(function (p, k) {
      var eventCreator = createEventMap[k];

      if (!['object', 'function'].includes(_typeof$3(eventCreator))) {
        return p;
      }

      var propValue = wrappedComponentProps[k];

      if (k in cache && cache[k].eventCreator === eventCreator && cache[k].propValue === propValue) {
        return _objectSpread$1(_objectSpread$1({}, p), {}, _defineProperty$3({}, k, cache[k].wrappedCallback));
      }

      var wrappedCallback = function wrappedCallback() {
        var analyticsEvent = typeof eventCreator === 'function' ? eventCreator(createAnalyticsEvent, wrappedComponentProps) : createAnalyticsEvent(eventCreator);

        if (propValue && typeof propValue === 'function') {
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          propValue.apply(void 0, args.concat([analyticsEvent]));
        }
      };

      cache[k] = {
        eventCreator: eventCreator,
        wrappedCallback: wrappedCallback,
        propValue: propValue
      };
      return _objectSpread$1(_objectSpread$1({}, p), {}, _defineProperty$3({}, k, wrappedCallback));
    }, {});
  }, [createEventMap, wrappedComponentProps, createAnalyticsEvent, handlerCache]);
  return {
    patchedEventProps: patchedProps
  };
}

var withAnalyticsEvents = function withAnalyticsEvents() {
  var createEventMap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return function (WrappedComponent) {
    var WithAnalyticsEvents = /*#__PURE__*/forwardRef(function (props, ref) {
      var _usePatchedProps = usePatchedProps(createEventMap, props),
          patchedEventProps = _usePatchedProps.patchedEventProps;

      var _useAnalyticsEvents = useAnalyticsEvents(),
          createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;

      return /*#__PURE__*/React__default.createElement(WrappedComponent, _extends$d({}, props, patchedEventProps, {
        createAnalyticsEvent: createAnalyticsEvent,
        ref: ref
      }));
    }); // @ts-ignore

    WithAnalyticsEvents.displayName = "WithAnalyticsEvents(".concat( // @ts-ignore disneyName doesn't exist on type
    WrappedComponent.displayName || WrappedComponent.name, ")");
    return WithAnalyticsEvents;
  };
};

var withAnalyticsEvents$1 = withAnalyticsEvents;

var createAndFireEvent = (function (channel) {
  return function (payload) {
    return function (createAnalyticsEvent) {
      var consumerEvent = createAnalyticsEvent(payload);
      var clonedEvent = consumerEvent.clone();

      if (clonedEvent) {
        clonedEvent.fire(channel);
      }

      return consumerEvent;
    };
  };
});

// Resolves the different types of theme objects in the current API
function getTheme(props) {
  if (props && props.theme) {
    // Theme is the global Atlaskit theme
    if (CHANNEL in props.theme) {
      return props.theme[CHANNEL];
    } // User has provided alternative modes
    else if ('mode' in props.theme && THEME_MODES.includes(props.theme.mode)) {
      return props.theme;
    }
  } // If format not supported (or no theme provided), return standard theme


  return {
    mode: DEFAULT_THEME_MODE
  };
}

/* eslint-disable prefer-rest-params */

// Unpack custom variants, and get correct value for the current theme
function themedVariants(variantProp, variants) {
  return function (props) {
    var theme = getTheme(props);

    if (props && props[variantProp] && variants) {
      var modes = variants[props[variantProp]];

      if (modes && modes[theme.mode]) {
        var value = modes[theme.mode];

        if (value) {
          return value;
        } // TS believes value can be undefined

      }
    }

    return '';
  };
}

function themed(modesOrVariant, variantModes) {
  if (typeof modesOrVariant === 'string') {
    return themedVariants(modesOrVariant, variantModes);
  }

  var modes = modesOrVariant;
  return function (props) {
    // Get theme from the user's props
    var theme = getTheme(props); // User isn't required to provide both light and dark values

    if (theme.mode in modes) {
      var value = modes[theme.mode]; // TS believes value can be undefined

      if (value) {
        return value;
      }
    }

    return '';
  };
}

var N100 = '#7A869A';
var DN200 = '#7988A3';
var placeholderText = themed({
  light: N100,
  dark: DN200
});

var CHANNEL = '__ATLASKIT_THEME__';
var DEFAULT_THEME_MODE = 'light';
var THEME_MODES = ['light', 'dark'];
var fontSize = function fontSize() {
  return 14;
};
var codeFontFamily = function codeFontFamily() {
  return "'SFMono-Medium', 'SF Mono', 'Segoe UI Mono', 'Roboto Mono', 'Ubuntu Mono', Menlo, Consolas, Courier, monospace";
};

var getPlaceholderStyle = function getPlaceholderStyle(style) {
  return css$3(["\n  &::-webkit-input-placeholder {\n    /* WebKit, Blink, Edge */\n    ", ";\n  }\n  &::-moz-placeholder {\n    /* Mozilla Firefox 19+ */\n    ", " opacity: 1;\n  }\n  &::-ms-input-placeholder {\n    /* Microsoft Edge */\n    ", ";\n  }\n  &:-moz-placeholder {\n    /* Mozilla Firefox 4 to 18 */\n    ", " opacity: 1;\n  }\n  &:-ms-input-placeholder {\n    /* Internet Explorer 10-11 */\n    ", ";\n  }\n"], style, style, style, style, style);
};

var getPlaceholderColor = css$3(["\n  color: ", ";\n"], placeholderText); // Safari puts on some difficult to remove styles, mainly for disabled inputs
// but we want full control so need to override them in all cases

var overrideSafariDisabledStyles = "\n  -webkit-text-fill-color: unset;\n  -webkit-opacity: 1;\n";

var getMinimumRowsHeight = function getMinimumRowsHeight(_ref) {
  var minimumRows = _ref.minimumRows;
  return "min-height: ".concat(20 * minimumRows, "px;");
};

var getResizeStyles = function getResizeStyles(_ref2) {
  var enableResize = _ref2.enableResize;

  if (!enableResize) {
    return "resize: none;";
  }

  if (enableResize === 'horizontal') {
    return "resize: horizontal;";
  }

  if (enableResize === 'vertical') {
    return "resize: vertical;";
  }

  return null;
};

var TextArea = styled$1.textarea.withConfig({
  displayName: "TextArea",
  componentId: "l4fqfr-0"
})(["\n  background: transparent;\n  padding: 0;\n  margin: 0;\n  border: 0;\n  box-sizing: border-box;\n  color: inherit;\n  cursor: inherit;\n  font-family: ", ";\n  font-size: ", "px;\n  line-height: ", ";\n  min-width: 0;\n  outline: none;\n  width: 100%;\n\n  [disabled] {\n    ", ";\n  }\n\n  ", " ", "\n\n  &::-ms-clear {\n    display: none;\n  }\n\n  &:invalid {\n    box-shadow: none;\n  }\n\n  ", ";\n"], function (p) {
  return p.isMonospaced ? codeFontFamily() : 'inherit';
}, fontSize, 20 / fontSize(), overrideSafariDisabledStyles, getMinimumRowsHeight, getResizeStyles, getPlaceholderStyle(getPlaceholderColor));
var TextArea$1 = TextArea;

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$8(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var packageName = "@atlaskit/field-text-area";
var packageVersion = "8.0.7";
var Wrapper = styled$1.div.withConfig({
  displayName: "FieldTextAreaStateless__Wrapper",
  componentId: "sc-159dr31-0"
})(["\n  flex: 1 1 100%;\n"]);

if (process.env.NODE_ENV !== 'production' && !process.env.CI) {
  // eslint-disable-next-line no-console
  console.warn('@atlaskit/field-text-area has been deprecated. Please use the @atlaskit/textarea package instead.');
}

var FieldTextAreaStateless = /*#__PURE__*/function (_Component) {
  _inherits$8(FieldTextAreaStateless, _Component);

  var _super = _createSuper(FieldTextAreaStateless);

  function FieldTextAreaStateless() {
    var _this;

    _classCallCheck$8(this, FieldTextAreaStateless);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty$3(_assertThisInitialized$4(_this), "input", void 0);

    return _this;
  }

  _createClass$8(FieldTextAreaStateless, [{
    key: "focus",
    value: function focus() {
      this.input.focus();
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          autoFocus = _this$props.autoFocus,
          compact = _this$props.compact,
          disabled = _this$props.disabled,
          id = _this$props.id,
          invalidMessage = _this$props.invalidMessage,
          isInvalid = _this$props.isInvalid,
          isLabelHidden = _this$props.isLabelHidden,
          isMonospaced = _this$props.isMonospaced,
          isReadOnly = _this$props.isReadOnly,
          isSpellCheckEnabled = _this$props.isSpellCheckEnabled,
          label = _this$props.label,
          maxLength = _this$props.maxLength,
          minimumRows = _this$props.minimumRows,
          name = _this$props.name,
          onBlur = _this$props.onBlur,
          onChange = _this$props.onChange,
          onFocus = _this$props.onFocus,
          placeholder = _this$props.placeholder,
          enableResize = _this$props.enableResize,
          required = _this$props.required,
          shouldFitContainer = _this$props.shouldFitContainer,
          value = _this$props.value,
          isValidationHidden = _this$props.isValidationHidden;
      return /*#__PURE__*/React__default.createElement(Wrapper, null, !isLabelHidden && /*#__PURE__*/React__default.createElement(Label, {
        htmlFor: id,
        isDisabled: disabled,
        isLabelHidden: isLabelHidden,
        isRequired: required,
        label: label
      }), /*#__PURE__*/React__default.createElement(FieldBase, {
        isCompact: compact,
        isDisabled: disabled,
        isInvalid: isInvalid,
        isReadOnly: isReadOnly,
        isRequired: required,
        invalidMessage: invalidMessage,
        isFitContainerWidthEnabled: shouldFitContainer,
        isValidationHidden: isValidationHidden
      }, /*#__PURE__*/React__default.createElement(TextArea$1, {
        disabled: disabled,
        readOnly: isReadOnly,
        name: name,
        placeholder: placeholder,
        value: value,
        required: required,
        isMonospaced: isMonospaced,
        minimumRows: minimumRows,
        enableResize: enableResize,
        onBlur: onBlur,
        onChange: onChange,
        onFocus: onFocus,
        id: id,
        autoFocus: autoFocus,
        spellCheck: isSpellCheckEnabled,
        maxLength: maxLength,
        innerRef: function innerRef(input) {
          _this2.input = input;
        }
      })));
    }
  }]);

  return FieldTextAreaStateless;
}(Component$1);

_defineProperty$3(FieldTextAreaStateless, "defaultProps", {
  compact: false,
  disabled: false,
  isReadOnly: false,
  required: false,
  isInvalid: false,
  label: '',
  type: 'text',
  isSpellCheckEnabled: true,
  minimumRows: 1,
  isValidationHidden: false
});
var createAndFireEventOnAtlaskit = createAndFireEvent('atlaskit');
var FieldTextAreaStateless$1 = withAnalyticsContext$1({
  componentName: 'fieldTextArea',
  packageName: packageName,
  packageVersion: packageVersion
})(withAnalyticsEvents$1({
  onBlur: createAndFireEventOnAtlaskit({
    action: 'blurred',
    actionSubject: 'textArea',
    attributes: {
      componentName: 'fieldTextArea',
      packageName: packageName,
      packageVersion: packageVersion
    }
  }),
  onFocus: createAndFireEventOnAtlaskit({
    action: 'focused',
    actionSubject: 'textArea',
    attributes: {
      componentName: 'fieldTextArea',
      packageName: packageName,
      packageVersion: packageVersion
    }
  })
})(FieldTextAreaStateless));

var css_248z$a = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.valid-field-text-area [class|=Content__ChildWrapper]>[class|=Content]{border:1px solid #b8bfcd}.valid-field-text-area [class|=Content__ChildWrapper]>[class|=Content]>textarea{min-height:100px}.valid-field-text-area.focusedFieldText [class|=Content__ChildWrapper]>[class|=Content]{border:2px solid #0b6cff}.valid-field-text-area .fieldHeader,.valid-field-text-area .fieldInformationTextArea{align-items:baseline;display:flex;justify-content:space-between}";
styleInject(css_248z$a);

var ValidFieldTextArea = function (_a) {
    var _b = _a.label, label = _b === void 0 ? "" : _b, value = _a.value, errMessage = _a.errMessage, isInvalid = _a.isInvalid, optionalLabel = _a.optionalLabel, helperText = _a.helperText, tooltip = _a.tooltip, _c = _a.shouldFitContainer, shouldFitContainer = _c === void 0 ? true : _c, minimumRows = _a.minimumRows, onBlurProps = _a.onBlur, placeholder = _a.placeholder, maxLength = _a.maxLength, props = __rest$8(_a, ["label", "value", "errMessage", "isInvalid", "optionalLabel", "helperText", "tooltip", "shouldFitContainer", "minimumRows", "onBlur", "placeholder", "maxLength"]);
    var tooltipRef = React__default.useRef(null);
    var _d = React__default.useState(false), isInputFocused = _d[0], setIsInputFocused = _d[1];
    React__default.useEffect(function () {
        if (tooltipRef && tooltipRef.current) {
            if (isInputFocused) {
                ReactTooltip.show(tooltipRef.current);
            }
            else {
                ReactTooltip.hide(tooltipRef.current);
            }
        }
    }, [isInputFocused]);
    var onFocus = function () {
        setIsInputFocused(true);
    };
    var onBlur = function (event) {
        setIsInputFocused(false);
        if (onBlurProps)
            onBlurProps(event);
    };
    return (jsxs("div", __assign$a({ className: "valid-field-text-area" }, { children: [jsxs("div", __assign$a({ className: classNames$1("fieldHeader", {
                    pushRight: !label && !!maxLength,
                }) }, { children: [label && (jsx$1(FieldLabel, { label: label, optionalLabel: optionalLabel, tooltipRef: tooltipRef, tooltip: tooltip && tooltip }, void 0)), !!maxLength && jsx$1(FieldCounter, { value: value, maxLength: maxLength }, void 0)] }), void 0), jsx$1("div", __assign$a({ className: classNames$1("valid-field-text-area-container", { focusedFieldText: isInputFocused }) }, { children: jsx$1(FieldTextAreaStateless$1, __assign$a({ onFocus: onFocus, onBlur: onBlur, isLabelHidden: true, value: value, shouldFitContainer: shouldFitContainer, minimumRows: minimumRows, placeholder: placeholder }, props), void 0) }), void 0), jsx$1("div", __assign$a({ className: classNames$1("fieldInformationTextArea") }, { children: jsxs("div", { children: [isInvalid && jsx$1(FieldErrorMessage, { message: errMessage }, void 0), helperText && jsx$1(FieldHelperText, { message: helperText }, void 0)] }, void 0) }), void 0)] }), void 0));
};

var ValidMultiSelect = function (_a) {
    var label = _a.label, placeholder = _a.placeholder, _b = _a.options, options = _b === void 0 ? [] : _b, onChange = _a.onChange, errMessage = _a.errMessage, optionalLabel = _a.optionalLabel, isInvalid = _a.isInvalid, value = _a.value, isDisabled = _a.isDisabled, tooltip = _a.tooltip;
    return (jsxs(Fragment$2, { children: [!!label && (jsx$1(FieldLabel, { label: label, optionalLabel: optionalLabel, tooltip: tooltip && tooltip }, void 0)), jsx$1(Select, { className: "react-select", isDisabled: isDisabled, classNamePrefix: "select", options: options, isMulti: true, isSearchable: true, placeholder: placeholder, onChange: onChange, value: value, menuPlacement: "auto" }, void 0), !optionalLabel && isInvalid && jsx$1(FieldErrorMessage, { message: errMessage }, void 0)] }, void 0));
};

var RELOADSTATUS = Enum("LOADING", "FAILED", "SUCCESS");
var ValidSelect = function (_a) {
    var label = _a.label, placeholder = _a.placeholder, _b = _a.options, options = _b === void 0 ? [] : _b, name = _a.name, value = _a.value, onChange = _a.onChange, errMessage = _a.errMessage, optionalLabel = _a.optionalLabel, isInvalid = _a.isInvalid, _c = _a.isDisabled, isDisabled = _c === void 0 ? false : _c, isClearable = _a.isClearable, tooltip = _a.tooltip, selectDataQa = _a.selectDataQa, _d = _a.isMulti, isMulti = _d === void 0 ? false : _d, className = _a.className;
    return (jsxs("div", __assign$a({ className: classNames$1("valid-select-input", className) }, { children: [!!label && (jsx$1(FieldLabel, { label: label, optionalLabel: optionalLabel, tooltip: tooltip && tooltip }, void 0)), jsx$1(Select, { options: options, placeholder: placeholder, name: name, value: value, onChange: onChange, isDisabled: isDisabled, isClearable: isClearable, isMulti: isMulti, dataQa: selectDataQa }, void 0), !optionalLabel && isInvalid && jsx$1(FieldErrorMessage, { message: errMessage }, void 0)] }), void 0));
};

var css_248z$9 = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.valid-dynamic-text__input{display:flex;flex-direction:column}.valid-dynamic-text__input label{display:none}.valid-dynamic-text__input__field{align-items:center;display:flex;flex-direction:row}.valid-dynamic-text__input__field:hover{background-color:transparent!important}.valid-dynamic-text__input__field:not(:last-child){margin-bottom:16px}.valid-dynamic-text__input__field--focused [class|=Content__ChildWrapper]>[class|=Content]{border:2px solid #0b6cff}.valid-dynamic-text__input__field>div{width:calc(100% - 40px)}.valid-dynamic-text__input__field--disabled>div{width:100%}.valid-dynamic-text__input__field button{color:#4c576b!important;width:40px}.valid-dynamic-text__input__field button:hover{text-decoration:none}.valid-dynamic-text__input__field input{font-family:Roboto,sans-serif}.valid-dynamic-text__input__add-btn{align-items:center;background-color:#f5f6f8!important;border-radius:4px;display:flex;height:40px;justify-content:center;width:calc(100% - 40px)}.valid-dynamic-text__input__add-btn button:hover{text-decoration:none}.valid-dynamic-text__input__add-btn button:disabled span{color:#b8bfcd}.valid-dynamic-text__input__add-btn button span{color:#0b6cff}";
styleInject(css_248z$9);

var ValidDynamicText = function (_a) {
    var placeholder = _a.placeholder, name = _a.name, values = _a.values, onChange = _a.onChange, _b = _a.isDisabled, isDisabled = _b === void 0 ? false : _b, _c = _a.type, type = _c === void 0 ? "text" : _c, label = _a.label, errMessage = _a.errMessage, maxField = _a.maxField, _d = _a.addText, addText = _d === void 0 ? "Add" : _d;
    var _e = React$7.useState(null), isFocused = _e[0], setIsFocused = _e[1];
    var addField = function () {
        onChange(__spreadArray(__spreadArray([], values), [""]));
    };
    var removeField = function (index) {
        onChange(__spreadArray([], values.filter(function (_, pos) { return pos !== index; })));
    };
    var onValuesChange = function (event, index) {
        var value = event.currentTarget.value;
        values[index] = value;
        onChange(values);
    };
    return (jsxs("div", __assign$a({ className: "valid-dynamic-text" }, { children: [jsx$1(FieldLabel, { label: label }, void 0), jsxs("div", __assign$a({ className: "valid-dynamic-text__input" }, { children: [values.map(function (value, index) { return (jsxs("div", __assign$a({ className: classNames$1("valid-dynamic-text__input__field", {
                            "valid-dynamic-text__input__field--focused": isFocused === index,
                            "valid-dynamic-text__input__field--disabled": isDisabled,
                        }) }, { children: [jsx$1(Input, { isLabelHidden: true, placeholder: placeholder, name: name, value: value, onChange: function (e) { return onValuesChange(e, index); }, disabled: isDisabled, shouldFitContainer: true, type: type, onFocus: function () { return setIsFocused(index); }, onBlur: function () { return setIsFocused(null); } }, void 0), values.length > 1 && !isDisabled && (jsx$1(Button$6, __assign$a({ onClick: function () { return removeField(index); }, appearance: "link" }, { children: jsx$1("span", { className: "icon fa-icon-trash" }, void 0) }), void 0))] }), index)); }), !!errMessage && jsx$1(FieldErrorMessage, { message: errMessage }, void 0), jsx$1("div", __assign$a({ className: "valid-dynamic-text__input__add-btn", hidden: isDisabled }, { children: jsxs(Button$6, __assign$a({ onClick: addField, appearance: "link", isDisabled: values.length === maxField }, { children: [jsx$1("span", { className: "icon-plus" }, void 0), " ", addText + " (" + values.length + "/" + maxField + ")"] }), void 0) }), void 0)] }), void 0)] }), void 0));
};

var css_248z$8 = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.valid-field-password{position:relative}.valid-field-password .password-field-text input{padding-right:24px}.valid-field-password .password-field-text .password-eye-icon{color:#687792;cursor:pointer}.valid-field-password .password-field-text .password-eye-icon:hover{color:#232831}.valid-field-password .generate-password{color:#0b6cff;cursor:pointer;display:inline-block;padding:0;text-decoration:none}.valid-field-password .generate-password :focus{outline:none}.valid-field-password .level{font-size:16px;margin-top:5px;position:absolute;right:0;text-transform:capitalize}.valid-field-password .level.poor{color:#e32626}.valid-field-password .level.weak{color:#f1a20a}.valid-field-password .level.good{color:#025896}.valid-field-password .level.average{color:#687792}.valid-field-password .level.excellent{color:#00642e}";
styleInject(css_248z$8);

var ValidFieldPassword = /** @class */ (function (_super) {
    __extends$d(ValidFieldPassword, _super);
    function ValidFieldPassword(props) {
        var _this = _super.call(this, props) || this;
        _this.toolTipIconEye = React$7.createRef();
        _this.toggleIconEyeOff = function () {
            _this.setState(function (prevState) { return ({
                isIconEyeOff: !prevState.isIconEyeOff,
            }); }, function () { return _this.resetTooltipIconEye(); });
        };
        _this.resetTooltipIconEye = function () {
            if (_this.toolTipIconEye && _this.toolTipIconEye.current) {
                ReactTooltip.hide(_this.toolTipIconEye.current);
                ReactTooltip.show(_this.toolTipIconEye.current);
            }
        };
        _this.hideTooltip = function () {
            if (_this.toolTipIconEye && _this.toolTipIconEye.current) {
                ReactTooltip.hide(_this.toolTipIconEye.current);
            }
        };
        _this.handleEyeIcon = function () {
            var _a = _this.props, passHideText = _a.passHideText, passVisibleText = _a.passVisibleText;
            var isIconEyeOff = _this.state.isIconEyeOff;
            return (jsxs(Fragment$2, { children: [jsx$1("i", { ref: _this.toolTipIconEye, "data-for": "eyeInfo__tooltip", "data-tip": isIconEyeOff ? passHideText : passVisibleText, "data-place": "top", className: classNames$1("password-eye-icon", {
                            "fa-icon-eye": !isIconEyeOff,
                            "fa-icon-eye-off": isIconEyeOff,
                        }), onClick: _this.toggleIconEyeOff }, void 0), jsx$1(ReactTooltip, { effect: "solid", id: "eyeInfo__tooltip", html: true }, void 0)] }, void 0));
        };
        _this.handleFieldType = function () {
            return _this.state.isIconEyeOff ? "password" : "text";
        };
        _this.handleGeneratePassword = function () {
            var _a = _this.props, customPattern = _a.customPattern, onChange = _a.onChange, name = _a.name;
            if (!onChange)
                return;
            var passwordPattern = customPattern || DEFAULT_PASSWORD_AND_SECRET_REGEX;
            var value = generatePassword(passwordPattern);
            // @ts-ignore
            onChange({ target: { name: name, value: value } });
        };
        _this.handleGenerateText = function () {
            var _a = _this.props, hasGeneratePassword = _a.hasGeneratePassword, defaultGenerateText = _a.defaultGenerateText, strengthLevelIndicator = _a.strengthLevelIndicator, translateStrengthLevel = _a.translateStrengthLevel, customField = _a.customField;
            var levelColor = _this.state.levelColor;
            return (jsxs(Fragment$2, { children: [hasGeneratePassword && (jsx$1(Button$6, __assign$a({ appearance: "link", spacing: "none", className: "generate-password", onClick: _this.handleGeneratePassword }, { children: defaultGenerateText }), void 0)), strengthLevelIndicator && (jsx$1("span", __assign$a({ className: classNames$1("level", levelColor) }, { children: !!translateStrengthLevel
                            ? translateStrengthLevel(strengthLevelIndicator)
                            : translatedStrengthLevelOrder[strengthLevelIndicator] }), void 0)), customField] }, void 0));
        };
        _this.state = {
            isIconEyeOff: true,
            levelColor: "",
        };
        return _this;
    }
    ValidFieldPassword.prototype.componentDidMount = function () {
        setTimeout(function () {
            ReactTooltip.rebuild();
        }, 100);
    };
    ValidFieldPassword.prototype.componentWillUnmount = function () {
        this.hideTooltip();
    };
    ValidFieldPassword.getDerivedStateFromProps = function (props, state) {
        if (props.strengthLevelIndicator !== state.levelColor) {
            return {
                levelColor: props.strengthLevelIndicator,
            };
        }
        return "";
    };
    ValidFieldPassword.prototype.render = function () {
        return (jsx$1("div", __assign$a({ className: "valid-field-password" }, { children: jsx$1(ValidFieldText, __assign$a({}, this.props, { rightIcon: this.handleEyeIcon(), type: this.handleFieldType(), className: classNames$1(this.props.className, "password-field-text"), customField: this.handleGenerateText() }), void 0) }), void 0));
    };
    return ValidFieldPassword;
}(React$7.Component));

var css_248z$7 = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.emptyResultsWithIcon{color:#687792;font-style:normal;letter-spacing:.02em;margin:0 auto;max-width:531px;padding-bottom:60px;padding-top:60px;text-align:center}.emptyResultsWithIcon.taller{padding-bottom:125px;padding-top:125px}.emptyResultsWithIconTitle{font-size:20px;font-weight:500;line-height:32px}.emptyResultsWithIconDescription{font-size:14px;margin-bottom:16px}";
styleInject(css_248z$7);

var EmptyResultsWithIcon = function (_a) {
    var imgSrc = _a.imgSrc, title = _a.title, description = _a.description, children = _a.children, isTaller = _a.isTaller, dataQa = _a.dataQa;
    return (jsxs("div", __assign$a({ className: classNames$1("emptyResultsWithIcon", { taller: isTaller }), "data-qa-id": dataQa }, { children: [jsx$1("img", { src: imgSrc }, void 0), jsx$1("div", __assign$a({ className: "emptyResultsWithIconTitle mt-2" }, { children: title }), void 0), description && jsx$1("div", __assign$a({ className: "emptyResultsWithIconDescription" }, { children: description }), void 0), children && jsx$1("div", { children: children }, void 0)] }), void 0));
};

var Component = {};

var toggleSelection = function () {
  var selection = document.getSelection();
  if (!selection.rangeCount) {
    return function () {};
  }
  var active = document.activeElement;

  var ranges = [];
  for (var i = 0; i < selection.rangeCount; i++) {
    ranges.push(selection.getRangeAt(i));
  }

  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML
    case 'INPUT':
    case 'TEXTAREA':
      active.blur();
      break;

    default:
      active = null;
      break;
  }

  selection.removeAllRanges();
  return function () {
    selection.type === 'Caret' &&
    selection.removeAllRanges();

    if (!selection.rangeCount) {
      ranges.forEach(function(range) {
        selection.addRange(range);
      });
    }

    active &&
    active.focus();
  };
};

var deselectCurrent = toggleSelection;

var clipboardToIE11Formatting = {
  "text/plain": "Text",
  "text/html": "Url",
  "default": "Text"
};

var defaultMessage = "Copy to clipboard: #{key}, Enter";

function format(message) {
  var copyKey = (/mac os x/i.test(navigator.userAgent) ? "⌘" : "Ctrl") + "+C";
  return message.replace(/#{\s*key\s*}/g, copyKey);
}

function copy(text, options) {
  var debug,
    message,
    reselectPrevious,
    range,
    selection,
    mark,
    success = false;
  if (!options) {
    options = {};
  }
  debug = options.debug || false;
  try {
    reselectPrevious = deselectCurrent();

    range = document.createRange();
    selection = document.getSelection();

    mark = document.createElement("span");
    mark.textContent = text;
    // reset user styles for span element
    mark.style.all = "unset";
    // prevents scrolling to the end of the page
    mark.style.position = "fixed";
    mark.style.top = 0;
    mark.style.clip = "rect(0, 0, 0, 0)";
    // used to preserve spaces and line breaks
    mark.style.whiteSpace = "pre";
    // do not inherit user-select (it may be `none`)
    mark.style.webkitUserSelect = "text";
    mark.style.MozUserSelect = "text";
    mark.style.msUserSelect = "text";
    mark.style.userSelect = "text";
    mark.addEventListener("copy", function(e) {
      e.stopPropagation();
      if (options.format) {
        e.preventDefault();
        if (typeof e.clipboardData === "undefined") { // IE 11
          debug && console.warn("unable to use e.clipboardData");
          debug && console.warn("trying IE specific stuff");
          window.clipboardData.clearData();
          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting["default"];
          window.clipboardData.setData(format, text);
        } else { // all other browsers
          e.clipboardData.clearData();
          e.clipboardData.setData(options.format, text);
        }
      }
      if (options.onCopy) {
        e.preventDefault();
        options.onCopy(e.clipboardData);
      }
    });

    document.body.appendChild(mark);

    range.selectNodeContents(mark);
    selection.addRange(range);

    var successful = document.execCommand("copy");
    if (!successful) {
      throw new Error("copy command was unsuccessful");
    }
    success = true;
  } catch (err) {
    debug && console.error("unable to copy using execCommand: ", err);
    debug && console.warn("trying IE specific stuff");
    try {
      window.clipboardData.setData(options.format || "text", text);
      options.onCopy && options.onCopy(window.clipboardData);
      success = true;
    } catch (err) {
      debug && console.error("unable to copy using clipboardData: ", err);
      debug && console.error("falling back to prompt");
      message = format("message" in options ? options.message : defaultMessage);
      window.prompt(message, text);
    }
  } finally {
    if (selection) {
      if (typeof selection.removeRange == "function") {
        selection.removeRange(range);
      } else {
        selection.removeAllRanges();
      }
    }

    if (mark) {
      document.body.removeChild(mark);
    }
    reselectPrevious();
  }

  return success;
}

var copyToClipboard = copy;

Object.defineProperty(Component, "__esModule", {
  value: true
});
Component.CopyToClipboard = void 0;

var _react = _interopRequireDefault(React__default);

var _copyToClipboard = _interopRequireDefault(copyToClipboard);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var CopyToClipboard$1 =
/*#__PURE__*/
function (_React$PureComponent) {
  _inherits(CopyToClipboard, _React$PureComponent);

  function CopyToClipboard() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, CopyToClipboard);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CopyToClipboard)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "onClick", function (event) {
      var _this$props = _this.props,
          text = _this$props.text,
          onCopy = _this$props.onCopy,
          children = _this$props.children,
          options = _this$props.options;

      var elem = _react["default"].Children.only(children);

      var result = (0, _copyToClipboard["default"])(text, options);

      if (onCopy) {
        onCopy(text, result);
      } // Bypass onClick if it was present


      if (elem && elem.props && typeof elem.props.onClick === 'function') {
        elem.props.onClick(event);
      }
    });

    return _this;
  }

  _createClass(CopyToClipboard, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props;
          _this$props2.text;
          _this$props2.onCopy;
          _this$props2.options;
          var children = _this$props2.children,
          props = _objectWithoutProperties(_this$props2, ["text", "onCopy", "options", "children"]);

      var elem = _react["default"].Children.only(children);

      return _react["default"].cloneElement(elem, _objectSpread({}, props, {
        onClick: this.onClick
      }));
    }
  }]);

  return CopyToClipboard;
}(_react["default"].PureComponent);

Component.CopyToClipboard = CopyToClipboard$1;

_defineProperty(CopyToClipboard$1, "defaultProps", {
  onCopy: undefined,
  options: undefined
});

var _require = Component,
    CopyToClipboard = _require.CopyToClipboard;

CopyToClipboard.CopyToClipboard = CopyToClipboard;
var lib = CopyToClipboard;

var css_248z$6 = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.common-tooltip{cursor:pointer;position:relative}.common-tooltip .common-tooltip-children{box-sizing:border-box;display:block;max-width:121px;overflow:hidden;padding-right:16px;position:relative;text-overflow:ellipsis;white-space:nowrap}.common-tooltip .common-tooltip-children.no-clipboard{padding-right:0}.common-tooltip .common-tooltip-children.medium{max-width:100px}.common-tooltip .common-tooltip-children.narrow{max-width:60px}.common-tooltip .common-tooltip-children .icon{color:#0b6cff;vertical-align:baseline}.common-tooltip .common-tooltip-children .clipboard{display:none;position:absolute;right:0}.common-tooltip .common-tooltip-content{background-color:#232831;border-radius:4px;bottom:150%;color:#fff;cursor:default;display:none;font-size:14px;left:0;padding:5px 10px;position:absolute;transform:translateX(-32%);white-space:pre}.common-tooltip .common-tooltip-content.position-right{transform:translateX(-8%)}.common-tooltip .common-tooltip-content:after{border-color:#232831 transparent transparent;border-style:solid;border-width:7px 5px 0;content:\"\";height:0;left:50%;position:absolute;top:98%;transform:translateX(-50%);width:0}.common-tooltip .common-tooltip-content.tooltip-boxed{white-space:normal;width:200px}.common-tooltip:hover .common-tooltip-content{display:block}.common-tooltip:hover .common-tooltip-children .clipboard{display:inline-block}";
styleInject(css_248z$6);

var Tooltip = function (_a) {
    var _b = _a.content, content = _b === void 0 ? "" : _b, children = _a.children, _c = _a.noClipboard, noClipboard = _c === void 0 ? false : _c, _d = _a.positionRight, positionRight = _d === void 0 ? false : _d, _e = _a.narrow, narrow = _e === void 0 ? false : _e, _f = _a.medium, medium = _f === void 0 ? false : _f, _g = _a.isBoxed, isBoxed = _g === void 0 ? false : _g, onCopySuccess = _a.onCopySuccess;
    return (jsxs("div", __assign$a({ className: "common-tooltip" }, { children: [jsx$1("span", __assign$a({ className: classNames$1("common-tooltip-content", {
                    "position-right": positionRight,
                    "tooltip-boxed": isBoxed,
                }) }, { children: content }), void 0), jsxs("span", __assign$a({ className: classNames$1("common-tooltip-children", {
                    narrow: narrow,
                    medium: medium,
                    "no-clipboard": noClipboard,
                }) }, { children: [children || content, !noClipboard && (jsx$1("span", __assign$a({ className: "clipboard" }, { children: jsx$1(lib.CopyToClipboard, __assign$a({ text: content, onCopy: onCopySuccess }, { children: jsx$1(Icon, { name: "icon fa-icon-clipboard" }, void 0) }), void 0) }), void 0))] }), void 0)] }), void 0));
};

var css_248z$5 = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.accordion{font-family:Roboto,sans-serif}.accordion .accordionHead{align-items:center;color:#004ec3;cursor:pointer;display:flex;justify-content:space-between}.accordion .accordionBody,.accordion .accordionHead{background-color:#eff5ff;border-radius:3px;padding:12px}.accordion .accordionBody{display:none;font-size:14px;padding-top:0}.accordion .accordionContent{background:#fff;border-radius:3px;padding:10px}.accordion .show{display:block}";
styleInject(css_248z$5);

var Accordion = function (_a) {
    var title = _a.title, className = _a.className, children = _a.children;
    var _b = React$7.useState(false), isOpen = _b[0], toggleAccordion = _b[1];
    return (jsxs("div", __assign$a({ className: classNames$1("accordion", className) }, { children: [jsxs("div", __assign$a({ className: classNames$1("accordionHead", { isOpen: isOpen }), onClick: function () { return toggleAccordion(!isOpen); } }, { children: [jsx$1("div", __assign$a({ className: "accordionTitle" }, { children: title }), void 0), " ", jsx$1("i", { className: classNames$1("accordionToggler", { "icon-chevron-down": !isOpen, "icon-chevron-up": isOpen }) }, void 0)] }), void 0), jsx$1("div", __assign$a({ className: classNames$1("accordionBody", { show: isOpen }) }, { children: jsx$1("div", __assign$a({ className: "accordionContent" }, { children: children }), void 0) }), void 0)] }), void 0));
};

var css_248z$4 = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.banner-notification{align-items:center;border-radius:4px;display:flex;font-family:Roboto,sans-serif;justify-content:space-between;margin-bottom:10px;padding:15px;width:100%}.banner-notification.success{background-color:#eef7f2}.banner-notification.error{background-color:#fdf1f1}.banner-notification.info{background-color:#eef6fb}.banner-notification.warning{background-color:#fef9ee}.banner-notification .icon-x.success,.banner-notification .notification-message.success{color:#00642e}.banner-notification .icon-x.error,.banner-notification .notification-message.error{color:#e32626}.banner-notification .icon-x.info,.banner-notification .notification-message.info{color:#025896}.banner-notification .icon-x.warning,.banner-notification .notification-message.warning{color:#f1a20a}.banner-notification i{float:right}";
styleInject(css_248z$4);

var APPEARANCE_TYPE = Enum("success", "error", "info", "warning");
var Banner = function (_a) {
    var _b = _a.appearance, appearance = _b === void 0 ? APPEARANCE_TYPE.success : _b, _c = _a.message, message = _c === void 0 ? "" : _c, dismissBanner = _a.dismissBanner;
    return (jsxs("div", __assign$a({ className: classNames$1("banner-notification", {
            success: appearance === APPEARANCE_TYPE.success,
            error: appearance === APPEARANCE_TYPE.error,
            info: appearance === APPEARANCE_TYPE.info,
            warning: appearance === APPEARANCE_TYPE.warning,
        }) }, { children: [jsx$1("span", __assign$a({ className: classNames$1("notification-message", {
                    success: appearance === APPEARANCE_TYPE.success,
                    error: appearance === APPEARANCE_TYPE.error,
                    info: appearance === APPEARANCE_TYPE.info,
                    warning: appearance === APPEARANCE_TYPE.warning,
                }) }, { children: message }), void 0), dismissBanner && (jsx$1("i", { className: classNames$1("icon-x", {
                    success: appearance === APPEARANCE_TYPE.success,
                    error: appearance === APPEARANCE_TYPE.error,
                    info: appearance === APPEARANCE_TYPE.info,
                    warning: appearance === APPEARANCE_TYPE.warning,
                }), onClick: dismissBanner }, void 0))] }), void 0));
};

var css_248z$3 = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.box{font-family:Roboto,sans-serif;margin-bottom:10px;width:100%}.box>.header{background-color:#f5f6f8;font-size:12px;font-weight:500;line-height:20px;padding:8px 20px;text-transform:capitalize}.box>.body,.box>.header{border:1px solid #e1e4e9}.box>.body{box-shadow:0 0 8px 2px rgba(0,0,0,.04)}";
styleInject(css_248z$3);

var Box = function (_a) {
    var children = _a.children, title = _a.title;
    return (jsxs("div", __assign$a({ className: "box" }, { children: [jsx$1("div", __assign$a({ className: "header" }, { children: title }), void 0), jsx$1("div", __assign$a({ className: "body" }, { children: children }), void 0)] }), void 0));
};

var css_248z$2 = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.horizontalDivider{border-bottom:1px solid #e1e4e9;line-height:.05em;margin:10px 0}.horizontalDivider .label{background:#fff;color:#687792;font-size:14px;padding-right:10px}.horizontalDivider.full-width{left:0;position:absolute;right:0}";
styleInject(css_248z$2);

var HorizontalDivider = function (_a) {
    var _b = _a.label, label = _b === void 0 ? "" : _b, _c = _a.className, className = _c === void 0 ? "" : _c;
    return (jsx$1("div", __assign$a({ className: classNames$1("horizontalDivider", className) }, { children: label && jsx$1("span", __assign$a({ className: "label" }, { children: label }), void 0) }), void 0));
};

var css_248z$1 = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.table-filter{align-items:center;display:flex;margin-left:auto}.table-filter .table-filter-label{color:#687792;font-size:16px;margin-right:20px}.table-filter .styled-atlaskit-select{height:40px;width:180px}.table-filter .styled-atlaskit-select__control{align-items:stretch;font-size:16px;height:100%;letter-spacing:.02em}.table-filter.isLarge .styled-atlaskit-select{width:280px}";
styleInject(css_248z$1);

var TableFilter = function (_a) {
    var options = _a.options, currentValue = _a.currentValue, onFilterChange = _a.onFilterChange, label = _a.label, isLarge = _a.isLarge, isDisabled = _a.isDisabled, customStyle = _a.customStyle;
    return (jsxs("div", __assign$a({ className: classNames$1("table-filter", { isLarge: isLarge }), style: customStyle }, { children: [!!label && jsx$1("div", __assign$a({ className: "table-filter-label" }, { children: label }), void 0), jsx$1(Select, { options: options, isMulti: false, name: "searchType", onChange: onFilterChange, value: currentValue, isDisabled: isDisabled }, void 0)] }), void 0));
};

var css_248z = "@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,500&family=Roboto+Mono:400&display=swap\");.scrollSpyContainer{background-color:#fff;border-radius:4px;box-shadow:0 1px 2px rgba(0,0,0,.25);display:block;height:fit-content;list-style-type:none;padding:8px;position:sticky;top:0;width:240px}.scrollSpyContainer li{align-items:center;border-radius:4px;display:flex;font-family:Roboto,sans-serif;height:40px;padding:0 24px}.scrollSpyContainer li.active,.scrollSpyContainer li:hover{background-color:#eff5ff;color:#0b6cff;cursor:pointer;font-weight:500}";
styleInject(css_248z);

var SPY_INTERVAL = 100;
var DEFAULT_OFFSET = 100;
var ScrollSpy = /** @class */ (function (_super) {
    __extends$d(ScrollSpy, _super);
    function ScrollSpy(props) {
        var _this = _super.call(this, props) || this;
        _this.getElements = function () {
            var items = _this.props.items;
            return items.map(function (item) { return document.getElementById(item.elementId); }).filter(Boolean);
        };
        _this.setActiveSection = function () {
            var _a = _this.props, items = _a.items, offset = _a.offset;
            if (items.length <= 0)
                return;
            var currentSection = _this.props.items[0].elementId;
            var pageOffsetToTop = offset || DEFAULT_OFFSET;
            for (var i = 0; i < items.length; i++) {
                var section = _this.getElements()[i];
                if (!section)
                    return;
                if (window.pageYOffset + pageOffsetToTop > section.offsetTop) {
                    currentSection = section.id;
                }
            }
            _this.setState({ activeSessionId: currentSection });
        };
        _this.debounceSetActiveSession = debounce(_this.setActiveSection, SPY_INTERVAL);
        _this.scrollTo = function (elementId) {
            var element = document.getElementById(elementId);
            if (!element)
                return;
            element.scrollIntoView({ behavior: "smooth" });
        };
        _this.state = {
            activeSessionId: null,
        };
        return _this;
    }
    ScrollSpy.prototype.componentDidMount = function () {
        this.setActiveSection();
        window.addEventListener("scroll", this.debounceSetActiveSession);
    };
    ScrollSpy.prototype.componentWillUnmount = function () {
        window.removeEventListener("scroll", this.debounceSetActiveSession);
    };
    ScrollSpy.prototype.render = function () {
        var _this = this;
        var className = this.props.className;
        var activeSessionId = this.state.activeSessionId;
        return (jsx$1("ul", __assign$a({ className: classNames$1("scrollSpyContainer", className) }, { children: this.props.items.map(function (item, index) { return (jsx$1("li", __assign$a({ className: classNames$1({ active: activeSessionId === item.elementId }), onClick: function () { return _this.scrollTo(item.elementId); } }, { children: item.text }), item.elementId + "-" + index)); }) }), void 0));
    };
    return ScrollSpy;
}(React$7.Component));

export { APPEARANCE_TYPE, Accordion, BADGE_APPEARANCE, BADGE_TYPE, Badge, Banner, Box, Breadcrumb, Button$6 as Button, ButtonWithIcon, CONTAINER_SIZE, Card, CardInformationTable, Checkbox, DEFAULT_MIN_VALUE, DEFAULT_PASSWORD_AND_SECRET_REGEX, DateTimePicker, DropdownMenu$1 as DropDownMenu, DropdownItem, DropdownItemGroup$1 as DropdownItemGroup, DynamicTable, EmptyResultsWithIcon, Enum, ErrorWrapper, FieldCounter, FieldErrorMessage, FieldHelperText, FieldLabel, HighlightedText, HorizontalDivider, HorizontalFieldText, horizontalSelect as HorizontalSelect, INLINE_POPOVER_TYPE, Icon, InlineCheckboxField, InlinePopover, Input, LineBreakToList, LoadingIndicator, LoadingOrErrorWrapper, Modal, ModalForm, ModalMessage, ModalTitle, NavigationTab, NoResultTip, Page, pagination as Pagination, Popover, PureSearchPanel, RELOADSTATUS, RadioButton, RadioButtonItem, ScrollSpy, SearchIconPosition, Select, Spinner, StyledRadio, StyledRadioTabVertical, TableFilter, Tag, TagList, TextField, Tip, TipType, Tooltip, ValidDynamicText, ValidFieldPassword, ValidFieldText, ValidFieldTextArea, ValidMultiSelect, ValidSelect, WILDCARD_SIGN, debounce, formatDateForReactDatePicker, formatDateForReactDateTimePicker, generateClientSecret, generatePassword, isForbiddenKey, isKeyOfEnum, makeSafeReactInnerHTML, strengthLevelOrder, translatedStrengthLevelOrder };
//# sourceMappingURL=index.es.js.map
